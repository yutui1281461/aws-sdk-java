{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "contentTypeOverride" : null,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "ClientConstructors", "ClientMutationMethods", "EnumSetterOverload" ],
    "emitLegacyEnumSetterFor" : null,
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipClientMethodForOperations" : [ ],
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : true,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false
  },
  "metadata" : {
    "apiVersion" : "2017-09-01",
    "asyncClient" : "AWSMediaStoreAsyncClient",
    "asyncClientBuilderClassName" : "AWSMediaStoreAsyncClientBuilder",
    "asyncInterface" : "AWSMediaStoreAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : null,
    "cucumberModuleInjectorClassName" : "AWSMediaStoreModuleInjector",
    "defaultEndpoint" : "mediastore.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "mediastore.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<p>An AWS Elemental MediaStore container is a namespace that holds folders and objects. You use a container endpoint to create, read, and delete objects. </p>",
    "endpointPrefix" : "mediastore",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.mediastore",
    "packagePath" : "com/amazonaws/services/mediastore",
    "protocol" : "json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : "MediaStore",
    "serviceFullName" : "AWS Elemental MediaStore",
    "serviceName" : "MediaStore",
    "signingName" : "mediastore",
    "smokeTestsPackageName" : "com.amazonaws.services.mediastore.smoketests",
    "syncClient" : "AWSMediaStoreClient",
    "syncClientBuilderClassName" : "AWSMediaStoreClientBuilder",
    "syncInterface" : "AWSMediaStore",
    "uid" : "mediastore-2017-09-01",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "CreateContainer" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateContainerResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateContainerResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateContainerRequest, CreateContainerResult>",
      "asyncReturnType" : "CreateContainerResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a storage container to hold objects. A container is similar to a bucket in the Amazon S3 service.</p>",
      "exceptions" : [ {
        "exceptionName" : "ContainerInUseException",
        "documentation" : "<p>Resource already exists or is being updated.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>A service limit has been exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CreateContainerRequest",
        "variableName" : "createContainerRequest",
        "variableType" : "CreateContainerRequest",
        "documentation" : "",
        "simpleType" : "CreateContainerRequest",
        "variableSetterType" : "CreateContainerRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createContainer",
      "operationName" : "CreateContainer",
      "returnType" : {
        "returnType" : "CreateContainerResult",
        "documentation" : null
      },
      "syncReturnType" : "CreateContainerResult"
    },
    "DeleteContainer" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteContainerResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteContainerResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteContainerRequest, DeleteContainerResult>",
      "asyncReturnType" : "DeleteContainerResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes the specified container. Before you make a <code>DeleteContainer</code> request, delete any objects in the container or in any folders in the container. You can delete only empty containers. </p>",
      "exceptions" : [ {
        "exceptionName" : "ContainerInUseException",
        "documentation" : "<p>Resource already exists or is being updated.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ContainerNotFoundException",
        "documentation" : "<p>Could not perform an operation on a container that does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteContainerRequest",
        "variableName" : "deleteContainerRequest",
        "variableType" : "DeleteContainerRequest",
        "documentation" : "",
        "simpleType" : "DeleteContainerRequest",
        "variableSetterType" : "DeleteContainerRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteContainer",
      "operationName" : "DeleteContainer",
      "returnType" : {
        "returnType" : "DeleteContainerResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteContainerResult"
    },
    "DeleteContainerPolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteContainerPolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteContainerPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteContainerPolicyRequest, DeleteContainerPolicyResult>",
      "asyncReturnType" : "DeleteContainerPolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes the access policy that is associated with the specified container.</p>",
      "exceptions" : [ {
        "exceptionName" : "ContainerInUseException",
        "documentation" : "<p>Resource already exists or is being updated.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ContainerNotFoundException",
        "documentation" : "<p>Could not perform an operation on a container that does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PolicyNotFoundException",
        "documentation" : "<p>Could not perform an operation on a policy that does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteContainerPolicyRequest",
        "variableName" : "deleteContainerPolicyRequest",
        "variableType" : "DeleteContainerPolicyRequest",
        "documentation" : "",
        "simpleType" : "DeleteContainerPolicyRequest",
        "variableSetterType" : "DeleteContainerPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteContainerPolicy",
      "operationName" : "DeleteContainerPolicy",
      "returnType" : {
        "returnType" : "DeleteContainerPolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteContainerPolicyResult"
    },
    "DeleteCorsPolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteCorsPolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteCorsPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteCorsPolicyRequest, DeleteCorsPolicyResult>",
      "asyncReturnType" : "DeleteCorsPolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes the cross-origin resource sharing (CORS) configuration information that is set for the container.</p> <p>To use this operation, you must have permission to perform the <code>MediaStore:DeleteCorsPolicy</code> action. The container owner has this permission by default and can grant this permission to others.</p>",
      "exceptions" : [ {
        "exceptionName" : "ContainerInUseException",
        "documentation" : "<p>Resource already exists or is being updated.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ContainerNotFoundException",
        "documentation" : "<p>Could not perform an operation on a container that does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CorsPolicyNotFoundException",
        "documentation" : "<p>Could not perform an operation on a policy that does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteCorsPolicyRequest",
        "variableName" : "deleteCorsPolicyRequest",
        "variableType" : "DeleteCorsPolicyRequest",
        "documentation" : "",
        "simpleType" : "DeleteCorsPolicyRequest",
        "variableSetterType" : "DeleteCorsPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteCorsPolicy",
      "operationName" : "DeleteCorsPolicy",
      "returnType" : {
        "returnType" : "DeleteCorsPolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteCorsPolicyResult"
    },
    "DescribeContainer" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeContainerResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeContainerResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeContainerRequest, DescribeContainerResult>",
      "asyncReturnType" : "DescribeContainerResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Retrieves the properties of the requested container. This request is commonly used to retrieve the endpoint of a container. An endpoint is a value assigned by the service when a new container is created. A container's endpoint does not change after it has been assigned. The <code>DescribeContainer</code> request returns a single <code>Container</code> object based on <code>ContainerName</code>. To return all <code>Container</code> objects that are associated with a specified AWS account, use <a>ListContainers</a>.</p>",
      "exceptions" : [ {
        "exceptionName" : "ContainerNotFoundException",
        "documentation" : "<p>Could not perform an operation on a container that does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DescribeContainerRequest",
        "variableName" : "describeContainerRequest",
        "variableType" : "DescribeContainerRequest",
        "documentation" : "",
        "simpleType" : "DescribeContainerRequest",
        "variableSetterType" : "DescribeContainerRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "describeContainer",
      "operationName" : "DescribeContainer",
      "returnType" : {
        "returnType" : "DescribeContainerResult",
        "documentation" : null
      },
      "syncReturnType" : "DescribeContainerResult"
    },
    "GetContainerPolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetContainerPolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetContainerPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetContainerPolicyRequest, GetContainerPolicyResult>",
      "asyncReturnType" : "GetContainerPolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Retrieves the access policy for the specified container. For information about the data that is included in an access policy, see the <a href=\"https://aws.amazon.com/documentation/iam/\">AWS Identity and Access Management User Guide</a>.</p>",
      "exceptions" : [ {
        "exceptionName" : "ContainerInUseException",
        "documentation" : "<p>Resource already exists or is being updated.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ContainerNotFoundException",
        "documentation" : "<p>Could not perform an operation on a container that does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PolicyNotFoundException",
        "documentation" : "<p>Could not perform an operation on a policy that does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetContainerPolicyRequest",
        "variableName" : "getContainerPolicyRequest",
        "variableType" : "GetContainerPolicyRequest",
        "documentation" : "",
        "simpleType" : "GetContainerPolicyRequest",
        "variableSetterType" : "GetContainerPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getContainerPolicy",
      "operationName" : "GetContainerPolicy",
      "returnType" : {
        "returnType" : "GetContainerPolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "GetContainerPolicyResult"
    },
    "GetCorsPolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetCorsPolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetCorsPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetCorsPolicyRequest, GetCorsPolicyResult>",
      "asyncReturnType" : "GetCorsPolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns the cross-origin resource sharing (CORS) configuration information that is set for the container.</p> <p>To use this operation, you must have permission to perform the <code>MediaStore:GetCorsPolicy</code> action. By default, the container owner has this permission and can grant it to others.</p>",
      "exceptions" : [ {
        "exceptionName" : "ContainerInUseException",
        "documentation" : "<p>Resource already exists or is being updated.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ContainerNotFoundException",
        "documentation" : "<p>Could not perform an operation on a container that does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CorsPolicyNotFoundException",
        "documentation" : "<p>Could not perform an operation on a policy that does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetCorsPolicyRequest",
        "variableName" : "getCorsPolicyRequest",
        "variableType" : "GetCorsPolicyRequest",
        "documentation" : "",
        "simpleType" : "GetCorsPolicyRequest",
        "variableSetterType" : "GetCorsPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getCorsPolicy",
      "operationName" : "GetCorsPolicy",
      "returnType" : {
        "returnType" : "GetCorsPolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "GetCorsPolicyResult"
    },
    "ListContainers" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListContainersResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListContainersResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListContainersRequest, ListContainersResult>",
      "asyncReturnType" : "ListContainersResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the properties of all containers in AWS Elemental MediaStore. </p> <p>You can query to receive all the containers in one response. Or you can include the <code>MaxResults</code> parameter to receive a limited number of containers in each response. In this case, the response includes a token. To get the next set of containers, send the command again, this time with the <code>NextToken</code> parameter (with the returned token as its value). The next set of responses appears, with a token if there are still more containers to receive. </p> <p>See also <a>DescribeContainer</a>, which gets the properties of one container. </p>",
      "exceptions" : [ {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListContainersRequest",
        "variableName" : "listContainersRequest",
        "variableType" : "ListContainersRequest",
        "documentation" : "",
        "simpleType" : "ListContainersRequest",
        "variableSetterType" : "ListContainersRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listContainers",
      "operationName" : "ListContainers",
      "returnType" : {
        "returnType" : "ListContainersResult",
        "documentation" : null
      },
      "syncReturnType" : "ListContainersResult"
    },
    "PutContainerPolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<PutContainerPolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<PutContainerPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutContainerPolicyRequest, PutContainerPolicyResult>",
      "asyncReturnType" : "PutContainerPolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates an access policy for the specified container to restrict the users and clients that can access it. For information about the data that is included in an access policy, see the <a href=\"https://aws.amazon.com/documentation/iam/\">AWS Identity and Access Management User Guide</a>.</p> <p>For this release of the REST API, you can create only one policy for a container. If you enter <code>PutContainerPolicy</code> twice, the second command modifies the existing policy. </p>",
      "exceptions" : [ {
        "exceptionName" : "ContainerNotFoundException",
        "documentation" : "<p>Could not perform an operation on a container that does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ContainerInUseException",
        "documentation" : "<p>Resource already exists or is being updated.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "PutContainerPolicyRequest",
        "variableName" : "putContainerPolicyRequest",
        "variableType" : "PutContainerPolicyRequest",
        "documentation" : "",
        "simpleType" : "PutContainerPolicyRequest",
        "variableSetterType" : "PutContainerPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "putContainerPolicy",
      "operationName" : "PutContainerPolicy",
      "returnType" : {
        "returnType" : "PutContainerPolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "PutContainerPolicyResult"
    },
    "PutCorsPolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<PutCorsPolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<PutCorsPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutCorsPolicyRequest, PutCorsPolicyResult>",
      "asyncReturnType" : "PutCorsPolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Sets the cross-origin resource sharing (CORS) configuration on a container so that the container can service cross-origin requests. For example, you might want to enable a request whose origin is http://www.example.com to access your AWS Elemental MediaStore container at my.example.container.com by using the browser's XMLHttpRequest capability.</p> <p>To enable CORS on a container, you attach a CORS policy to the container. In the CORS policy, you configure rules that identify origins and the HTTP methods that can be executed on your container. The policy can contain up to 398,000 characters. You can add up to 100 rules to a CORS policy. If more than one rule applies, the service uses the first applicable rule listed.</p>",
      "exceptions" : [ {
        "exceptionName" : "ContainerNotFoundException",
        "documentation" : "<p>Could not perform an operation on a container that does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ContainerInUseException",
        "documentation" : "<p>Resource already exists or is being updated.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "PutCorsPolicyRequest",
        "variableName" : "putCorsPolicyRequest",
        "variableType" : "PutCorsPolicyRequest",
        "documentation" : "",
        "simpleType" : "PutCorsPolicyRequest",
        "variableSetterType" : "PutCorsPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "putCorsPolicy",
      "operationName" : "PutCorsPolicy",
      "returnType" : {
        "returnType" : "PutCorsPolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "PutCorsPolicyResult"
    }
  },
  "shapes" : {
    "Container" : {
      "c2jName" : "Container",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>This section describes operations that you can perform on an AWS Elemental MediaStore container.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Endpoint",
        "c2jShape" : "Endpoint",
        "deprecated" : false,
        "documentation" : "<p>The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.</p>\n@param endpoint The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withEndpoint",
        "getterDocumentation" : "/**<p>The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.</p>\n@return The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.*/",
        "getterMethodName" : "getEndpoint",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Endpoint",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Endpoint",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Endpoint",
        "setterDocumentation" : "/**<p>The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.</p>\n@param endpoint The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.*/",
        "setterMethodName" : "setEndpoint",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "endpoint",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.</p>\n@param endpoint The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "endpoint",
          "variableType" : "String",
          "documentation" : "<p>The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreationTime",
        "c2jShape" : "TimeStamp",
        "deprecated" : false,
        "documentation" : "<p>Unix timestamp.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Unix timestamp.</p>\n@param creationTime Unix timestamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationTime",
        "getterDocumentation" : "/**<p>Unix timestamp.</p>\n@return Unix timestamp.*/",
        "getterMethodName" : "getCreationTime",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreationTime",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreationTime",
        "setterDocumentation" : "/**<p>Unix timestamp.</p>\n@param creationTime Unix timestamp.*/",
        "setterMethodName" : "setCreationTime",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationTime",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Unix timestamp.</p>\n@param creationTime Unix timestamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationTime",
          "variableType" : "java.util.Date",
          "documentation" : "<p>Unix timestamp.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ARN",
        "c2jShape" : "ContainerARN",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p>\n@param aRN The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withARN",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p>\n@return The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies*/",
        "getterMethodName" : "getARN",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ARN",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ARN",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ARN",
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p>\n@param aRN The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies*/",
        "setterMethodName" : "setARN",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "aRN",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p>\n@param aRN The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "aRN",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "ContainerName",
        "deprecated" : false,
        "documentation" : "<p>The name of the container.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the container.</p>\n@param name The name of the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the container.</p>\n@return The name of the container.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "setterDocumentation" : "/**<p>The name of the container.</p>\n@param name The name of the container.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the container.</p>\n@param name The name of the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the container.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Status",
        "c2jShape" : "ContainerStatus",
        "deprecated" : false,
        "documentation" : "<p>The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.</p>",
        "enumType" : "ContainerStatus",
        "fluentSetterDocumentation" : "/**<p>The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.</p>\n@param status The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ContainerStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.</p>\n@return The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.\n@see ContainerStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "setterDocumentation" : "/**<p>The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.</p>\n@param status The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.\n@see ContainerStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.</p>\n@param status The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ContainerStatus*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ARN" : {
          "c2jName" : "ARN",
          "c2jShape" : "ContainerARN",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p>\n@param aRN The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withARN",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p>\n@return The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies*/",
          "getterMethodName" : "getARN",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ARN",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ARN",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ARN",
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p>\n@param aRN The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies*/",
          "setterMethodName" : "setARN",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "aRN",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p>\n@param aRN The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "aRN",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the container. The ARN has the following format:</p> <p>arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt; </p> <p>For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreationTime" : {
          "c2jName" : "CreationTime",
          "c2jShape" : "TimeStamp",
          "deprecated" : false,
          "documentation" : "<p>Unix timestamp.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Unix timestamp.</p>\n@param creationTime Unix timestamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationTime",
          "getterDocumentation" : "/**<p>Unix timestamp.</p>\n@return Unix timestamp.*/",
          "getterMethodName" : "getCreationTime",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreationTime",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreationTime",
          "setterDocumentation" : "/**<p>Unix timestamp.</p>\n@param creationTime Unix timestamp.*/",
          "setterMethodName" : "setCreationTime",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationTime",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Unix timestamp.</p>\n@param creationTime Unix timestamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationTime",
            "variableType" : "java.util.Date",
            "documentation" : "<p>Unix timestamp.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "Endpoint" : {
          "c2jName" : "Endpoint",
          "c2jShape" : "Endpoint",
          "deprecated" : false,
          "documentation" : "<p>The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.</p>\n@param endpoint The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withEndpoint",
          "getterDocumentation" : "/**<p>The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.</p>\n@return The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.*/",
          "getterMethodName" : "getEndpoint",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Endpoint",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Endpoint",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Endpoint",
          "setterDocumentation" : "/**<p>The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.</p>\n@param endpoint The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.*/",
          "setterMethodName" : "setEndpoint",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "endpoint",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.</p>\n@param endpoint The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "endpoint",
            "variableType" : "String",
            "documentation" : "<p>The DNS endpoint of the container. Use the endpoint to identify the specific container when sending requests to the data plane. The service assigns this value when the container is created. Once the value has been assigned, it does not change.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "ContainerName",
          "deprecated" : false,
          "documentation" : "<p>The name of the container.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the container.</p>\n@param name The name of the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the container.</p>\n@return The name of the container.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "setterDocumentation" : "/**<p>The name of the container.</p>\n@param name The name of the container.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the container.</p>\n@param name The name of the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the container.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "Status",
          "c2jShape" : "ContainerStatus",
          "deprecated" : false,
          "documentation" : "<p>The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.</p>",
          "enumType" : "ContainerStatus",
          "fluentSetterDocumentation" : "/**<p>The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.</p>\n@param status The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ContainerStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.</p>\n@return The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.\n@see ContainerStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "setterDocumentation" : "/**<p>The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.</p>\n@param status The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.\n@see ContainerStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.</p>\n@param status The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ContainerStatus*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When the endpoint is available, the status changes to <code>ACTIVE</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Container",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Container",
        "variableName" : "container",
        "variableType" : "Container",
        "documentation" : null,
        "simpleType" : "Container",
        "variableSetterType" : "Container"
      },
      "wrapper" : false
    },
    "ContainerInUseException" : {
      "c2jName" : "ContainerInUseException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Resource already exists or is being updated.</p>",
      "enums" : null,
      "errorCode" : "ContainerInUseException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ContainerInUseException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ContainerInUseException",
        "variableName" : "containerInUseException",
        "variableType" : "ContainerInUseException",
        "documentation" : null,
        "simpleType" : "ContainerInUseException",
        "variableSetterType" : "ContainerInUseException"
      },
      "wrapper" : false
    },
    "ContainerNotFoundException" : {
      "c2jName" : "ContainerNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Could not perform an operation on a container that does not exist.</p>",
      "enums" : null,
      "errorCode" : "ContainerNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ContainerNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ContainerNotFoundException",
        "variableName" : "containerNotFoundException",
        "variableType" : "ContainerNotFoundException",
        "documentation" : null,
        "simpleType" : "ContainerNotFoundException",
        "variableSetterType" : "ContainerNotFoundException"
      },
      "wrapper" : false
    },
    "ContainerStatus" : {
      "c2jName" : "ContainerStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "ACTIVE",
        "value" : "ACTIVE"
      }, {
        "name" : "CREATING",
        "value" : "CREATING"
      }, {
        "name" : "DELETING",
        "value" : "DELETING"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ContainerStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ContainerStatus",
        "variableName" : "containerStatus",
        "variableType" : "ContainerStatus",
        "documentation" : null,
        "simpleType" : "ContainerStatus",
        "variableSetterType" : "ContainerStatus"
      },
      "wrapper" : false
    },
    "CorsPolicyNotFoundException" : {
      "c2jName" : "CorsPolicyNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Could not perform an operation on a policy that does not exist.</p>",
      "enums" : null,
      "errorCode" : "CorsPolicyNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CorsPolicyNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CorsPolicyNotFoundException",
        "variableName" : "corsPolicyNotFoundException",
        "variableType" : "CorsPolicyNotFoundException",
        "documentation" : null,
        "simpleType" : "CorsPolicyNotFoundException",
        "variableSetterType" : "CorsPolicyNotFoundException"
      },
      "wrapper" : false
    },
    "CorsRule" : {
      "c2jName" : "CorsRule",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A rule for a CORS policy. You can add up to 100 rules to a CORS policy. If more than one rule applies, the service uses the first applicable rule listed.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "AllowedOrigins",
        "c2jShape" : "AllowedOrigins",
        "deprecated" : false,
        "documentation" : "<p>One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.</p>\n@param allowedOrigins One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAllowedOrigins",
        "getterDocumentation" : "/**<p>One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.</p>\n@return One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.*/",
        "getterMethodName" : "getAllowedOrigins",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "AllowedOrigins",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "AllowedOrigins",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Origin",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "AllowedOrigins",
        "setterDocumentation" : "/**<p>One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.</p>\n@param allowedOrigins One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.*/",
        "setterMethodName" : "setAllowedOrigins",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "allowedOrigins",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAllowedOrigins(java.util.Collection)} or {@link #withAllowedOrigins(java.util.Collection)} if you want to override the existing values.</p>\n@param allowedOrigins One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "allowedOrigins",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "AllowedMethods",
        "c2jShape" : "AllowedMethods",
        "deprecated" : false,
        "documentation" : "<p>Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.</p>",
        "enumType" : "MethodName",
        "fluentSetterDocumentation" : "/**<p>Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.</p>\n@param allowedMethods Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MethodName*/",
        "fluentSetterMethodName" : "withAllowedMethods",
        "getterDocumentation" : "/**<p>Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.</p>\n@return Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.\n@see MethodName*/",
        "getterMethodName" : "getAllowedMethods",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "AllowedMethods",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "AllowedMethods",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "MethodName",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : "MethodName",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see MethodName*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return \n@see MethodName*/",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member \n@see MethodName*/",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see MethodName*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "AllowedMethods",
        "setterDocumentation" : "/**<p>Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.</p>\n@param allowedMethods Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.\n@see MethodName*/",
        "setterMethodName" : "setAllowedMethods",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "allowedMethods",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAllowedMethods(java.util.Collection)} or {@link #withAllowedMethods(java.util.Collection)} if you want to override the existing values.</p>\n@param allowedMethods Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MethodName*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "allowedMethods",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "AllowedHeaders",
        "c2jShape" : "AllowedHeaders",
        "deprecated" : false,
        "documentation" : "<p>Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).</p>\n@param allowedHeaders Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAllowedHeaders",
        "getterDocumentation" : "/**<p>Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).</p>\n@return Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).*/",
        "getterMethodName" : "getAllowedHeaders",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "AllowedHeaders",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "AllowedHeaders",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Header",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "AllowedHeaders",
        "setterDocumentation" : "/**<p>Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).</p>\n@param allowedHeaders Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).*/",
        "setterMethodName" : "setAllowedHeaders",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "allowedHeaders",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAllowedHeaders(java.util.Collection)} or {@link #withAllowedHeaders(java.util.Collection)} if you want to override the existing values.</p>\n@param allowedHeaders Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "allowedHeaders",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxAgeSeconds",
        "c2jShape" : "MaxAgeSeconds",
        "deprecated" : false,
        "documentation" : "<p>The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.</p>\n@param maxAgeSeconds The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxAgeSeconds",
        "getterDocumentation" : "/**<p>The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.</p>\n@return The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.*/",
        "getterMethodName" : "getMaxAgeSeconds",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxAgeSeconds",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxAgeSeconds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxAgeSeconds",
        "setterDocumentation" : "/**<p>The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.</p>\n@param maxAgeSeconds The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.*/",
        "setterMethodName" : "setMaxAgeSeconds",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxAgeSeconds",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.</p>\n@param maxAgeSeconds The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxAgeSeconds",
          "variableType" : "Integer",
          "documentation" : "<p>The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ExposeHeaders",
        "c2jShape" : "ExposeHeaders",
        "deprecated" : false,
        "documentation" : "<p>One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.</p>\n@param exposeHeaders One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withExposeHeaders",
        "getterDocumentation" : "/**<p>One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.</p>\n@return One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.*/",
        "getterMethodName" : "getExposeHeaders",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ExposeHeaders",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ExposeHeaders",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Header",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ExposeHeaders",
        "setterDocumentation" : "/**<p>One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.</p>\n@param exposeHeaders One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.*/",
        "setterMethodName" : "setExposeHeaders",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "exposeHeaders",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setExposeHeaders(java.util.Collection)} or {@link #withExposeHeaders(java.util.Collection)} if you want to override the existing values.</p>\n@param exposeHeaders One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "exposeHeaders",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AllowedHeaders" : {
          "c2jName" : "AllowedHeaders",
          "c2jShape" : "AllowedHeaders",
          "deprecated" : false,
          "documentation" : "<p>Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).</p>\n@param allowedHeaders Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAllowedHeaders",
          "getterDocumentation" : "/**<p>Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).</p>\n@return Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).*/",
          "getterMethodName" : "getAllowedHeaders",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "AllowedHeaders",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "AllowedHeaders",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Header",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "AllowedHeaders",
          "setterDocumentation" : "/**<p>Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).</p>\n@param allowedHeaders Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).*/",
          "setterMethodName" : "setAllowedHeaders",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "allowedHeaders",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAllowedHeaders(java.util.Collection)} or {@link #withAllowedHeaders(java.util.Collection)} if you want to override the existing values.</p>\n@param allowedHeaders Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "allowedHeaders",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through the <code>Access-Control-Request-Headers</code> header. Each header name that is specified in <code>Access-Control-Request-Headers</code> must have a corresponding entry in the rule. Only the headers that were requested are sent back. </p> <p>This element can contain only one wildcard character (*).</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "AllowedMethods" : {
          "c2jName" : "AllowedMethods",
          "c2jShape" : "AllowedMethods",
          "deprecated" : false,
          "documentation" : "<p>Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.</p>",
          "enumType" : "MethodName",
          "fluentSetterDocumentation" : "/**<p>Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.</p>\n@param allowedMethods Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MethodName*/",
          "fluentSetterMethodName" : "withAllowedMethods",
          "getterDocumentation" : "/**<p>Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.</p>\n@return Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.\n@see MethodName*/",
          "getterMethodName" : "getAllowedMethods",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "AllowedMethods",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "AllowedMethods",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "MethodName",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : "MethodName",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see MethodName*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return \n@see MethodName*/",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member \n@see MethodName*/",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see MethodName*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "AllowedMethods",
          "setterDocumentation" : "/**<p>Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.</p>\n@param allowedMethods Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.\n@see MethodName*/",
          "setterMethodName" : "setAllowedMethods",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "allowedMethods",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAllowedMethods(java.util.Collection)} or {@link #withAllowedMethods(java.util.Collection)} if you want to override the existing values.</p>\n@param allowedMethods Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MethodName*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "allowedMethods",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.</p> <p>Each CORS rule must contain at least one <code>AllowedMethod</code> and one <code>AllowedOrigin</code> element.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "AllowedOrigins" : {
          "c2jName" : "AllowedOrigins",
          "c2jShape" : "AllowedOrigins",
          "deprecated" : false,
          "documentation" : "<p>One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.</p>\n@param allowedOrigins One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAllowedOrigins",
          "getterDocumentation" : "/**<p>One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.</p>\n@return One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.*/",
          "getterMethodName" : "getAllowedOrigins",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "AllowedOrigins",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "AllowedOrigins",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Origin",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "AllowedOrigins",
          "setterDocumentation" : "/**<p>One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.</p>\n@param allowedOrigins One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.*/",
          "setterMethodName" : "setAllowedOrigins",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "allowedOrigins",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAllowedOrigins(java.util.Collection)} or {@link #withAllowedOrigins(java.util.Collection)} if you want to override the existing values.</p>\n@param allowedOrigins One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "allowedOrigins",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>Each CORS rule must have at least one <code>AllowedOrigin</code> element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "ExposeHeaders" : {
          "c2jName" : "ExposeHeaders",
          "c2jShape" : "ExposeHeaders",
          "deprecated" : false,
          "documentation" : "<p>One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.</p>\n@param exposeHeaders One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withExposeHeaders",
          "getterDocumentation" : "/**<p>One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.</p>\n@return One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.*/",
          "getterMethodName" : "getExposeHeaders",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ExposeHeaders",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ExposeHeaders",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Header",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ExposeHeaders",
          "setterDocumentation" : "/**<p>One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.</p>\n@param exposeHeaders One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.*/",
          "setterMethodName" : "setExposeHeaders",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "exposeHeaders",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setExposeHeaders(java.util.Collection)} or {@link #withExposeHeaders(java.util.Collection)} if you want to override the existing values.</p>\n@param exposeHeaders One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "exposeHeaders",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</p> <p>This element is optional for each rule.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxAgeSeconds" : {
          "c2jName" : "MaxAgeSeconds",
          "c2jShape" : "MaxAgeSeconds",
          "deprecated" : false,
          "documentation" : "<p>The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.</p>\n@param maxAgeSeconds The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxAgeSeconds",
          "getterDocumentation" : "/**<p>The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.</p>\n@return The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.*/",
          "getterMethodName" : "getMaxAgeSeconds",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxAgeSeconds",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxAgeSeconds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxAgeSeconds",
          "setterDocumentation" : "/**<p>The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.</p>\n@param maxAgeSeconds The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.*/",
          "setterMethodName" : "setMaxAgeSeconds",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxAgeSeconds",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.</p>\n@param maxAgeSeconds The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxAgeSeconds",
            "variableType" : "Integer",
            "documentation" : "<p>The time in seconds that your browser caches the preflight response for the specified resource.</p> <p>A CORS rule can have only one <code>MaxAgeSeconds</code> element.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CorsRule",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CorsRule",
        "variableName" : "corsRule",
        "variableType" : "CorsRule",
        "documentation" : null,
        "simpleType" : "CorsRule",
        "variableSetterType" : "CorsRule"
      },
      "wrapper" : false
    },
    "CreateContainerRequest" : {
      "c2jName" : "CreateContainerInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateContainer",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "MediaStore_20170901.CreateContainer",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ContainerName",
        "c2jShape" : "ContainerName",
        "deprecated" : false,
        "documentation" : "<p>The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.</p>\n@param containerName The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContainerName",
        "getterDocumentation" : "/**<p>The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.</p>\n@return The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.*/",
        "getterMethodName" : "getContainerName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ContainerName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ContainerName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContainerName",
        "setterDocumentation" : "/**<p>The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.</p>\n@param containerName The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.*/",
        "setterMethodName" : "setContainerName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.</p>\n@param containerName The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "<p>The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ContainerName" : {
          "c2jName" : "ContainerName",
          "c2jShape" : "ContainerName",
          "deprecated" : false,
          "documentation" : "<p>The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.</p>\n@param containerName The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContainerName",
          "getterDocumentation" : "/**<p>The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.</p>\n@return The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.*/",
          "getterMethodName" : "getContainerName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ContainerName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ContainerName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContainerName",
          "setterDocumentation" : "/**<p>The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.</p>\n@param containerName The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.*/",
          "setterMethodName" : "setContainerName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.</p>\n@param containerName The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "<p>The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named <code>movies</code> in every region, as long as you don’t have an existing container with that name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ContainerName" ],
      "shapeName" : "CreateContainerRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CreateContainerRequest",
        "variableName" : "createContainerRequest",
        "variableType" : "CreateContainerRequest",
        "documentation" : null,
        "simpleType" : "CreateContainerRequest",
        "variableSetterType" : "CreateContainerRequest"
      },
      "wrapper" : false
    },
    "CreateContainerResult" : {
      "c2jName" : "CreateContainerOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Container",
        "c2jShape" : "Container",
        "deprecated" : false,
        "documentation" : "<p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.</p>\n@param container ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContainer",
        "getterDocumentation" : "/**<p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.</p>\n@return ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.*/",
        "getterMethodName" : "getContainer",
        "getterModel" : {
          "returnType" : "Container",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Container",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Container",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Container",
        "setterDocumentation" : "/**<p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.</p>\n@param container ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.*/",
        "setterMethodName" : "setContainer",
        "setterModel" : {
          "variableDeclarationType" : "Container",
          "variableName" : "container",
          "variableType" : "Container",
          "documentation" : "",
          "simpleType" : "Container",
          "variableSetterType" : "Container"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.</p>\n@param container ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Container",
          "variableName" : "container",
          "variableType" : "Container",
          "documentation" : "<p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.</p>",
          "simpleType" : "Container",
          "variableSetterType" : "Container"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Container" : {
          "c2jName" : "Container",
          "c2jShape" : "Container",
          "deprecated" : false,
          "documentation" : "<p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.</p>\n@param container ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContainer",
          "getterDocumentation" : "/**<p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.</p>\n@return ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.*/",
          "getterMethodName" : "getContainer",
          "getterModel" : {
            "returnType" : "Container",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Container",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Container",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Container",
          "setterDocumentation" : "/**<p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.</p>\n@param container ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.*/",
          "setterMethodName" : "setContainer",
          "setterModel" : {
            "variableDeclarationType" : "Container",
            "variableName" : "container",
            "variableType" : "Container",
            "documentation" : "",
            "simpleType" : "Container",
            "variableSetterType" : "Container"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.</p>\n@param container ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Container",
            "variableName" : "container",
            "variableType" : "Container",
            "documentation" : "<p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies </p> <p>ContainerName: The container name as specified in the request.</p> <p>CreationTime: Unix time stamp.</p> <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p> <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.</p>",
            "simpleType" : "Container",
            "variableSetterType" : "Container"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Container" ],
      "shapeName" : "CreateContainerResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CreateContainerResult",
        "variableName" : "createContainerResult",
        "variableType" : "CreateContainerResult",
        "documentation" : null,
        "simpleType" : "CreateContainerResult",
        "variableSetterType" : "CreateContainerResult"
      },
      "wrapper" : false
    },
    "DeleteContainerPolicyRequest" : {
      "c2jName" : "DeleteContainerPolicyInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteContainerPolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "MediaStore_20170901.DeleteContainerPolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ContainerName",
        "c2jShape" : "ContainerName",
        "deprecated" : false,
        "documentation" : "<p>The name of the container that holds the policy.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the container that holds the policy.</p>\n@param containerName The name of the container that holds the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContainerName",
        "getterDocumentation" : "/**<p>The name of the container that holds the policy.</p>\n@return The name of the container that holds the policy.*/",
        "getterMethodName" : "getContainerName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ContainerName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ContainerName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContainerName",
        "setterDocumentation" : "/**<p>The name of the container that holds the policy.</p>\n@param containerName The name of the container that holds the policy.*/",
        "setterMethodName" : "setContainerName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the container that holds the policy.</p>\n@param containerName The name of the container that holds the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "<p>The name of the container that holds the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ContainerName" : {
          "c2jName" : "ContainerName",
          "c2jShape" : "ContainerName",
          "deprecated" : false,
          "documentation" : "<p>The name of the container that holds the policy.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the container that holds the policy.</p>\n@param containerName The name of the container that holds the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContainerName",
          "getterDocumentation" : "/**<p>The name of the container that holds the policy.</p>\n@return The name of the container that holds the policy.*/",
          "getterMethodName" : "getContainerName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ContainerName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ContainerName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContainerName",
          "setterDocumentation" : "/**<p>The name of the container that holds the policy.</p>\n@param containerName The name of the container that holds the policy.*/",
          "setterMethodName" : "setContainerName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the container that holds the policy.</p>\n@param containerName The name of the container that holds the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "<p>The name of the container that holds the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ContainerName" ],
      "shapeName" : "DeleteContainerPolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteContainerPolicyRequest",
        "variableName" : "deleteContainerPolicyRequest",
        "variableType" : "DeleteContainerPolicyRequest",
        "documentation" : null,
        "simpleType" : "DeleteContainerPolicyRequest",
        "variableSetterType" : "DeleteContainerPolicyRequest"
      },
      "wrapper" : false
    },
    "DeleteContainerPolicyResult" : {
      "c2jName" : "DeleteContainerPolicyOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteContainerPolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteContainerPolicyResult",
        "variableName" : "deleteContainerPolicyResult",
        "variableType" : "DeleteContainerPolicyResult",
        "documentation" : null,
        "simpleType" : "DeleteContainerPolicyResult",
        "variableSetterType" : "DeleteContainerPolicyResult"
      },
      "wrapper" : false
    },
    "DeleteContainerRequest" : {
      "c2jName" : "DeleteContainerInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteContainer",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "MediaStore_20170901.DeleteContainer",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ContainerName",
        "c2jShape" : "ContainerName",
        "deprecated" : false,
        "documentation" : "<p>The name of the container to delete. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the container to delete. </p>\n@param containerName The name of the container to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContainerName",
        "getterDocumentation" : "/**<p>The name of the container to delete. </p>\n@return The name of the container to delete.*/",
        "getterMethodName" : "getContainerName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ContainerName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ContainerName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContainerName",
        "setterDocumentation" : "/**<p>The name of the container to delete. </p>\n@param containerName The name of the container to delete.*/",
        "setterMethodName" : "setContainerName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the container to delete. </p>\n@param containerName The name of the container to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "<p>The name of the container to delete. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ContainerName" : {
          "c2jName" : "ContainerName",
          "c2jShape" : "ContainerName",
          "deprecated" : false,
          "documentation" : "<p>The name of the container to delete. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the container to delete. </p>\n@param containerName The name of the container to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContainerName",
          "getterDocumentation" : "/**<p>The name of the container to delete. </p>\n@return The name of the container to delete.*/",
          "getterMethodName" : "getContainerName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ContainerName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ContainerName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContainerName",
          "setterDocumentation" : "/**<p>The name of the container to delete. </p>\n@param containerName The name of the container to delete.*/",
          "setterMethodName" : "setContainerName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the container to delete. </p>\n@param containerName The name of the container to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "<p>The name of the container to delete. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ContainerName" ],
      "shapeName" : "DeleteContainerRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteContainerRequest",
        "variableName" : "deleteContainerRequest",
        "variableType" : "DeleteContainerRequest",
        "documentation" : null,
        "simpleType" : "DeleteContainerRequest",
        "variableSetterType" : "DeleteContainerRequest"
      },
      "wrapper" : false
    },
    "DeleteContainerResult" : {
      "c2jName" : "DeleteContainerOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteContainerResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteContainerResult",
        "variableName" : "deleteContainerResult",
        "variableType" : "DeleteContainerResult",
        "documentation" : null,
        "simpleType" : "DeleteContainerResult",
        "variableSetterType" : "DeleteContainerResult"
      },
      "wrapper" : false
    },
    "DeleteCorsPolicyRequest" : {
      "c2jName" : "DeleteCorsPolicyInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteCorsPolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "MediaStore_20170901.DeleteCorsPolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ContainerName",
        "c2jShape" : "ContainerName",
        "deprecated" : false,
        "documentation" : "<p>The name of the container to remove the policy from.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the container to remove the policy from.</p>\n@param containerName The name of the container to remove the policy from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContainerName",
        "getterDocumentation" : "/**<p>The name of the container to remove the policy from.</p>\n@return The name of the container to remove the policy from.*/",
        "getterMethodName" : "getContainerName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ContainerName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ContainerName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContainerName",
        "setterDocumentation" : "/**<p>The name of the container to remove the policy from.</p>\n@param containerName The name of the container to remove the policy from.*/",
        "setterMethodName" : "setContainerName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the container to remove the policy from.</p>\n@param containerName The name of the container to remove the policy from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "<p>The name of the container to remove the policy from.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ContainerName" : {
          "c2jName" : "ContainerName",
          "c2jShape" : "ContainerName",
          "deprecated" : false,
          "documentation" : "<p>The name of the container to remove the policy from.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the container to remove the policy from.</p>\n@param containerName The name of the container to remove the policy from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContainerName",
          "getterDocumentation" : "/**<p>The name of the container to remove the policy from.</p>\n@return The name of the container to remove the policy from.*/",
          "getterMethodName" : "getContainerName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ContainerName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ContainerName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContainerName",
          "setterDocumentation" : "/**<p>The name of the container to remove the policy from.</p>\n@param containerName The name of the container to remove the policy from.*/",
          "setterMethodName" : "setContainerName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the container to remove the policy from.</p>\n@param containerName The name of the container to remove the policy from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "<p>The name of the container to remove the policy from.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ContainerName" ],
      "shapeName" : "DeleteCorsPolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteCorsPolicyRequest",
        "variableName" : "deleteCorsPolicyRequest",
        "variableType" : "DeleteCorsPolicyRequest",
        "documentation" : null,
        "simpleType" : "DeleteCorsPolicyRequest",
        "variableSetterType" : "DeleteCorsPolicyRequest"
      },
      "wrapper" : false
    },
    "DeleteCorsPolicyResult" : {
      "c2jName" : "DeleteCorsPolicyOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteCorsPolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteCorsPolicyResult",
        "variableName" : "deleteCorsPolicyResult",
        "variableType" : "DeleteCorsPolicyResult",
        "documentation" : null,
        "simpleType" : "DeleteCorsPolicyResult",
        "variableSetterType" : "DeleteCorsPolicyResult"
      },
      "wrapper" : false
    },
    "DescribeContainerRequest" : {
      "c2jName" : "DescribeContainerInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DescribeContainer",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "MediaStore_20170901.DescribeContainer",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ContainerName",
        "c2jShape" : "ContainerName",
        "deprecated" : false,
        "documentation" : "<p>The name of the container to query.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the container to query.</p>\n@param containerName The name of the container to query.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContainerName",
        "getterDocumentation" : "/**<p>The name of the container to query.</p>\n@return The name of the container to query.*/",
        "getterMethodName" : "getContainerName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ContainerName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ContainerName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContainerName",
        "setterDocumentation" : "/**<p>The name of the container to query.</p>\n@param containerName The name of the container to query.*/",
        "setterMethodName" : "setContainerName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the container to query.</p>\n@param containerName The name of the container to query.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "<p>The name of the container to query.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ContainerName" : {
          "c2jName" : "ContainerName",
          "c2jShape" : "ContainerName",
          "deprecated" : false,
          "documentation" : "<p>The name of the container to query.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the container to query.</p>\n@param containerName The name of the container to query.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContainerName",
          "getterDocumentation" : "/**<p>The name of the container to query.</p>\n@return The name of the container to query.*/",
          "getterMethodName" : "getContainerName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ContainerName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ContainerName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContainerName",
          "setterDocumentation" : "/**<p>The name of the container to query.</p>\n@param containerName The name of the container to query.*/",
          "setterMethodName" : "setContainerName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the container to query.</p>\n@param containerName The name of the container to query.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "<p>The name of the container to query.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DescribeContainerRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DescribeContainerRequest",
        "variableName" : "describeContainerRequest",
        "variableType" : "DescribeContainerRequest",
        "documentation" : null,
        "simpleType" : "DescribeContainerRequest",
        "variableSetterType" : "DescribeContainerRequest"
      },
      "wrapper" : false
    },
    "DescribeContainerResult" : {
      "c2jName" : "DescribeContainerOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Container",
        "c2jShape" : "Container",
        "deprecated" : false,
        "documentation" : "<p>The name of the queried container.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the queried container.</p>\n@param container The name of the queried container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContainer",
        "getterDocumentation" : "/**<p>The name of the queried container.</p>\n@return The name of the queried container.*/",
        "getterMethodName" : "getContainer",
        "getterModel" : {
          "returnType" : "Container",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Container",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Container",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Container",
        "setterDocumentation" : "/**<p>The name of the queried container.</p>\n@param container The name of the queried container.*/",
        "setterMethodName" : "setContainer",
        "setterModel" : {
          "variableDeclarationType" : "Container",
          "variableName" : "container",
          "variableType" : "Container",
          "documentation" : "",
          "simpleType" : "Container",
          "variableSetterType" : "Container"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the queried container.</p>\n@param container The name of the queried container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Container",
          "variableName" : "container",
          "variableType" : "Container",
          "documentation" : "<p>The name of the queried container.</p>",
          "simpleType" : "Container",
          "variableSetterType" : "Container"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Container" : {
          "c2jName" : "Container",
          "c2jShape" : "Container",
          "deprecated" : false,
          "documentation" : "<p>The name of the queried container.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the queried container.</p>\n@param container The name of the queried container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContainer",
          "getterDocumentation" : "/**<p>The name of the queried container.</p>\n@return The name of the queried container.*/",
          "getterMethodName" : "getContainer",
          "getterModel" : {
            "returnType" : "Container",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Container",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Container",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Container",
          "setterDocumentation" : "/**<p>The name of the queried container.</p>\n@param container The name of the queried container.*/",
          "setterMethodName" : "setContainer",
          "setterModel" : {
            "variableDeclarationType" : "Container",
            "variableName" : "container",
            "variableType" : "Container",
            "documentation" : "",
            "simpleType" : "Container",
            "variableSetterType" : "Container"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the queried container.</p>\n@param container The name of the queried container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Container",
            "variableName" : "container",
            "variableType" : "Container",
            "documentation" : "<p>The name of the queried container.</p>",
            "simpleType" : "Container",
            "variableSetterType" : "Container"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DescribeContainerResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DescribeContainerResult",
        "variableName" : "describeContainerResult",
        "variableType" : "DescribeContainerResult",
        "documentation" : null,
        "simpleType" : "DescribeContainerResult",
        "variableSetterType" : "DescribeContainerResult"
      },
      "wrapper" : false
    },
    "GetContainerPolicyRequest" : {
      "c2jName" : "GetContainerPolicyInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetContainerPolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "MediaStore_20170901.GetContainerPolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ContainerName",
        "c2jShape" : "ContainerName",
        "deprecated" : false,
        "documentation" : "<p>The name of the container. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the container. </p>\n@param containerName The name of the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContainerName",
        "getterDocumentation" : "/**<p>The name of the container. </p>\n@return The name of the container.*/",
        "getterMethodName" : "getContainerName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ContainerName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ContainerName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContainerName",
        "setterDocumentation" : "/**<p>The name of the container. </p>\n@param containerName The name of the container.*/",
        "setterMethodName" : "setContainerName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the container. </p>\n@param containerName The name of the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "<p>The name of the container. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ContainerName" : {
          "c2jName" : "ContainerName",
          "c2jShape" : "ContainerName",
          "deprecated" : false,
          "documentation" : "<p>The name of the container. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the container. </p>\n@param containerName The name of the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContainerName",
          "getterDocumentation" : "/**<p>The name of the container. </p>\n@return The name of the container.*/",
          "getterMethodName" : "getContainerName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ContainerName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ContainerName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContainerName",
          "setterDocumentation" : "/**<p>The name of the container. </p>\n@param containerName The name of the container.*/",
          "setterMethodName" : "setContainerName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the container. </p>\n@param containerName The name of the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "<p>The name of the container. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ContainerName" ],
      "shapeName" : "GetContainerPolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetContainerPolicyRequest",
        "variableName" : "getContainerPolicyRequest",
        "variableType" : "GetContainerPolicyRequest",
        "documentation" : null,
        "simpleType" : "GetContainerPolicyRequest",
        "variableSetterType" : "GetContainerPolicyRequest"
      },
      "wrapper" : false
    },
    "GetContainerPolicyResult" : {
      "c2jName" : "GetContainerPolicyOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Policy",
        "c2jShape" : "ContainerPolicy",
        "deprecated" : false,
        "documentation" : "<p>The contents of the access policy.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The contents of the access policy.</p>\n@param policy The contents of the access policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicy",
        "getterDocumentation" : "/**<p>The contents of the access policy.</p>\n@return The contents of the access policy.*/",
        "getterMethodName" : "getPolicy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Policy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Policy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Policy",
        "setterDocumentation" : "/**<p>The contents of the access policy.</p>\n@param policy The contents of the access policy.*/",
        "setterMethodName" : "setPolicy",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The contents of the access policy.</p>\n@param policy The contents of the access policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policy",
          "variableType" : "String",
          "documentation" : "<p>The contents of the access policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Policy" : {
          "c2jName" : "Policy",
          "c2jShape" : "ContainerPolicy",
          "deprecated" : false,
          "documentation" : "<p>The contents of the access policy.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The contents of the access policy.</p>\n@param policy The contents of the access policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicy",
          "getterDocumentation" : "/**<p>The contents of the access policy.</p>\n@return The contents of the access policy.*/",
          "getterMethodName" : "getPolicy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Policy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Policy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Policy",
          "setterDocumentation" : "/**<p>The contents of the access policy.</p>\n@param policy The contents of the access policy.*/",
          "setterMethodName" : "setPolicy",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The contents of the access policy.</p>\n@param policy The contents of the access policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policy",
            "variableType" : "String",
            "documentation" : "<p>The contents of the access policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Policy" ],
      "shapeName" : "GetContainerPolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetContainerPolicyResult",
        "variableName" : "getContainerPolicyResult",
        "variableType" : "GetContainerPolicyResult",
        "documentation" : null,
        "simpleType" : "GetContainerPolicyResult",
        "variableSetterType" : "GetContainerPolicyResult"
      },
      "wrapper" : false
    },
    "GetCorsPolicyRequest" : {
      "c2jName" : "GetCorsPolicyInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetCorsPolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "MediaStore_20170901.GetCorsPolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ContainerName",
        "c2jShape" : "ContainerName",
        "deprecated" : false,
        "documentation" : "<p>The name of the container that the policy is assigned to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the container that the policy is assigned to.</p>\n@param containerName The name of the container that the policy is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContainerName",
        "getterDocumentation" : "/**<p>The name of the container that the policy is assigned to.</p>\n@return The name of the container that the policy is assigned to.*/",
        "getterMethodName" : "getContainerName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ContainerName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ContainerName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContainerName",
        "setterDocumentation" : "/**<p>The name of the container that the policy is assigned to.</p>\n@param containerName The name of the container that the policy is assigned to.*/",
        "setterMethodName" : "setContainerName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the container that the policy is assigned to.</p>\n@param containerName The name of the container that the policy is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "<p>The name of the container that the policy is assigned to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ContainerName" : {
          "c2jName" : "ContainerName",
          "c2jShape" : "ContainerName",
          "deprecated" : false,
          "documentation" : "<p>The name of the container that the policy is assigned to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the container that the policy is assigned to.</p>\n@param containerName The name of the container that the policy is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContainerName",
          "getterDocumentation" : "/**<p>The name of the container that the policy is assigned to.</p>\n@return The name of the container that the policy is assigned to.*/",
          "getterMethodName" : "getContainerName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ContainerName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ContainerName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContainerName",
          "setterDocumentation" : "/**<p>The name of the container that the policy is assigned to.</p>\n@param containerName The name of the container that the policy is assigned to.*/",
          "setterMethodName" : "setContainerName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the container that the policy is assigned to.</p>\n@param containerName The name of the container that the policy is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "<p>The name of the container that the policy is assigned to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ContainerName" ],
      "shapeName" : "GetCorsPolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetCorsPolicyRequest",
        "variableName" : "getCorsPolicyRequest",
        "variableType" : "GetCorsPolicyRequest",
        "documentation" : null,
        "simpleType" : "GetCorsPolicyRequest",
        "variableSetterType" : "GetCorsPolicyRequest"
      },
      "wrapper" : false
    },
    "GetCorsPolicyResult" : {
      "c2jName" : "GetCorsPolicyOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "CorsPolicy",
        "c2jShape" : "CorsPolicy",
        "deprecated" : false,
        "documentation" : "",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param corsPolicy \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCorsPolicy",
        "getterDocumentation" : "/**\n@return */",
        "getterMethodName" : "getCorsPolicy",
        "getterModel" : {
          "returnType" : "java.util.List<CorsRule>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CorsPolicy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CorsPolicy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "CorsRule",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "CorsRule",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "CorsRule",
              "variableName" : "member",
              "variableType" : "CorsRule",
              "documentation" : "",
              "simpleType" : "CorsRule",
              "variableSetterType" : "CorsRule"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "CorsRule",
              "variableName" : "member",
              "variableType" : "CorsRule",
              "documentation" : "",
              "simpleType" : "CorsRule",
              "variableSetterType" : "CorsRule"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "CorsRule",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "CorsRule",
          "templateImplType" : "java.util.ArrayList<CorsRule>",
          "templateType" : "java.util.List<CorsRule>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "CorsPolicy",
        "setterDocumentation" : "/**\n@param corsPolicy */",
        "setterMethodName" : "setCorsPolicy",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<CorsRule>",
          "variableName" : "corsPolicy",
          "variableType" : "java.util.List<CorsRule>",
          "documentation" : "",
          "simpleType" : "List<CorsRule>",
          "variableSetterType" : "java.util.Collection<CorsRule>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCorsPolicy(java.util.Collection)} or {@link #withCorsPolicy(java.util.Collection)} if you want to override the existing values.</p>\n@param corsPolicy \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<CorsRule>",
          "variableName" : "corsPolicy",
          "variableType" : "java.util.List<CorsRule>",
          "documentation" : "",
          "simpleType" : "List<CorsRule>",
          "variableSetterType" : "java.util.Collection<CorsRule>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CorsPolicy" : {
          "c2jName" : "CorsPolicy",
          "c2jShape" : "CorsPolicy",
          "deprecated" : false,
          "documentation" : "",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param corsPolicy \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCorsPolicy",
          "getterDocumentation" : "/**\n@return */",
          "getterMethodName" : "getCorsPolicy",
          "getterModel" : {
            "returnType" : "java.util.List<CorsRule>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CorsPolicy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CorsPolicy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "CorsRule",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "CorsRule",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "CorsRule",
                "variableName" : "member",
                "variableType" : "CorsRule",
                "documentation" : "",
                "simpleType" : "CorsRule",
                "variableSetterType" : "CorsRule"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "CorsRule",
                "variableName" : "member",
                "variableType" : "CorsRule",
                "documentation" : "",
                "simpleType" : "CorsRule",
                "variableSetterType" : "CorsRule"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "CorsRule",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "CorsRule",
            "templateImplType" : "java.util.ArrayList<CorsRule>",
            "templateType" : "java.util.List<CorsRule>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "CorsPolicy",
          "setterDocumentation" : "/**\n@param corsPolicy */",
          "setterMethodName" : "setCorsPolicy",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<CorsRule>",
            "variableName" : "corsPolicy",
            "variableType" : "java.util.List<CorsRule>",
            "documentation" : "",
            "simpleType" : "List<CorsRule>",
            "variableSetterType" : "java.util.Collection<CorsRule>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCorsPolicy(java.util.Collection)} or {@link #withCorsPolicy(java.util.Collection)} if you want to override the existing values.</p>\n@param corsPolicy \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<CorsRule>",
            "variableName" : "corsPolicy",
            "variableType" : "java.util.List<CorsRule>",
            "documentation" : "",
            "simpleType" : "List<CorsRule>",
            "variableSetterType" : "java.util.Collection<CorsRule>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "CorsPolicy" ],
      "shapeName" : "GetCorsPolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetCorsPolicyResult",
        "variableName" : "getCorsPolicyResult",
        "variableType" : "GetCorsPolicyResult",
        "documentation" : null,
        "simpleType" : "GetCorsPolicyResult",
        "variableSetterType" : "GetCorsPolicyResult"
      },
      "wrapper" : false
    },
    "InternalServerErrorException" : {
      "c2jName" : "InternalServerError",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The service is temporarily unavailable.</p>",
      "enums" : null,
      "errorCode" : "InternalServerError",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InternalServerErrorException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InternalServerErrorException",
        "variableName" : "internalServerErrorException",
        "variableType" : "InternalServerErrorException",
        "documentation" : null,
        "simpleType" : "InternalServerErrorException",
        "variableSetterType" : "InternalServerErrorException"
      },
      "wrapper" : false
    },
    "LimitExceededException" : {
      "c2jName" : "LimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A service limit has been exceeded.</p>",
      "enums" : null,
      "errorCode" : "LimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "LimitExceededException",
        "variableName" : "limitExceededException",
        "variableType" : "LimitExceededException",
        "documentation" : null,
        "simpleType" : "LimitExceededException",
        "variableSetterType" : "LimitExceededException"
      },
      "wrapper" : false
    },
    "ListContainersRequest" : {
      "c2jName" : "ListContainersInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListContainers",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "MediaStore_20170901.ListContainers",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p>Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.</p>\n@param nextToken Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.</p>\n@return Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.</p>\n@param nextToken Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.</p>\n@param nextToken Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "ContainerListLimit",
        "deprecated" : false,
        "documentation" : "<p>Enter the maximum number of containers in the response. Use from 1 to 255 characters. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Enter the maximum number of containers in the response. Use from 1 to 255 characters. </p>\n@param maxResults Enter the maximum number of containers in the response. Use from 1 to 255 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>Enter the maximum number of containers in the response. Use from 1 to 255 characters. </p>\n@return Enter the maximum number of containers in the response. Use from 1 to 255 characters.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "setterDocumentation" : "/**<p>Enter the maximum number of containers in the response. Use from 1 to 255 characters. </p>\n@param maxResults Enter the maximum number of containers in the response. Use from 1 to 255 characters.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Enter the maximum number of containers in the response. Use from 1 to 255 characters. </p>\n@param maxResults Enter the maximum number of containers in the response. Use from 1 to 255 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>Enter the maximum number of containers in the response. Use from 1 to 255 characters. </p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "ContainerListLimit",
          "deprecated" : false,
          "documentation" : "<p>Enter the maximum number of containers in the response. Use from 1 to 255 characters. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Enter the maximum number of containers in the response. Use from 1 to 255 characters. </p>\n@param maxResults Enter the maximum number of containers in the response. Use from 1 to 255 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>Enter the maximum number of containers in the response. Use from 1 to 255 characters. </p>\n@return Enter the maximum number of containers in the response. Use from 1 to 255 characters.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "setterDocumentation" : "/**<p>Enter the maximum number of containers in the response. Use from 1 to 255 characters. </p>\n@param maxResults Enter the maximum number of containers in the response. Use from 1 to 255 characters.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Enter the maximum number of containers in the response. Use from 1 to 255 characters. </p>\n@param maxResults Enter the maximum number of containers in the response. Use from 1 to 255 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>Enter the maximum number of containers in the response. Use from 1 to 255 characters. </p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p>Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.</p>\n@param nextToken Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.</p>\n@return Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.</p>\n@param nextToken Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.</p>\n@param nextToken Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>Only if you used <code>MaxResults</code> in the first command, enter the token (which was included in the previous response) to obtain the next set of containers. This token is included in a response only if there actually are more containers to list.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListContainersRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListContainersRequest",
        "variableName" : "listContainersRequest",
        "variableType" : "ListContainersRequest",
        "documentation" : null,
        "simpleType" : "ListContainersRequest",
        "variableSetterType" : "ListContainersRequest"
      },
      "wrapper" : false
    },
    "ListContainersResult" : {
      "c2jName" : "ListContainersOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Containers",
        "c2jShape" : "ContainerList",
        "deprecated" : false,
        "documentation" : "<p>The names of the containers.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The names of the containers.</p>\n@param containers The names of the containers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContainers",
        "getterDocumentation" : "/**<p>The names of the containers.</p>\n@return The names of the containers.*/",
        "getterMethodName" : "getContainers",
        "getterModel" : {
          "returnType" : "java.util.List<Container>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Containers",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Containers",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Container",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Container",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Container",
              "variableName" : "member",
              "variableType" : "Container",
              "documentation" : "",
              "simpleType" : "Container",
              "variableSetterType" : "Container"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Container",
              "variableName" : "member",
              "variableType" : "Container",
              "documentation" : "",
              "simpleType" : "Container",
              "variableSetterType" : "Container"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Container",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Container",
          "templateImplType" : "java.util.ArrayList<Container>",
          "templateType" : "java.util.List<Container>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Containers",
        "setterDocumentation" : "/**<p>The names of the containers.</p>\n@param containers The names of the containers.*/",
        "setterMethodName" : "setContainers",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Container>",
          "variableName" : "containers",
          "variableType" : "java.util.List<Container>",
          "documentation" : "",
          "simpleType" : "List<Container>",
          "variableSetterType" : "java.util.Collection<Container>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The names of the containers.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setContainers(java.util.Collection)} or {@link #withContainers(java.util.Collection)} if you want to override the existing values.</p>\n@param containers The names of the containers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Container>",
          "variableName" : "containers",
          "variableType" : "java.util.List<Container>",
          "documentation" : "<p>The names of the containers.</p>",
          "simpleType" : "List<Container>",
          "variableSetterType" : "java.util.Collection<Container>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p> <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return. </p>\n@param nextToken <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p> <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return. </p>\n@return <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p> <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return. </p>\n@param nextToken <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return. </p>\n@param nextToken <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p> <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Containers" : {
          "c2jName" : "Containers",
          "c2jShape" : "ContainerList",
          "deprecated" : false,
          "documentation" : "<p>The names of the containers.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The names of the containers.</p>\n@param containers The names of the containers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContainers",
          "getterDocumentation" : "/**<p>The names of the containers.</p>\n@return The names of the containers.*/",
          "getterMethodName" : "getContainers",
          "getterModel" : {
            "returnType" : "java.util.List<Container>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Containers",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Containers",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Container",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Container",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Container",
                "variableName" : "member",
                "variableType" : "Container",
                "documentation" : "",
                "simpleType" : "Container",
                "variableSetterType" : "Container"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Container",
                "variableName" : "member",
                "variableType" : "Container",
                "documentation" : "",
                "simpleType" : "Container",
                "variableSetterType" : "Container"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Container",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Container",
            "templateImplType" : "java.util.ArrayList<Container>",
            "templateType" : "java.util.List<Container>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Containers",
          "setterDocumentation" : "/**<p>The names of the containers.</p>\n@param containers The names of the containers.*/",
          "setterMethodName" : "setContainers",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Container>",
            "variableName" : "containers",
            "variableType" : "java.util.List<Container>",
            "documentation" : "",
            "simpleType" : "List<Container>",
            "variableSetterType" : "java.util.Collection<Container>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The names of the containers.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setContainers(java.util.Collection)} or {@link #withContainers(java.util.Collection)} if you want to override the existing values.</p>\n@param containers The names of the containers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Container>",
            "variableName" : "containers",
            "variableType" : "java.util.List<Container>",
            "documentation" : "<p>The names of the containers.</p>",
            "simpleType" : "List<Container>",
            "variableSetterType" : "java.util.Collection<Container>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p> <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return. </p>\n@param nextToken <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p> <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return. </p>\n@return <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p> <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return. </p>\n@param nextToken <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return. </p>\n@param nextToken <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p> <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>. This token is returned only if you included the <code>MaxResults</code> tag in the original command, and only if there are still containers to return. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Containers" ],
      "shapeName" : "ListContainersResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListContainersResult",
        "variableName" : "listContainersResult",
        "variableType" : "ListContainersResult",
        "documentation" : null,
        "simpleType" : "ListContainersResult",
        "variableSetterType" : "ListContainersResult"
      },
      "wrapper" : false
    },
    "MethodName" : {
      "c2jName" : "MethodName",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "PUT",
        "value" : "PUT"
      }, {
        "name" : "GET",
        "value" : "GET"
      }, {
        "name" : "DELETE",
        "value" : "DELETE"
      }, {
        "name" : "HEAD",
        "value" : "HEAD"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MethodName",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "MethodName",
        "variableName" : "methodName",
        "variableType" : "MethodName",
        "documentation" : null,
        "simpleType" : "MethodName",
        "variableSetterType" : "MethodName"
      },
      "wrapper" : false
    },
    "PolicyNotFoundException" : {
      "c2jName" : "PolicyNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Could not perform an operation on a policy that does not exist.</p>",
      "enums" : null,
      "errorCode" : "PolicyNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PolicyNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PolicyNotFoundException",
        "variableName" : "policyNotFoundException",
        "variableType" : "PolicyNotFoundException",
        "documentation" : null,
        "simpleType" : "PolicyNotFoundException",
        "variableSetterType" : "PolicyNotFoundException"
      },
      "wrapper" : false
    },
    "PutContainerPolicyRequest" : {
      "c2jName" : "PutContainerPolicyInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "PutContainerPolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "MediaStore_20170901.PutContainerPolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ContainerName",
        "c2jShape" : "ContainerName",
        "deprecated" : false,
        "documentation" : "<p>The name of the container.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the container.</p>\n@param containerName The name of the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContainerName",
        "getterDocumentation" : "/**<p>The name of the container.</p>\n@return The name of the container.*/",
        "getterMethodName" : "getContainerName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ContainerName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ContainerName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContainerName",
        "setterDocumentation" : "/**<p>The name of the container.</p>\n@param containerName The name of the container.*/",
        "setterMethodName" : "setContainerName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the container.</p>\n@param containerName The name of the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "<p>The name of the container.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Policy",
        "c2jShape" : "ContainerPolicy",
        "deprecated" : false,
        "documentation" : "<p>The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li> </ul>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li> </ul>\n@param policy The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicy",
        "getterDocumentation" : "/**<p>The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li> </ul>\n@return The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li>*/",
        "getterMethodName" : "getPolicy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Policy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Policy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Policy",
        "setterDocumentation" : "/**<p>The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li> </ul>\n@param policy The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li>*/",
        "setterMethodName" : "setPolicy",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li> </ul>\n@param policy The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policy",
          "variableType" : "String",
          "documentation" : "<p>The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ContainerName" : {
          "c2jName" : "ContainerName",
          "c2jShape" : "ContainerName",
          "deprecated" : false,
          "documentation" : "<p>The name of the container.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the container.</p>\n@param containerName The name of the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContainerName",
          "getterDocumentation" : "/**<p>The name of the container.</p>\n@return The name of the container.*/",
          "getterMethodName" : "getContainerName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ContainerName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ContainerName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContainerName",
          "setterDocumentation" : "/**<p>The name of the container.</p>\n@param containerName The name of the container.*/",
          "setterMethodName" : "setContainerName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the container.</p>\n@param containerName The name of the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "<p>The name of the container.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Policy" : {
          "c2jName" : "Policy",
          "c2jShape" : "ContainerPolicy",
          "deprecated" : false,
          "documentation" : "<p>The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li> </ul>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li> </ul>\n@param policy The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicy",
          "getterDocumentation" : "/**<p>The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li> </ul>\n@return The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li>*/",
          "getterMethodName" : "getPolicy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Policy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Policy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Policy",
          "setterDocumentation" : "/**<p>The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li> </ul>\n@param policy The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li>*/",
          "setterMethodName" : "setPolicy",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li> </ul>\n@param policy The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policy",
            "variableType" : "String",
            "documentation" : "<p>The contents of the policy, which includes the following: </p> <ul> <li> <p>One <code>Version</code> tag</p> </li> <li> <p>One <code>Statement</code> tag that contains the standard tags for the policy.</p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ContainerName", "Policy" ],
      "shapeName" : "PutContainerPolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PutContainerPolicyRequest",
        "variableName" : "putContainerPolicyRequest",
        "variableType" : "PutContainerPolicyRequest",
        "documentation" : null,
        "simpleType" : "PutContainerPolicyRequest",
        "variableSetterType" : "PutContainerPolicyRequest"
      },
      "wrapper" : false
    },
    "PutContainerPolicyResult" : {
      "c2jName" : "PutContainerPolicyOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PutContainerPolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PutContainerPolicyResult",
        "variableName" : "putContainerPolicyResult",
        "variableType" : "PutContainerPolicyResult",
        "documentation" : null,
        "simpleType" : "PutContainerPolicyResult",
        "variableSetterType" : "PutContainerPolicyResult"
      },
      "wrapper" : false
    },
    "PutCorsPolicyRequest" : {
      "c2jName" : "PutCorsPolicyInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "PutCorsPolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "MediaStore_20170901.PutCorsPolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ContainerName",
        "c2jShape" : "ContainerName",
        "deprecated" : false,
        "documentation" : "<p>The name of the container that you want to assign the CORS policy to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the container that you want to assign the CORS policy to.</p>\n@param containerName The name of the container that you want to assign the CORS policy to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContainerName",
        "getterDocumentation" : "/**<p>The name of the container that you want to assign the CORS policy to.</p>\n@return The name of the container that you want to assign the CORS policy to.*/",
        "getterMethodName" : "getContainerName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ContainerName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ContainerName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContainerName",
        "setterDocumentation" : "/**<p>The name of the container that you want to assign the CORS policy to.</p>\n@param containerName The name of the container that you want to assign the CORS policy to.*/",
        "setterMethodName" : "setContainerName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the container that you want to assign the CORS policy to.</p>\n@param containerName The name of the container that you want to assign the CORS policy to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "containerName",
          "variableType" : "String",
          "documentation" : "<p>The name of the container that you want to assign the CORS policy to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CorsPolicy",
        "c2jShape" : "CorsPolicy",
        "deprecated" : false,
        "documentation" : "<p>The CORS policy to apply to the container. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CORS policy to apply to the container. </p>\n@param corsPolicy The CORS policy to apply to the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCorsPolicy",
        "getterDocumentation" : "/**<p>The CORS policy to apply to the container. </p>\n@return The CORS policy to apply to the container.*/",
        "getterMethodName" : "getCorsPolicy",
        "getterModel" : {
          "returnType" : "java.util.List<CorsRule>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CorsPolicy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CorsPolicy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "CorsRule",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "CorsRule",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "CorsRule",
              "variableName" : "member",
              "variableType" : "CorsRule",
              "documentation" : "",
              "simpleType" : "CorsRule",
              "variableSetterType" : "CorsRule"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "CorsRule",
              "variableName" : "member",
              "variableType" : "CorsRule",
              "documentation" : "",
              "simpleType" : "CorsRule",
              "variableSetterType" : "CorsRule"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "CorsRule",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "CorsRule",
          "templateImplType" : "java.util.ArrayList<CorsRule>",
          "templateType" : "java.util.List<CorsRule>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "CorsPolicy",
        "setterDocumentation" : "/**<p>The CORS policy to apply to the container. </p>\n@param corsPolicy The CORS policy to apply to the container.*/",
        "setterMethodName" : "setCorsPolicy",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<CorsRule>",
          "variableName" : "corsPolicy",
          "variableType" : "java.util.List<CorsRule>",
          "documentation" : "",
          "simpleType" : "List<CorsRule>",
          "variableSetterType" : "java.util.Collection<CorsRule>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CORS policy to apply to the container. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCorsPolicy(java.util.Collection)} or {@link #withCorsPolicy(java.util.Collection)} if you want to override the existing values.</p>\n@param corsPolicy The CORS policy to apply to the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<CorsRule>",
          "variableName" : "corsPolicy",
          "variableType" : "java.util.List<CorsRule>",
          "documentation" : "<p>The CORS policy to apply to the container. </p>",
          "simpleType" : "List<CorsRule>",
          "variableSetterType" : "java.util.Collection<CorsRule>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ContainerName" : {
          "c2jName" : "ContainerName",
          "c2jShape" : "ContainerName",
          "deprecated" : false,
          "documentation" : "<p>The name of the container that you want to assign the CORS policy to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the container that you want to assign the CORS policy to.</p>\n@param containerName The name of the container that you want to assign the CORS policy to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContainerName",
          "getterDocumentation" : "/**<p>The name of the container that you want to assign the CORS policy to.</p>\n@return The name of the container that you want to assign the CORS policy to.*/",
          "getterMethodName" : "getContainerName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ContainerName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ContainerName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContainerName",
          "setterDocumentation" : "/**<p>The name of the container that you want to assign the CORS policy to.</p>\n@param containerName The name of the container that you want to assign the CORS policy to.*/",
          "setterMethodName" : "setContainerName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the container that you want to assign the CORS policy to.</p>\n@param containerName The name of the container that you want to assign the CORS policy to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "containerName",
            "variableType" : "String",
            "documentation" : "<p>The name of the container that you want to assign the CORS policy to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CorsPolicy" : {
          "c2jName" : "CorsPolicy",
          "c2jShape" : "CorsPolicy",
          "deprecated" : false,
          "documentation" : "<p>The CORS policy to apply to the container. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CORS policy to apply to the container. </p>\n@param corsPolicy The CORS policy to apply to the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCorsPolicy",
          "getterDocumentation" : "/**<p>The CORS policy to apply to the container. </p>\n@return The CORS policy to apply to the container.*/",
          "getterMethodName" : "getCorsPolicy",
          "getterModel" : {
            "returnType" : "java.util.List<CorsRule>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CorsPolicy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CorsPolicy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "CorsRule",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "CorsRule",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "CorsRule",
                "variableName" : "member",
                "variableType" : "CorsRule",
                "documentation" : "",
                "simpleType" : "CorsRule",
                "variableSetterType" : "CorsRule"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "CorsRule",
                "variableName" : "member",
                "variableType" : "CorsRule",
                "documentation" : "",
                "simpleType" : "CorsRule",
                "variableSetterType" : "CorsRule"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "CorsRule",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "CorsRule",
            "templateImplType" : "java.util.ArrayList<CorsRule>",
            "templateType" : "java.util.List<CorsRule>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "CorsPolicy",
          "setterDocumentation" : "/**<p>The CORS policy to apply to the container. </p>\n@param corsPolicy The CORS policy to apply to the container.*/",
          "setterMethodName" : "setCorsPolicy",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<CorsRule>",
            "variableName" : "corsPolicy",
            "variableType" : "java.util.List<CorsRule>",
            "documentation" : "",
            "simpleType" : "List<CorsRule>",
            "variableSetterType" : "java.util.Collection<CorsRule>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CORS policy to apply to the container. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCorsPolicy(java.util.Collection)} or {@link #withCorsPolicy(java.util.Collection)} if you want to override the existing values.</p>\n@param corsPolicy The CORS policy to apply to the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<CorsRule>",
            "variableName" : "corsPolicy",
            "variableType" : "java.util.List<CorsRule>",
            "documentation" : "<p>The CORS policy to apply to the container. </p>",
            "simpleType" : "List<CorsRule>",
            "variableSetterType" : "java.util.Collection<CorsRule>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ContainerName", "CorsPolicy" ],
      "shapeName" : "PutCorsPolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PutCorsPolicyRequest",
        "variableName" : "putCorsPolicyRequest",
        "variableType" : "PutCorsPolicyRequest",
        "documentation" : null,
        "simpleType" : "PutCorsPolicyRequest",
        "variableSetterType" : "PutCorsPolicyRequest"
      },
      "wrapper" : false
    },
    "PutCorsPolicyResult" : {
      "c2jName" : "PutCorsPolicyOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PutCorsPolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PutCorsPolicyResult",
        "variableName" : "putCorsPolicyResult",
        "variableType" : "PutCorsPolicyResult",
        "documentation" : null,
        "simpleType" : "PutCorsPolicyResult",
        "variableSetterType" : "PutCorsPolicyResult"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "customAuthorizers" : { },
  "examples" : {
    "examples" : { },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2013-2018 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AWSMediaStoreException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.mediastore.model.AWSMediaStoreException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.mediastore.model.transform"
}