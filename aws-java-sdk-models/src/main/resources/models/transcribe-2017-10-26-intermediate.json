{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "contentTypeOverride" : null,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseHandlerFqcn" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "ClientConstructors", "ClientMutationMethods", "EnumSetterOverload" ],
    "emitLegacyEnumSetterFor" : null,
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipClientMethodForOperations" : [ ],
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : true,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false,
    "useUidAsFilePrefix" : false
  },
  "metadata" : {
    "apiVersion" : "2017-10-26",
    "asyncClient" : "AmazonTranscribeAsyncClient",
    "asyncClientBuilderClassName" : "AmazonTranscribeAsyncClientBuilder",
    "asyncInterface" : "AmazonTranscribeAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : null,
    "cucumberModuleInjectorClassName" : "AmazonTranscribeModuleInjector",
    "defaultEndpoint" : "transcribe.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "transcribe.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<p>Operations and objects for transcribing speech to text.</p>",
    "endpointPrefix" : "transcribe",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.transcribe",
    "packagePath" : "com/amazonaws/services/transcribe",
    "protocol" : "json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : null,
    "serviceFullName" : "Amazon Transcribe Service",
    "serviceId" : "Transcribe",
    "serviceName" : "Amazon Transcribe Service",
    "signingName" : "transcribe",
    "smokeTestsPackageName" : "com.amazonaws.services.transcribe.smoketests",
    "syncClient" : "AmazonTranscribeClient",
    "syncClientBuilderClassName" : "AmazonTranscribeClientBuilder",
    "syncInterface" : "AmazonTranscribe",
    "uid" : "transcribe-2017-10-26",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "CreateVocabulary" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateVocabularyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateVocabularyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateVocabularyRequest, CreateVocabularyResult>",
      "asyncReturnType" : "CreateVocabularyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a new custom vocabulary that you can use to change the way Amazon Transcribe handles transcription of an audio file. </p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "BadRequestException",
        "documentation" : "<p>Your request didn't pass one or more validation tests. For example, if the transcription you're trying to delete doesn't exist or if it is in a non-terminal state (for example, it's \"in progress\"). See the exception <code>Message</code> field for more information.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>Either you have sent too many requests or your input file is too long. Wait before you resend your request, or use a smaller file and resend the request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>There was an internal error. Check the error message and try your request again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ConflictException",
        "documentation" : "<p>When you are using the <code>StartTranscriptionJob</code> operation, the <code>JobName</code> field is a duplicate of a previously entered job name. Resend your request with a different name.</p> <p>When you are using the <code>UpdateVocabulary</code> operation, there are two jobs running at the same time. Resend the second request later.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateVocabularyRequest",
        "variableName" : "createVocabularyRequest",
        "variableType" : "CreateVocabularyRequest",
        "documentation" : "",
        "simpleType" : "CreateVocabularyRequest",
        "variableSetterType" : "CreateVocabularyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createVocabulary",
      "operationName" : "CreateVocabulary",
      "returnType" : {
        "returnType" : "CreateVocabularyResult",
        "documentation" : null
      },
      "syncReturnType" : "CreateVocabularyResult"
    },
    "DeleteTranscriptionJob" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteTranscriptionJobResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteTranscriptionJobResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteTranscriptionJobRequest, DeleteTranscriptionJobResult>",
      "asyncReturnType" : "DeleteTranscriptionJobResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes a previously submitted transcription job along with any other generated results such as the transcription, models, and so on.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>Either you have sent too many requests or your input file is too long. Wait before you resend your request, or use a smaller file and resend the request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BadRequestException",
        "documentation" : "<p>Your request didn't pass one or more validation tests. For example, if the transcription you're trying to delete doesn't exist or if it is in a non-terminal state (for example, it's \"in progress\"). See the exception <code>Message</code> field for more information.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>There was an internal error. Check the error message and try your request again.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteTranscriptionJobRequest",
        "variableName" : "deleteTranscriptionJobRequest",
        "variableType" : "DeleteTranscriptionJobRequest",
        "documentation" : "",
        "simpleType" : "DeleteTranscriptionJobRequest",
        "variableSetterType" : "DeleteTranscriptionJobRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteTranscriptionJob",
      "operationName" : "DeleteTranscriptionJob",
      "returnType" : {
        "returnType" : "DeleteTranscriptionJobResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteTranscriptionJobResult"
    },
    "DeleteVocabulary" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteVocabularyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteVocabularyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteVocabularyRequest, DeleteVocabularyResult>",
      "asyncReturnType" : "DeleteVocabularyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes a vocabulary from Amazon Transcribe. </p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "NotFoundException",
        "documentation" : "<p>We can't find the requested resource. Check the name and try your request again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>Either you have sent too many requests or your input file is too long. Wait before you resend your request, or use a smaller file and resend the request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BadRequestException",
        "documentation" : "<p>Your request didn't pass one or more validation tests. For example, if the transcription you're trying to delete doesn't exist or if it is in a non-terminal state (for example, it's \"in progress\"). See the exception <code>Message</code> field for more information.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>There was an internal error. Check the error message and try your request again.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteVocabularyRequest",
        "variableName" : "deleteVocabularyRequest",
        "variableType" : "DeleteVocabularyRequest",
        "documentation" : "",
        "simpleType" : "DeleteVocabularyRequest",
        "variableSetterType" : "DeleteVocabularyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteVocabulary",
      "operationName" : "DeleteVocabulary",
      "returnType" : {
        "returnType" : "DeleteVocabularyResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteVocabularyResult"
    },
    "GetTranscriptionJob" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetTranscriptionJobResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetTranscriptionJobResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetTranscriptionJobRequest, GetTranscriptionJobResult>",
      "asyncReturnType" : "GetTranscriptionJobResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns information about a transcription job. To see the status of the job, check the <code>TranscriptionJobStatus</code> field. If the status is <code>COMPLETED</code>, the job is finished and you can find the results at the location specified in the <code>TranscriptionFileUri</code> field.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "BadRequestException",
        "documentation" : "<p>Your request didn't pass one or more validation tests. For example, if the transcription you're trying to delete doesn't exist or if it is in a non-terminal state (for example, it's \"in progress\"). See the exception <code>Message</code> field for more information.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>Either you have sent too many requests or your input file is too long. Wait before you resend your request, or use a smaller file and resend the request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>There was an internal error. Check the error message and try your request again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "NotFoundException",
        "documentation" : "<p>We can't find the requested resource. Check the name and try your request again.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetTranscriptionJobRequest",
        "variableName" : "getTranscriptionJobRequest",
        "variableType" : "GetTranscriptionJobRequest",
        "documentation" : "",
        "simpleType" : "GetTranscriptionJobRequest",
        "variableSetterType" : "GetTranscriptionJobRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getTranscriptionJob",
      "operationName" : "GetTranscriptionJob",
      "returnType" : {
        "returnType" : "GetTranscriptionJobResult",
        "documentation" : null
      },
      "syncReturnType" : "GetTranscriptionJobResult"
    },
    "GetVocabulary" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetVocabularyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetVocabularyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetVocabularyRequest, GetVocabularyResult>",
      "asyncReturnType" : "GetVocabularyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about a vocabulary. </p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "NotFoundException",
        "documentation" : "<p>We can't find the requested resource. Check the name and try your request again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>Either you have sent too many requests or your input file is too long. Wait before you resend your request, or use a smaller file and resend the request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>There was an internal error. Check the error message and try your request again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BadRequestException",
        "documentation" : "<p>Your request didn't pass one or more validation tests. For example, if the transcription you're trying to delete doesn't exist or if it is in a non-terminal state (for example, it's \"in progress\"). See the exception <code>Message</code> field for more information.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetVocabularyRequest",
        "variableName" : "getVocabularyRequest",
        "variableType" : "GetVocabularyRequest",
        "documentation" : "",
        "simpleType" : "GetVocabularyRequest",
        "variableSetterType" : "GetVocabularyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getVocabulary",
      "operationName" : "GetVocabulary",
      "returnType" : {
        "returnType" : "GetVocabularyResult",
        "documentation" : null
      },
      "syncReturnType" : "GetVocabularyResult"
    },
    "ListTranscriptionJobs" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListTranscriptionJobsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListTranscriptionJobsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListTranscriptionJobsRequest, ListTranscriptionJobsResult>",
      "asyncReturnType" : "ListTranscriptionJobsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists transcription jobs with the specified status.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "BadRequestException",
        "documentation" : "<p>Your request didn't pass one or more validation tests. For example, if the transcription you're trying to delete doesn't exist or if it is in a non-terminal state (for example, it's \"in progress\"). See the exception <code>Message</code> field for more information.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>Either you have sent too many requests or your input file is too long. Wait before you resend your request, or use a smaller file and resend the request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>There was an internal error. Check the error message and try your request again.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTranscriptionJobsRequest",
        "variableName" : "listTranscriptionJobsRequest",
        "variableType" : "ListTranscriptionJobsRequest",
        "documentation" : "",
        "simpleType" : "ListTranscriptionJobsRequest",
        "variableSetterType" : "ListTranscriptionJobsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listTranscriptionJobs",
      "operationName" : "ListTranscriptionJobs",
      "returnType" : {
        "returnType" : "ListTranscriptionJobsResult",
        "documentation" : null
      },
      "syncReturnType" : "ListTranscriptionJobsResult"
    },
    "ListVocabularies" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListVocabulariesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListVocabulariesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListVocabulariesRequest, ListVocabulariesResult>",
      "asyncReturnType" : "ListVocabulariesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns a list of vocabularies that match the specified criteria. If no criteria are specified, returns the entire list of vocabularies.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "BadRequestException",
        "documentation" : "<p>Your request didn't pass one or more validation tests. For example, if the transcription you're trying to delete doesn't exist or if it is in a non-terminal state (for example, it's \"in progress\"). See the exception <code>Message</code> field for more information.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>Either you have sent too many requests or your input file is too long. Wait before you resend your request, or use a smaller file and resend the request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>There was an internal error. Check the error message and try your request again.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListVocabulariesRequest",
        "variableName" : "listVocabulariesRequest",
        "variableType" : "ListVocabulariesRequest",
        "documentation" : "",
        "simpleType" : "ListVocabulariesRequest",
        "variableSetterType" : "ListVocabulariesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listVocabularies",
      "operationName" : "ListVocabularies",
      "returnType" : {
        "returnType" : "ListVocabulariesResult",
        "documentation" : null
      },
      "syncReturnType" : "ListVocabulariesResult"
    },
    "StartTranscriptionJob" : {
      "asyncCallableType" : "java.util.concurrent.Callable<StartTranscriptionJobResult>",
      "asyncFutureType" : "java.util.concurrent.Future<StartTranscriptionJobResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<StartTranscriptionJobRequest, StartTranscriptionJobResult>",
      "asyncReturnType" : "StartTranscriptionJobResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Starts an asynchronous job to transcribe speech to text. </p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "BadRequestException",
        "documentation" : "<p>Your request didn't pass one or more validation tests. For example, if the transcription you're trying to delete doesn't exist or if it is in a non-terminal state (for example, it's \"in progress\"). See the exception <code>Message</code> field for more information.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>Either you have sent too many requests or your input file is too long. Wait before you resend your request, or use a smaller file and resend the request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>There was an internal error. Check the error message and try your request again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ConflictException",
        "documentation" : "<p>When you are using the <code>StartTranscriptionJob</code> operation, the <code>JobName</code> field is a duplicate of a previously entered job name. Resend your request with a different name.</p> <p>When you are using the <code>UpdateVocabulary</code> operation, there are two jobs running at the same time. Resend the second request later.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "StartTranscriptionJobRequest",
        "variableName" : "startTranscriptionJobRequest",
        "variableType" : "StartTranscriptionJobRequest",
        "documentation" : "",
        "simpleType" : "StartTranscriptionJobRequest",
        "variableSetterType" : "StartTranscriptionJobRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "startTranscriptionJob",
      "operationName" : "StartTranscriptionJob",
      "returnType" : {
        "returnType" : "StartTranscriptionJobResult",
        "documentation" : null
      },
      "syncReturnType" : "StartTranscriptionJobResult"
    },
    "UpdateVocabulary" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateVocabularyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateVocabularyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateVocabularyRequest, UpdateVocabularyResult>",
      "asyncReturnType" : "UpdateVocabularyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Updates an existing vocabulary with new values. The <code>UpdateVocabulary</code> operation overwrites all of the existing information with the values that you provide in the request. </p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "BadRequestException",
        "documentation" : "<p>Your request didn't pass one or more validation tests. For example, if the transcription you're trying to delete doesn't exist or if it is in a non-terminal state (for example, it's \"in progress\"). See the exception <code>Message</code> field for more information.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>Either you have sent too many requests or your input file is too long. Wait before you resend your request, or use a smaller file and resend the request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>There was an internal error. Check the error message and try your request again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "NotFoundException",
        "documentation" : "<p>We can't find the requested resource. Check the name and try your request again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ConflictException",
        "documentation" : "<p>When you are using the <code>StartTranscriptionJob</code> operation, the <code>JobName</code> field is a duplicate of a previously entered job name. Resend your request with a different name.</p> <p>When you are using the <code>UpdateVocabulary</code> operation, there are two jobs running at the same time. Resend the second request later.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateVocabularyRequest",
        "variableName" : "updateVocabularyRequest",
        "variableType" : "UpdateVocabularyRequest",
        "documentation" : "",
        "simpleType" : "UpdateVocabularyRequest",
        "variableSetterType" : "UpdateVocabularyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateVocabulary",
      "operationName" : "UpdateVocabulary",
      "returnType" : {
        "returnType" : "UpdateVocabularyResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateVocabularyResult"
    }
  },
  "shapes" : {
    "BadRequestException" : {
      "c2jName" : "BadRequestException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Your request didn't pass one or more validation tests. For example, if the transcription you're trying to delete doesn't exist or if it is in a non-terminal state (for example, it's \"in progress\"). See the exception <code>Message</code> field for more information.</p>",
      "enums" : null,
      "errorCode" : "BadRequestException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BadRequestException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BadRequestException",
        "variableName" : "badRequestException",
        "variableType" : "BadRequestException",
        "documentation" : null,
        "simpleType" : "BadRequestException",
        "variableSetterType" : "BadRequestException"
      },
      "wrapper" : false
    },
    "ConflictException" : {
      "c2jName" : "ConflictException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>When you are using the <code>StartTranscriptionJob</code> operation, the <code>JobName</code> field is a duplicate of a previously entered job name. Resend your request with a different name.</p> <p>When you are using the <code>UpdateVocabulary</code> operation, there are two jobs running at the same time. Resend the second request later.</p>",
      "enums" : null,
      "errorCode" : "ConflictException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ConflictException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ConflictException",
        "variableName" : "conflictException",
        "variableType" : "ConflictException",
        "documentation" : null,
        "simpleType" : "ConflictException",
        "variableSetterType" : "ConflictException"
      },
      "wrapper" : false
    },
    "CreateVocabularyRequest" : {
      "c2jName" : "CreateVocabularyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateVocabulary",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Transcribe.CreateVocabulary",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "VocabularyName",
        "c2jShape" : "VocabularyName",
        "deprecated" : false,
        "documentation" : "<p>The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVocabularyName",
        "getterDocumentation" : "/**<p>The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.</p>\n@return The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.*/",
        "getterMethodName" : "getVocabularyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VocabularyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VocabularyName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VocabularyName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.*/",
        "setterMethodName" : "setVocabularyName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "<p>The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LanguageCode",
        "c2jShape" : "LanguageCode",
        "deprecated" : false,
        "documentation" : "<p>The language code of the vocabulary entries.</p>",
        "enumType" : "LanguageCode",
        "fluentSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "fluentSetterMethodName" : "withLanguageCode",
        "getterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@return The language code of the vocabulary entries.\n@see LanguageCode*/",
        "getterMethodName" : "getLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@see LanguageCode*/",
        "setterMethodName" : "setLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code of the vocabulary entries.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Phrases",
        "c2jShape" : "Phrases",
        "deprecated" : false,
        "documentation" : "<p>An array of strings that contains the vocabulary entries. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of strings that contains the vocabulary entries. </p>\n@param phrases An array of strings that contains the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPhrases",
        "getterDocumentation" : "/**<p>An array of strings that contains the vocabulary entries. </p>\n@return An array of strings that contains the vocabulary entries.*/",
        "getterMethodName" : "getPhrases",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Phrases",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Phrases",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Phrase",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Phrases",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An array of strings that contains the vocabulary entries. </p>\n@param phrases An array of strings that contains the vocabulary entries.*/",
        "setterMethodName" : "setPhrases",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "phrases",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of strings that contains the vocabulary entries. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPhrases(java.util.Collection)} or {@link #withPhrases(java.util.Collection)} if you want to override the existing values.</p>\n@param phrases An array of strings that contains the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "phrases",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>An array of strings that contains the vocabulary entries. </p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LanguageCode" : {
          "c2jName" : "LanguageCode",
          "c2jShape" : "LanguageCode",
          "deprecated" : false,
          "documentation" : "<p>The language code of the vocabulary entries.</p>",
          "enumType" : "LanguageCode",
          "fluentSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "fluentSetterMethodName" : "withLanguageCode",
          "getterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@return The language code of the vocabulary entries.\n@see LanguageCode*/",
          "getterMethodName" : "getLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@see LanguageCode*/",
          "setterMethodName" : "setLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code of the vocabulary entries.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Phrases" : {
          "c2jName" : "Phrases",
          "c2jShape" : "Phrases",
          "deprecated" : false,
          "documentation" : "<p>An array of strings that contains the vocabulary entries. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of strings that contains the vocabulary entries. </p>\n@param phrases An array of strings that contains the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPhrases",
          "getterDocumentation" : "/**<p>An array of strings that contains the vocabulary entries. </p>\n@return An array of strings that contains the vocabulary entries.*/",
          "getterMethodName" : "getPhrases",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Phrases",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Phrases",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Phrase",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Phrases",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An array of strings that contains the vocabulary entries. </p>\n@param phrases An array of strings that contains the vocabulary entries.*/",
          "setterMethodName" : "setPhrases",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "phrases",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of strings that contains the vocabulary entries. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPhrases(java.util.Collection)} or {@link #withPhrases(java.util.Collection)} if you want to override the existing values.</p>\n@param phrases An array of strings that contains the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "phrases",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>An array of strings that contains the vocabulary entries. </p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "VocabularyName" : {
          "c2jName" : "VocabularyName",
          "c2jShape" : "VocabularyName",
          "deprecated" : false,
          "documentation" : "<p>The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVocabularyName",
          "getterDocumentation" : "/**<p>The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.</p>\n@return The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.*/",
          "getterMethodName" : "getVocabularyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VocabularyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VocabularyName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VocabularyName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.*/",
          "setterMethodName" : "setVocabularyName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "<p>The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "VocabularyName", "LanguageCode", "Phrases" ],
      "shapeName" : "CreateVocabularyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateVocabularyRequest",
        "variableName" : "createVocabularyRequest",
        "variableType" : "CreateVocabularyRequest",
        "documentation" : null,
        "simpleType" : "CreateVocabularyRequest",
        "variableSetterType" : "CreateVocabularyRequest"
      },
      "wrapper" : false
    },
    "CreateVocabularyResult" : {
      "c2jName" : "CreateVocabularyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "VocabularyName",
        "c2jShape" : "VocabularyName",
        "deprecated" : false,
        "documentation" : "<p>The name of the vocabulary.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the vocabulary.</p>\n@param vocabularyName The name of the vocabulary.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVocabularyName",
        "getterDocumentation" : "/**<p>The name of the vocabulary.</p>\n@return The name of the vocabulary.*/",
        "getterMethodName" : "getVocabularyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VocabularyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VocabularyName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VocabularyName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the vocabulary.</p>\n@param vocabularyName The name of the vocabulary.*/",
        "setterMethodName" : "setVocabularyName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the vocabulary.</p>\n@param vocabularyName The name of the vocabulary.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "<p>The name of the vocabulary.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LanguageCode",
        "c2jShape" : "LanguageCode",
        "deprecated" : false,
        "documentation" : "<p>The language code of the vocabulary entries.</p>",
        "enumType" : "LanguageCode",
        "fluentSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "fluentSetterMethodName" : "withLanguageCode",
        "getterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@return The language code of the vocabulary entries.\n@see LanguageCode*/",
        "getterMethodName" : "getLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@see LanguageCode*/",
        "setterMethodName" : "setLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code of the vocabulary entries.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "VocabularyState",
        "c2jShape" : "VocabularyState",
        "deprecated" : false,
        "documentation" : "<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>",
        "enumType" : "VocabularyState",
        "fluentSetterDocumentation" : "/**<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
        "fluentSetterMethodName" : "withVocabularyState",
        "getterDocumentation" : "/**<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>\n@return The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.\n@see VocabularyState*/",
        "getterMethodName" : "getVocabularyState",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VocabularyState",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VocabularyState",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VocabularyState",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.\n@see VocabularyState*/",
        "setterMethodName" : "setVocabularyState",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyState",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyState",
          "variableType" : "String",
          "documentation" : "<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LastModifiedTime",
        "c2jShape" : "DateTime",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the vocabulary was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the vocabulary was created.</p>\n@param lastModifiedTime The date and time that the vocabulary was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastModifiedTime",
        "getterDocumentation" : "/**<p>The date and time that the vocabulary was created.</p>\n@return The date and time that the vocabulary was created.*/",
        "getterMethodName" : "getLastModifiedTime",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LastModifiedTime",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LastModifiedTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "LastModifiedTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time that the vocabulary was created.</p>\n@param lastModifiedTime The date and time that the vocabulary was created.*/",
        "setterMethodName" : "setLastModifiedTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModifiedTime",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the vocabulary was created.</p>\n@param lastModifiedTime The date and time that the vocabulary was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModifiedTime",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time that the vocabulary was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FailureReason",
        "c2jShape" : "FailureReason",
        "deprecated" : false,
        "documentation" : "<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailureReason",
        "getterDocumentation" : "/**<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@return If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.*/",
        "getterMethodName" : "getFailureReason",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FailureReason",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FailureReason",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FailureReason",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.*/",
        "setterMethodName" : "setFailureReason",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "failureReason",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "failureReason",
          "variableType" : "String",
          "documentation" : "<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FailureReason" : {
          "c2jName" : "FailureReason",
          "c2jShape" : "FailureReason",
          "deprecated" : false,
          "documentation" : "<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailureReason",
          "getterDocumentation" : "/**<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@return If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.*/",
          "getterMethodName" : "getFailureReason",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FailureReason",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FailureReason",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FailureReason",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.*/",
          "setterMethodName" : "setFailureReason",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "failureReason",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "failureReason",
            "variableType" : "String",
            "documentation" : "<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LanguageCode" : {
          "c2jName" : "LanguageCode",
          "c2jShape" : "LanguageCode",
          "deprecated" : false,
          "documentation" : "<p>The language code of the vocabulary entries.</p>",
          "enumType" : "LanguageCode",
          "fluentSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "fluentSetterMethodName" : "withLanguageCode",
          "getterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@return The language code of the vocabulary entries.\n@see LanguageCode*/",
          "getterMethodName" : "getLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@see LanguageCode*/",
          "setterMethodName" : "setLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code of the vocabulary entries.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LastModifiedTime" : {
          "c2jName" : "LastModifiedTime",
          "c2jShape" : "DateTime",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the vocabulary was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the vocabulary was created.</p>\n@param lastModifiedTime The date and time that the vocabulary was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastModifiedTime",
          "getterDocumentation" : "/**<p>The date and time that the vocabulary was created.</p>\n@return The date and time that the vocabulary was created.*/",
          "getterMethodName" : "getLastModifiedTime",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LastModifiedTime",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LastModifiedTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "LastModifiedTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time that the vocabulary was created.</p>\n@param lastModifiedTime The date and time that the vocabulary was created.*/",
          "setterMethodName" : "setLastModifiedTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModifiedTime",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the vocabulary was created.</p>\n@param lastModifiedTime The date and time that the vocabulary was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModifiedTime",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time that the vocabulary was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "VocabularyName" : {
          "c2jName" : "VocabularyName",
          "c2jShape" : "VocabularyName",
          "deprecated" : false,
          "documentation" : "<p>The name of the vocabulary.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the vocabulary.</p>\n@param vocabularyName The name of the vocabulary.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVocabularyName",
          "getterDocumentation" : "/**<p>The name of the vocabulary.</p>\n@return The name of the vocabulary.*/",
          "getterMethodName" : "getVocabularyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VocabularyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VocabularyName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VocabularyName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the vocabulary.</p>\n@param vocabularyName The name of the vocabulary.*/",
          "setterMethodName" : "setVocabularyName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the vocabulary.</p>\n@param vocabularyName The name of the vocabulary.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "<p>The name of the vocabulary.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "VocabularyState" : {
          "c2jName" : "VocabularyState",
          "c2jShape" : "VocabularyState",
          "deprecated" : false,
          "documentation" : "<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>",
          "enumType" : "VocabularyState",
          "fluentSetterDocumentation" : "/**<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
          "fluentSetterMethodName" : "withVocabularyState",
          "getterDocumentation" : "/**<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>\n@return The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.\n@see VocabularyState*/",
          "getterMethodName" : "getVocabularyState",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VocabularyState",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VocabularyState",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VocabularyState",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.\n@see VocabularyState*/",
          "setterMethodName" : "setVocabularyState",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyState",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyState",
            "variableType" : "String",
            "documentation" : "<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateVocabularyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateVocabularyResult",
        "variableName" : "createVocabularyResult",
        "variableType" : "CreateVocabularyResult",
        "documentation" : null,
        "simpleType" : "CreateVocabularyResult",
        "variableSetterType" : "CreateVocabularyResult"
      },
      "wrapper" : false
    },
    "DeleteTranscriptionJobRequest" : {
      "c2jName" : "DeleteTranscriptionJobRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteTranscriptionJob",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Transcribe.DeleteTranscriptionJob",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "TranscriptionJobName",
        "c2jShape" : "TranscriptionJobName",
        "deprecated" : false,
        "documentation" : "<p>The name of the transcription job to be deleted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the transcription job to be deleted.</p>\n@param transcriptionJobName The name of the transcription job to be deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTranscriptionJobName",
        "getterDocumentation" : "/**<p>The name of the transcription job to be deleted.</p>\n@return The name of the transcription job to be deleted.*/",
        "getterMethodName" : "getTranscriptionJobName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TranscriptionJobName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TranscriptionJobName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TranscriptionJobName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the transcription job to be deleted.</p>\n@param transcriptionJobName The name of the transcription job to be deleted.*/",
        "setterMethodName" : "setTranscriptionJobName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "transcriptionJobName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the transcription job to be deleted.</p>\n@param transcriptionJobName The name of the transcription job to be deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "transcriptionJobName",
          "variableType" : "String",
          "documentation" : "<p>The name of the transcription job to be deleted.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "TranscriptionJobName" : {
          "c2jName" : "TranscriptionJobName",
          "c2jShape" : "TranscriptionJobName",
          "deprecated" : false,
          "documentation" : "<p>The name of the transcription job to be deleted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the transcription job to be deleted.</p>\n@param transcriptionJobName The name of the transcription job to be deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTranscriptionJobName",
          "getterDocumentation" : "/**<p>The name of the transcription job to be deleted.</p>\n@return The name of the transcription job to be deleted.*/",
          "getterMethodName" : "getTranscriptionJobName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TranscriptionJobName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TranscriptionJobName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TranscriptionJobName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the transcription job to be deleted.</p>\n@param transcriptionJobName The name of the transcription job to be deleted.*/",
          "setterMethodName" : "setTranscriptionJobName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "transcriptionJobName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the transcription job to be deleted.</p>\n@param transcriptionJobName The name of the transcription job to be deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "transcriptionJobName",
            "variableType" : "String",
            "documentation" : "<p>The name of the transcription job to be deleted.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "TranscriptionJobName" ],
      "shapeName" : "DeleteTranscriptionJobRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteTranscriptionJobRequest",
        "variableName" : "deleteTranscriptionJobRequest",
        "variableType" : "DeleteTranscriptionJobRequest",
        "documentation" : null,
        "simpleType" : "DeleteTranscriptionJobRequest",
        "variableSetterType" : "DeleteTranscriptionJobRequest"
      },
      "wrapper" : false
    },
    "DeleteTranscriptionJobResult" : {
      "c2jName" : "DeleteTranscriptionJobResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteTranscriptionJobResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteTranscriptionJobResult",
        "variableName" : "deleteTranscriptionJobResult",
        "variableType" : "DeleteTranscriptionJobResult",
        "documentation" : null,
        "simpleType" : "DeleteTranscriptionJobResult",
        "variableSetterType" : "DeleteTranscriptionJobResult"
      },
      "wrapper" : false
    },
    "DeleteVocabularyRequest" : {
      "c2jName" : "DeleteVocabularyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteVocabulary",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Transcribe.DeleteVocabulary",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "VocabularyName",
        "c2jShape" : "VocabularyName",
        "deprecated" : false,
        "documentation" : "<p>The name of the vocabulary to delete. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the vocabulary to delete. </p>\n@param vocabularyName The name of the vocabulary to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVocabularyName",
        "getterDocumentation" : "/**<p>The name of the vocabulary to delete. </p>\n@return The name of the vocabulary to delete.*/",
        "getterMethodName" : "getVocabularyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VocabularyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VocabularyName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VocabularyName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the vocabulary to delete. </p>\n@param vocabularyName The name of the vocabulary to delete.*/",
        "setterMethodName" : "setVocabularyName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the vocabulary to delete. </p>\n@param vocabularyName The name of the vocabulary to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "<p>The name of the vocabulary to delete. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "VocabularyName" : {
          "c2jName" : "VocabularyName",
          "c2jShape" : "VocabularyName",
          "deprecated" : false,
          "documentation" : "<p>The name of the vocabulary to delete. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the vocabulary to delete. </p>\n@param vocabularyName The name of the vocabulary to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVocabularyName",
          "getterDocumentation" : "/**<p>The name of the vocabulary to delete. </p>\n@return The name of the vocabulary to delete.*/",
          "getterMethodName" : "getVocabularyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VocabularyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VocabularyName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VocabularyName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the vocabulary to delete. </p>\n@param vocabularyName The name of the vocabulary to delete.*/",
          "setterMethodName" : "setVocabularyName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the vocabulary to delete. </p>\n@param vocabularyName The name of the vocabulary to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "<p>The name of the vocabulary to delete. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "VocabularyName" ],
      "shapeName" : "DeleteVocabularyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteVocabularyRequest",
        "variableName" : "deleteVocabularyRequest",
        "variableType" : "DeleteVocabularyRequest",
        "documentation" : null,
        "simpleType" : "DeleteVocabularyRequest",
        "variableSetterType" : "DeleteVocabularyRequest"
      },
      "wrapper" : false
    },
    "DeleteVocabularyResult" : {
      "c2jName" : "DeleteVocabularyResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteVocabularyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteVocabularyResult",
        "variableName" : "deleteVocabularyResult",
        "variableType" : "DeleteVocabularyResult",
        "documentation" : null,
        "simpleType" : "DeleteVocabularyResult",
        "variableSetterType" : "DeleteVocabularyResult"
      },
      "wrapper" : false
    },
    "GetTranscriptionJobRequest" : {
      "c2jName" : "GetTranscriptionJobRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetTranscriptionJob",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Transcribe.GetTranscriptionJob",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "TranscriptionJobName",
        "c2jShape" : "TranscriptionJobName",
        "deprecated" : false,
        "documentation" : "<p>The name of the job.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the job.</p>\n@param transcriptionJobName The name of the job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTranscriptionJobName",
        "getterDocumentation" : "/**<p>The name of the job.</p>\n@return The name of the job.*/",
        "getterMethodName" : "getTranscriptionJobName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TranscriptionJobName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TranscriptionJobName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TranscriptionJobName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the job.</p>\n@param transcriptionJobName The name of the job.*/",
        "setterMethodName" : "setTranscriptionJobName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "transcriptionJobName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the job.</p>\n@param transcriptionJobName The name of the job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "transcriptionJobName",
          "variableType" : "String",
          "documentation" : "<p>The name of the job.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "TranscriptionJobName" : {
          "c2jName" : "TranscriptionJobName",
          "c2jShape" : "TranscriptionJobName",
          "deprecated" : false,
          "documentation" : "<p>The name of the job.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the job.</p>\n@param transcriptionJobName The name of the job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTranscriptionJobName",
          "getterDocumentation" : "/**<p>The name of the job.</p>\n@return The name of the job.*/",
          "getterMethodName" : "getTranscriptionJobName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TranscriptionJobName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TranscriptionJobName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TranscriptionJobName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the job.</p>\n@param transcriptionJobName The name of the job.*/",
          "setterMethodName" : "setTranscriptionJobName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "transcriptionJobName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the job.</p>\n@param transcriptionJobName The name of the job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "transcriptionJobName",
            "variableType" : "String",
            "documentation" : "<p>The name of the job.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "TranscriptionJobName" ],
      "shapeName" : "GetTranscriptionJobRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetTranscriptionJobRequest",
        "variableName" : "getTranscriptionJobRequest",
        "variableType" : "GetTranscriptionJobRequest",
        "documentation" : null,
        "simpleType" : "GetTranscriptionJobRequest",
        "variableSetterType" : "GetTranscriptionJobRequest"
      },
      "wrapper" : false
    },
    "GetTranscriptionJobResult" : {
      "c2jName" : "GetTranscriptionJobResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "TranscriptionJob",
        "c2jShape" : "TranscriptionJob",
        "deprecated" : false,
        "documentation" : "<p>An object that contains the results of the transcription job.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An object that contains the results of the transcription job.</p>\n@param transcriptionJob An object that contains the results of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTranscriptionJob",
        "getterDocumentation" : "/**<p>An object that contains the results of the transcription job.</p>\n@return An object that contains the results of the transcription job.*/",
        "getterMethodName" : "getTranscriptionJob",
        "getterModel" : {
          "returnType" : "TranscriptionJob",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TranscriptionJob",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TranscriptionJob",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "TranscriptionJob",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An object that contains the results of the transcription job.</p>\n@param transcriptionJob An object that contains the results of the transcription job.*/",
        "setterMethodName" : "setTranscriptionJob",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "TranscriptionJob",
          "variableName" : "transcriptionJob",
          "variableType" : "TranscriptionJob",
          "documentation" : "",
          "simpleType" : "TranscriptionJob",
          "variableSetterType" : "TranscriptionJob"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An object that contains the results of the transcription job.</p>\n@param transcriptionJob An object that contains the results of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "TranscriptionJob",
          "variableName" : "transcriptionJob",
          "variableType" : "TranscriptionJob",
          "documentation" : "<p>An object that contains the results of the transcription job.</p>",
          "simpleType" : "TranscriptionJob",
          "variableSetterType" : "TranscriptionJob"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "TranscriptionJob" : {
          "c2jName" : "TranscriptionJob",
          "c2jShape" : "TranscriptionJob",
          "deprecated" : false,
          "documentation" : "<p>An object that contains the results of the transcription job.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An object that contains the results of the transcription job.</p>\n@param transcriptionJob An object that contains the results of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTranscriptionJob",
          "getterDocumentation" : "/**<p>An object that contains the results of the transcription job.</p>\n@return An object that contains the results of the transcription job.*/",
          "getterMethodName" : "getTranscriptionJob",
          "getterModel" : {
            "returnType" : "TranscriptionJob",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TranscriptionJob",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TranscriptionJob",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "TranscriptionJob",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An object that contains the results of the transcription job.</p>\n@param transcriptionJob An object that contains the results of the transcription job.*/",
          "setterMethodName" : "setTranscriptionJob",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "TranscriptionJob",
            "variableName" : "transcriptionJob",
            "variableType" : "TranscriptionJob",
            "documentation" : "",
            "simpleType" : "TranscriptionJob",
            "variableSetterType" : "TranscriptionJob"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An object that contains the results of the transcription job.</p>\n@param transcriptionJob An object that contains the results of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "TranscriptionJob",
            "variableName" : "transcriptionJob",
            "variableType" : "TranscriptionJob",
            "documentation" : "<p>An object that contains the results of the transcription job.</p>",
            "simpleType" : "TranscriptionJob",
            "variableSetterType" : "TranscriptionJob"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetTranscriptionJobResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetTranscriptionJobResult",
        "variableName" : "getTranscriptionJobResult",
        "variableType" : "GetTranscriptionJobResult",
        "documentation" : null,
        "simpleType" : "GetTranscriptionJobResult",
        "variableSetterType" : "GetTranscriptionJobResult"
      },
      "wrapper" : false
    },
    "GetVocabularyRequest" : {
      "c2jName" : "GetVocabularyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetVocabulary",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Transcribe.GetVocabulary",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "VocabularyName",
        "c2jShape" : "VocabularyName",
        "deprecated" : false,
        "documentation" : "<p>The name of the vocabulary to return information about. The name is case-sensitive.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the vocabulary to return information about. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary to return information about. The name is case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVocabularyName",
        "getterDocumentation" : "/**<p>The name of the vocabulary to return information about. The name is case-sensitive.</p>\n@return The name of the vocabulary to return information about. The name is case-sensitive.*/",
        "getterMethodName" : "getVocabularyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VocabularyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VocabularyName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VocabularyName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the vocabulary to return information about. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary to return information about. The name is case-sensitive.*/",
        "setterMethodName" : "setVocabularyName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the vocabulary to return information about. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary to return information about. The name is case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "<p>The name of the vocabulary to return information about. The name is case-sensitive.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "VocabularyName" : {
          "c2jName" : "VocabularyName",
          "c2jShape" : "VocabularyName",
          "deprecated" : false,
          "documentation" : "<p>The name of the vocabulary to return information about. The name is case-sensitive.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the vocabulary to return information about. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary to return information about. The name is case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVocabularyName",
          "getterDocumentation" : "/**<p>The name of the vocabulary to return information about. The name is case-sensitive.</p>\n@return The name of the vocabulary to return information about. The name is case-sensitive.*/",
          "getterMethodName" : "getVocabularyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VocabularyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VocabularyName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VocabularyName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the vocabulary to return information about. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary to return information about. The name is case-sensitive.*/",
          "setterMethodName" : "setVocabularyName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the vocabulary to return information about. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary to return information about. The name is case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "<p>The name of the vocabulary to return information about. The name is case-sensitive.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "VocabularyName" ],
      "shapeName" : "GetVocabularyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetVocabularyRequest",
        "variableName" : "getVocabularyRequest",
        "variableType" : "GetVocabularyRequest",
        "documentation" : null,
        "simpleType" : "GetVocabularyRequest",
        "variableSetterType" : "GetVocabularyRequest"
      },
      "wrapper" : false
    },
    "GetVocabularyResult" : {
      "c2jName" : "GetVocabularyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "VocabularyName",
        "c2jShape" : "VocabularyName",
        "deprecated" : false,
        "documentation" : "<p>The name of the vocabulary to return.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the vocabulary to return.</p>\n@param vocabularyName The name of the vocabulary to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVocabularyName",
        "getterDocumentation" : "/**<p>The name of the vocabulary to return.</p>\n@return The name of the vocabulary to return.*/",
        "getterMethodName" : "getVocabularyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VocabularyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VocabularyName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VocabularyName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the vocabulary to return.</p>\n@param vocabularyName The name of the vocabulary to return.*/",
        "setterMethodName" : "setVocabularyName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the vocabulary to return.</p>\n@param vocabularyName The name of the vocabulary to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "<p>The name of the vocabulary to return.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LanguageCode",
        "c2jShape" : "LanguageCode",
        "deprecated" : false,
        "documentation" : "<p>The language code of the vocabulary entries.</p>",
        "enumType" : "LanguageCode",
        "fluentSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "fluentSetterMethodName" : "withLanguageCode",
        "getterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@return The language code of the vocabulary entries.\n@see LanguageCode*/",
        "getterMethodName" : "getLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@see LanguageCode*/",
        "setterMethodName" : "setLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code of the vocabulary entries.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "VocabularyState",
        "c2jShape" : "VocabularyState",
        "deprecated" : false,
        "documentation" : "<p>The processing state of the vocabulary.</p>",
        "enumType" : "VocabularyState",
        "fluentSetterDocumentation" : "/**<p>The processing state of the vocabulary.</p>\n@param vocabularyState The processing state of the vocabulary.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
        "fluentSetterMethodName" : "withVocabularyState",
        "getterDocumentation" : "/**<p>The processing state of the vocabulary.</p>\n@return The processing state of the vocabulary.\n@see VocabularyState*/",
        "getterMethodName" : "getVocabularyState",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VocabularyState",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VocabularyState",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VocabularyState",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The processing state of the vocabulary.</p>\n@param vocabularyState The processing state of the vocabulary.\n@see VocabularyState*/",
        "setterMethodName" : "setVocabularyState",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyState",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The processing state of the vocabulary.</p>\n@param vocabularyState The processing state of the vocabulary.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyState",
          "variableType" : "String",
          "documentation" : "<p>The processing state of the vocabulary.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LastModifiedTime",
        "c2jShape" : "DateTime",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the vocabulary was last modified.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the vocabulary was last modified.</p>\n@param lastModifiedTime The date and time that the vocabulary was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastModifiedTime",
        "getterDocumentation" : "/**<p>The date and time that the vocabulary was last modified.</p>\n@return The date and time that the vocabulary was last modified.*/",
        "getterMethodName" : "getLastModifiedTime",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LastModifiedTime",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LastModifiedTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "LastModifiedTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time that the vocabulary was last modified.</p>\n@param lastModifiedTime The date and time that the vocabulary was last modified.*/",
        "setterMethodName" : "setLastModifiedTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModifiedTime",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the vocabulary was last modified.</p>\n@param lastModifiedTime The date and time that the vocabulary was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModifiedTime",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time that the vocabulary was last modified.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FailureReason",
        "c2jShape" : "FailureReason",
        "deprecated" : false,
        "documentation" : "<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailureReason",
        "getterDocumentation" : "/**<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@return If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.*/",
        "getterMethodName" : "getFailureReason",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FailureReason",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FailureReason",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FailureReason",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.*/",
        "setterMethodName" : "setFailureReason",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "failureReason",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "failureReason",
          "variableType" : "String",
          "documentation" : "<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "DownloadUri",
        "c2jShape" : "Uri",
        "deprecated" : false,
        "documentation" : "<p>The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.</p>\n@param downloadUri The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDownloadUri",
        "getterDocumentation" : "/**<p>The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.</p>\n@return The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.*/",
        "getterMethodName" : "getDownloadUri",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "DownloadUri",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "DownloadUri",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DownloadUri",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.</p>\n@param downloadUri The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.*/",
        "setterMethodName" : "setDownloadUri",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "downloadUri",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.</p>\n@param downloadUri The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "downloadUri",
          "variableType" : "String",
          "documentation" : "<p>The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DownloadUri" : {
          "c2jName" : "DownloadUri",
          "c2jShape" : "Uri",
          "deprecated" : false,
          "documentation" : "<p>The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.</p>\n@param downloadUri The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDownloadUri",
          "getterDocumentation" : "/**<p>The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.</p>\n@return The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.*/",
          "getterMethodName" : "getDownloadUri",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "DownloadUri",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "DownloadUri",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DownloadUri",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.</p>\n@param downloadUri The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.*/",
          "setterMethodName" : "setDownloadUri",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "downloadUri",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.</p>\n@param downloadUri The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "downloadUri",
            "variableType" : "String",
            "documentation" : "<p>The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FailureReason" : {
          "c2jName" : "FailureReason",
          "c2jShape" : "FailureReason",
          "deprecated" : false,
          "documentation" : "<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailureReason",
          "getterDocumentation" : "/**<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@return If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.*/",
          "getterMethodName" : "getFailureReason",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FailureReason",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FailureReason",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FailureReason",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.*/",
          "setterMethodName" : "setFailureReason",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "failureReason",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "failureReason",
            "variableType" : "String",
            "documentation" : "<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LanguageCode" : {
          "c2jName" : "LanguageCode",
          "c2jShape" : "LanguageCode",
          "deprecated" : false,
          "documentation" : "<p>The language code of the vocabulary entries.</p>",
          "enumType" : "LanguageCode",
          "fluentSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "fluentSetterMethodName" : "withLanguageCode",
          "getterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@return The language code of the vocabulary entries.\n@see LanguageCode*/",
          "getterMethodName" : "getLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@see LanguageCode*/",
          "setterMethodName" : "setLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code of the vocabulary entries.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LastModifiedTime" : {
          "c2jName" : "LastModifiedTime",
          "c2jShape" : "DateTime",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the vocabulary was last modified.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the vocabulary was last modified.</p>\n@param lastModifiedTime The date and time that the vocabulary was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastModifiedTime",
          "getterDocumentation" : "/**<p>The date and time that the vocabulary was last modified.</p>\n@return The date and time that the vocabulary was last modified.*/",
          "getterMethodName" : "getLastModifiedTime",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LastModifiedTime",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LastModifiedTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "LastModifiedTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time that the vocabulary was last modified.</p>\n@param lastModifiedTime The date and time that the vocabulary was last modified.*/",
          "setterMethodName" : "setLastModifiedTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModifiedTime",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the vocabulary was last modified.</p>\n@param lastModifiedTime The date and time that the vocabulary was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModifiedTime",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time that the vocabulary was last modified.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "VocabularyName" : {
          "c2jName" : "VocabularyName",
          "c2jShape" : "VocabularyName",
          "deprecated" : false,
          "documentation" : "<p>The name of the vocabulary to return.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the vocabulary to return.</p>\n@param vocabularyName The name of the vocabulary to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVocabularyName",
          "getterDocumentation" : "/**<p>The name of the vocabulary to return.</p>\n@return The name of the vocabulary to return.*/",
          "getterMethodName" : "getVocabularyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VocabularyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VocabularyName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VocabularyName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the vocabulary to return.</p>\n@param vocabularyName The name of the vocabulary to return.*/",
          "setterMethodName" : "setVocabularyName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the vocabulary to return.</p>\n@param vocabularyName The name of the vocabulary to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "<p>The name of the vocabulary to return.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "VocabularyState" : {
          "c2jName" : "VocabularyState",
          "c2jShape" : "VocabularyState",
          "deprecated" : false,
          "documentation" : "<p>The processing state of the vocabulary.</p>",
          "enumType" : "VocabularyState",
          "fluentSetterDocumentation" : "/**<p>The processing state of the vocabulary.</p>\n@param vocabularyState The processing state of the vocabulary.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
          "fluentSetterMethodName" : "withVocabularyState",
          "getterDocumentation" : "/**<p>The processing state of the vocabulary.</p>\n@return The processing state of the vocabulary.\n@see VocabularyState*/",
          "getterMethodName" : "getVocabularyState",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VocabularyState",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VocabularyState",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VocabularyState",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The processing state of the vocabulary.</p>\n@param vocabularyState The processing state of the vocabulary.\n@see VocabularyState*/",
          "setterMethodName" : "setVocabularyState",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyState",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The processing state of the vocabulary.</p>\n@param vocabularyState The processing state of the vocabulary.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyState",
            "variableType" : "String",
            "documentation" : "<p>The processing state of the vocabulary.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetVocabularyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetVocabularyResult",
        "variableName" : "getVocabularyResult",
        "variableType" : "GetVocabularyResult",
        "documentation" : null,
        "simpleType" : "GetVocabularyResult",
        "variableSetterType" : "GetVocabularyResult"
      },
      "wrapper" : false
    },
    "InternalFailureException" : {
      "c2jName" : "InternalFailureException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>There was an internal error. Check the error message and try your request again.</p>",
      "enums" : null,
      "errorCode" : "InternalFailureException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InternalFailureException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InternalFailureException",
        "variableName" : "internalFailureException",
        "variableType" : "InternalFailureException",
        "documentation" : null,
        "simpleType" : "InternalFailureException",
        "variableSetterType" : "InternalFailureException"
      },
      "wrapper" : false
    },
    "LanguageCode" : {
      "c2jName" : "LanguageCode",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "EnUS",
        "value" : "en-US"
      }, {
        "name" : "EsUS",
        "value" : "es-US"
      }, {
        "name" : "EnAU",
        "value" : "en-AU"
      }, {
        "name" : "FrCA",
        "value" : "fr-CA"
      }, {
        "name" : "EnGB",
        "value" : "en-GB"
      }, {
        "name" : "DeDE",
        "value" : "de-DE"
      }, {
        "name" : "PtBR",
        "value" : "pt-BR"
      }, {
        "name" : "FrFR",
        "value" : "fr-FR"
      }, {
        "name" : "ItIT",
        "value" : "it-IT"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LanguageCode",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LanguageCode",
        "variableName" : "languageCode",
        "variableType" : "LanguageCode",
        "documentation" : null,
        "simpleType" : "LanguageCode",
        "variableSetterType" : "LanguageCode"
      },
      "wrapper" : false
    },
    "LimitExceededException" : {
      "c2jName" : "LimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Either you have sent too many requests or your input file is too long. Wait before you resend your request, or use a smaller file and resend the request.</p>",
      "enums" : null,
      "errorCode" : "LimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LimitExceededException",
        "variableName" : "limitExceededException",
        "variableType" : "LimitExceededException",
        "documentation" : null,
        "simpleType" : "LimitExceededException",
        "variableSetterType" : "LimitExceededException"
      },
      "wrapper" : false
    },
    "ListTranscriptionJobsRequest" : {
      "c2jName" : "ListTranscriptionJobsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListTranscriptionJobs",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Transcribe.ListTranscriptionJobs",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Status",
        "c2jShape" : "TranscriptionJobStatus",
        "deprecated" : false,
        "documentation" : "<p>When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date. </p>",
        "enumType" : "TranscriptionJobStatus",
        "fluentSetterDocumentation" : "/**<p>When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date. </p>\n@param status When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date. </p>\n@return When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date.\n@see TranscriptionJobStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date. </p>\n@param status When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date.\n@see TranscriptionJobStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date. </p>\n@param status When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "JobNameContains",
        "c2jShape" : "TranscriptionJobName",
        "deprecated" : false,
        "documentation" : "<p>When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.</p>\n@param jobNameContains When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withJobNameContains",
        "getterDocumentation" : "/**<p>When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.</p>\n@return When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.*/",
        "getterMethodName" : "getJobNameContains",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "JobNameContains",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "JobNameContains",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "JobNameContains",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.</p>\n@param jobNameContains When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.*/",
        "setterMethodName" : "setJobNameContains",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "jobNameContains",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.</p>\n@param jobNameContains When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "jobNameContains",
          "variableType" : "String",
          "documentation" : "<p>When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>\n@param nextToken If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>\n@return If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>\n@param nextToken If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>\n@param nextToken If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>\n@param maxResults The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>\n@return The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>\n@param maxResults The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>\n@param maxResults The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "JobNameContains" : {
          "c2jName" : "JobNameContains",
          "c2jShape" : "TranscriptionJobName",
          "deprecated" : false,
          "documentation" : "<p>When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.</p>\n@param jobNameContains When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withJobNameContains",
          "getterDocumentation" : "/**<p>When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.</p>\n@return When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.*/",
          "getterMethodName" : "getJobNameContains",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "JobNameContains",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "JobNameContains",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "JobNameContains",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.</p>\n@param jobNameContains When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.*/",
          "setterMethodName" : "setJobNameContains",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "jobNameContains",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.</p>\n@param jobNameContains When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "jobNameContains",
            "variableType" : "String",
            "documentation" : "<p>When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>\n@param maxResults The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>\n@return The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>\n@param maxResults The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>\n@param maxResults The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>\n@param nextToken If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>\n@return If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>\n@param nextToken If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>\n@param nextToken If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "Status",
          "c2jShape" : "TranscriptionJobStatus",
          "deprecated" : false,
          "documentation" : "<p>When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date. </p>",
          "enumType" : "TranscriptionJobStatus",
          "fluentSetterDocumentation" : "/**<p>When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date. </p>\n@param status When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date. </p>\n@return When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date.\n@see TranscriptionJobStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date. </p>\n@param status When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date.\n@see TranscriptionJobStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date. </p>\n@param status When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListTranscriptionJobsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTranscriptionJobsRequest",
        "variableName" : "listTranscriptionJobsRequest",
        "variableType" : "ListTranscriptionJobsRequest",
        "documentation" : null,
        "simpleType" : "ListTranscriptionJobsRequest",
        "variableSetterType" : "ListTranscriptionJobsRequest"
      },
      "wrapper" : false
    },
    "ListTranscriptionJobsResult" : {
      "c2jName" : "ListTranscriptionJobsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Status",
        "c2jShape" : "TranscriptionJobStatus",
        "deprecated" : false,
        "documentation" : "<p>The requested status of the jobs returned.</p>",
        "enumType" : "TranscriptionJobStatus",
        "fluentSetterDocumentation" : "/**<p>The requested status of the jobs returned.</p>\n@param status The requested status of the jobs returned.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>The requested status of the jobs returned.</p>\n@return The requested status of the jobs returned.\n@see TranscriptionJobStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The requested status of the jobs returned.</p>\n@param status The requested status of the jobs returned.\n@see TranscriptionJobStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The requested status of the jobs returned.</p>\n@param status The requested status of the jobs returned.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>The requested status of the jobs returned.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.</p>\n@param nextToken The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.</p>\n@return The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.</p>\n@param nextToken The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.</p>\n@param nextToken The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TranscriptionJobSummaries",
        "c2jShape" : "TranscriptionJobSummaries",
        "deprecated" : false,
        "documentation" : "<p>A list of objects containing summary information for a transcription job.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of objects containing summary information for a transcription job.</p>\n@param transcriptionJobSummaries A list of objects containing summary information for a transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTranscriptionJobSummaries",
        "getterDocumentation" : "/**<p>A list of objects containing summary information for a transcription job.</p>\n@return A list of objects containing summary information for a transcription job.*/",
        "getterMethodName" : "getTranscriptionJobSummaries",
        "getterModel" : {
          "returnType" : "java.util.List<TranscriptionJobSummary>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TranscriptionJobSummaries",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TranscriptionJobSummaries",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "TranscriptionJobSummary",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "TranscriptionJobSummary",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TranscriptionJobSummary",
              "variableName" : "member",
              "variableType" : "TranscriptionJobSummary",
              "documentation" : "",
              "simpleType" : "TranscriptionJobSummary",
              "variableSetterType" : "TranscriptionJobSummary"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TranscriptionJobSummary",
              "variableName" : "member",
              "variableType" : "TranscriptionJobSummary",
              "documentation" : "",
              "simpleType" : "TranscriptionJobSummary",
              "variableSetterType" : "TranscriptionJobSummary"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "TranscriptionJobSummary",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "TranscriptionJobSummary",
          "templateImplType" : "java.util.ArrayList<TranscriptionJobSummary>",
          "templateType" : "java.util.List<TranscriptionJobSummary>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "TranscriptionJobSummaries",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of objects containing summary information for a transcription job.</p>\n@param transcriptionJobSummaries A list of objects containing summary information for a transcription job.*/",
        "setterMethodName" : "setTranscriptionJobSummaries",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TranscriptionJobSummary>",
          "variableName" : "transcriptionJobSummaries",
          "variableType" : "java.util.List<TranscriptionJobSummary>",
          "documentation" : "",
          "simpleType" : "List<TranscriptionJobSummary>",
          "variableSetterType" : "java.util.Collection<TranscriptionJobSummary>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of objects containing summary information for a transcription job.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTranscriptionJobSummaries(java.util.Collection)} or {@link #withTranscriptionJobSummaries(java.util.Collection)} if you want to override the existing values.</p>\n@param transcriptionJobSummaries A list of objects containing summary information for a transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TranscriptionJobSummary>",
          "variableName" : "transcriptionJobSummaries",
          "variableType" : "java.util.List<TranscriptionJobSummary>",
          "documentation" : "<p>A list of objects containing summary information for a transcription job.</p>",
          "simpleType" : "List<TranscriptionJobSummary>",
          "variableSetterType" : "java.util.Collection<TranscriptionJobSummary>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.</p>\n@param nextToken The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.</p>\n@return The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.</p>\n@param nextToken The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.</p>\n@param nextToken The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "Status",
          "c2jShape" : "TranscriptionJobStatus",
          "deprecated" : false,
          "documentation" : "<p>The requested status of the jobs returned.</p>",
          "enumType" : "TranscriptionJobStatus",
          "fluentSetterDocumentation" : "/**<p>The requested status of the jobs returned.</p>\n@param status The requested status of the jobs returned.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>The requested status of the jobs returned.</p>\n@return The requested status of the jobs returned.\n@see TranscriptionJobStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The requested status of the jobs returned.</p>\n@param status The requested status of the jobs returned.\n@see TranscriptionJobStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The requested status of the jobs returned.</p>\n@param status The requested status of the jobs returned.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>The requested status of the jobs returned.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TranscriptionJobSummaries" : {
          "c2jName" : "TranscriptionJobSummaries",
          "c2jShape" : "TranscriptionJobSummaries",
          "deprecated" : false,
          "documentation" : "<p>A list of objects containing summary information for a transcription job.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of objects containing summary information for a transcription job.</p>\n@param transcriptionJobSummaries A list of objects containing summary information for a transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTranscriptionJobSummaries",
          "getterDocumentation" : "/**<p>A list of objects containing summary information for a transcription job.</p>\n@return A list of objects containing summary information for a transcription job.*/",
          "getterMethodName" : "getTranscriptionJobSummaries",
          "getterModel" : {
            "returnType" : "java.util.List<TranscriptionJobSummary>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TranscriptionJobSummaries",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TranscriptionJobSummaries",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "TranscriptionJobSummary",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "TranscriptionJobSummary",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TranscriptionJobSummary",
                "variableName" : "member",
                "variableType" : "TranscriptionJobSummary",
                "documentation" : "",
                "simpleType" : "TranscriptionJobSummary",
                "variableSetterType" : "TranscriptionJobSummary"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TranscriptionJobSummary",
                "variableName" : "member",
                "variableType" : "TranscriptionJobSummary",
                "documentation" : "",
                "simpleType" : "TranscriptionJobSummary",
                "variableSetterType" : "TranscriptionJobSummary"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "TranscriptionJobSummary",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "TranscriptionJobSummary",
            "templateImplType" : "java.util.ArrayList<TranscriptionJobSummary>",
            "templateType" : "java.util.List<TranscriptionJobSummary>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "TranscriptionJobSummaries",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of objects containing summary information for a transcription job.</p>\n@param transcriptionJobSummaries A list of objects containing summary information for a transcription job.*/",
          "setterMethodName" : "setTranscriptionJobSummaries",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TranscriptionJobSummary>",
            "variableName" : "transcriptionJobSummaries",
            "variableType" : "java.util.List<TranscriptionJobSummary>",
            "documentation" : "",
            "simpleType" : "List<TranscriptionJobSummary>",
            "variableSetterType" : "java.util.Collection<TranscriptionJobSummary>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of objects containing summary information for a transcription job.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTranscriptionJobSummaries(java.util.Collection)} or {@link #withTranscriptionJobSummaries(java.util.Collection)} if you want to override the existing values.</p>\n@param transcriptionJobSummaries A list of objects containing summary information for a transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TranscriptionJobSummary>",
            "variableName" : "transcriptionJobSummaries",
            "variableType" : "java.util.List<TranscriptionJobSummary>",
            "documentation" : "<p>A list of objects containing summary information for a transcription job.</p>",
            "simpleType" : "List<TranscriptionJobSummary>",
            "variableSetterType" : "java.util.Collection<TranscriptionJobSummary>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListTranscriptionJobsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTranscriptionJobsResult",
        "variableName" : "listTranscriptionJobsResult",
        "variableType" : "ListTranscriptionJobsResult",
        "documentation" : null,
        "simpleType" : "ListTranscriptionJobsResult",
        "variableSetterType" : "ListTranscriptionJobsResult"
      },
      "wrapper" : false
    },
    "ListVocabulariesRequest" : {
      "c2jName" : "ListVocabulariesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListVocabularies",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Transcribe.ListVocabularies",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>\n@param nextToken If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>\n@return If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>\n@param nextToken If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>\n@param nextToken If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>\n@param maxResults The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>\n@return The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>\n@param maxResults The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>\n@param maxResults The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "StateEquals",
        "c2jShape" : "VocabularyState",
        "deprecated" : false,
        "documentation" : "<p>When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.</p>",
        "enumType" : "VocabularyState",
        "fluentSetterDocumentation" : "/**<p>When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.</p>\n@param stateEquals When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
        "fluentSetterMethodName" : "withStateEquals",
        "getterDocumentation" : "/**<p>When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.</p>\n@return When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.\n@see VocabularyState*/",
        "getterMethodName" : "getStateEquals",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "StateEquals",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "StateEquals",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "StateEquals",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.</p>\n@param stateEquals When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.\n@see VocabularyState*/",
        "setterMethodName" : "setStateEquals",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "stateEquals",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.</p>\n@param stateEquals When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "stateEquals",
          "variableType" : "String",
          "documentation" : "<p>When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NameContains",
        "c2jShape" : "VocabularyName",
        "deprecated" : false,
        "documentation" : "<p>When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.</p>\n@param nameContains When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNameContains",
        "getterDocumentation" : "/**<p>When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.</p>\n@return When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.*/",
        "getterMethodName" : "getNameContains",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NameContains",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NameContains",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NameContains",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.</p>\n@param nameContains When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.*/",
        "setterMethodName" : "setNameContains",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nameContains",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.</p>\n@param nameContains When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nameContains",
          "variableType" : "String",
          "documentation" : "<p>When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>\n@param maxResults The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>\n@return The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>\n@param maxResults The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>\n@param maxResults The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NameContains" : {
          "c2jName" : "NameContains",
          "c2jShape" : "VocabularyName",
          "deprecated" : false,
          "documentation" : "<p>When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.</p>\n@param nameContains When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNameContains",
          "getterDocumentation" : "/**<p>When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.</p>\n@return When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.*/",
          "getterMethodName" : "getNameContains",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NameContains",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NameContains",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NameContains",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.</p>\n@param nameContains When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.*/",
          "setterMethodName" : "setNameContains",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nameContains",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.</p>\n@param nameContains When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nameContains",
            "variableType" : "String",
            "documentation" : "<p>When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>\n@param nextToken If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>\n@return If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>\n@param nextToken If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>\n@param nextToken If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StateEquals" : {
          "c2jName" : "StateEquals",
          "c2jShape" : "VocabularyState",
          "deprecated" : false,
          "documentation" : "<p>When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.</p>",
          "enumType" : "VocabularyState",
          "fluentSetterDocumentation" : "/**<p>When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.</p>\n@param stateEquals When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
          "fluentSetterMethodName" : "withStateEquals",
          "getterDocumentation" : "/**<p>When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.</p>\n@return When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.\n@see VocabularyState*/",
          "getterMethodName" : "getStateEquals",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "StateEquals",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "StateEquals",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "StateEquals",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.</p>\n@param stateEquals When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.\n@see VocabularyState*/",
          "setterMethodName" : "setStateEquals",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "stateEquals",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.</p>\n@param stateEquals When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "stateEquals",
            "variableType" : "String",
            "documentation" : "<p>When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListVocabulariesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListVocabulariesRequest",
        "variableName" : "listVocabulariesRequest",
        "variableType" : "ListVocabulariesRequest",
        "documentation" : null,
        "simpleType" : "ListVocabulariesRequest",
        "variableSetterType" : "ListVocabulariesRequest"
      },
      "wrapper" : false
    },
    "ListVocabulariesResult" : {
      "c2jName" : "ListVocabulariesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Status",
        "c2jShape" : "TranscriptionJobStatus",
        "deprecated" : false,
        "documentation" : "<p>The requested vocabulary state.</p>",
        "enumType" : "TranscriptionJobStatus",
        "fluentSetterDocumentation" : "/**<p>The requested vocabulary state.</p>\n@param status The requested vocabulary state.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>The requested vocabulary state.</p>\n@return The requested vocabulary state.\n@see TranscriptionJobStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The requested vocabulary state.</p>\n@param status The requested vocabulary state.\n@see TranscriptionJobStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The requested vocabulary state.</p>\n@param status The requested vocabulary state.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>The requested vocabulary state.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.</p>\n@param nextToken The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.</p>\n@return The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.</p>\n@param nextToken The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.</p>\n@param nextToken The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Vocabularies",
        "c2jShape" : "Vocabularies",
        "deprecated" : false,
        "documentation" : "<p>A list of objects that describe the vocabularies that match the search criteria in the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of objects that describe the vocabularies that match the search criteria in the request.</p>\n@param vocabularies A list of objects that describe the vocabularies that match the search criteria in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVocabularies",
        "getterDocumentation" : "/**<p>A list of objects that describe the vocabularies that match the search criteria in the request.</p>\n@return A list of objects that describe the vocabularies that match the search criteria in the request.*/",
        "getterMethodName" : "getVocabularies",
        "getterModel" : {
          "returnType" : "java.util.List<VocabularyInfo>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Vocabularies",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Vocabularies",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "VocabularyInfo",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "VocabularyInfo",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "VocabularyInfo",
              "variableName" : "member",
              "variableType" : "VocabularyInfo",
              "documentation" : "",
              "simpleType" : "VocabularyInfo",
              "variableSetterType" : "VocabularyInfo"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "VocabularyInfo",
              "variableName" : "member",
              "variableType" : "VocabularyInfo",
              "documentation" : "",
              "simpleType" : "VocabularyInfo",
              "variableSetterType" : "VocabularyInfo"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "VocabularyInfo",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "VocabularyInfo",
          "templateImplType" : "java.util.ArrayList<VocabularyInfo>",
          "templateType" : "java.util.List<VocabularyInfo>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Vocabularies",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of objects that describe the vocabularies that match the search criteria in the request.</p>\n@param vocabularies A list of objects that describe the vocabularies that match the search criteria in the request.*/",
        "setterMethodName" : "setVocabularies",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<VocabularyInfo>",
          "variableName" : "vocabularies",
          "variableType" : "java.util.List<VocabularyInfo>",
          "documentation" : "",
          "simpleType" : "List<VocabularyInfo>",
          "variableSetterType" : "java.util.Collection<VocabularyInfo>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of objects that describe the vocabularies that match the search criteria in the request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setVocabularies(java.util.Collection)} or {@link #withVocabularies(java.util.Collection)} if you want to override the existing values.</p>\n@param vocabularies A list of objects that describe the vocabularies that match the search criteria in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<VocabularyInfo>",
          "variableName" : "vocabularies",
          "variableType" : "java.util.List<VocabularyInfo>",
          "documentation" : "<p>A list of objects that describe the vocabularies that match the search criteria in the request.</p>",
          "simpleType" : "List<VocabularyInfo>",
          "variableSetterType" : "java.util.Collection<VocabularyInfo>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.</p>\n@param nextToken The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.</p>\n@return The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.</p>\n@param nextToken The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.</p>\n@param nextToken The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "Status",
          "c2jShape" : "TranscriptionJobStatus",
          "deprecated" : false,
          "documentation" : "<p>The requested vocabulary state.</p>",
          "enumType" : "TranscriptionJobStatus",
          "fluentSetterDocumentation" : "/**<p>The requested vocabulary state.</p>\n@param status The requested vocabulary state.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>The requested vocabulary state.</p>\n@return The requested vocabulary state.\n@see TranscriptionJobStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The requested vocabulary state.</p>\n@param status The requested vocabulary state.\n@see TranscriptionJobStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The requested vocabulary state.</p>\n@param status The requested vocabulary state.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>The requested vocabulary state.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Vocabularies" : {
          "c2jName" : "Vocabularies",
          "c2jShape" : "Vocabularies",
          "deprecated" : false,
          "documentation" : "<p>A list of objects that describe the vocabularies that match the search criteria in the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of objects that describe the vocabularies that match the search criteria in the request.</p>\n@param vocabularies A list of objects that describe the vocabularies that match the search criteria in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVocabularies",
          "getterDocumentation" : "/**<p>A list of objects that describe the vocabularies that match the search criteria in the request.</p>\n@return A list of objects that describe the vocabularies that match the search criteria in the request.*/",
          "getterMethodName" : "getVocabularies",
          "getterModel" : {
            "returnType" : "java.util.List<VocabularyInfo>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Vocabularies",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Vocabularies",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "VocabularyInfo",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "VocabularyInfo",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "VocabularyInfo",
                "variableName" : "member",
                "variableType" : "VocabularyInfo",
                "documentation" : "",
                "simpleType" : "VocabularyInfo",
                "variableSetterType" : "VocabularyInfo"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "VocabularyInfo",
                "variableName" : "member",
                "variableType" : "VocabularyInfo",
                "documentation" : "",
                "simpleType" : "VocabularyInfo",
                "variableSetterType" : "VocabularyInfo"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "VocabularyInfo",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "VocabularyInfo",
            "templateImplType" : "java.util.ArrayList<VocabularyInfo>",
            "templateType" : "java.util.List<VocabularyInfo>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Vocabularies",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of objects that describe the vocabularies that match the search criteria in the request.</p>\n@param vocabularies A list of objects that describe the vocabularies that match the search criteria in the request.*/",
          "setterMethodName" : "setVocabularies",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<VocabularyInfo>",
            "variableName" : "vocabularies",
            "variableType" : "java.util.List<VocabularyInfo>",
            "documentation" : "",
            "simpleType" : "List<VocabularyInfo>",
            "variableSetterType" : "java.util.Collection<VocabularyInfo>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of objects that describe the vocabularies that match the search criteria in the request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setVocabularies(java.util.Collection)} or {@link #withVocabularies(java.util.Collection)} if you want to override the existing values.</p>\n@param vocabularies A list of objects that describe the vocabularies that match the search criteria in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<VocabularyInfo>",
            "variableName" : "vocabularies",
            "variableType" : "java.util.List<VocabularyInfo>",
            "documentation" : "<p>A list of objects that describe the vocabularies that match the search criteria in the request.</p>",
            "simpleType" : "List<VocabularyInfo>",
            "variableSetterType" : "java.util.Collection<VocabularyInfo>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListVocabulariesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListVocabulariesResult",
        "variableName" : "listVocabulariesResult",
        "variableType" : "ListVocabulariesResult",
        "documentation" : null,
        "simpleType" : "ListVocabulariesResult",
        "variableSetterType" : "ListVocabulariesResult"
      },
      "wrapper" : false
    },
    "Media" : {
      "c2jName" : "Media",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes the input media file in a transcription request.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "MediaFileUri",
        "c2jShape" : "Uri",
        "deprecated" : false,
        "documentation" : "<p>The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n@param mediaFileUri The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMediaFileUri",
        "getterDocumentation" : "/**<p>The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n@return The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.*/",
        "getterMethodName" : "getMediaFileUri",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MediaFileUri",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MediaFileUri",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "MediaFileUri",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n@param mediaFileUri The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.*/",
        "setterMethodName" : "setMediaFileUri",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "mediaFileUri",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n@param mediaFileUri The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "mediaFileUri",
          "variableType" : "String",
          "documentation" : "<p>The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MediaFileUri" : {
          "c2jName" : "MediaFileUri",
          "c2jShape" : "Uri",
          "deprecated" : false,
          "documentation" : "<p>The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n@param mediaFileUri The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMediaFileUri",
          "getterDocumentation" : "/**<p>The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n@return The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.*/",
          "getterMethodName" : "getMediaFileUri",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MediaFileUri",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MediaFileUri",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "MediaFileUri",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n@param mediaFileUri The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.*/",
          "setterMethodName" : "setMediaFileUri",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "mediaFileUri",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n@param mediaFileUri The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "mediaFileUri",
            "variableType" : "String",
            "documentation" : "<p>The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Media",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Media",
        "variableName" : "media",
        "variableType" : "Media",
        "documentation" : null,
        "simpleType" : "Media",
        "variableSetterType" : "Media"
      },
      "wrapper" : false
    },
    "MediaFormat" : {
      "c2jName" : "MediaFormat",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "Mp3",
        "value" : "mp3"
      }, {
        "name" : "Mp4",
        "value" : "mp4"
      }, {
        "name" : "Wav",
        "value" : "wav"
      }, {
        "name" : "Flac",
        "value" : "flac"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MediaFormat",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "MediaFormat",
        "variableName" : "mediaFormat",
        "variableType" : "MediaFormat",
        "documentation" : null,
        "simpleType" : "MediaFormat",
        "variableSetterType" : "MediaFormat"
      },
      "wrapper" : false
    },
    "NotFoundException" : {
      "c2jName" : "NotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>We can't find the requested resource. Check the name and try your request again.</p>",
      "enums" : null,
      "errorCode" : "NotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "NotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "NotFoundException",
        "variableName" : "notFoundException",
        "variableType" : "NotFoundException",
        "documentation" : null,
        "simpleType" : "NotFoundException",
        "variableSetterType" : "NotFoundException"
      },
      "wrapper" : false
    },
    "OutputLocationType" : {
      "c2jName" : "OutputLocationType",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "CUSTOMER_BUCKET",
        "value" : "CUSTOMER_BUCKET"
      }, {
        "name" : "SERVICE_BUCKET",
        "value" : "SERVICE_BUCKET"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "OutputLocationType",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "OutputLocationType",
        "variableName" : "outputLocationType",
        "variableType" : "OutputLocationType",
        "documentation" : null,
        "simpleType" : "OutputLocationType",
        "variableSetterType" : "OutputLocationType"
      },
      "wrapper" : false
    },
    "Settings" : {
      "c2jName" : "Settings",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides optional settings for the <code>StartTranscriptionJob</code> operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "VocabularyName",
        "c2jShape" : "VocabularyName",
        "deprecated" : false,
        "documentation" : "<p>The name of a vocabulary to use when processing the transcription job.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of a vocabulary to use when processing the transcription job.</p>\n@param vocabularyName The name of a vocabulary to use when processing the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVocabularyName",
        "getterDocumentation" : "/**<p>The name of a vocabulary to use when processing the transcription job.</p>\n@return The name of a vocabulary to use when processing the transcription job.*/",
        "getterMethodName" : "getVocabularyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VocabularyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VocabularyName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VocabularyName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of a vocabulary to use when processing the transcription job.</p>\n@param vocabularyName The name of a vocabulary to use when processing the transcription job.*/",
        "setterMethodName" : "setVocabularyName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of a vocabulary to use when processing the transcription job.</p>\n@param vocabularyName The name of a vocabulary to use when processing the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "<p>The name of a vocabulary to use when processing the transcription job.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ShowSpeakerLabels",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\n@param showSpeakerLabels Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withShowSpeakerLabels",
        "getterDocumentation" : "/**<p>Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\n@return Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.*/",
        "getterMethodName" : "getShowSpeakerLabels",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ShowSpeakerLabels",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ShowSpeakerLabels",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "ShowSpeakerLabels",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\n@param showSpeakerLabels Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.*/",
        "setterMethodName" : "setShowSpeakerLabels",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "showSpeakerLabels",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\n@param showSpeakerLabels Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "showSpeakerLabels",
          "variableType" : "Boolean",
          "documentation" : "<p>Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxSpeakerLabels",
        "c2jShape" : "MaxSpeakers",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.</p>\n@param maxSpeakerLabels The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxSpeakerLabels",
        "getterDocumentation" : "/**<p>The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.</p>\n@return The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.*/",
        "getterMethodName" : "getMaxSpeakerLabels",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxSpeakerLabels",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxSpeakerLabels",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxSpeakerLabels",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.</p>\n@param maxSpeakerLabels The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.*/",
        "setterMethodName" : "setMaxSpeakerLabels",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxSpeakerLabels",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.</p>\n@param maxSpeakerLabels The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxSpeakerLabels",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ChannelIdentification",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\n@param channelIdentification Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withChannelIdentification",
        "getterDocumentation" : "/**<p>Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\n@return Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.*/",
        "getterMethodName" : "getChannelIdentification",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ChannelIdentification",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ChannelIdentification",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "ChannelIdentification",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\n@param channelIdentification Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.*/",
        "setterMethodName" : "setChannelIdentification",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "channelIdentification",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\n@param channelIdentification Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "channelIdentification",
          "variableType" : "Boolean",
          "documentation" : "<p>Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ChannelIdentification" : {
          "c2jName" : "ChannelIdentification",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\n@param channelIdentification Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withChannelIdentification",
          "getterDocumentation" : "/**<p>Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\n@return Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.*/",
          "getterMethodName" : "getChannelIdentification",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ChannelIdentification",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ChannelIdentification",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "ChannelIdentification",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\n@param channelIdentification Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.*/",
          "setterMethodName" : "setChannelIdentification",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "channelIdentification",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\n@param channelIdentification Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "channelIdentification",
            "variableType" : "Boolean",
            "documentation" : "<p>Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxSpeakerLabels" : {
          "c2jName" : "MaxSpeakerLabels",
          "c2jShape" : "MaxSpeakers",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.</p>\n@param maxSpeakerLabels The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxSpeakerLabels",
          "getterDocumentation" : "/**<p>The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.</p>\n@return The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.*/",
          "getterMethodName" : "getMaxSpeakerLabels",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxSpeakerLabels",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxSpeakerLabels",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxSpeakerLabels",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.</p>\n@param maxSpeakerLabels The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.*/",
          "setterMethodName" : "setMaxSpeakerLabels",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxSpeakerLabels",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.</p>\n@param maxSpeakerLabels The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxSpeakerLabels",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "ShowSpeakerLabels" : {
          "c2jName" : "ShowSpeakerLabels",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\n@param showSpeakerLabels Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withShowSpeakerLabels",
          "getterDocumentation" : "/**<p>Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\n@return Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.*/",
          "getterMethodName" : "getShowSpeakerLabels",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ShowSpeakerLabels",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ShowSpeakerLabels",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "ShowSpeakerLabels",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\n@param showSpeakerLabels Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.*/",
          "setterMethodName" : "setShowSpeakerLabels",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "showSpeakerLabels",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>\n@param showSpeakerLabels Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "showSpeakerLabels",
            "variableType" : "Boolean",
            "documentation" : "<p>Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can't set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "VocabularyName" : {
          "c2jName" : "VocabularyName",
          "c2jShape" : "VocabularyName",
          "deprecated" : false,
          "documentation" : "<p>The name of a vocabulary to use when processing the transcription job.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of a vocabulary to use when processing the transcription job.</p>\n@param vocabularyName The name of a vocabulary to use when processing the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVocabularyName",
          "getterDocumentation" : "/**<p>The name of a vocabulary to use when processing the transcription job.</p>\n@return The name of a vocabulary to use when processing the transcription job.*/",
          "getterMethodName" : "getVocabularyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VocabularyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VocabularyName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VocabularyName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of a vocabulary to use when processing the transcription job.</p>\n@param vocabularyName The name of a vocabulary to use when processing the transcription job.*/",
          "setterMethodName" : "setVocabularyName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of a vocabulary to use when processing the transcription job.</p>\n@param vocabularyName The name of a vocabulary to use when processing the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "<p>The name of a vocabulary to use when processing the transcription job.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Settings",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Settings",
        "variableName" : "settings",
        "variableType" : "Settings",
        "documentation" : null,
        "simpleType" : "Settings",
        "variableSetterType" : "Settings"
      },
      "wrapper" : false
    },
    "StartTranscriptionJobRequest" : {
      "c2jName" : "StartTranscriptionJobRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "StartTranscriptionJob",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Transcribe.StartTranscriptionJob",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "TranscriptionJobName",
        "c2jShape" : "TranscriptionJobName",
        "deprecated" : false,
        "documentation" : "<p>The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.</p>\n@param transcriptionJobName The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTranscriptionJobName",
        "getterDocumentation" : "/**<p>The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.</p>\n@return The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.*/",
        "getterMethodName" : "getTranscriptionJobName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TranscriptionJobName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TranscriptionJobName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TranscriptionJobName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.</p>\n@param transcriptionJobName The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.*/",
        "setterMethodName" : "setTranscriptionJobName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "transcriptionJobName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.</p>\n@param transcriptionJobName The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "transcriptionJobName",
          "variableType" : "String",
          "documentation" : "<p>The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LanguageCode",
        "c2jShape" : "LanguageCode",
        "deprecated" : false,
        "documentation" : "<p>The language code for the language used in the input media file.</p>",
        "enumType" : "LanguageCode",
        "fluentSetterDocumentation" : "/**<p>The language code for the language used in the input media file.</p>\n@param languageCode The language code for the language used in the input media file.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "fluentSetterMethodName" : "withLanguageCode",
        "getterDocumentation" : "/**<p>The language code for the language used in the input media file.</p>\n@return The language code for the language used in the input media file.\n@see LanguageCode*/",
        "getterMethodName" : "getLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code for the language used in the input media file.</p>\n@param languageCode The language code for the language used in the input media file.\n@see LanguageCode*/",
        "setterMethodName" : "setLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code for the language used in the input media file.</p>\n@param languageCode The language code for the language used in the input media file.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code for the language used in the input media file.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MediaSampleRateHertz",
        "c2jShape" : "MediaSampleRateHertz",
        "deprecated" : false,
        "documentation" : "<p>The sample rate, in Hertz, of the audio track in the input media file. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The sample rate, in Hertz, of the audio track in the input media file. </p>\n@param mediaSampleRateHertz The sample rate, in Hertz, of the audio track in the input media file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMediaSampleRateHertz",
        "getterDocumentation" : "/**<p>The sample rate, in Hertz, of the audio track in the input media file. </p>\n@return The sample rate, in Hertz, of the audio track in the input media file.*/",
        "getterMethodName" : "getMediaSampleRateHertz",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MediaSampleRateHertz",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MediaSampleRateHertz",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MediaSampleRateHertz",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The sample rate, in Hertz, of the audio track in the input media file. </p>\n@param mediaSampleRateHertz The sample rate, in Hertz, of the audio track in the input media file.*/",
        "setterMethodName" : "setMediaSampleRateHertz",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "mediaSampleRateHertz",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The sample rate, in Hertz, of the audio track in the input media file. </p>\n@param mediaSampleRateHertz The sample rate, in Hertz, of the audio track in the input media file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "mediaSampleRateHertz",
          "variableType" : "Integer",
          "documentation" : "<p>The sample rate, in Hertz, of the audio track in the input media file. </p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MediaFormat",
        "c2jShape" : "MediaFormat",
        "deprecated" : false,
        "documentation" : "<p>The format of the input media file.</p>",
        "enumType" : "MediaFormat",
        "fluentSetterDocumentation" : "/**<p>The format of the input media file.</p>\n@param mediaFormat The format of the input media file.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MediaFormat*/",
        "fluentSetterMethodName" : "withMediaFormat",
        "getterDocumentation" : "/**<p>The format of the input media file.</p>\n@return The format of the input media file.\n@see MediaFormat*/",
        "getterMethodName" : "getMediaFormat",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MediaFormat",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MediaFormat",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "MediaFormat",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The format of the input media file.</p>\n@param mediaFormat The format of the input media file.\n@see MediaFormat*/",
        "setterMethodName" : "setMediaFormat",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "mediaFormat",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The format of the input media file.</p>\n@param mediaFormat The format of the input media file.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MediaFormat*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "mediaFormat",
          "variableType" : "String",
          "documentation" : "<p>The format of the input media file.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Media",
        "c2jShape" : "Media",
        "deprecated" : false,
        "documentation" : "<p>An object that describes the input media for a transcription job.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An object that describes the input media for a transcription job.</p>\n@param media An object that describes the input media for a transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMedia",
        "getterDocumentation" : "/**<p>An object that describes the input media for a transcription job.</p>\n@return An object that describes the input media for a transcription job.*/",
        "getterMethodName" : "getMedia",
        "getterModel" : {
          "returnType" : "Media",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Media",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Media",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Media",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An object that describes the input media for a transcription job.</p>\n@param media An object that describes the input media for a transcription job.*/",
        "setterMethodName" : "setMedia",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Media",
          "variableName" : "media",
          "variableType" : "Media",
          "documentation" : "",
          "simpleType" : "Media",
          "variableSetterType" : "Media"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An object that describes the input media for a transcription job.</p>\n@param media An object that describes the input media for a transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Media",
          "variableName" : "media",
          "variableType" : "Media",
          "documentation" : "<p>An object that describes the input media for a transcription job.</p>",
          "simpleType" : "Media",
          "variableSetterType" : "Media"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OutputBucketName",
        "c2jShape" : "OutputBucketName",
        "deprecated" : false,
        "documentation" : "<p>The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.</p>\n@param outputBucketName The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOutputBucketName",
        "getterDocumentation" : "/**<p>The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.</p>\n@return The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.*/",
        "getterMethodName" : "getOutputBucketName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "OutputBucketName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OutputBucketName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OutputBucketName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.</p>\n@param outputBucketName The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.*/",
        "setterMethodName" : "setOutputBucketName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "outputBucketName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.</p>\n@param outputBucketName The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "outputBucketName",
          "variableType" : "String",
          "documentation" : "<p>The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Settings",
        "c2jShape" : "Settings",
        "deprecated" : false,
        "documentation" : "<p>A <code>Settings</code> object that provides optional settings for a transcription job.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A <code>Settings</code> object that provides optional settings for a transcription job.</p>\n@param settings A <code>Settings</code> object that provides optional settings for a transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSettings",
        "getterDocumentation" : "/**<p>A <code>Settings</code> object that provides optional settings for a transcription job.</p>\n@return A <code>Settings</code> object that provides optional settings for a transcription job.*/",
        "getterMethodName" : "getSettings",
        "getterModel" : {
          "returnType" : "Settings",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Settings",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Settings",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Settings",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A <code>Settings</code> object that provides optional settings for a transcription job.</p>\n@param settings A <code>Settings</code> object that provides optional settings for a transcription job.*/",
        "setterMethodName" : "setSettings",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Settings",
          "variableName" : "settings",
          "variableType" : "Settings",
          "documentation" : "",
          "simpleType" : "Settings",
          "variableSetterType" : "Settings"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A <code>Settings</code> object that provides optional settings for a transcription job.</p>\n@param settings A <code>Settings</code> object that provides optional settings for a transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Settings",
          "variableName" : "settings",
          "variableType" : "Settings",
          "documentation" : "<p>A <code>Settings</code> object that provides optional settings for a transcription job.</p>",
          "simpleType" : "Settings",
          "variableSetterType" : "Settings"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LanguageCode" : {
          "c2jName" : "LanguageCode",
          "c2jShape" : "LanguageCode",
          "deprecated" : false,
          "documentation" : "<p>The language code for the language used in the input media file.</p>",
          "enumType" : "LanguageCode",
          "fluentSetterDocumentation" : "/**<p>The language code for the language used in the input media file.</p>\n@param languageCode The language code for the language used in the input media file.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "fluentSetterMethodName" : "withLanguageCode",
          "getterDocumentation" : "/**<p>The language code for the language used in the input media file.</p>\n@return The language code for the language used in the input media file.\n@see LanguageCode*/",
          "getterMethodName" : "getLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code for the language used in the input media file.</p>\n@param languageCode The language code for the language used in the input media file.\n@see LanguageCode*/",
          "setterMethodName" : "setLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code for the language used in the input media file.</p>\n@param languageCode The language code for the language used in the input media file.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code for the language used in the input media file.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Media" : {
          "c2jName" : "Media",
          "c2jShape" : "Media",
          "deprecated" : false,
          "documentation" : "<p>An object that describes the input media for a transcription job.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An object that describes the input media for a transcription job.</p>\n@param media An object that describes the input media for a transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMedia",
          "getterDocumentation" : "/**<p>An object that describes the input media for a transcription job.</p>\n@return An object that describes the input media for a transcription job.*/",
          "getterMethodName" : "getMedia",
          "getterModel" : {
            "returnType" : "Media",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Media",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Media",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Media",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An object that describes the input media for a transcription job.</p>\n@param media An object that describes the input media for a transcription job.*/",
          "setterMethodName" : "setMedia",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Media",
            "variableName" : "media",
            "variableType" : "Media",
            "documentation" : "",
            "simpleType" : "Media",
            "variableSetterType" : "Media"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An object that describes the input media for a transcription job.</p>\n@param media An object that describes the input media for a transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Media",
            "variableName" : "media",
            "variableType" : "Media",
            "documentation" : "<p>An object that describes the input media for a transcription job.</p>",
            "simpleType" : "Media",
            "variableSetterType" : "Media"
          },
          "xmlNameSpaceUri" : null
        },
        "MediaFormat" : {
          "c2jName" : "MediaFormat",
          "c2jShape" : "MediaFormat",
          "deprecated" : false,
          "documentation" : "<p>The format of the input media file.</p>",
          "enumType" : "MediaFormat",
          "fluentSetterDocumentation" : "/**<p>The format of the input media file.</p>\n@param mediaFormat The format of the input media file.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MediaFormat*/",
          "fluentSetterMethodName" : "withMediaFormat",
          "getterDocumentation" : "/**<p>The format of the input media file.</p>\n@return The format of the input media file.\n@see MediaFormat*/",
          "getterMethodName" : "getMediaFormat",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MediaFormat",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MediaFormat",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "MediaFormat",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The format of the input media file.</p>\n@param mediaFormat The format of the input media file.\n@see MediaFormat*/",
          "setterMethodName" : "setMediaFormat",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "mediaFormat",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The format of the input media file.</p>\n@param mediaFormat The format of the input media file.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MediaFormat*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "mediaFormat",
            "variableType" : "String",
            "documentation" : "<p>The format of the input media file.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MediaSampleRateHertz" : {
          "c2jName" : "MediaSampleRateHertz",
          "c2jShape" : "MediaSampleRateHertz",
          "deprecated" : false,
          "documentation" : "<p>The sample rate, in Hertz, of the audio track in the input media file. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The sample rate, in Hertz, of the audio track in the input media file. </p>\n@param mediaSampleRateHertz The sample rate, in Hertz, of the audio track in the input media file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMediaSampleRateHertz",
          "getterDocumentation" : "/**<p>The sample rate, in Hertz, of the audio track in the input media file. </p>\n@return The sample rate, in Hertz, of the audio track in the input media file.*/",
          "getterMethodName" : "getMediaSampleRateHertz",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MediaSampleRateHertz",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MediaSampleRateHertz",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MediaSampleRateHertz",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The sample rate, in Hertz, of the audio track in the input media file. </p>\n@param mediaSampleRateHertz The sample rate, in Hertz, of the audio track in the input media file.*/",
          "setterMethodName" : "setMediaSampleRateHertz",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "mediaSampleRateHertz",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The sample rate, in Hertz, of the audio track in the input media file. </p>\n@param mediaSampleRateHertz The sample rate, in Hertz, of the audio track in the input media file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "mediaSampleRateHertz",
            "variableType" : "Integer",
            "documentation" : "<p>The sample rate, in Hertz, of the audio track in the input media file. </p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "OutputBucketName" : {
          "c2jName" : "OutputBucketName",
          "c2jShape" : "OutputBucketName",
          "deprecated" : false,
          "documentation" : "<p>The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.</p>\n@param outputBucketName The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOutputBucketName",
          "getterDocumentation" : "/**<p>The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.</p>\n@return The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.*/",
          "getterMethodName" : "getOutputBucketName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "OutputBucketName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OutputBucketName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OutputBucketName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.</p>\n@param outputBucketName The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.*/",
          "setterMethodName" : "setOutputBucketName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "outputBucketName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.</p>\n@param outputBucketName The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "outputBucketName",
            "variableType" : "String",
            "documentation" : "<p>The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcription in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/access-control-managing-permissions.html#auth-role-iam-user\">Permissions Required for IAM User Roles</a>.</p> <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Settings" : {
          "c2jName" : "Settings",
          "c2jShape" : "Settings",
          "deprecated" : false,
          "documentation" : "<p>A <code>Settings</code> object that provides optional settings for a transcription job.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A <code>Settings</code> object that provides optional settings for a transcription job.</p>\n@param settings A <code>Settings</code> object that provides optional settings for a transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSettings",
          "getterDocumentation" : "/**<p>A <code>Settings</code> object that provides optional settings for a transcription job.</p>\n@return A <code>Settings</code> object that provides optional settings for a transcription job.*/",
          "getterMethodName" : "getSettings",
          "getterModel" : {
            "returnType" : "Settings",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Settings",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Settings",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Settings",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A <code>Settings</code> object that provides optional settings for a transcription job.</p>\n@param settings A <code>Settings</code> object that provides optional settings for a transcription job.*/",
          "setterMethodName" : "setSettings",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Settings",
            "variableName" : "settings",
            "variableType" : "Settings",
            "documentation" : "",
            "simpleType" : "Settings",
            "variableSetterType" : "Settings"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A <code>Settings</code> object that provides optional settings for a transcription job.</p>\n@param settings A <code>Settings</code> object that provides optional settings for a transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Settings",
            "variableName" : "settings",
            "variableType" : "Settings",
            "documentation" : "<p>A <code>Settings</code> object that provides optional settings for a transcription job.</p>",
            "simpleType" : "Settings",
            "variableSetterType" : "Settings"
          },
          "xmlNameSpaceUri" : null
        },
        "TranscriptionJobName" : {
          "c2jName" : "TranscriptionJobName",
          "c2jShape" : "TranscriptionJobName",
          "deprecated" : false,
          "documentation" : "<p>The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.</p>\n@param transcriptionJobName The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTranscriptionJobName",
          "getterDocumentation" : "/**<p>The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.</p>\n@return The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.*/",
          "getterMethodName" : "getTranscriptionJobName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TranscriptionJobName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TranscriptionJobName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TranscriptionJobName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.</p>\n@param transcriptionJobName The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.*/",
          "setterMethodName" : "setTranscriptionJobName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "transcriptionJobName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.</p>\n@param transcriptionJobName The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "transcriptionJobName",
            "variableType" : "String",
            "documentation" : "<p>The name of the job. Note that you can't use the strings \".\" or \"..\" by themselves as the job name. The name must also be unique within an AWS account.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "TranscriptionJobName", "LanguageCode", "MediaFormat", "Media" ],
      "shapeName" : "StartTranscriptionJobRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "StartTranscriptionJobRequest",
        "variableName" : "startTranscriptionJobRequest",
        "variableType" : "StartTranscriptionJobRequest",
        "documentation" : null,
        "simpleType" : "StartTranscriptionJobRequest",
        "variableSetterType" : "StartTranscriptionJobRequest"
      },
      "wrapper" : false
    },
    "StartTranscriptionJobResult" : {
      "c2jName" : "StartTranscriptionJobResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "TranscriptionJob",
        "c2jShape" : "TranscriptionJob",
        "deprecated" : false,
        "documentation" : "<p>An object containing details of the asynchronous transcription job.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An object containing details of the asynchronous transcription job.</p>\n@param transcriptionJob An object containing details of the asynchronous transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTranscriptionJob",
        "getterDocumentation" : "/**<p>An object containing details of the asynchronous transcription job.</p>\n@return An object containing details of the asynchronous transcription job.*/",
        "getterMethodName" : "getTranscriptionJob",
        "getterModel" : {
          "returnType" : "TranscriptionJob",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TranscriptionJob",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TranscriptionJob",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "TranscriptionJob",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An object containing details of the asynchronous transcription job.</p>\n@param transcriptionJob An object containing details of the asynchronous transcription job.*/",
        "setterMethodName" : "setTranscriptionJob",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "TranscriptionJob",
          "variableName" : "transcriptionJob",
          "variableType" : "TranscriptionJob",
          "documentation" : "",
          "simpleType" : "TranscriptionJob",
          "variableSetterType" : "TranscriptionJob"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An object containing details of the asynchronous transcription job.</p>\n@param transcriptionJob An object containing details of the asynchronous transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "TranscriptionJob",
          "variableName" : "transcriptionJob",
          "variableType" : "TranscriptionJob",
          "documentation" : "<p>An object containing details of the asynchronous transcription job.</p>",
          "simpleType" : "TranscriptionJob",
          "variableSetterType" : "TranscriptionJob"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "TranscriptionJob" : {
          "c2jName" : "TranscriptionJob",
          "c2jShape" : "TranscriptionJob",
          "deprecated" : false,
          "documentation" : "<p>An object containing details of the asynchronous transcription job.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An object containing details of the asynchronous transcription job.</p>\n@param transcriptionJob An object containing details of the asynchronous transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTranscriptionJob",
          "getterDocumentation" : "/**<p>An object containing details of the asynchronous transcription job.</p>\n@return An object containing details of the asynchronous transcription job.*/",
          "getterMethodName" : "getTranscriptionJob",
          "getterModel" : {
            "returnType" : "TranscriptionJob",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TranscriptionJob",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TranscriptionJob",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "TranscriptionJob",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An object containing details of the asynchronous transcription job.</p>\n@param transcriptionJob An object containing details of the asynchronous transcription job.*/",
          "setterMethodName" : "setTranscriptionJob",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "TranscriptionJob",
            "variableName" : "transcriptionJob",
            "variableType" : "TranscriptionJob",
            "documentation" : "",
            "simpleType" : "TranscriptionJob",
            "variableSetterType" : "TranscriptionJob"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An object containing details of the asynchronous transcription job.</p>\n@param transcriptionJob An object containing details of the asynchronous transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "TranscriptionJob",
            "variableName" : "transcriptionJob",
            "variableType" : "TranscriptionJob",
            "documentation" : "<p>An object containing details of the asynchronous transcription job.</p>",
            "simpleType" : "TranscriptionJob",
            "variableSetterType" : "TranscriptionJob"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "StartTranscriptionJobResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "StartTranscriptionJobResult",
        "variableName" : "startTranscriptionJobResult",
        "variableType" : "StartTranscriptionJobResult",
        "documentation" : null,
        "simpleType" : "StartTranscriptionJobResult",
        "variableSetterType" : "StartTranscriptionJobResult"
      },
      "wrapper" : false
    },
    "Transcript" : {
      "c2jName" : "Transcript",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Identifies the location of a transcription.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "TranscriptFileUri",
        "c2jShape" : "Uri",
        "deprecated" : false,
        "documentation" : "<p>The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.</p>\n@param transcriptFileUri The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTranscriptFileUri",
        "getterDocumentation" : "/**<p>The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.</p>\n@return The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.*/",
        "getterMethodName" : "getTranscriptFileUri",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TranscriptFileUri",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TranscriptFileUri",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TranscriptFileUri",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.</p>\n@param transcriptFileUri The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.*/",
        "setterMethodName" : "setTranscriptFileUri",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "transcriptFileUri",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.</p>\n@param transcriptFileUri The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "transcriptFileUri",
          "variableType" : "String",
          "documentation" : "<p>The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "TranscriptFileUri" : {
          "c2jName" : "TranscriptFileUri",
          "c2jShape" : "Uri",
          "deprecated" : false,
          "documentation" : "<p>The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.</p>\n@param transcriptFileUri The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTranscriptFileUri",
          "getterDocumentation" : "/**<p>The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.</p>\n@return The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.*/",
          "getterMethodName" : "getTranscriptFileUri",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TranscriptFileUri",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TranscriptFileUri",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TranscriptFileUri",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.</p>\n@param transcriptFileUri The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.*/",
          "setterMethodName" : "setTranscriptFileUri",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "transcriptFileUri",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.</p>\n@param transcriptFileUri The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "transcriptFileUri",
            "variableType" : "String",
            "documentation" : "<p>The location where the transcription is stored.</p> <p>Use this URI to access the transcription. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcription in Amazon Transcribe, this is a shareable URL that provides secure access to that location.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Transcript",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Transcript",
        "variableName" : "transcript",
        "variableType" : "Transcript",
        "documentation" : null,
        "simpleType" : "Transcript",
        "variableSetterType" : "Transcript"
      },
      "wrapper" : false
    },
    "TranscriptionJob" : {
      "c2jName" : "TranscriptionJob",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes an asynchronous transcription job that was created with the <code>StartTranscriptionJob</code> operation. </p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "TranscriptionJobName",
        "c2jShape" : "TranscriptionJobName",
        "deprecated" : false,
        "documentation" : "<p>The name of the transcription job.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the transcription job.</p>\n@param transcriptionJobName The name of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTranscriptionJobName",
        "getterDocumentation" : "/**<p>The name of the transcription job.</p>\n@return The name of the transcription job.*/",
        "getterMethodName" : "getTranscriptionJobName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TranscriptionJobName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TranscriptionJobName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TranscriptionJobName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the transcription job.</p>\n@param transcriptionJobName The name of the transcription job.*/",
        "setterMethodName" : "setTranscriptionJobName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "transcriptionJobName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the transcription job.</p>\n@param transcriptionJobName The name of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "transcriptionJobName",
          "variableType" : "String",
          "documentation" : "<p>The name of the transcription job.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TranscriptionJobStatus",
        "c2jShape" : "TranscriptionJobStatus",
        "deprecated" : false,
        "documentation" : "<p>The status of the transcription job.</p>",
        "enumType" : "TranscriptionJobStatus",
        "fluentSetterDocumentation" : "/**<p>The status of the transcription job.</p>\n@param transcriptionJobStatus The status of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
        "fluentSetterMethodName" : "withTranscriptionJobStatus",
        "getterDocumentation" : "/**<p>The status of the transcription job.</p>\n@return The status of the transcription job.\n@see TranscriptionJobStatus*/",
        "getterMethodName" : "getTranscriptionJobStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TranscriptionJobStatus",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TranscriptionJobStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TranscriptionJobStatus",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The status of the transcription job.</p>\n@param transcriptionJobStatus The status of the transcription job.\n@see TranscriptionJobStatus*/",
        "setterMethodName" : "setTranscriptionJobStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "transcriptionJobStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The status of the transcription job.</p>\n@param transcriptionJobStatus The status of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "transcriptionJobStatus",
          "variableType" : "String",
          "documentation" : "<p>The status of the transcription job.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LanguageCode",
        "c2jShape" : "LanguageCode",
        "deprecated" : false,
        "documentation" : "<p>The language code for the input speech.</p>",
        "enumType" : "LanguageCode",
        "fluentSetterDocumentation" : "/**<p>The language code for the input speech.</p>\n@param languageCode The language code for the input speech.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "fluentSetterMethodName" : "withLanguageCode",
        "getterDocumentation" : "/**<p>The language code for the input speech.</p>\n@return The language code for the input speech.\n@see LanguageCode*/",
        "getterMethodName" : "getLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code for the input speech.</p>\n@param languageCode The language code for the input speech.\n@see LanguageCode*/",
        "setterMethodName" : "setLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code for the input speech.</p>\n@param languageCode The language code for the input speech.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code for the input speech.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MediaSampleRateHertz",
        "c2jShape" : "MediaSampleRateHertz",
        "deprecated" : false,
        "documentation" : "<p>The sample rate, in Hertz, of the audio track in the input media file. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The sample rate, in Hertz, of the audio track in the input media file. </p>\n@param mediaSampleRateHertz The sample rate, in Hertz, of the audio track in the input media file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMediaSampleRateHertz",
        "getterDocumentation" : "/**<p>The sample rate, in Hertz, of the audio track in the input media file. </p>\n@return The sample rate, in Hertz, of the audio track in the input media file.*/",
        "getterMethodName" : "getMediaSampleRateHertz",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MediaSampleRateHertz",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MediaSampleRateHertz",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MediaSampleRateHertz",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The sample rate, in Hertz, of the audio track in the input media file. </p>\n@param mediaSampleRateHertz The sample rate, in Hertz, of the audio track in the input media file.*/",
        "setterMethodName" : "setMediaSampleRateHertz",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "mediaSampleRateHertz",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The sample rate, in Hertz, of the audio track in the input media file. </p>\n@param mediaSampleRateHertz The sample rate, in Hertz, of the audio track in the input media file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "mediaSampleRateHertz",
          "variableType" : "Integer",
          "documentation" : "<p>The sample rate, in Hertz, of the audio track in the input media file. </p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MediaFormat",
        "c2jShape" : "MediaFormat",
        "deprecated" : false,
        "documentation" : "<p>The format of the input media file.</p>",
        "enumType" : "MediaFormat",
        "fluentSetterDocumentation" : "/**<p>The format of the input media file.</p>\n@param mediaFormat The format of the input media file.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MediaFormat*/",
        "fluentSetterMethodName" : "withMediaFormat",
        "getterDocumentation" : "/**<p>The format of the input media file.</p>\n@return The format of the input media file.\n@see MediaFormat*/",
        "getterMethodName" : "getMediaFormat",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MediaFormat",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MediaFormat",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "MediaFormat",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The format of the input media file.</p>\n@param mediaFormat The format of the input media file.\n@see MediaFormat*/",
        "setterMethodName" : "setMediaFormat",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "mediaFormat",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The format of the input media file.</p>\n@param mediaFormat The format of the input media file.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MediaFormat*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "mediaFormat",
          "variableType" : "String",
          "documentation" : "<p>The format of the input media file.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Media",
        "c2jShape" : "Media",
        "deprecated" : false,
        "documentation" : "<p>An object that describes the input media for the transcription job.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An object that describes the input media for the transcription job.</p>\n@param media An object that describes the input media for the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMedia",
        "getterDocumentation" : "/**<p>An object that describes the input media for the transcription job.</p>\n@return An object that describes the input media for the transcription job.*/",
        "getterMethodName" : "getMedia",
        "getterModel" : {
          "returnType" : "Media",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Media",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Media",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Media",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An object that describes the input media for the transcription job.</p>\n@param media An object that describes the input media for the transcription job.*/",
        "setterMethodName" : "setMedia",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Media",
          "variableName" : "media",
          "variableType" : "Media",
          "documentation" : "",
          "simpleType" : "Media",
          "variableSetterType" : "Media"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An object that describes the input media for the transcription job.</p>\n@param media An object that describes the input media for the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Media",
          "variableName" : "media",
          "variableType" : "Media",
          "documentation" : "<p>An object that describes the input media for the transcription job.</p>",
          "simpleType" : "Media",
          "variableSetterType" : "Media"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Transcript",
        "c2jShape" : "Transcript",
        "deprecated" : false,
        "documentation" : "<p>An object that describes the output of the transcription job.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An object that describes the output of the transcription job.</p>\n@param transcript An object that describes the output of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTranscript",
        "getterDocumentation" : "/**<p>An object that describes the output of the transcription job.</p>\n@return An object that describes the output of the transcription job.*/",
        "getterMethodName" : "getTranscript",
        "getterModel" : {
          "returnType" : "Transcript",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Transcript",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Transcript",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Transcript",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An object that describes the output of the transcription job.</p>\n@param transcript An object that describes the output of the transcription job.*/",
        "setterMethodName" : "setTranscript",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Transcript",
          "variableName" : "transcript",
          "variableType" : "Transcript",
          "documentation" : "",
          "simpleType" : "Transcript",
          "variableSetterType" : "Transcript"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An object that describes the output of the transcription job.</p>\n@param transcript An object that describes the output of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Transcript",
          "variableName" : "transcript",
          "variableType" : "Transcript",
          "documentation" : "<p>An object that describes the output of the transcription job.</p>",
          "simpleType" : "Transcript",
          "variableSetterType" : "Transcript"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreationTime",
        "c2jShape" : "DateTime",
        "deprecated" : false,
        "documentation" : "<p>A timestamp that shows when the job was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A timestamp that shows when the job was created.</p>\n@param creationTime A timestamp that shows when the job was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationTime",
        "getterDocumentation" : "/**<p>A timestamp that shows when the job was created.</p>\n@return A timestamp that shows when the job was created.*/",
        "getterMethodName" : "getCreationTime",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreationTime",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreationTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A timestamp that shows when the job was created.</p>\n@param creationTime A timestamp that shows when the job was created.*/",
        "setterMethodName" : "setCreationTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationTime",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A timestamp that shows when the job was created.</p>\n@param creationTime A timestamp that shows when the job was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationTime",
          "variableType" : "java.util.Date",
          "documentation" : "<p>A timestamp that shows when the job was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CompletionTime",
        "c2jShape" : "DateTime",
        "deprecated" : false,
        "documentation" : "<p>A timestamp that shows when the job was completed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A timestamp that shows when the job was completed.</p>\n@param completionTime A timestamp that shows when the job was completed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCompletionTime",
        "getterDocumentation" : "/**<p>A timestamp that shows when the job was completed.</p>\n@return A timestamp that shows when the job was completed.*/",
        "getterMethodName" : "getCompletionTime",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CompletionTime",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CompletionTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CompletionTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A timestamp that shows when the job was completed.</p>\n@param completionTime A timestamp that shows when the job was completed.*/",
        "setterMethodName" : "setCompletionTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "completionTime",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A timestamp that shows when the job was completed.</p>\n@param completionTime A timestamp that shows when the job was completed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "completionTime",
          "variableType" : "java.util.Date",
          "documentation" : "<p>A timestamp that shows when the job was completed.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FailureReason",
        "c2jShape" : "FailureReason",
        "deprecated" : false,
        "documentation" : "<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailureReason",
        "getterDocumentation" : "/**<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@return If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.*/",
        "getterMethodName" : "getFailureReason",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FailureReason",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FailureReason",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FailureReason",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.*/",
        "setterMethodName" : "setFailureReason",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "failureReason",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "failureReason",
          "variableType" : "String",
          "documentation" : "<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Settings",
        "c2jShape" : "Settings",
        "deprecated" : false,
        "documentation" : "<p>Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.</p>\n@param settings Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSettings",
        "getterDocumentation" : "/**<p>Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.</p>\n@return Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.*/",
        "getterMethodName" : "getSettings",
        "getterModel" : {
          "returnType" : "Settings",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Settings",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Settings",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Settings",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.</p>\n@param settings Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.*/",
        "setterMethodName" : "setSettings",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Settings",
          "variableName" : "settings",
          "variableType" : "Settings",
          "documentation" : "",
          "simpleType" : "Settings",
          "variableSetterType" : "Settings"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.</p>\n@param settings Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Settings",
          "variableName" : "settings",
          "variableType" : "Settings",
          "documentation" : "<p>Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.</p>",
          "simpleType" : "Settings",
          "variableSetterType" : "Settings"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CompletionTime" : {
          "c2jName" : "CompletionTime",
          "c2jShape" : "DateTime",
          "deprecated" : false,
          "documentation" : "<p>A timestamp that shows when the job was completed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A timestamp that shows when the job was completed.</p>\n@param completionTime A timestamp that shows when the job was completed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCompletionTime",
          "getterDocumentation" : "/**<p>A timestamp that shows when the job was completed.</p>\n@return A timestamp that shows when the job was completed.*/",
          "getterMethodName" : "getCompletionTime",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CompletionTime",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CompletionTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CompletionTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A timestamp that shows when the job was completed.</p>\n@param completionTime A timestamp that shows when the job was completed.*/",
          "setterMethodName" : "setCompletionTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "completionTime",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A timestamp that shows when the job was completed.</p>\n@param completionTime A timestamp that shows when the job was completed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "completionTime",
            "variableType" : "java.util.Date",
            "documentation" : "<p>A timestamp that shows when the job was completed.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "CreationTime" : {
          "c2jName" : "CreationTime",
          "c2jShape" : "DateTime",
          "deprecated" : false,
          "documentation" : "<p>A timestamp that shows when the job was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A timestamp that shows when the job was created.</p>\n@param creationTime A timestamp that shows when the job was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationTime",
          "getterDocumentation" : "/**<p>A timestamp that shows when the job was created.</p>\n@return A timestamp that shows when the job was created.*/",
          "getterMethodName" : "getCreationTime",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreationTime",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreationTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A timestamp that shows when the job was created.</p>\n@param creationTime A timestamp that shows when the job was created.*/",
          "setterMethodName" : "setCreationTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationTime",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A timestamp that shows when the job was created.</p>\n@param creationTime A timestamp that shows when the job was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationTime",
            "variableType" : "java.util.Date",
            "documentation" : "<p>A timestamp that shows when the job was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "FailureReason" : {
          "c2jName" : "FailureReason",
          "c2jShape" : "FailureReason",
          "deprecated" : false,
          "documentation" : "<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailureReason",
          "getterDocumentation" : "/**<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@return If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.*/",
          "getterMethodName" : "getFailureReason",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FailureReason",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FailureReason",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FailureReason",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.*/",
          "setterMethodName" : "setFailureReason",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "failureReason",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>\n@param failureReason If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "failureReason",
            "variableType" : "String",
            "documentation" : "<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LanguageCode" : {
          "c2jName" : "LanguageCode",
          "c2jShape" : "LanguageCode",
          "deprecated" : false,
          "documentation" : "<p>The language code for the input speech.</p>",
          "enumType" : "LanguageCode",
          "fluentSetterDocumentation" : "/**<p>The language code for the input speech.</p>\n@param languageCode The language code for the input speech.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "fluentSetterMethodName" : "withLanguageCode",
          "getterDocumentation" : "/**<p>The language code for the input speech.</p>\n@return The language code for the input speech.\n@see LanguageCode*/",
          "getterMethodName" : "getLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code for the input speech.</p>\n@param languageCode The language code for the input speech.\n@see LanguageCode*/",
          "setterMethodName" : "setLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code for the input speech.</p>\n@param languageCode The language code for the input speech.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code for the input speech.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Media" : {
          "c2jName" : "Media",
          "c2jShape" : "Media",
          "deprecated" : false,
          "documentation" : "<p>An object that describes the input media for the transcription job.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An object that describes the input media for the transcription job.</p>\n@param media An object that describes the input media for the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMedia",
          "getterDocumentation" : "/**<p>An object that describes the input media for the transcription job.</p>\n@return An object that describes the input media for the transcription job.*/",
          "getterMethodName" : "getMedia",
          "getterModel" : {
            "returnType" : "Media",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Media",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Media",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Media",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An object that describes the input media for the transcription job.</p>\n@param media An object that describes the input media for the transcription job.*/",
          "setterMethodName" : "setMedia",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Media",
            "variableName" : "media",
            "variableType" : "Media",
            "documentation" : "",
            "simpleType" : "Media",
            "variableSetterType" : "Media"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An object that describes the input media for the transcription job.</p>\n@param media An object that describes the input media for the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Media",
            "variableName" : "media",
            "variableType" : "Media",
            "documentation" : "<p>An object that describes the input media for the transcription job.</p>",
            "simpleType" : "Media",
            "variableSetterType" : "Media"
          },
          "xmlNameSpaceUri" : null
        },
        "MediaFormat" : {
          "c2jName" : "MediaFormat",
          "c2jShape" : "MediaFormat",
          "deprecated" : false,
          "documentation" : "<p>The format of the input media file.</p>",
          "enumType" : "MediaFormat",
          "fluentSetterDocumentation" : "/**<p>The format of the input media file.</p>\n@param mediaFormat The format of the input media file.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MediaFormat*/",
          "fluentSetterMethodName" : "withMediaFormat",
          "getterDocumentation" : "/**<p>The format of the input media file.</p>\n@return The format of the input media file.\n@see MediaFormat*/",
          "getterMethodName" : "getMediaFormat",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MediaFormat",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MediaFormat",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "MediaFormat",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The format of the input media file.</p>\n@param mediaFormat The format of the input media file.\n@see MediaFormat*/",
          "setterMethodName" : "setMediaFormat",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "mediaFormat",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The format of the input media file.</p>\n@param mediaFormat The format of the input media file.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MediaFormat*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "mediaFormat",
            "variableType" : "String",
            "documentation" : "<p>The format of the input media file.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MediaSampleRateHertz" : {
          "c2jName" : "MediaSampleRateHertz",
          "c2jShape" : "MediaSampleRateHertz",
          "deprecated" : false,
          "documentation" : "<p>The sample rate, in Hertz, of the audio track in the input media file. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The sample rate, in Hertz, of the audio track in the input media file. </p>\n@param mediaSampleRateHertz The sample rate, in Hertz, of the audio track in the input media file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMediaSampleRateHertz",
          "getterDocumentation" : "/**<p>The sample rate, in Hertz, of the audio track in the input media file. </p>\n@return The sample rate, in Hertz, of the audio track in the input media file.*/",
          "getterMethodName" : "getMediaSampleRateHertz",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MediaSampleRateHertz",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MediaSampleRateHertz",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MediaSampleRateHertz",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The sample rate, in Hertz, of the audio track in the input media file. </p>\n@param mediaSampleRateHertz The sample rate, in Hertz, of the audio track in the input media file.*/",
          "setterMethodName" : "setMediaSampleRateHertz",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "mediaSampleRateHertz",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The sample rate, in Hertz, of the audio track in the input media file. </p>\n@param mediaSampleRateHertz The sample rate, in Hertz, of the audio track in the input media file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "mediaSampleRateHertz",
            "variableType" : "Integer",
            "documentation" : "<p>The sample rate, in Hertz, of the audio track in the input media file. </p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "Settings" : {
          "c2jName" : "Settings",
          "c2jShape" : "Settings",
          "deprecated" : false,
          "documentation" : "<p>Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.</p>\n@param settings Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSettings",
          "getterDocumentation" : "/**<p>Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.</p>\n@return Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.*/",
          "getterMethodName" : "getSettings",
          "getterModel" : {
            "returnType" : "Settings",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Settings",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Settings",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Settings",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.</p>\n@param settings Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.*/",
          "setterMethodName" : "setSettings",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Settings",
            "variableName" : "settings",
            "variableType" : "Settings",
            "documentation" : "",
            "simpleType" : "Settings",
            "variableSetterType" : "Settings"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.</p>\n@param settings Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Settings",
            "variableName" : "settings",
            "variableType" : "Settings",
            "documentation" : "<p>Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.</p>",
            "simpleType" : "Settings",
            "variableSetterType" : "Settings"
          },
          "xmlNameSpaceUri" : null
        },
        "Transcript" : {
          "c2jName" : "Transcript",
          "c2jShape" : "Transcript",
          "deprecated" : false,
          "documentation" : "<p>An object that describes the output of the transcription job.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An object that describes the output of the transcription job.</p>\n@param transcript An object that describes the output of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTranscript",
          "getterDocumentation" : "/**<p>An object that describes the output of the transcription job.</p>\n@return An object that describes the output of the transcription job.*/",
          "getterMethodName" : "getTranscript",
          "getterModel" : {
            "returnType" : "Transcript",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Transcript",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Transcript",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Transcript",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An object that describes the output of the transcription job.</p>\n@param transcript An object that describes the output of the transcription job.*/",
          "setterMethodName" : "setTranscript",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Transcript",
            "variableName" : "transcript",
            "variableType" : "Transcript",
            "documentation" : "",
            "simpleType" : "Transcript",
            "variableSetterType" : "Transcript"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An object that describes the output of the transcription job.</p>\n@param transcript An object that describes the output of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Transcript",
            "variableName" : "transcript",
            "variableType" : "Transcript",
            "documentation" : "<p>An object that describes the output of the transcription job.</p>",
            "simpleType" : "Transcript",
            "variableSetterType" : "Transcript"
          },
          "xmlNameSpaceUri" : null
        },
        "TranscriptionJobName" : {
          "c2jName" : "TranscriptionJobName",
          "c2jShape" : "TranscriptionJobName",
          "deprecated" : false,
          "documentation" : "<p>The name of the transcription job.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the transcription job.</p>\n@param transcriptionJobName The name of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTranscriptionJobName",
          "getterDocumentation" : "/**<p>The name of the transcription job.</p>\n@return The name of the transcription job.*/",
          "getterMethodName" : "getTranscriptionJobName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TranscriptionJobName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TranscriptionJobName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TranscriptionJobName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the transcription job.</p>\n@param transcriptionJobName The name of the transcription job.*/",
          "setterMethodName" : "setTranscriptionJobName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "transcriptionJobName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the transcription job.</p>\n@param transcriptionJobName The name of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "transcriptionJobName",
            "variableType" : "String",
            "documentation" : "<p>The name of the transcription job.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TranscriptionJobStatus" : {
          "c2jName" : "TranscriptionJobStatus",
          "c2jShape" : "TranscriptionJobStatus",
          "deprecated" : false,
          "documentation" : "<p>The status of the transcription job.</p>",
          "enumType" : "TranscriptionJobStatus",
          "fluentSetterDocumentation" : "/**<p>The status of the transcription job.</p>\n@param transcriptionJobStatus The status of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
          "fluentSetterMethodName" : "withTranscriptionJobStatus",
          "getterDocumentation" : "/**<p>The status of the transcription job.</p>\n@return The status of the transcription job.\n@see TranscriptionJobStatus*/",
          "getterMethodName" : "getTranscriptionJobStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TranscriptionJobStatus",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TranscriptionJobStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TranscriptionJobStatus",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The status of the transcription job.</p>\n@param transcriptionJobStatus The status of the transcription job.\n@see TranscriptionJobStatus*/",
          "setterMethodName" : "setTranscriptionJobStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "transcriptionJobStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The status of the transcription job.</p>\n@param transcriptionJobStatus The status of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "transcriptionJobStatus",
            "variableType" : "String",
            "documentation" : "<p>The status of the transcription job.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TranscriptionJob",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TranscriptionJob",
        "variableName" : "transcriptionJob",
        "variableType" : "TranscriptionJob",
        "documentation" : null,
        "simpleType" : "TranscriptionJob",
        "variableSetterType" : "TranscriptionJob"
      },
      "wrapper" : false
    },
    "TranscriptionJobStatus" : {
      "c2jName" : "TranscriptionJobStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "IN_PROGRESS",
        "value" : "IN_PROGRESS"
      }, {
        "name" : "FAILED",
        "value" : "FAILED"
      }, {
        "name" : "COMPLETED",
        "value" : "COMPLETED"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TranscriptionJobStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TranscriptionJobStatus",
        "variableName" : "transcriptionJobStatus",
        "variableType" : "TranscriptionJobStatus",
        "documentation" : null,
        "simpleType" : "TranscriptionJobStatus",
        "variableSetterType" : "TranscriptionJobStatus"
      },
      "wrapper" : false
    },
    "TranscriptionJobSummary" : {
      "c2jName" : "TranscriptionJobSummary",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides a summary of information about a transcription job. .</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "TranscriptionJobName",
        "c2jShape" : "TranscriptionJobName",
        "deprecated" : false,
        "documentation" : "<p>The name of the transcription job.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the transcription job.</p>\n@param transcriptionJobName The name of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTranscriptionJobName",
        "getterDocumentation" : "/**<p>The name of the transcription job.</p>\n@return The name of the transcription job.*/",
        "getterMethodName" : "getTranscriptionJobName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TranscriptionJobName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TranscriptionJobName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TranscriptionJobName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the transcription job.</p>\n@param transcriptionJobName The name of the transcription job.*/",
        "setterMethodName" : "setTranscriptionJobName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "transcriptionJobName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the transcription job.</p>\n@param transcriptionJobName The name of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "transcriptionJobName",
          "variableType" : "String",
          "documentation" : "<p>The name of the transcription job.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreationTime",
        "c2jShape" : "DateTime",
        "deprecated" : false,
        "documentation" : "<p>A timestamp that shows when the job was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A timestamp that shows when the job was created.</p>\n@param creationTime A timestamp that shows when the job was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationTime",
        "getterDocumentation" : "/**<p>A timestamp that shows when the job was created.</p>\n@return A timestamp that shows when the job was created.*/",
        "getterMethodName" : "getCreationTime",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreationTime",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreationTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A timestamp that shows when the job was created.</p>\n@param creationTime A timestamp that shows when the job was created.*/",
        "setterMethodName" : "setCreationTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationTime",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A timestamp that shows when the job was created.</p>\n@param creationTime A timestamp that shows when the job was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationTime",
          "variableType" : "java.util.Date",
          "documentation" : "<p>A timestamp that shows when the job was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CompletionTime",
        "c2jShape" : "DateTime",
        "deprecated" : false,
        "documentation" : "<p>A timestamp that shows when the job was completed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A timestamp that shows when the job was completed.</p>\n@param completionTime A timestamp that shows when the job was completed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCompletionTime",
        "getterDocumentation" : "/**<p>A timestamp that shows when the job was completed.</p>\n@return A timestamp that shows when the job was completed.*/",
        "getterMethodName" : "getCompletionTime",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CompletionTime",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CompletionTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CompletionTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A timestamp that shows when the job was completed.</p>\n@param completionTime A timestamp that shows when the job was completed.*/",
        "setterMethodName" : "setCompletionTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "completionTime",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A timestamp that shows when the job was completed.</p>\n@param completionTime A timestamp that shows when the job was completed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "completionTime",
          "variableType" : "java.util.Date",
          "documentation" : "<p>A timestamp that shows when the job was completed.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LanguageCode",
        "c2jShape" : "LanguageCode",
        "deprecated" : false,
        "documentation" : "<p>The language code for the input speech.</p>",
        "enumType" : "LanguageCode",
        "fluentSetterDocumentation" : "/**<p>The language code for the input speech.</p>\n@param languageCode The language code for the input speech.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "fluentSetterMethodName" : "withLanguageCode",
        "getterDocumentation" : "/**<p>The language code for the input speech.</p>\n@return The language code for the input speech.\n@see LanguageCode*/",
        "getterMethodName" : "getLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code for the input speech.</p>\n@param languageCode The language code for the input speech.\n@see LanguageCode*/",
        "setterMethodName" : "setLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code for the input speech.</p>\n@param languageCode The language code for the input speech.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code for the input speech.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TranscriptionJobStatus",
        "c2jShape" : "TranscriptionJobStatus",
        "deprecated" : false,
        "documentation" : "<p>The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.</p>",
        "enumType" : "TranscriptionJobStatus",
        "fluentSetterDocumentation" : "/**<p>The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.</p>\n@param transcriptionJobStatus The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
        "fluentSetterMethodName" : "withTranscriptionJobStatus",
        "getterDocumentation" : "/**<p>The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.</p>\n@return The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.\n@see TranscriptionJobStatus*/",
        "getterMethodName" : "getTranscriptionJobStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TranscriptionJobStatus",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TranscriptionJobStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TranscriptionJobStatus",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.</p>\n@param transcriptionJobStatus The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.\n@see TranscriptionJobStatus*/",
        "setterMethodName" : "setTranscriptionJobStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "transcriptionJobStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.</p>\n@param transcriptionJobStatus The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "transcriptionJobStatus",
          "variableType" : "String",
          "documentation" : "<p>The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FailureReason",
        "c2jShape" : "FailureReason",
        "deprecated" : false,
        "documentation" : "<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.</p>\n@param failureReason If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailureReason",
        "getterDocumentation" : "/**<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.</p>\n@return If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.*/",
        "getterMethodName" : "getFailureReason",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FailureReason",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FailureReason",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FailureReason",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.</p>\n@param failureReason If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.*/",
        "setterMethodName" : "setFailureReason",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "failureReason",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.</p>\n@param failureReason If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "failureReason",
          "variableType" : "String",
          "documentation" : "<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OutputLocationType",
        "c2jShape" : "OutputLocationType",
        "deprecated" : false,
        "documentation" : "<p>Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.</p>",
        "enumType" : "OutputLocationType",
        "fluentSetterDocumentation" : "/**<p>Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.</p>\n@param outputLocationType Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OutputLocationType*/",
        "fluentSetterMethodName" : "withOutputLocationType",
        "getterDocumentation" : "/**<p>Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.</p>\n@return Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.\n@see OutputLocationType*/",
        "getterMethodName" : "getOutputLocationType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "OutputLocationType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OutputLocationType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OutputLocationType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.</p>\n@param outputLocationType Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.\n@see OutputLocationType*/",
        "setterMethodName" : "setOutputLocationType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "outputLocationType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.</p>\n@param outputLocationType Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OutputLocationType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "outputLocationType",
          "variableType" : "String",
          "documentation" : "<p>Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CompletionTime" : {
          "c2jName" : "CompletionTime",
          "c2jShape" : "DateTime",
          "deprecated" : false,
          "documentation" : "<p>A timestamp that shows when the job was completed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A timestamp that shows when the job was completed.</p>\n@param completionTime A timestamp that shows when the job was completed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCompletionTime",
          "getterDocumentation" : "/**<p>A timestamp that shows when the job was completed.</p>\n@return A timestamp that shows when the job was completed.*/",
          "getterMethodName" : "getCompletionTime",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CompletionTime",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CompletionTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CompletionTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A timestamp that shows when the job was completed.</p>\n@param completionTime A timestamp that shows when the job was completed.*/",
          "setterMethodName" : "setCompletionTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "completionTime",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A timestamp that shows when the job was completed.</p>\n@param completionTime A timestamp that shows when the job was completed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "completionTime",
            "variableType" : "java.util.Date",
            "documentation" : "<p>A timestamp that shows when the job was completed.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "CreationTime" : {
          "c2jName" : "CreationTime",
          "c2jShape" : "DateTime",
          "deprecated" : false,
          "documentation" : "<p>A timestamp that shows when the job was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A timestamp that shows when the job was created.</p>\n@param creationTime A timestamp that shows when the job was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationTime",
          "getterDocumentation" : "/**<p>A timestamp that shows when the job was created.</p>\n@return A timestamp that shows when the job was created.*/",
          "getterMethodName" : "getCreationTime",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreationTime",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreationTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A timestamp that shows when the job was created.</p>\n@param creationTime A timestamp that shows when the job was created.*/",
          "setterMethodName" : "setCreationTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationTime",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A timestamp that shows when the job was created.</p>\n@param creationTime A timestamp that shows when the job was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationTime",
            "variableType" : "java.util.Date",
            "documentation" : "<p>A timestamp that shows when the job was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "FailureReason" : {
          "c2jName" : "FailureReason",
          "c2jShape" : "FailureReason",
          "deprecated" : false,
          "documentation" : "<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.</p>\n@param failureReason If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailureReason",
          "getterDocumentation" : "/**<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.</p>\n@return If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.*/",
          "getterMethodName" : "getFailureReason",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FailureReason",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FailureReason",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FailureReason",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.</p>\n@param failureReason If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.*/",
          "setterMethodName" : "setFailureReason",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "failureReason",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.</p>\n@param failureReason If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "failureReason",
            "variableType" : "String",
            "documentation" : "<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LanguageCode" : {
          "c2jName" : "LanguageCode",
          "c2jShape" : "LanguageCode",
          "deprecated" : false,
          "documentation" : "<p>The language code for the input speech.</p>",
          "enumType" : "LanguageCode",
          "fluentSetterDocumentation" : "/**<p>The language code for the input speech.</p>\n@param languageCode The language code for the input speech.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "fluentSetterMethodName" : "withLanguageCode",
          "getterDocumentation" : "/**<p>The language code for the input speech.</p>\n@return The language code for the input speech.\n@see LanguageCode*/",
          "getterMethodName" : "getLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code for the input speech.</p>\n@param languageCode The language code for the input speech.\n@see LanguageCode*/",
          "setterMethodName" : "setLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code for the input speech.</p>\n@param languageCode The language code for the input speech.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code for the input speech.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "OutputLocationType" : {
          "c2jName" : "OutputLocationType",
          "c2jShape" : "OutputLocationType",
          "deprecated" : false,
          "documentation" : "<p>Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.</p>",
          "enumType" : "OutputLocationType",
          "fluentSetterDocumentation" : "/**<p>Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.</p>\n@param outputLocationType Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OutputLocationType*/",
          "fluentSetterMethodName" : "withOutputLocationType",
          "getterDocumentation" : "/**<p>Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.</p>\n@return Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.\n@see OutputLocationType*/",
          "getterMethodName" : "getOutputLocationType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "OutputLocationType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OutputLocationType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OutputLocationType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.</p>\n@param outputLocationType Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.\n@see OutputLocationType*/",
          "setterMethodName" : "setOutputLocationType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "outputLocationType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.</p>\n@param outputLocationType Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OutputLocationType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "outputLocationType",
            "variableType" : "String",
            "documentation" : "<p>Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TranscriptionJobName" : {
          "c2jName" : "TranscriptionJobName",
          "c2jShape" : "TranscriptionJobName",
          "deprecated" : false,
          "documentation" : "<p>The name of the transcription job.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the transcription job.</p>\n@param transcriptionJobName The name of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTranscriptionJobName",
          "getterDocumentation" : "/**<p>The name of the transcription job.</p>\n@return The name of the transcription job.*/",
          "getterMethodName" : "getTranscriptionJobName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TranscriptionJobName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TranscriptionJobName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TranscriptionJobName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the transcription job.</p>\n@param transcriptionJobName The name of the transcription job.*/",
          "setterMethodName" : "setTranscriptionJobName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "transcriptionJobName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the transcription job.</p>\n@param transcriptionJobName The name of the transcription job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "transcriptionJobName",
            "variableType" : "String",
            "documentation" : "<p>The name of the transcription job.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TranscriptionJobStatus" : {
          "c2jName" : "TranscriptionJobStatus",
          "c2jShape" : "TranscriptionJobStatus",
          "deprecated" : false,
          "documentation" : "<p>The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.</p>",
          "enumType" : "TranscriptionJobStatus",
          "fluentSetterDocumentation" : "/**<p>The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.</p>\n@param transcriptionJobStatus The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
          "fluentSetterMethodName" : "withTranscriptionJobStatus",
          "getterDocumentation" : "/**<p>The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.</p>\n@return The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.\n@see TranscriptionJobStatus*/",
          "getterMethodName" : "getTranscriptionJobStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TranscriptionJobStatus",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TranscriptionJobStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TranscriptionJobStatus",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.</p>\n@param transcriptionJobStatus The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.\n@see TranscriptionJobStatus*/",
          "setterMethodName" : "setTranscriptionJobStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "transcriptionJobStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.</p>\n@param transcriptionJobStatus The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TranscriptionJobStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "transcriptionJobStatus",
            "variableType" : "String",
            "documentation" : "<p>The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TranscriptionJobSummary",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TranscriptionJobSummary",
        "variableName" : "transcriptionJobSummary",
        "variableType" : "TranscriptionJobSummary",
        "documentation" : null,
        "simpleType" : "TranscriptionJobSummary",
        "variableSetterType" : "TranscriptionJobSummary"
      },
      "wrapper" : false
    },
    "UpdateVocabularyRequest" : {
      "c2jName" : "UpdateVocabularyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateVocabulary",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Transcribe.UpdateVocabulary",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "VocabularyName",
        "c2jShape" : "VocabularyName",
        "deprecated" : false,
        "documentation" : "<p>The name of the vocabulary to update. The name is case-sensitive.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the vocabulary to update. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary to update. The name is case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVocabularyName",
        "getterDocumentation" : "/**<p>The name of the vocabulary to update. The name is case-sensitive.</p>\n@return The name of the vocabulary to update. The name is case-sensitive.*/",
        "getterMethodName" : "getVocabularyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VocabularyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VocabularyName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VocabularyName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the vocabulary to update. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary to update. The name is case-sensitive.*/",
        "setterMethodName" : "setVocabularyName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the vocabulary to update. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary to update. The name is case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "<p>The name of the vocabulary to update. The name is case-sensitive.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LanguageCode",
        "c2jShape" : "LanguageCode",
        "deprecated" : false,
        "documentation" : "<p>The language code of the vocabulary entries.</p>",
        "enumType" : "LanguageCode",
        "fluentSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "fluentSetterMethodName" : "withLanguageCode",
        "getterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@return The language code of the vocabulary entries.\n@see LanguageCode*/",
        "getterMethodName" : "getLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@see LanguageCode*/",
        "setterMethodName" : "setLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code of the vocabulary entries.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Phrases",
        "c2jShape" : "Phrases",
        "deprecated" : false,
        "documentation" : "<p>An array of strings containing the vocabulary entries.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of strings containing the vocabulary entries.</p>\n@param phrases An array of strings containing the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPhrases",
        "getterDocumentation" : "/**<p>An array of strings containing the vocabulary entries.</p>\n@return An array of strings containing the vocabulary entries.*/",
        "getterMethodName" : "getPhrases",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Phrases",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Phrases",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Phrase",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Phrases",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An array of strings containing the vocabulary entries.</p>\n@param phrases An array of strings containing the vocabulary entries.*/",
        "setterMethodName" : "setPhrases",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "phrases",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of strings containing the vocabulary entries.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPhrases(java.util.Collection)} or {@link #withPhrases(java.util.Collection)} if you want to override the existing values.</p>\n@param phrases An array of strings containing the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "phrases",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>An array of strings containing the vocabulary entries.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LanguageCode" : {
          "c2jName" : "LanguageCode",
          "c2jShape" : "LanguageCode",
          "deprecated" : false,
          "documentation" : "<p>The language code of the vocabulary entries.</p>",
          "enumType" : "LanguageCode",
          "fluentSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "fluentSetterMethodName" : "withLanguageCode",
          "getterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@return The language code of the vocabulary entries.\n@see LanguageCode*/",
          "getterMethodName" : "getLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@see LanguageCode*/",
          "setterMethodName" : "setLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code of the vocabulary entries.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Phrases" : {
          "c2jName" : "Phrases",
          "c2jShape" : "Phrases",
          "deprecated" : false,
          "documentation" : "<p>An array of strings containing the vocabulary entries.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of strings containing the vocabulary entries.</p>\n@param phrases An array of strings containing the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPhrases",
          "getterDocumentation" : "/**<p>An array of strings containing the vocabulary entries.</p>\n@return An array of strings containing the vocabulary entries.*/",
          "getterMethodName" : "getPhrases",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Phrases",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Phrases",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Phrase",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Phrases",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An array of strings containing the vocabulary entries.</p>\n@param phrases An array of strings containing the vocabulary entries.*/",
          "setterMethodName" : "setPhrases",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "phrases",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of strings containing the vocabulary entries.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPhrases(java.util.Collection)} or {@link #withPhrases(java.util.Collection)} if you want to override the existing values.</p>\n@param phrases An array of strings containing the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "phrases",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>An array of strings containing the vocabulary entries.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "VocabularyName" : {
          "c2jName" : "VocabularyName",
          "c2jShape" : "VocabularyName",
          "deprecated" : false,
          "documentation" : "<p>The name of the vocabulary to update. The name is case-sensitive.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the vocabulary to update. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary to update. The name is case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVocabularyName",
          "getterDocumentation" : "/**<p>The name of the vocabulary to update. The name is case-sensitive.</p>\n@return The name of the vocabulary to update. The name is case-sensitive.*/",
          "getterMethodName" : "getVocabularyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VocabularyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VocabularyName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VocabularyName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the vocabulary to update. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary to update. The name is case-sensitive.*/",
          "setterMethodName" : "setVocabularyName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the vocabulary to update. The name is case-sensitive.</p>\n@param vocabularyName The name of the vocabulary to update. The name is case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "<p>The name of the vocabulary to update. The name is case-sensitive.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "VocabularyName", "LanguageCode", "Phrases" ],
      "shapeName" : "UpdateVocabularyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateVocabularyRequest",
        "variableName" : "updateVocabularyRequest",
        "variableType" : "UpdateVocabularyRequest",
        "documentation" : null,
        "simpleType" : "UpdateVocabularyRequest",
        "variableSetterType" : "UpdateVocabularyRequest"
      },
      "wrapper" : false
    },
    "UpdateVocabularyResult" : {
      "c2jName" : "UpdateVocabularyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "VocabularyName",
        "c2jShape" : "VocabularyName",
        "deprecated" : false,
        "documentation" : "<p>The name of the vocabulary that was updated.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the vocabulary that was updated.</p>\n@param vocabularyName The name of the vocabulary that was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVocabularyName",
        "getterDocumentation" : "/**<p>The name of the vocabulary that was updated.</p>\n@return The name of the vocabulary that was updated.*/",
        "getterMethodName" : "getVocabularyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VocabularyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VocabularyName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VocabularyName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the vocabulary that was updated.</p>\n@param vocabularyName The name of the vocabulary that was updated.*/",
        "setterMethodName" : "setVocabularyName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the vocabulary that was updated.</p>\n@param vocabularyName The name of the vocabulary that was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "<p>The name of the vocabulary that was updated.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LanguageCode",
        "c2jShape" : "LanguageCode",
        "deprecated" : false,
        "documentation" : "<p>The language code of the vocabulary entries.</p>",
        "enumType" : "LanguageCode",
        "fluentSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "fluentSetterMethodName" : "withLanguageCode",
        "getterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@return The language code of the vocabulary entries.\n@see LanguageCode*/",
        "getterMethodName" : "getLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@see LanguageCode*/",
        "setterMethodName" : "setLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code of the vocabulary entries.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LastModifiedTime",
        "c2jShape" : "DateTime",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the vocabulary was updated.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the vocabulary was updated.</p>\n@param lastModifiedTime The date and time that the vocabulary was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastModifiedTime",
        "getterDocumentation" : "/**<p>The date and time that the vocabulary was updated.</p>\n@return The date and time that the vocabulary was updated.*/",
        "getterMethodName" : "getLastModifiedTime",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LastModifiedTime",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LastModifiedTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "LastModifiedTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time that the vocabulary was updated.</p>\n@param lastModifiedTime The date and time that the vocabulary was updated.*/",
        "setterMethodName" : "setLastModifiedTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModifiedTime",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the vocabulary was updated.</p>\n@param lastModifiedTime The date and time that the vocabulary was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModifiedTime",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time that the vocabulary was updated.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "VocabularyState",
        "c2jShape" : "VocabularyState",
        "deprecated" : false,
        "documentation" : "<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>",
        "enumType" : "VocabularyState",
        "fluentSetterDocumentation" : "/**<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
        "fluentSetterMethodName" : "withVocabularyState",
        "getterDocumentation" : "/**<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>\n@return The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.\n@see VocabularyState*/",
        "getterMethodName" : "getVocabularyState",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VocabularyState",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VocabularyState",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VocabularyState",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.\n@see VocabularyState*/",
        "setterMethodName" : "setVocabularyState",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyState",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyState",
          "variableType" : "String",
          "documentation" : "<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LanguageCode" : {
          "c2jName" : "LanguageCode",
          "c2jShape" : "LanguageCode",
          "deprecated" : false,
          "documentation" : "<p>The language code of the vocabulary entries.</p>",
          "enumType" : "LanguageCode",
          "fluentSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "fluentSetterMethodName" : "withLanguageCode",
          "getterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@return The language code of the vocabulary entries.\n@see LanguageCode*/",
          "getterMethodName" : "getLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@see LanguageCode*/",
          "setterMethodName" : "setLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code of the vocabulary entries.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LastModifiedTime" : {
          "c2jName" : "LastModifiedTime",
          "c2jShape" : "DateTime",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the vocabulary was updated.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the vocabulary was updated.</p>\n@param lastModifiedTime The date and time that the vocabulary was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastModifiedTime",
          "getterDocumentation" : "/**<p>The date and time that the vocabulary was updated.</p>\n@return The date and time that the vocabulary was updated.*/",
          "getterMethodName" : "getLastModifiedTime",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LastModifiedTime",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LastModifiedTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "LastModifiedTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time that the vocabulary was updated.</p>\n@param lastModifiedTime The date and time that the vocabulary was updated.*/",
          "setterMethodName" : "setLastModifiedTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModifiedTime",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the vocabulary was updated.</p>\n@param lastModifiedTime The date and time that the vocabulary was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModifiedTime",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time that the vocabulary was updated.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "VocabularyName" : {
          "c2jName" : "VocabularyName",
          "c2jShape" : "VocabularyName",
          "deprecated" : false,
          "documentation" : "<p>The name of the vocabulary that was updated.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the vocabulary that was updated.</p>\n@param vocabularyName The name of the vocabulary that was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVocabularyName",
          "getterDocumentation" : "/**<p>The name of the vocabulary that was updated.</p>\n@return The name of the vocabulary that was updated.*/",
          "getterMethodName" : "getVocabularyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VocabularyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VocabularyName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VocabularyName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the vocabulary that was updated.</p>\n@param vocabularyName The name of the vocabulary that was updated.*/",
          "setterMethodName" : "setVocabularyName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the vocabulary that was updated.</p>\n@param vocabularyName The name of the vocabulary that was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "<p>The name of the vocabulary that was updated.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "VocabularyState" : {
          "c2jName" : "VocabularyState",
          "c2jShape" : "VocabularyState",
          "deprecated" : false,
          "documentation" : "<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>",
          "enumType" : "VocabularyState",
          "fluentSetterDocumentation" : "/**<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
          "fluentSetterMethodName" : "withVocabularyState",
          "getterDocumentation" : "/**<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>\n@return The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.\n@see VocabularyState*/",
          "getterMethodName" : "getVocabularyState",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VocabularyState",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VocabularyState",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VocabularyState",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.\n@see VocabularyState*/",
          "setterMethodName" : "setVocabularyState",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyState",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyState",
            "variableType" : "String",
            "documentation" : "<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateVocabularyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateVocabularyResult",
        "variableName" : "updateVocabularyResult",
        "variableType" : "UpdateVocabularyResult",
        "documentation" : null,
        "simpleType" : "UpdateVocabularyResult",
        "variableSetterType" : "UpdateVocabularyResult"
      },
      "wrapper" : false
    },
    "VocabularyInfo" : {
      "c2jName" : "VocabularyInfo",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides information about a custom vocabulary. </p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "VocabularyName",
        "c2jShape" : "VocabularyName",
        "deprecated" : false,
        "documentation" : "<p>The name of the vocabulary.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the vocabulary.</p>\n@param vocabularyName The name of the vocabulary.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVocabularyName",
        "getterDocumentation" : "/**<p>The name of the vocabulary.</p>\n@return The name of the vocabulary.*/",
        "getterMethodName" : "getVocabularyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VocabularyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VocabularyName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VocabularyName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the vocabulary.</p>\n@param vocabularyName The name of the vocabulary.*/",
        "setterMethodName" : "setVocabularyName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the vocabulary.</p>\n@param vocabularyName The name of the vocabulary.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyName",
          "variableType" : "String",
          "documentation" : "<p>The name of the vocabulary.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LanguageCode",
        "c2jShape" : "LanguageCode",
        "deprecated" : false,
        "documentation" : "<p>The language code of the vocabulary entries.</p>",
        "enumType" : "LanguageCode",
        "fluentSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "fluentSetterMethodName" : "withLanguageCode",
        "getterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@return The language code of the vocabulary entries.\n@see LanguageCode*/",
        "getterMethodName" : "getLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@see LanguageCode*/",
        "setterMethodName" : "setLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "languageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code of the vocabulary entries.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LastModifiedTime",
        "c2jShape" : "DateTime",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the vocabulary was last modified.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the vocabulary was last modified.</p>\n@param lastModifiedTime The date and time that the vocabulary was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastModifiedTime",
        "getterDocumentation" : "/**<p>The date and time that the vocabulary was last modified.</p>\n@return The date and time that the vocabulary was last modified.*/",
        "getterMethodName" : "getLastModifiedTime",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LastModifiedTime",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LastModifiedTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "LastModifiedTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time that the vocabulary was last modified.</p>\n@param lastModifiedTime The date and time that the vocabulary was last modified.*/",
        "setterMethodName" : "setLastModifiedTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModifiedTime",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the vocabulary was last modified.</p>\n@param lastModifiedTime The date and time that the vocabulary was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModifiedTime",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time that the vocabulary was last modified.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "VocabularyState",
        "c2jShape" : "VocabularyState",
        "deprecated" : false,
        "documentation" : "<p>The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.</p>",
        "enumType" : "VocabularyState",
        "fluentSetterDocumentation" : "/**<p>The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
        "fluentSetterMethodName" : "withVocabularyState",
        "getterDocumentation" : "/**<p>The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.</p>\n@return The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.\n@see VocabularyState*/",
        "getterMethodName" : "getVocabularyState",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VocabularyState",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VocabularyState",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VocabularyState",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.\n@see VocabularyState*/",
        "setterMethodName" : "setVocabularyState",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyState",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vocabularyState",
          "variableType" : "String",
          "documentation" : "<p>The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LanguageCode" : {
          "c2jName" : "LanguageCode",
          "c2jShape" : "LanguageCode",
          "deprecated" : false,
          "documentation" : "<p>The language code of the vocabulary entries.</p>",
          "enumType" : "LanguageCode",
          "fluentSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "fluentSetterMethodName" : "withLanguageCode",
          "getterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@return The language code of the vocabulary entries.\n@see LanguageCode*/",
          "getterMethodName" : "getLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@see LanguageCode*/",
          "setterMethodName" : "setLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code of the vocabulary entries.</p>\n@param languageCode The language code of the vocabulary entries.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LanguageCode*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "languageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code of the vocabulary entries.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LastModifiedTime" : {
          "c2jName" : "LastModifiedTime",
          "c2jShape" : "DateTime",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the vocabulary was last modified.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the vocabulary was last modified.</p>\n@param lastModifiedTime The date and time that the vocabulary was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastModifiedTime",
          "getterDocumentation" : "/**<p>The date and time that the vocabulary was last modified.</p>\n@return The date and time that the vocabulary was last modified.*/",
          "getterMethodName" : "getLastModifiedTime",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LastModifiedTime",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LastModifiedTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "LastModifiedTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time that the vocabulary was last modified.</p>\n@param lastModifiedTime The date and time that the vocabulary was last modified.*/",
          "setterMethodName" : "setLastModifiedTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModifiedTime",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the vocabulary was last modified.</p>\n@param lastModifiedTime The date and time that the vocabulary was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModifiedTime",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time that the vocabulary was last modified.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "VocabularyName" : {
          "c2jName" : "VocabularyName",
          "c2jShape" : "VocabularyName",
          "deprecated" : false,
          "documentation" : "<p>The name of the vocabulary.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the vocabulary.</p>\n@param vocabularyName The name of the vocabulary.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVocabularyName",
          "getterDocumentation" : "/**<p>The name of the vocabulary.</p>\n@return The name of the vocabulary.*/",
          "getterMethodName" : "getVocabularyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VocabularyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VocabularyName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VocabularyName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the vocabulary.</p>\n@param vocabularyName The name of the vocabulary.*/",
          "setterMethodName" : "setVocabularyName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the vocabulary.</p>\n@param vocabularyName The name of the vocabulary.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyName",
            "variableType" : "String",
            "documentation" : "<p>The name of the vocabulary.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "VocabularyState" : {
          "c2jName" : "VocabularyState",
          "c2jShape" : "VocabularyState",
          "deprecated" : false,
          "documentation" : "<p>The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.</p>",
          "enumType" : "VocabularyState",
          "fluentSetterDocumentation" : "/**<p>The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
          "fluentSetterMethodName" : "withVocabularyState",
          "getterDocumentation" : "/**<p>The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.</p>\n@return The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.\n@see VocabularyState*/",
          "getterMethodName" : "getVocabularyState",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VocabularyState",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VocabularyState",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VocabularyState",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.\n@see VocabularyState*/",
          "setterMethodName" : "setVocabularyState",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyState",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.</p>\n@param vocabularyState The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see VocabularyState*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vocabularyState",
            "variableType" : "String",
            "documentation" : "<p>The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "VocabularyInfo",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "VocabularyInfo",
        "variableName" : "vocabularyInfo",
        "variableType" : "VocabularyInfo",
        "documentation" : null,
        "simpleType" : "VocabularyInfo",
        "variableSetterType" : "VocabularyInfo"
      },
      "wrapper" : false
    },
    "VocabularyState" : {
      "c2jName" : "VocabularyState",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "PENDING",
        "value" : "PENDING"
      }, {
        "name" : "READY",
        "value" : "READY"
      }, {
        "name" : "FAILED",
        "value" : "FAILED"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "VocabularyState",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "VocabularyState",
        "variableName" : "vocabularyState",
        "variableType" : "VocabularyState",
        "documentation" : null,
        "simpleType" : "VocabularyState",
        "variableSetterType" : "VocabularyState"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "examples" : {
    "examples" : { },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2014-2019 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AmazonTranscribeException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.transcribe.model.AmazonTranscribeException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.transcribe.model.transform"
}