{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "contentTypeOverride" : null,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseHandlerFqcn" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "ClientMutationMethods", "EnumSetterOverload", "ClientConstructors" ],
    "emitLegacyEnumSetterFor" : null,
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipClientMethodForOperations" : [ ],
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : true,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false,
    "useUidAsFilePrefix" : false
  },
  "metadata" : {
    "apiVersion" : "2017-07-01",
    "asyncClient" : "AmazonTranslateAsyncClient",
    "asyncClientBuilderClassName" : "AmazonTranslateAsyncClientBuilder",
    "asyncInterface" : "AmazonTranslateAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : null,
    "cucumberModuleInjectorClassName" : "AmazonTranslateModuleInjector",
    "defaultEndpoint" : "translate.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "translate.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<p>Provides translation between one source language and another of the same set of languages.</p>",
    "endpointPrefix" : "translate",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.translate",
    "packagePath" : "com/amazonaws/services/translate",
    "protocol" : "json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : null,
    "serviceFullName" : "Amazon Translate",
    "serviceId" : "Translate",
    "serviceName" : "Amazon Translate",
    "signingName" : "translate",
    "smokeTestsPackageName" : "com.amazonaws.services.translate.smoketests",
    "syncClient" : "AmazonTranslateClient",
    "syncClientBuilderClassName" : "AmazonTranslateClientBuilder",
    "syncInterface" : "AmazonTranslate",
    "uid" : "translate-2017-07-01",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "DeleteTerminology" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteTerminologyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteTerminologyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteTerminologyRequest, DeleteTerminologyResult>",
      "asyncReturnType" : "DeleteTerminologyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>A synchronous action that deletes a custom terminology.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The resource you are looking for has not been found. Review the resource you're looking for and see if a different resource will accomplish your needs before retrying the revised request. .</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "<p> You have made too many requests within a short period of time. Wait for a short time and then try your request again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p> An internal server error occurred. Retry your request.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteTerminologyRequest",
        "variableName" : "deleteTerminologyRequest",
        "variableType" : "DeleteTerminologyRequest",
        "documentation" : "",
        "simpleType" : "DeleteTerminologyRequest",
        "variableSetterType" : "DeleteTerminologyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteTerminology",
      "operationName" : "DeleteTerminology",
      "returnType" : {
        "returnType" : "DeleteTerminologyResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteTerminologyResult"
    },
    "GetTerminology" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetTerminologyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetTerminologyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetTerminologyRequest, GetTerminologyResult>",
      "asyncReturnType" : "GetTerminologyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Retrieves a custom terminology.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The resource you are looking for has not been found. Review the resource you're looking for and see if a different resource will accomplish your needs before retrying the revised request. .</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>The value of the parameter is invalid. Review the value of the parameter you are using to correct it, and then retry your operation.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "<p> You have made too many requests within a short period of time. Wait for a short time and then try your request again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p> An internal server error occurred. Retry your request.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetTerminologyRequest",
        "variableName" : "getTerminologyRequest",
        "variableType" : "GetTerminologyRequest",
        "documentation" : "",
        "simpleType" : "GetTerminologyRequest",
        "variableSetterType" : "GetTerminologyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getTerminology",
      "operationName" : "GetTerminology",
      "returnType" : {
        "returnType" : "GetTerminologyResult",
        "documentation" : null
      },
      "syncReturnType" : "GetTerminologyResult"
    },
    "ImportTerminology" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ImportTerminologyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ImportTerminologyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ImportTerminologyRequest, ImportTerminologyResult>",
      "asyncReturnType" : "ImportTerminologyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates or updates a custom terminology, depending on whether or not one already exists for the given terminology name. Importing a terminology with the same name as an existing one will merge the terminologies based on the chosen merge strategy. Currently, the only supported merge strategy is OVERWRITE, and so the imported terminology will overwrite an existing terminology of the same name.</p> <p>If you import a terminology that overwrites an existing one, the new terminology take up to 10 minutes to fully propagate and be available for use in a translation due to cache policies with the DataPlane service that performs the translations.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>The value of the parameter is invalid. Review the value of the parameter you are using to correct it, and then retry your operation.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The specified limit has been exceeded. Review your request and retry it with a quantity below the stated limit.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "<p> You have made too many requests within a short period of time. Wait for a short time and then try your request again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p> An internal server error occurred. Retry your request.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImportTerminologyRequest",
        "variableName" : "importTerminologyRequest",
        "variableType" : "ImportTerminologyRequest",
        "documentation" : "",
        "simpleType" : "ImportTerminologyRequest",
        "variableSetterType" : "ImportTerminologyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "importTerminology",
      "operationName" : "ImportTerminology",
      "returnType" : {
        "returnType" : "ImportTerminologyResult",
        "documentation" : null
      },
      "syncReturnType" : "ImportTerminologyResult"
    },
    "ListTerminologies" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListTerminologiesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListTerminologiesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListTerminologiesRequest, ListTerminologiesResult>",
      "asyncReturnType" : "ListTerminologiesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Provides a list of custom terminologies associated with your account.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>The value of the parameter is invalid. Review the value of the parameter you are using to correct it, and then retry your operation.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "<p> You have made too many requests within a short period of time. Wait for a short time and then try your request again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p> An internal server error occurred. Retry your request.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTerminologiesRequest",
        "variableName" : "listTerminologiesRequest",
        "variableType" : "ListTerminologiesRequest",
        "documentation" : "",
        "simpleType" : "ListTerminologiesRequest",
        "variableSetterType" : "ListTerminologiesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listTerminologies",
      "operationName" : "ListTerminologies",
      "returnType" : {
        "returnType" : "ListTerminologiesResult",
        "documentation" : null
      },
      "syncReturnType" : "ListTerminologiesResult"
    },
    "TranslateText" : {
      "asyncCallableType" : "java.util.concurrent.Callable<TranslateTextResult>",
      "asyncFutureType" : "java.util.concurrent.Future<TranslateTextResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<TranslateTextRequest, TranslateTextResult>",
      "asyncReturnType" : "TranslateTextResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Translates input text from the source language to the target language. It is not necessary to use English (en) as either the source or the target language but not all language combinations are supported by Amazon Translate. For more information, see <a href=\"http://docs.aws.amazon.com/translate/latest/dg/pairs.html\">Supported Language Pairs</a>.</p> <ul> <li> <p>Arabic (ar)</p> </li> <li> <p>Chinese (Simplified) (zh)</p> </li> <li> <p>Chinese (Traditional) (zh-TW)</p> </li> <li> <p>Czech (cs)</p> </li> <li> <p>Danish (da)</p> </li> <li> <p>Dutch (nl)</p> </li> <li> <p>English (en)</p> </li> <li> <p>Finnish (fi)</p> </li> <li> <p>French (fr)</p> </li> <li> <p>German (de)</p> </li> <li> <p>Hebrew (he)</p> </li> <li> <p>Indonesian (id)</p> </li> <li> <p>Italian (it)</p> </li> <li> <p>Japanese (ja)</p> </li> <li> <p>Korean (ko)</p> </li> <li> <p>Polish (pl)</p> </li> <li> <p>Portuguese (pt)</p> </li> <li> <p>Russian (ru)</p> </li> <li> <p>Spanish (es)</p> </li> <li> <p>Swedish (sv)</p> </li> <li> <p>Turkish (tr)</p> </li> </ul> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p> The request that you made is invalid. Check your request to determine why it's invalid and then retry the request. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TextSizeLimitExceededException",
        "documentation" : "<p> The size of the text you submitted exceeds the size limit. Reduce the size of the text or use a smaller document and then retry your request. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "<p> You have made too many requests within a short period of time. Wait for a short time and then try your request again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "UnsupportedLanguagePairException",
        "documentation" : "<p>Amazon Translate does not support translation from the language of the source text into the requested target language. For more information, see <a>how-to-error-msg</a>. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "DetectedLanguageLowConfidenceException",
        "documentation" : "<p>The confidence that Amazon Comprehend accurately detected the source language is low. If a low confidence level is acceptable for your application, you can use the language in the exception to call Amazon Translate again. For more information, see the <a href=\"https://docs.aws.amazon.com/comprehend/latest/dg/API_DetectDominantLanguage.html\">DetectDominantLanguage</a> operation in the <i>Amazon Comprehend Developer Guide</i>. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The resource you are looking for has not been found. Review the resource you're looking for and see if a different resource will accomplish your needs before retrying the revised request. .</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p> An internal server error occurred. Retry your request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The Amazon Translate service is temporarily unavailable. Please wait a bit and then retry your request.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TranslateTextRequest",
        "variableName" : "translateTextRequest",
        "variableType" : "TranslateTextRequest",
        "documentation" : "",
        "simpleType" : "TranslateTextRequest",
        "variableSetterType" : "TranslateTextRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "translateText",
      "operationName" : "TranslateText",
      "returnType" : {
        "returnType" : "TranslateTextResult",
        "documentation" : null
      },
      "syncReturnType" : "TranslateTextResult"
    }
  },
  "shapes" : {
    "AppliedTerminology" : {
      "c2jName" : "AppliedTerminology",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The custom terminology applied to the input text by Amazon Translate for the translated text response. This is optional in the response and will only be present if you specified terminology input in the request. Currently, only one terminology can be applied per TranslateText request.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Name",
        "c2jShape" : "ResourceName",
        "deprecated" : false,
        "documentation" : "<p>The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.</p>\n@param name The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.</p>\n@return The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.</p>\n@param name The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.</p>\n@param name The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Terms",
        "c2jShape" : "TermList",
        "deprecated" : false,
        "documentation" : "<p>The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text. </p>\n@param terms The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTerms",
        "getterDocumentation" : "/**<p>The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text. </p>\n@return The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text.*/",
        "getterMethodName" : "getTerms",
        "getterModel" : {
          "returnType" : "java.util.List<Term>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Terms",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Terms",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Term",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Term",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Term",
              "variableName" : "member",
              "variableType" : "Term",
              "documentation" : "",
              "simpleType" : "Term",
              "variableSetterType" : "Term"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Term",
              "variableName" : "member",
              "variableType" : "Term",
              "documentation" : "",
              "simpleType" : "Term",
              "variableSetterType" : "Term"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Term",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Term",
          "templateImplType" : "java.util.ArrayList<Term>",
          "templateType" : "java.util.List<Term>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Terms",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text. </p>\n@param terms The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text.*/",
        "setterMethodName" : "setTerms",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Term>",
          "variableName" : "terms",
          "variableType" : "java.util.List<Term>",
          "documentation" : "",
          "simpleType" : "List<Term>",
          "variableSetterType" : "java.util.Collection<Term>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTerms(java.util.Collection)} or {@link #withTerms(java.util.Collection)} if you want to override the existing values.</p>\n@param terms The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Term>",
          "variableName" : "terms",
          "variableType" : "java.util.List<Term>",
          "documentation" : "<p>The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text. </p>",
          "simpleType" : "List<Term>",
          "variableSetterType" : "java.util.Collection<Term>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "ResourceName",
          "deprecated" : false,
          "documentation" : "<p>The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.</p>\n@param name The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.</p>\n@return The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.</p>\n@param name The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.</p>\n@param name The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the custom terminology applied to the input text by Amazon Translate for the translated text response.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Terms" : {
          "c2jName" : "Terms",
          "c2jShape" : "TermList",
          "deprecated" : false,
          "documentation" : "<p>The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text. </p>\n@param terms The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTerms",
          "getterDocumentation" : "/**<p>The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text. </p>\n@return The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text.*/",
          "getterMethodName" : "getTerms",
          "getterModel" : {
            "returnType" : "java.util.List<Term>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Terms",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Terms",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Term",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Term",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Term",
                "variableName" : "member",
                "variableType" : "Term",
                "documentation" : "",
                "simpleType" : "Term",
                "variableSetterType" : "Term"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Term",
                "variableName" : "member",
                "variableType" : "Term",
                "documentation" : "",
                "simpleType" : "Term",
                "variableSetterType" : "Term"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Term",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Term",
            "templateImplType" : "java.util.ArrayList<Term>",
            "templateType" : "java.util.List<Term>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Terms",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text. </p>\n@param terms The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text.*/",
          "setterMethodName" : "setTerms",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Term>",
            "variableName" : "terms",
            "variableType" : "java.util.List<Term>",
            "documentation" : "",
            "simpleType" : "List<Term>",
            "variableSetterType" : "java.util.Collection<Term>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTerms(java.util.Collection)} or {@link #withTerms(java.util.Collection)} if you want to override the existing values.</p>\n@param terms The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Term>",
            "variableName" : "terms",
            "variableType" : "java.util.List<Term>",
            "documentation" : "<p>The specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text. </p>",
            "simpleType" : "List<Term>",
            "variableSetterType" : "java.util.Collection<Term>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AppliedTerminology",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AppliedTerminology",
        "variableName" : "appliedTerminology",
        "variableType" : "AppliedTerminology",
        "documentation" : null,
        "simpleType" : "AppliedTerminology",
        "variableSetterType" : "AppliedTerminology"
      },
      "wrapper" : false
    },
    "DeleteTerminologyRequest" : {
      "c2jName" : "DeleteTerminologyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteTerminology",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSShineFrontendService_20170701.DeleteTerminology",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Name",
        "c2jShape" : "ResourceName",
        "deprecated" : false,
        "documentation" : "<p>The name of the custom terminology being deleted. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the custom terminology being deleted. </p>\n@param name The name of the custom terminology being deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the custom terminology being deleted. </p>\n@return The name of the custom terminology being deleted.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the custom terminology being deleted. </p>\n@param name The name of the custom terminology being deleted.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the custom terminology being deleted. </p>\n@param name The name of the custom terminology being deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the custom terminology being deleted. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "ResourceName",
          "deprecated" : false,
          "documentation" : "<p>The name of the custom terminology being deleted. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the custom terminology being deleted. </p>\n@param name The name of the custom terminology being deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the custom terminology being deleted. </p>\n@return The name of the custom terminology being deleted.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the custom terminology being deleted. </p>\n@param name The name of the custom terminology being deleted.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the custom terminology being deleted. </p>\n@param name The name of the custom terminology being deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the custom terminology being deleted. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Name" ],
      "shapeName" : "DeleteTerminologyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteTerminologyRequest",
        "variableName" : "deleteTerminologyRequest",
        "variableType" : "DeleteTerminologyRequest",
        "documentation" : null,
        "simpleType" : "DeleteTerminologyRequest",
        "variableSetterType" : "DeleteTerminologyRequest"
      },
      "wrapper" : false
    },
    "DeleteTerminologyResult" : {
      "c2jName" : "DeleteTerminologyResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteTerminologyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteTerminologyResult",
        "variableName" : "deleteTerminologyResult",
        "variableType" : "DeleteTerminologyResult",
        "documentation" : null,
        "simpleType" : "DeleteTerminologyResult",
        "variableSetterType" : "DeleteTerminologyResult"
      },
      "wrapper" : false
    },
    "DetectedLanguageLowConfidenceException" : {
      "c2jName" : "DetectedLanguageLowConfidenceException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The confidence that Amazon Comprehend accurately detected the source language is low. If a low confidence level is acceptable for your application, you can use the language in the exception to call Amazon Translate again. For more information, see the <a href=\"https://docs.aws.amazon.com/comprehend/latest/dg/API_DetectDominantLanguage.html\">DetectDominantLanguage</a> operation in the <i>Amazon Comprehend Developer Guide</i>. </p>",
      "enums" : null,
      "errorCode" : "DetectedLanguageLowConfidenceException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "DetectedLanguageCode",
        "c2jShape" : "LanguageCodeString",
        "deprecated" : false,
        "documentation" : "<p>The language code of the auto-detected language from Amazon Comprehend.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The language code of the auto-detected language from Amazon Comprehend.</p>\n@param detectedLanguageCode The language code of the auto-detected language from Amazon Comprehend.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDetectedLanguageCode",
        "getterDocumentation" : "/**<p>The language code of the auto-detected language from Amazon Comprehend.</p>\n@return The language code of the auto-detected language from Amazon Comprehend.*/",
        "getterMethodName" : "getDetectedLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "DetectedLanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "DetectedLanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DetectedLanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code of the auto-detected language from Amazon Comprehend.</p>\n@param detectedLanguageCode The language code of the auto-detected language from Amazon Comprehend.*/",
        "setterMethodName" : "setDetectedLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "detectedLanguageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code of the auto-detected language from Amazon Comprehend.</p>\n@param detectedLanguageCode The language code of the auto-detected language from Amazon Comprehend.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "detectedLanguageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code of the auto-detected language from Amazon Comprehend.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DetectedLanguageCode" : {
          "c2jName" : "DetectedLanguageCode",
          "c2jShape" : "LanguageCodeString",
          "deprecated" : false,
          "documentation" : "<p>The language code of the auto-detected language from Amazon Comprehend.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The language code of the auto-detected language from Amazon Comprehend.</p>\n@param detectedLanguageCode The language code of the auto-detected language from Amazon Comprehend.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDetectedLanguageCode",
          "getterDocumentation" : "/**<p>The language code of the auto-detected language from Amazon Comprehend.</p>\n@return The language code of the auto-detected language from Amazon Comprehend.*/",
          "getterMethodName" : "getDetectedLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "DetectedLanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "DetectedLanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DetectedLanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code of the auto-detected language from Amazon Comprehend.</p>\n@param detectedLanguageCode The language code of the auto-detected language from Amazon Comprehend.*/",
          "setterMethodName" : "setDetectedLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "detectedLanguageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code of the auto-detected language from Amazon Comprehend.</p>\n@param detectedLanguageCode The language code of the auto-detected language from Amazon Comprehend.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "detectedLanguageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code of the auto-detected language from Amazon Comprehend.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DetectedLanguageLowConfidenceException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DetectedLanguageLowConfidenceException",
        "variableName" : "detectedLanguageLowConfidenceException",
        "variableType" : "DetectedLanguageLowConfidenceException",
        "documentation" : null,
        "simpleType" : "DetectedLanguageLowConfidenceException",
        "variableSetterType" : "DetectedLanguageLowConfidenceException"
      },
      "wrapper" : false
    },
    "EncryptionKey" : {
      "c2jName" : "EncryptionKey",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The encryption key used to encrypt the custom terminologies used by Amazon Translate.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Type",
        "c2jShape" : "EncryptionKeyType",
        "deprecated" : false,
        "documentation" : "<p>The type of encryption key used by Amazon Translate to encrypt custom terminologies.</p>",
        "enumType" : "EncryptionKeyType",
        "fluentSetterDocumentation" : "/**<p>The type of encryption key used by Amazon Translate to encrypt custom terminologies.</p>\n@param type The type of encryption key used by Amazon Translate to encrypt custom terminologies.\n@return Returns a reference to this object so that method calls can be chained together.\n@see EncryptionKeyType*/",
        "fluentSetterMethodName" : "withType",
        "getterDocumentation" : "/**<p>The type of encryption key used by Amazon Translate to encrypt custom terminologies.</p>\n@return The type of encryption key used by Amazon Translate to encrypt custom terminologies.\n@see EncryptionKeyType*/",
        "getterMethodName" : "getType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Type",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Type",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Type",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The type of encryption key used by Amazon Translate to encrypt custom terminologies.</p>\n@param type The type of encryption key used by Amazon Translate to encrypt custom terminologies.\n@see EncryptionKeyType*/",
        "setterMethodName" : "setType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The type of encryption key used by Amazon Translate to encrypt custom terminologies.</p>\n@param type The type of encryption key used by Amazon Translate to encrypt custom terminologies.\n@return Returns a reference to this object so that method calls can be chained together.\n@see EncryptionKeyType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "<p>The type of encryption key used by Amazon Translate to encrypt custom terminologies.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Id",
        "c2jShape" : "EncryptionKeyID",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.</p>\n@param id The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withId",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.</p>\n@return The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.*/",
        "getterMethodName" : "getId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Id",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Id",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.</p>\n@param id The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.*/",
        "setterMethodName" : "setId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.</p>\n@param id The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Id" : {
          "c2jName" : "Id",
          "c2jShape" : "EncryptionKeyID",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.</p>\n@param id The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withId",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.</p>\n@return The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.*/",
          "getterMethodName" : "getId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Id",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Id",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.</p>\n@param id The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.*/",
          "setterMethodName" : "setId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.</p>\n@param id The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Type" : {
          "c2jName" : "Type",
          "c2jShape" : "EncryptionKeyType",
          "deprecated" : false,
          "documentation" : "<p>The type of encryption key used by Amazon Translate to encrypt custom terminologies.</p>",
          "enumType" : "EncryptionKeyType",
          "fluentSetterDocumentation" : "/**<p>The type of encryption key used by Amazon Translate to encrypt custom terminologies.</p>\n@param type The type of encryption key used by Amazon Translate to encrypt custom terminologies.\n@return Returns a reference to this object so that method calls can be chained together.\n@see EncryptionKeyType*/",
          "fluentSetterMethodName" : "withType",
          "getterDocumentation" : "/**<p>The type of encryption key used by Amazon Translate to encrypt custom terminologies.</p>\n@return The type of encryption key used by Amazon Translate to encrypt custom terminologies.\n@see EncryptionKeyType*/",
          "getterMethodName" : "getType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Type",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Type",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Type",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The type of encryption key used by Amazon Translate to encrypt custom terminologies.</p>\n@param type The type of encryption key used by Amazon Translate to encrypt custom terminologies.\n@see EncryptionKeyType*/",
          "setterMethodName" : "setType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The type of encryption key used by Amazon Translate to encrypt custom terminologies.</p>\n@param type The type of encryption key used by Amazon Translate to encrypt custom terminologies.\n@return Returns a reference to this object so that method calls can be chained together.\n@see EncryptionKeyType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "<p>The type of encryption key used by Amazon Translate to encrypt custom terminologies.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Type", "Id" ],
      "shapeName" : "EncryptionKey",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "EncryptionKey",
        "variableName" : "encryptionKey",
        "variableType" : "EncryptionKey",
        "documentation" : null,
        "simpleType" : "EncryptionKey",
        "variableSetterType" : "EncryptionKey"
      },
      "wrapper" : false
    },
    "EncryptionKeyType" : {
      "c2jName" : "EncryptionKeyType",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "KMS",
        "value" : "KMS"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "EncryptionKeyType",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "EncryptionKeyType",
        "variableName" : "encryptionKeyType",
        "variableType" : "EncryptionKeyType",
        "documentation" : null,
        "simpleType" : "EncryptionKeyType",
        "variableSetterType" : "EncryptionKeyType"
      },
      "wrapper" : false
    },
    "GetTerminologyRequest" : {
      "c2jName" : "GetTerminologyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetTerminology",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSShineFrontendService_20170701.GetTerminology",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Name",
        "c2jShape" : "ResourceName",
        "deprecated" : false,
        "documentation" : "<p>The name of the custom terminology being retrieved.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the custom terminology being retrieved.</p>\n@param name The name of the custom terminology being retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the custom terminology being retrieved.</p>\n@return The name of the custom terminology being retrieved.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the custom terminology being retrieved.</p>\n@param name The name of the custom terminology being retrieved.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the custom terminology being retrieved.</p>\n@param name The name of the custom terminology being retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the custom terminology being retrieved.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TerminologyDataFormat",
        "c2jShape" : "TerminologyDataFormat",
        "deprecated" : false,
        "documentation" : "<p>The data format of the custom terminology being retrieved, either CSV or TMX.</p>",
        "enumType" : "TerminologyDataFormat",
        "fluentSetterDocumentation" : "/**<p>The data format of the custom terminology being retrieved, either CSV or TMX.</p>\n@param terminologyDataFormat The data format of the custom terminology being retrieved, either CSV or TMX.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TerminologyDataFormat*/",
        "fluentSetterMethodName" : "withTerminologyDataFormat",
        "getterDocumentation" : "/**<p>The data format of the custom terminology being retrieved, either CSV or TMX.</p>\n@return The data format of the custom terminology being retrieved, either CSV or TMX.\n@see TerminologyDataFormat*/",
        "getterMethodName" : "getTerminologyDataFormat",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TerminologyDataFormat",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TerminologyDataFormat",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TerminologyDataFormat",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The data format of the custom terminology being retrieved, either CSV or TMX.</p>\n@param terminologyDataFormat The data format of the custom terminology being retrieved, either CSV or TMX.\n@see TerminologyDataFormat*/",
        "setterMethodName" : "setTerminologyDataFormat",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "terminologyDataFormat",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The data format of the custom terminology being retrieved, either CSV or TMX.</p>\n@param terminologyDataFormat The data format of the custom terminology being retrieved, either CSV or TMX.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TerminologyDataFormat*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "terminologyDataFormat",
          "variableType" : "String",
          "documentation" : "<p>The data format of the custom terminology being retrieved, either CSV or TMX.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "ResourceName",
          "deprecated" : false,
          "documentation" : "<p>The name of the custom terminology being retrieved.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the custom terminology being retrieved.</p>\n@param name The name of the custom terminology being retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the custom terminology being retrieved.</p>\n@return The name of the custom terminology being retrieved.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the custom terminology being retrieved.</p>\n@param name The name of the custom terminology being retrieved.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the custom terminology being retrieved.</p>\n@param name The name of the custom terminology being retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the custom terminology being retrieved.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TerminologyDataFormat" : {
          "c2jName" : "TerminologyDataFormat",
          "c2jShape" : "TerminologyDataFormat",
          "deprecated" : false,
          "documentation" : "<p>The data format of the custom terminology being retrieved, either CSV or TMX.</p>",
          "enumType" : "TerminologyDataFormat",
          "fluentSetterDocumentation" : "/**<p>The data format of the custom terminology being retrieved, either CSV or TMX.</p>\n@param terminologyDataFormat The data format of the custom terminology being retrieved, either CSV or TMX.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TerminologyDataFormat*/",
          "fluentSetterMethodName" : "withTerminologyDataFormat",
          "getterDocumentation" : "/**<p>The data format of the custom terminology being retrieved, either CSV or TMX.</p>\n@return The data format of the custom terminology being retrieved, either CSV or TMX.\n@see TerminologyDataFormat*/",
          "getterMethodName" : "getTerminologyDataFormat",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TerminologyDataFormat",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TerminologyDataFormat",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TerminologyDataFormat",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The data format of the custom terminology being retrieved, either CSV or TMX.</p>\n@param terminologyDataFormat The data format of the custom terminology being retrieved, either CSV or TMX.\n@see TerminologyDataFormat*/",
          "setterMethodName" : "setTerminologyDataFormat",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "terminologyDataFormat",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The data format of the custom terminology being retrieved, either CSV or TMX.</p>\n@param terminologyDataFormat The data format of the custom terminology being retrieved, either CSV or TMX.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TerminologyDataFormat*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "terminologyDataFormat",
            "variableType" : "String",
            "documentation" : "<p>The data format of the custom terminology being retrieved, either CSV or TMX.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Name", "TerminologyDataFormat" ],
      "shapeName" : "GetTerminologyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetTerminologyRequest",
        "variableName" : "getTerminologyRequest",
        "variableType" : "GetTerminologyRequest",
        "documentation" : null,
        "simpleType" : "GetTerminologyRequest",
        "variableSetterType" : "GetTerminologyRequest"
      },
      "wrapper" : false
    },
    "GetTerminologyResult" : {
      "c2jName" : "GetTerminologyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "TerminologyProperties",
        "c2jShape" : "TerminologyProperties",
        "deprecated" : false,
        "documentation" : "<p>The properties of the custom terminology being retrieved.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The properties of the custom terminology being retrieved.</p>\n@param terminologyProperties The properties of the custom terminology being retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTerminologyProperties",
        "getterDocumentation" : "/**<p>The properties of the custom terminology being retrieved.</p>\n@return The properties of the custom terminology being retrieved.*/",
        "getterMethodName" : "getTerminologyProperties",
        "getterModel" : {
          "returnType" : "TerminologyProperties",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TerminologyProperties",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TerminologyProperties",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "TerminologyProperties",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The properties of the custom terminology being retrieved.</p>\n@param terminologyProperties The properties of the custom terminology being retrieved.*/",
        "setterMethodName" : "setTerminologyProperties",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "TerminologyProperties",
          "variableName" : "terminologyProperties",
          "variableType" : "TerminologyProperties",
          "documentation" : "",
          "simpleType" : "TerminologyProperties",
          "variableSetterType" : "TerminologyProperties"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The properties of the custom terminology being retrieved.</p>\n@param terminologyProperties The properties of the custom terminology being retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "TerminologyProperties",
          "variableName" : "terminologyProperties",
          "variableType" : "TerminologyProperties",
          "documentation" : "<p>The properties of the custom terminology being retrieved.</p>",
          "simpleType" : "TerminologyProperties",
          "variableSetterType" : "TerminologyProperties"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TerminologyDataLocation",
        "c2jShape" : "TerminologyDataLocation",
        "deprecated" : false,
        "documentation" : "<p>The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.</p>\n@param terminologyDataLocation The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTerminologyDataLocation",
        "getterDocumentation" : "/**<p>The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.</p>\n@return The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.*/",
        "getterMethodName" : "getTerminologyDataLocation",
        "getterModel" : {
          "returnType" : "TerminologyDataLocation",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TerminologyDataLocation",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TerminologyDataLocation",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "TerminologyDataLocation",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.</p>\n@param terminologyDataLocation The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.*/",
        "setterMethodName" : "setTerminologyDataLocation",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "TerminologyDataLocation",
          "variableName" : "terminologyDataLocation",
          "variableType" : "TerminologyDataLocation",
          "documentation" : "",
          "simpleType" : "TerminologyDataLocation",
          "variableSetterType" : "TerminologyDataLocation"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.</p>\n@param terminologyDataLocation The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "TerminologyDataLocation",
          "variableName" : "terminologyDataLocation",
          "variableType" : "TerminologyDataLocation",
          "documentation" : "<p>The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.</p>",
          "simpleType" : "TerminologyDataLocation",
          "variableSetterType" : "TerminologyDataLocation"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "TerminologyDataLocation" : {
          "c2jName" : "TerminologyDataLocation",
          "c2jShape" : "TerminologyDataLocation",
          "deprecated" : false,
          "documentation" : "<p>The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.</p>\n@param terminologyDataLocation The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTerminologyDataLocation",
          "getterDocumentation" : "/**<p>The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.</p>\n@return The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.*/",
          "getterMethodName" : "getTerminologyDataLocation",
          "getterModel" : {
            "returnType" : "TerminologyDataLocation",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TerminologyDataLocation",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TerminologyDataLocation",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "TerminologyDataLocation",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.</p>\n@param terminologyDataLocation The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.*/",
          "setterMethodName" : "setTerminologyDataLocation",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "TerminologyDataLocation",
            "variableName" : "terminologyDataLocation",
            "variableType" : "TerminologyDataLocation",
            "documentation" : "",
            "simpleType" : "TerminologyDataLocation",
            "variableSetterType" : "TerminologyDataLocation"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.</p>\n@param terminologyDataLocation The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "TerminologyDataLocation",
            "variableName" : "terminologyDataLocation",
            "variableType" : "TerminologyDataLocation",
            "documentation" : "<p>The data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.</p>",
            "simpleType" : "TerminologyDataLocation",
            "variableSetterType" : "TerminologyDataLocation"
          },
          "xmlNameSpaceUri" : null
        },
        "TerminologyProperties" : {
          "c2jName" : "TerminologyProperties",
          "c2jShape" : "TerminologyProperties",
          "deprecated" : false,
          "documentation" : "<p>The properties of the custom terminology being retrieved.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The properties of the custom terminology being retrieved.</p>\n@param terminologyProperties The properties of the custom terminology being retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTerminologyProperties",
          "getterDocumentation" : "/**<p>The properties of the custom terminology being retrieved.</p>\n@return The properties of the custom terminology being retrieved.*/",
          "getterMethodName" : "getTerminologyProperties",
          "getterModel" : {
            "returnType" : "TerminologyProperties",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TerminologyProperties",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TerminologyProperties",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "TerminologyProperties",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The properties of the custom terminology being retrieved.</p>\n@param terminologyProperties The properties of the custom terminology being retrieved.*/",
          "setterMethodName" : "setTerminologyProperties",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "TerminologyProperties",
            "variableName" : "terminologyProperties",
            "variableType" : "TerminologyProperties",
            "documentation" : "",
            "simpleType" : "TerminologyProperties",
            "variableSetterType" : "TerminologyProperties"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The properties of the custom terminology being retrieved.</p>\n@param terminologyProperties The properties of the custom terminology being retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "TerminologyProperties",
            "variableName" : "terminologyProperties",
            "variableType" : "TerminologyProperties",
            "documentation" : "<p>The properties of the custom terminology being retrieved.</p>",
            "simpleType" : "TerminologyProperties",
            "variableSetterType" : "TerminologyProperties"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetTerminologyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetTerminologyResult",
        "variableName" : "getTerminologyResult",
        "variableType" : "GetTerminologyResult",
        "documentation" : null,
        "simpleType" : "GetTerminologyResult",
        "variableSetterType" : "GetTerminologyResult"
      },
      "wrapper" : false
    },
    "ImportTerminologyRequest" : {
      "c2jName" : "ImportTerminologyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ImportTerminology",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSShineFrontendService_20170701.ImportTerminology",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Name",
        "c2jShape" : "ResourceName",
        "deprecated" : false,
        "documentation" : "<p>The name of the custom terminology being imported.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the custom terminology being imported.</p>\n@param name The name of the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the custom terminology being imported.</p>\n@return The name of the custom terminology being imported.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the custom terminology being imported.</p>\n@param name The name of the custom terminology being imported.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the custom terminology being imported.</p>\n@param name The name of the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the custom terminology being imported.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MergeStrategy",
        "c2jShape" : "MergeStrategy",
        "deprecated" : false,
        "documentation" : "<p>The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.</p>",
        "enumType" : "MergeStrategy",
        "fluentSetterDocumentation" : "/**<p>The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.</p>\n@param mergeStrategy The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MergeStrategy*/",
        "fluentSetterMethodName" : "withMergeStrategy",
        "getterDocumentation" : "/**<p>The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.</p>\n@return The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.\n@see MergeStrategy*/",
        "getterMethodName" : "getMergeStrategy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MergeStrategy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MergeStrategy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "MergeStrategy",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.</p>\n@param mergeStrategy The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.\n@see MergeStrategy*/",
        "setterMethodName" : "setMergeStrategy",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "mergeStrategy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.</p>\n@param mergeStrategy The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MergeStrategy*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "mergeStrategy",
          "variableType" : "String",
          "documentation" : "<p>The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Description",
        "c2jShape" : "Description",
        "deprecated" : false,
        "documentation" : "<p>The description of the custom terminology being imported.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The description of the custom terminology being imported.</p>\n@param description The description of the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDescription",
        "getterDocumentation" : "/**<p>The description of the custom terminology being imported.</p>\n@return The description of the custom terminology being imported.*/",
        "getterMethodName" : "getDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Description",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Description",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Description",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The description of the custom terminology being imported.</p>\n@param description The description of the custom terminology being imported.*/",
        "setterMethodName" : "setDescription",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The description of the custom terminology being imported.</p>\n@param description The description of the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "<p>The description of the custom terminology being imported.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TerminologyData",
        "c2jShape" : "TerminologyData",
        "deprecated" : false,
        "documentation" : "<p>The terminology data for the custom terminology being imported.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The terminology data for the custom terminology being imported.</p>\n@param terminologyData The terminology data for the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTerminologyData",
        "getterDocumentation" : "/**<p>The terminology data for the custom terminology being imported.</p>\n@return The terminology data for the custom terminology being imported.*/",
        "getterMethodName" : "getTerminologyData",
        "getterModel" : {
          "returnType" : "TerminologyData",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TerminologyData",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TerminologyData",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "TerminologyData",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The terminology data for the custom terminology being imported.</p>\n@param terminologyData The terminology data for the custom terminology being imported.*/",
        "setterMethodName" : "setTerminologyData",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "TerminologyData",
          "variableName" : "terminologyData",
          "variableType" : "TerminologyData",
          "documentation" : "",
          "simpleType" : "TerminologyData",
          "variableSetterType" : "TerminologyData"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The terminology data for the custom terminology being imported.</p>\n@param terminologyData The terminology data for the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "TerminologyData",
          "variableName" : "terminologyData",
          "variableType" : "TerminologyData",
          "documentation" : "<p>The terminology data for the custom terminology being imported.</p>",
          "simpleType" : "TerminologyData",
          "variableSetterType" : "TerminologyData"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "EncryptionKey",
        "c2jShape" : "EncryptionKey",
        "deprecated" : false,
        "documentation" : "<p>The encryption key for the custom terminology being imported.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The encryption key for the custom terminology being imported.</p>\n@param encryptionKey The encryption key for the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withEncryptionKey",
        "getterDocumentation" : "/**<p>The encryption key for the custom terminology being imported.</p>\n@return The encryption key for the custom terminology being imported.*/",
        "getterMethodName" : "getEncryptionKey",
        "getterModel" : {
          "returnType" : "EncryptionKey",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "EncryptionKey",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "EncryptionKey",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "EncryptionKey",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The encryption key for the custom terminology being imported.</p>\n@param encryptionKey The encryption key for the custom terminology being imported.*/",
        "setterMethodName" : "setEncryptionKey",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "EncryptionKey",
          "variableName" : "encryptionKey",
          "variableType" : "EncryptionKey",
          "documentation" : "",
          "simpleType" : "EncryptionKey",
          "variableSetterType" : "EncryptionKey"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The encryption key for the custom terminology being imported.</p>\n@param encryptionKey The encryption key for the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "EncryptionKey",
          "variableName" : "encryptionKey",
          "variableType" : "EncryptionKey",
          "documentation" : "<p>The encryption key for the custom terminology being imported.</p>",
          "simpleType" : "EncryptionKey",
          "variableSetterType" : "EncryptionKey"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Description" : {
          "c2jName" : "Description",
          "c2jShape" : "Description",
          "deprecated" : false,
          "documentation" : "<p>The description of the custom terminology being imported.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The description of the custom terminology being imported.</p>\n@param description The description of the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDescription",
          "getterDocumentation" : "/**<p>The description of the custom terminology being imported.</p>\n@return The description of the custom terminology being imported.*/",
          "getterMethodName" : "getDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Description",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Description",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Description",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The description of the custom terminology being imported.</p>\n@param description The description of the custom terminology being imported.*/",
          "setterMethodName" : "setDescription",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The description of the custom terminology being imported.</p>\n@param description The description of the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "<p>The description of the custom terminology being imported.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "EncryptionKey" : {
          "c2jName" : "EncryptionKey",
          "c2jShape" : "EncryptionKey",
          "deprecated" : false,
          "documentation" : "<p>The encryption key for the custom terminology being imported.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The encryption key for the custom terminology being imported.</p>\n@param encryptionKey The encryption key for the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withEncryptionKey",
          "getterDocumentation" : "/**<p>The encryption key for the custom terminology being imported.</p>\n@return The encryption key for the custom terminology being imported.*/",
          "getterMethodName" : "getEncryptionKey",
          "getterModel" : {
            "returnType" : "EncryptionKey",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "EncryptionKey",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "EncryptionKey",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "EncryptionKey",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The encryption key for the custom terminology being imported.</p>\n@param encryptionKey The encryption key for the custom terminology being imported.*/",
          "setterMethodName" : "setEncryptionKey",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "EncryptionKey",
            "variableName" : "encryptionKey",
            "variableType" : "EncryptionKey",
            "documentation" : "",
            "simpleType" : "EncryptionKey",
            "variableSetterType" : "EncryptionKey"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The encryption key for the custom terminology being imported.</p>\n@param encryptionKey The encryption key for the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "EncryptionKey",
            "variableName" : "encryptionKey",
            "variableType" : "EncryptionKey",
            "documentation" : "<p>The encryption key for the custom terminology being imported.</p>",
            "simpleType" : "EncryptionKey",
            "variableSetterType" : "EncryptionKey"
          },
          "xmlNameSpaceUri" : null
        },
        "MergeStrategy" : {
          "c2jName" : "MergeStrategy",
          "c2jShape" : "MergeStrategy",
          "deprecated" : false,
          "documentation" : "<p>The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.</p>",
          "enumType" : "MergeStrategy",
          "fluentSetterDocumentation" : "/**<p>The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.</p>\n@param mergeStrategy The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MergeStrategy*/",
          "fluentSetterMethodName" : "withMergeStrategy",
          "getterDocumentation" : "/**<p>The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.</p>\n@return The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.\n@see MergeStrategy*/",
          "getterMethodName" : "getMergeStrategy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MergeStrategy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MergeStrategy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "MergeStrategy",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.</p>\n@param mergeStrategy The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.\n@see MergeStrategy*/",
          "setterMethodName" : "setMergeStrategy",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "mergeStrategy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.</p>\n@param mergeStrategy The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MergeStrategy*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "mergeStrategy",
            "variableType" : "String",
            "documentation" : "<p>The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "ResourceName",
          "deprecated" : false,
          "documentation" : "<p>The name of the custom terminology being imported.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the custom terminology being imported.</p>\n@param name The name of the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the custom terminology being imported.</p>\n@return The name of the custom terminology being imported.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the custom terminology being imported.</p>\n@param name The name of the custom terminology being imported.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the custom terminology being imported.</p>\n@param name The name of the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the custom terminology being imported.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TerminologyData" : {
          "c2jName" : "TerminologyData",
          "c2jShape" : "TerminologyData",
          "deprecated" : false,
          "documentation" : "<p>The terminology data for the custom terminology being imported.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The terminology data for the custom terminology being imported.</p>\n@param terminologyData The terminology data for the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTerminologyData",
          "getterDocumentation" : "/**<p>The terminology data for the custom terminology being imported.</p>\n@return The terminology data for the custom terminology being imported.*/",
          "getterMethodName" : "getTerminologyData",
          "getterModel" : {
            "returnType" : "TerminologyData",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TerminologyData",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TerminologyData",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "TerminologyData",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The terminology data for the custom terminology being imported.</p>\n@param terminologyData The terminology data for the custom terminology being imported.*/",
          "setterMethodName" : "setTerminologyData",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "TerminologyData",
            "variableName" : "terminologyData",
            "variableType" : "TerminologyData",
            "documentation" : "",
            "simpleType" : "TerminologyData",
            "variableSetterType" : "TerminologyData"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The terminology data for the custom terminology being imported.</p>\n@param terminologyData The terminology data for the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "TerminologyData",
            "variableName" : "terminologyData",
            "variableType" : "TerminologyData",
            "documentation" : "<p>The terminology data for the custom terminology being imported.</p>",
            "simpleType" : "TerminologyData",
            "variableSetterType" : "TerminologyData"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Name", "MergeStrategy", "TerminologyData" ],
      "shapeName" : "ImportTerminologyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImportTerminologyRequest",
        "variableName" : "importTerminologyRequest",
        "variableType" : "ImportTerminologyRequest",
        "documentation" : null,
        "simpleType" : "ImportTerminologyRequest",
        "variableSetterType" : "ImportTerminologyRequest"
      },
      "wrapper" : false
    },
    "ImportTerminologyResult" : {
      "c2jName" : "ImportTerminologyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "TerminologyProperties",
        "c2jShape" : "TerminologyProperties",
        "deprecated" : false,
        "documentation" : "<p>The properties of the custom terminology being imported.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The properties of the custom terminology being imported.</p>\n@param terminologyProperties The properties of the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTerminologyProperties",
        "getterDocumentation" : "/**<p>The properties of the custom terminology being imported.</p>\n@return The properties of the custom terminology being imported.*/",
        "getterMethodName" : "getTerminologyProperties",
        "getterModel" : {
          "returnType" : "TerminologyProperties",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TerminologyProperties",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TerminologyProperties",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "TerminologyProperties",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The properties of the custom terminology being imported.</p>\n@param terminologyProperties The properties of the custom terminology being imported.*/",
        "setterMethodName" : "setTerminologyProperties",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "TerminologyProperties",
          "variableName" : "terminologyProperties",
          "variableType" : "TerminologyProperties",
          "documentation" : "",
          "simpleType" : "TerminologyProperties",
          "variableSetterType" : "TerminologyProperties"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The properties of the custom terminology being imported.</p>\n@param terminologyProperties The properties of the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "TerminologyProperties",
          "variableName" : "terminologyProperties",
          "variableType" : "TerminologyProperties",
          "documentation" : "<p>The properties of the custom terminology being imported.</p>",
          "simpleType" : "TerminologyProperties",
          "variableSetterType" : "TerminologyProperties"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "TerminologyProperties" : {
          "c2jName" : "TerminologyProperties",
          "c2jShape" : "TerminologyProperties",
          "deprecated" : false,
          "documentation" : "<p>The properties of the custom terminology being imported.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The properties of the custom terminology being imported.</p>\n@param terminologyProperties The properties of the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTerminologyProperties",
          "getterDocumentation" : "/**<p>The properties of the custom terminology being imported.</p>\n@return The properties of the custom terminology being imported.*/",
          "getterMethodName" : "getTerminologyProperties",
          "getterModel" : {
            "returnType" : "TerminologyProperties",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TerminologyProperties",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TerminologyProperties",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "TerminologyProperties",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The properties of the custom terminology being imported.</p>\n@param terminologyProperties The properties of the custom terminology being imported.*/",
          "setterMethodName" : "setTerminologyProperties",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "TerminologyProperties",
            "variableName" : "terminologyProperties",
            "variableType" : "TerminologyProperties",
            "documentation" : "",
            "simpleType" : "TerminologyProperties",
            "variableSetterType" : "TerminologyProperties"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The properties of the custom terminology being imported.</p>\n@param terminologyProperties The properties of the custom terminology being imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "TerminologyProperties",
            "variableName" : "terminologyProperties",
            "variableType" : "TerminologyProperties",
            "documentation" : "<p>The properties of the custom terminology being imported.</p>",
            "simpleType" : "TerminologyProperties",
            "variableSetterType" : "TerminologyProperties"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ImportTerminologyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImportTerminologyResult",
        "variableName" : "importTerminologyResult",
        "variableType" : "ImportTerminologyResult",
        "documentation" : null,
        "simpleType" : "ImportTerminologyResult",
        "variableSetterType" : "ImportTerminologyResult"
      },
      "wrapper" : false
    },
    "InternalServerException" : {
      "c2jName" : "InternalServerException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> An internal server error occurred. Retry your request.</p>",
      "enums" : null,
      "errorCode" : "InternalServerException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InternalServerException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InternalServerException",
        "variableName" : "internalServerException",
        "variableType" : "InternalServerException",
        "documentation" : null,
        "simpleType" : "InternalServerException",
        "variableSetterType" : "InternalServerException"
      },
      "wrapper" : false
    },
    "InvalidParameterValueException" : {
      "c2jName" : "InvalidParameterValueException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The value of the parameter is invalid. Review the value of the parameter you are using to correct it, and then retry your operation.</p>",
      "enums" : null,
      "errorCode" : "InvalidParameterValueException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidParameterValueException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidParameterValueException",
        "variableName" : "invalidParameterValueException",
        "variableType" : "InvalidParameterValueException",
        "documentation" : null,
        "simpleType" : "InvalidParameterValueException",
        "variableSetterType" : "InvalidParameterValueException"
      },
      "wrapper" : false
    },
    "InvalidRequestException" : {
      "c2jName" : "InvalidRequestException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> The request that you made is invalid. Check your request to determine why it's invalid and then retry the request. </p>",
      "enums" : null,
      "errorCode" : "InvalidRequestException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRequestException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidRequestException",
        "variableName" : "invalidRequestException",
        "variableType" : "InvalidRequestException",
        "documentation" : null,
        "simpleType" : "InvalidRequestException",
        "variableSetterType" : "InvalidRequestException"
      },
      "wrapper" : false
    },
    "LimitExceededException" : {
      "c2jName" : "LimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified limit has been exceeded. Review your request and retry it with a quantity below the stated limit.</p>",
      "enums" : null,
      "errorCode" : "LimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LimitExceededException",
        "variableName" : "limitExceededException",
        "variableType" : "LimitExceededException",
        "documentation" : null,
        "simpleType" : "LimitExceededException",
        "variableSetterType" : "LimitExceededException"
      },
      "wrapper" : false
    },
    "ListTerminologiesRequest" : {
      "c2jName" : "ListTerminologiesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListTerminologies",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSShineFrontendService_20170701.ListTerminologies",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies. </p>\n@param nextToken If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies. </p>\n@return If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies. </p>\n@param nextToken If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies. </p>\n@param nextToken If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResultsInteger",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of custom terminologies returned per list request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of custom terminologies returned per list request.</p>\n@param maxResults The maximum number of custom terminologies returned per list request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of custom terminologies returned per list request.</p>\n@return The maximum number of custom terminologies returned per list request.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of custom terminologies returned per list request.</p>\n@param maxResults The maximum number of custom terminologies returned per list request.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of custom terminologies returned per list request.</p>\n@param maxResults The maximum number of custom terminologies returned per list request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of custom terminologies returned per list request.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResultsInteger",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of custom terminologies returned per list request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of custom terminologies returned per list request.</p>\n@param maxResults The maximum number of custom terminologies returned per list request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of custom terminologies returned per list request.</p>\n@return The maximum number of custom terminologies returned per list request.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of custom terminologies returned per list request.</p>\n@param maxResults The maximum number of custom terminologies returned per list request.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of custom terminologies returned per list request.</p>\n@param maxResults The maximum number of custom terminologies returned per list request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of custom terminologies returned per list request.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies. </p>\n@param nextToken If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies. </p>\n@return If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies. </p>\n@param nextToken If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies. </p>\n@param nextToken If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If the result of the request to ListTerminologies was truncated, include the NextToken to fetch the next group of custom terminologies. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListTerminologiesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTerminologiesRequest",
        "variableName" : "listTerminologiesRequest",
        "variableType" : "ListTerminologiesRequest",
        "documentation" : null,
        "simpleType" : "ListTerminologiesRequest",
        "variableSetterType" : "ListTerminologiesRequest"
      },
      "wrapper" : false
    },
    "ListTerminologiesResult" : {
      "c2jName" : "ListTerminologiesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "TerminologyPropertiesList",
        "c2jShape" : "TerminologyPropertiesList",
        "deprecated" : false,
        "documentation" : "<p>The properties list of the custom terminologies returned on the list request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The properties list of the custom terminologies returned on the list request.</p>\n@param terminologyPropertiesList The properties list of the custom terminologies returned on the list request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTerminologyPropertiesList",
        "getterDocumentation" : "/**<p>The properties list of the custom terminologies returned on the list request.</p>\n@return The properties list of the custom terminologies returned on the list request.*/",
        "getterMethodName" : "getTerminologyPropertiesList",
        "getterModel" : {
          "returnType" : "java.util.List<TerminologyProperties>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TerminologyPropertiesList",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TerminologyPropertiesList",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "TerminologyProperties",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "TerminologyProperties",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TerminologyProperties",
              "variableName" : "member",
              "variableType" : "TerminologyProperties",
              "documentation" : "",
              "simpleType" : "TerminologyProperties",
              "variableSetterType" : "TerminologyProperties"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TerminologyProperties",
              "variableName" : "member",
              "variableType" : "TerminologyProperties",
              "documentation" : "",
              "simpleType" : "TerminologyProperties",
              "variableSetterType" : "TerminologyProperties"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "TerminologyProperties",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "TerminologyProperties",
          "templateImplType" : "java.util.ArrayList<TerminologyProperties>",
          "templateType" : "java.util.List<TerminologyProperties>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "TerminologyPropertiesList",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The properties list of the custom terminologies returned on the list request.</p>\n@param terminologyPropertiesList The properties list of the custom terminologies returned on the list request.*/",
        "setterMethodName" : "setTerminologyPropertiesList",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TerminologyProperties>",
          "variableName" : "terminologyPropertiesList",
          "variableType" : "java.util.List<TerminologyProperties>",
          "documentation" : "",
          "simpleType" : "List<TerminologyProperties>",
          "variableSetterType" : "java.util.Collection<TerminologyProperties>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The properties list of the custom terminologies returned on the list request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTerminologyPropertiesList(java.util.Collection)} or {@link #withTerminologyPropertiesList(java.util.Collection)} if you want to override the existing values.</p>\n@param terminologyPropertiesList The properties list of the custom terminologies returned on the list request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TerminologyProperties>",
          "variableName" : "terminologyPropertiesList",
          "variableType" : "java.util.List<TerminologyProperties>",
          "documentation" : "<p>The properties list of the custom terminologies returned on the list request.</p>",
          "simpleType" : "List<TerminologyProperties>",
          "variableSetterType" : "java.util.Collection<TerminologyProperties>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p> If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies. </p>\n@param nextToken If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p> If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies. </p>\n@return If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies. </p>\n@param nextToken If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies. </p>\n@param nextToken If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p> If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p> If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies. </p>\n@param nextToken If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p> If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies. </p>\n@return If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies. </p>\n@param nextToken If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies. </p>\n@param nextToken If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p> If the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TerminologyPropertiesList" : {
          "c2jName" : "TerminologyPropertiesList",
          "c2jShape" : "TerminologyPropertiesList",
          "deprecated" : false,
          "documentation" : "<p>The properties list of the custom terminologies returned on the list request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The properties list of the custom terminologies returned on the list request.</p>\n@param terminologyPropertiesList The properties list of the custom terminologies returned on the list request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTerminologyPropertiesList",
          "getterDocumentation" : "/**<p>The properties list of the custom terminologies returned on the list request.</p>\n@return The properties list of the custom terminologies returned on the list request.*/",
          "getterMethodName" : "getTerminologyPropertiesList",
          "getterModel" : {
            "returnType" : "java.util.List<TerminologyProperties>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TerminologyPropertiesList",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TerminologyPropertiesList",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "TerminologyProperties",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "TerminologyProperties",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TerminologyProperties",
                "variableName" : "member",
                "variableType" : "TerminologyProperties",
                "documentation" : "",
                "simpleType" : "TerminologyProperties",
                "variableSetterType" : "TerminologyProperties"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TerminologyProperties",
                "variableName" : "member",
                "variableType" : "TerminologyProperties",
                "documentation" : "",
                "simpleType" : "TerminologyProperties",
                "variableSetterType" : "TerminologyProperties"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "TerminologyProperties",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "TerminologyProperties",
            "templateImplType" : "java.util.ArrayList<TerminologyProperties>",
            "templateType" : "java.util.List<TerminologyProperties>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "TerminologyPropertiesList",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The properties list of the custom terminologies returned on the list request.</p>\n@param terminologyPropertiesList The properties list of the custom terminologies returned on the list request.*/",
          "setterMethodName" : "setTerminologyPropertiesList",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TerminologyProperties>",
            "variableName" : "terminologyPropertiesList",
            "variableType" : "java.util.List<TerminologyProperties>",
            "documentation" : "",
            "simpleType" : "List<TerminologyProperties>",
            "variableSetterType" : "java.util.Collection<TerminologyProperties>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The properties list of the custom terminologies returned on the list request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTerminologyPropertiesList(java.util.Collection)} or {@link #withTerminologyPropertiesList(java.util.Collection)} if you want to override the existing values.</p>\n@param terminologyPropertiesList The properties list of the custom terminologies returned on the list request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TerminologyProperties>",
            "variableName" : "terminologyPropertiesList",
            "variableType" : "java.util.List<TerminologyProperties>",
            "documentation" : "<p>The properties list of the custom terminologies returned on the list request.</p>",
            "simpleType" : "List<TerminologyProperties>",
            "variableSetterType" : "java.util.Collection<TerminologyProperties>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListTerminologiesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTerminologiesResult",
        "variableName" : "listTerminologiesResult",
        "variableType" : "ListTerminologiesResult",
        "documentation" : null,
        "simpleType" : "ListTerminologiesResult",
        "variableSetterType" : "ListTerminologiesResult"
      },
      "wrapper" : false
    },
    "MergeStrategy" : {
      "c2jName" : "MergeStrategy",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "OVERWRITE",
        "value" : "OVERWRITE"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MergeStrategy",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "MergeStrategy",
        "variableName" : "mergeStrategy",
        "variableType" : "MergeStrategy",
        "documentation" : null,
        "simpleType" : "MergeStrategy",
        "variableSetterType" : "MergeStrategy"
      },
      "wrapper" : false
    },
    "ResourceNotFoundException" : {
      "c2jName" : "ResourceNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The resource you are looking for has not been found. Review the resource you're looking for and see if a different resource will accomplish your needs before retrying the revised request. .</p>",
      "enums" : null,
      "errorCode" : "ResourceNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResourceNotFoundException",
        "variableName" : "resourceNotFoundException",
        "variableType" : "ResourceNotFoundException",
        "documentation" : null,
        "simpleType" : "ResourceNotFoundException",
        "variableSetterType" : "ResourceNotFoundException"
      },
      "wrapper" : false
    },
    "ServiceUnavailableException" : {
      "c2jName" : "ServiceUnavailableException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The Amazon Translate service is temporarily unavailable. Please wait a bit and then retry your request.</p>",
      "enums" : null,
      "errorCode" : "ServiceUnavailableException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ServiceUnavailableException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ServiceUnavailableException",
        "variableName" : "serviceUnavailableException",
        "variableType" : "ServiceUnavailableException",
        "documentation" : null,
        "simpleType" : "ServiceUnavailableException",
        "variableSetterType" : "ServiceUnavailableException"
      },
      "wrapper" : false
    },
    "Term" : {
      "c2jName" : "Term",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The term being translated by the custom terminology.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "SourceText",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>The source text of the term being translated by the custom terminology.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The source text of the term being translated by the custom terminology.</p>\n@param sourceText The source text of the term being translated by the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSourceText",
        "getterDocumentation" : "/**<p>The source text of the term being translated by the custom terminology.</p>\n@return The source text of the term being translated by the custom terminology.*/",
        "getterMethodName" : "getSourceText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SourceText",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SourceText",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SourceText",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The source text of the term being translated by the custom terminology.</p>\n@param sourceText The source text of the term being translated by the custom terminology.*/",
        "setterMethodName" : "setSourceText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sourceText",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The source text of the term being translated by the custom terminology.</p>\n@param sourceText The source text of the term being translated by the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sourceText",
          "variableType" : "String",
          "documentation" : "<p>The source text of the term being translated by the custom terminology.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TargetText",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>The target text of the term being translated by the custom terminology.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The target text of the term being translated by the custom terminology.</p>\n@param targetText The target text of the term being translated by the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargetText",
        "getterDocumentation" : "/**<p>The target text of the term being translated by the custom terminology.</p>\n@return The target text of the term being translated by the custom terminology.*/",
        "getterMethodName" : "getTargetText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TargetText",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TargetText",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TargetText",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The target text of the term being translated by the custom terminology.</p>\n@param targetText The target text of the term being translated by the custom terminology.*/",
        "setterMethodName" : "setTargetText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "targetText",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The target text of the term being translated by the custom terminology.</p>\n@param targetText The target text of the term being translated by the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "targetText",
          "variableType" : "String",
          "documentation" : "<p>The target text of the term being translated by the custom terminology.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "SourceText" : {
          "c2jName" : "SourceText",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>The source text of the term being translated by the custom terminology.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The source text of the term being translated by the custom terminology.</p>\n@param sourceText The source text of the term being translated by the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSourceText",
          "getterDocumentation" : "/**<p>The source text of the term being translated by the custom terminology.</p>\n@return The source text of the term being translated by the custom terminology.*/",
          "getterMethodName" : "getSourceText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SourceText",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SourceText",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SourceText",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The source text of the term being translated by the custom terminology.</p>\n@param sourceText The source text of the term being translated by the custom terminology.*/",
          "setterMethodName" : "setSourceText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sourceText",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The source text of the term being translated by the custom terminology.</p>\n@param sourceText The source text of the term being translated by the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sourceText",
            "variableType" : "String",
            "documentation" : "<p>The source text of the term being translated by the custom terminology.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetText" : {
          "c2jName" : "TargetText",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>The target text of the term being translated by the custom terminology.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The target text of the term being translated by the custom terminology.</p>\n@param targetText The target text of the term being translated by the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargetText",
          "getterDocumentation" : "/**<p>The target text of the term being translated by the custom terminology.</p>\n@return The target text of the term being translated by the custom terminology.*/",
          "getterMethodName" : "getTargetText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TargetText",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TargetText",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TargetText",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The target text of the term being translated by the custom terminology.</p>\n@param targetText The target text of the term being translated by the custom terminology.*/",
          "setterMethodName" : "setTargetText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "targetText",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The target text of the term being translated by the custom terminology.</p>\n@param targetText The target text of the term being translated by the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "targetText",
            "variableType" : "String",
            "documentation" : "<p>The target text of the term being translated by the custom terminology.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Term",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Term",
        "variableName" : "term",
        "variableType" : "Term",
        "documentation" : null,
        "simpleType" : "Term",
        "variableSetterType" : "Term"
      },
      "wrapper" : false
    },
    "TerminologyData" : {
      "c2jName" : "TerminologyData",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The data associated with the custom terminology.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "File",
        "c2jShape" : "TerminologyFile",
        "deprecated" : false,
        "documentation" : "<p>The file containing the custom terminology data.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The file containing the custom terminology data.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param file The file containing the custom terminology data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFile",
        "getterDocumentation" : "/**<p>The file containing the custom terminology data.</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The file containing the custom terminology data.*/",
        "getterMethodName" : "getFile",
        "getterModel" : {
          "returnType" : "java.nio.ByteBuffer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "File",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "File",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.nio.ByteBuffer",
        "marshallingType" : "BYTE_BUFFER",
        "name" : "File",
        "sensitive" : true,
        "setterDocumentation" : "/**<p>The file containing the custom terminology data.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param file The file containing the custom terminology data.*/",
        "setterMethodName" : "setFile",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "variableName" : "file",
          "variableType" : "java.nio.ByteBuffer",
          "documentation" : "",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The file containing the custom terminology data.</p>\n@param file The file containing the custom terminology data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "variableName" : "file",
          "variableType" : "java.nio.ByteBuffer",
          "documentation" : "<p>The file containing the custom terminology data.</p>",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Format",
        "c2jShape" : "TerminologyDataFormat",
        "deprecated" : false,
        "documentation" : "<p>The data format of the custom terminology. Either CSV or TMX.</p>",
        "enumType" : "TerminologyDataFormat",
        "fluentSetterDocumentation" : "/**<p>The data format of the custom terminology. Either CSV or TMX.</p>\n@param format The data format of the custom terminology. Either CSV or TMX.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TerminologyDataFormat*/",
        "fluentSetterMethodName" : "withFormat",
        "getterDocumentation" : "/**<p>The data format of the custom terminology. Either CSV or TMX.</p>\n@return The data format of the custom terminology. Either CSV or TMX.\n@see TerminologyDataFormat*/",
        "getterMethodName" : "getFormat",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Format",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Format",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Format",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The data format of the custom terminology. Either CSV or TMX.</p>\n@param format The data format of the custom terminology. Either CSV or TMX.\n@see TerminologyDataFormat*/",
        "setterMethodName" : "setFormat",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "format",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The data format of the custom terminology. Either CSV or TMX.</p>\n@param format The data format of the custom terminology. Either CSV or TMX.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TerminologyDataFormat*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "format",
          "variableType" : "String",
          "documentation" : "<p>The data format of the custom terminology. Either CSV or TMX.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "File" : {
          "c2jName" : "File",
          "c2jShape" : "TerminologyFile",
          "deprecated" : false,
          "documentation" : "<p>The file containing the custom terminology data.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The file containing the custom terminology data.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param file The file containing the custom terminology data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFile",
          "getterDocumentation" : "/**<p>The file containing the custom terminology data.</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The file containing the custom terminology data.*/",
          "getterMethodName" : "getFile",
          "getterModel" : {
            "returnType" : "java.nio.ByteBuffer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "File",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "File",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.nio.ByteBuffer",
          "marshallingType" : "BYTE_BUFFER",
          "name" : "File",
          "sensitive" : true,
          "setterDocumentation" : "/**<p>The file containing the custom terminology data.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param file The file containing the custom terminology data.*/",
          "setterMethodName" : "setFile",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "variableName" : "file",
            "variableType" : "java.nio.ByteBuffer",
            "documentation" : "",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The file containing the custom terminology data.</p>\n@param file The file containing the custom terminology data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "variableName" : "file",
            "variableType" : "java.nio.ByteBuffer",
            "documentation" : "<p>The file containing the custom terminology data.</p>",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "xmlNameSpaceUri" : null
        },
        "Format" : {
          "c2jName" : "Format",
          "c2jShape" : "TerminologyDataFormat",
          "deprecated" : false,
          "documentation" : "<p>The data format of the custom terminology. Either CSV or TMX.</p>",
          "enumType" : "TerminologyDataFormat",
          "fluentSetterDocumentation" : "/**<p>The data format of the custom terminology. Either CSV or TMX.</p>\n@param format The data format of the custom terminology. Either CSV or TMX.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TerminologyDataFormat*/",
          "fluentSetterMethodName" : "withFormat",
          "getterDocumentation" : "/**<p>The data format of the custom terminology. Either CSV or TMX.</p>\n@return The data format of the custom terminology. Either CSV or TMX.\n@see TerminologyDataFormat*/",
          "getterMethodName" : "getFormat",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Format",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Format",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Format",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The data format of the custom terminology. Either CSV or TMX.</p>\n@param format The data format of the custom terminology. Either CSV or TMX.\n@see TerminologyDataFormat*/",
          "setterMethodName" : "setFormat",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "format",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The data format of the custom terminology. Either CSV or TMX.</p>\n@param format The data format of the custom terminology. Either CSV or TMX.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TerminologyDataFormat*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "format",
            "variableType" : "String",
            "documentation" : "<p>The data format of the custom terminology. Either CSV or TMX.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "File", "Format" ],
      "shapeName" : "TerminologyData",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TerminologyData",
        "variableName" : "terminologyData",
        "variableType" : "TerminologyData",
        "documentation" : null,
        "simpleType" : "TerminologyData",
        "variableSetterType" : "TerminologyData"
      },
      "wrapper" : false
    },
    "TerminologyDataFormat" : {
      "c2jName" : "TerminologyDataFormat",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "CSV",
        "value" : "CSV"
      }, {
        "name" : "TMX",
        "value" : "TMX"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TerminologyDataFormat",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TerminologyDataFormat",
        "variableName" : "terminologyDataFormat",
        "variableType" : "TerminologyDataFormat",
        "documentation" : null,
        "simpleType" : "TerminologyDataFormat",
        "variableSetterType" : "TerminologyDataFormat"
      },
      "wrapper" : false
    },
    "TerminologyDataLocation" : {
      "c2jName" : "TerminologyDataLocation",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The location of the custom terminology data.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "RepositoryType",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>The repository type for the custom terminology data.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository type for the custom terminology data.</p>\n@param repositoryType The repository type for the custom terminology data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryType",
        "getterDocumentation" : "/**<p>The repository type for the custom terminology data.</p>\n@return The repository type for the custom terminology data.*/",
        "getterMethodName" : "getRepositoryType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "RepositoryType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "RepositoryType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository type for the custom terminology data.</p>\n@param repositoryType The repository type for the custom terminology data.*/",
        "setterMethodName" : "setRepositoryType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository type for the custom terminology data.</p>\n@param repositoryType The repository type for the custom terminology data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryType",
          "variableType" : "String",
          "documentation" : "<p>The repository type for the custom terminology data.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Location",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>The location of the custom terminology data.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The location of the custom terminology data.</p>\n@param location The location of the custom terminology data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLocation",
        "getterDocumentation" : "/**<p>The location of the custom terminology data.</p>\n@return The location of the custom terminology data.*/",
        "getterMethodName" : "getLocation",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Location",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Location",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Location",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The location of the custom terminology data.</p>\n@param location The location of the custom terminology data.*/",
        "setterMethodName" : "setLocation",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "location",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The location of the custom terminology data.</p>\n@param location The location of the custom terminology data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "location",
          "variableType" : "String",
          "documentation" : "<p>The location of the custom terminology data.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Location" : {
          "c2jName" : "Location",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>The location of the custom terminology data.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The location of the custom terminology data.</p>\n@param location The location of the custom terminology data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLocation",
          "getterDocumentation" : "/**<p>The location of the custom terminology data.</p>\n@return The location of the custom terminology data.*/",
          "getterMethodName" : "getLocation",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Location",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Location",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Location",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The location of the custom terminology data.</p>\n@param location The location of the custom terminology data.*/",
          "setterMethodName" : "setLocation",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "location",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The location of the custom terminology data.</p>\n@param location The location of the custom terminology data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "location",
            "variableType" : "String",
            "documentation" : "<p>The location of the custom terminology data.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryType" : {
          "c2jName" : "RepositoryType",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>The repository type for the custom terminology data.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository type for the custom terminology data.</p>\n@param repositoryType The repository type for the custom terminology data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryType",
          "getterDocumentation" : "/**<p>The repository type for the custom terminology data.</p>\n@return The repository type for the custom terminology data.*/",
          "getterMethodName" : "getRepositoryType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "RepositoryType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "RepositoryType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository type for the custom terminology data.</p>\n@param repositoryType The repository type for the custom terminology data.*/",
          "setterMethodName" : "setRepositoryType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository type for the custom terminology data.</p>\n@param repositoryType The repository type for the custom terminology data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryType",
            "variableType" : "String",
            "documentation" : "<p>The repository type for the custom terminology data.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "RepositoryType", "Location" ],
      "shapeName" : "TerminologyDataLocation",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TerminologyDataLocation",
        "variableName" : "terminologyDataLocation",
        "variableType" : "TerminologyDataLocation",
        "documentation" : null,
        "simpleType" : "TerminologyDataLocation",
        "variableSetterType" : "TerminologyDataLocation"
      },
      "wrapper" : false
    },
    "TerminologyProperties" : {
      "c2jName" : "TerminologyProperties",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The properties of the custom terminology.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Name",
        "c2jShape" : "ResourceName",
        "deprecated" : false,
        "documentation" : "<p>The name of the custom terminology.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the custom terminology.</p>\n@param name The name of the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the custom terminology.</p>\n@return The name of the custom terminology.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the custom terminology.</p>\n@param name The name of the custom terminology.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the custom terminology.</p>\n@param name The name of the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the custom terminology.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Description",
        "c2jShape" : "Description",
        "deprecated" : false,
        "documentation" : "<p>The description of the custom terminology properties.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The description of the custom terminology properties.</p>\n@param description The description of the custom terminology properties.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDescription",
        "getterDocumentation" : "/**<p>The description of the custom terminology properties.</p>\n@return The description of the custom terminology properties.*/",
        "getterMethodName" : "getDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Description",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Description",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Description",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The description of the custom terminology properties.</p>\n@param description The description of the custom terminology properties.*/",
        "setterMethodName" : "setDescription",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The description of the custom terminology properties.</p>\n@param description The description of the custom terminology properties.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "<p>The description of the custom terminology properties.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Arn",
        "c2jShape" : "TerminologyArn",
        "deprecated" : false,
        "documentation" : "<p> The Amazon Resource Name (ARN) of the custom terminology. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The Amazon Resource Name (ARN) of the custom terminology. </p>\n@param arn The Amazon Resource Name (ARN) of the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p> The Amazon Resource Name (ARN) of the custom terminology. </p>\n@return The Amazon Resource Name (ARN) of the custom terminology.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The Amazon Resource Name (ARN) of the custom terminology. </p>\n@param arn The Amazon Resource Name (ARN) of the custom terminology.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The Amazon Resource Name (ARN) of the custom terminology. </p>\n@param arn The Amazon Resource Name (ARN) of the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p> The Amazon Resource Name (ARN) of the custom terminology. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SourceLanguageCode",
        "c2jShape" : "LanguageCodeString",
        "deprecated" : false,
        "documentation" : "<p>The language code for the source text of the translation request for which the custom terminology is being used.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The language code for the source text of the translation request for which the custom terminology is being used.</p>\n@param sourceLanguageCode The language code for the source text of the translation request for which the custom terminology is being used.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSourceLanguageCode",
        "getterDocumentation" : "/**<p>The language code for the source text of the translation request for which the custom terminology is being used.</p>\n@return The language code for the source text of the translation request for which the custom terminology is being used.*/",
        "getterMethodName" : "getSourceLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SourceLanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SourceLanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SourceLanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code for the source text of the translation request for which the custom terminology is being used.</p>\n@param sourceLanguageCode The language code for the source text of the translation request for which the custom terminology is being used.*/",
        "setterMethodName" : "setSourceLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sourceLanguageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code for the source text of the translation request for which the custom terminology is being used.</p>\n@param sourceLanguageCode The language code for the source text of the translation request for which the custom terminology is being used.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sourceLanguageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code for the source text of the translation request for which the custom terminology is being used.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TargetLanguageCodes",
        "c2jShape" : "LanguageCodeStringList",
        "deprecated" : false,
        "documentation" : "<p>The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.</p>\n@param targetLanguageCodes The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargetLanguageCodes",
        "getterDocumentation" : "/**<p>The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.</p>\n@return The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.*/",
        "getterMethodName" : "getTargetLanguageCodes",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TargetLanguageCodes",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TargetLanguageCodes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "LanguageCodeString",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "TargetLanguageCodes",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.</p>\n@param targetLanguageCodes The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.*/",
        "setterMethodName" : "setTargetLanguageCodes",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "targetLanguageCodes",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTargetLanguageCodes(java.util.Collection)} or {@link #withTargetLanguageCodes(java.util.Collection)} if you want to override the existing values.</p>\n@param targetLanguageCodes The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "targetLanguageCodes",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "EncryptionKey",
        "c2jShape" : "EncryptionKey",
        "deprecated" : false,
        "documentation" : "<p>The encryption key for the custom terminology.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The encryption key for the custom terminology.</p>\n@param encryptionKey The encryption key for the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withEncryptionKey",
        "getterDocumentation" : "/**<p>The encryption key for the custom terminology.</p>\n@return The encryption key for the custom terminology.*/",
        "getterMethodName" : "getEncryptionKey",
        "getterModel" : {
          "returnType" : "EncryptionKey",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "EncryptionKey",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "EncryptionKey",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "EncryptionKey",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The encryption key for the custom terminology.</p>\n@param encryptionKey The encryption key for the custom terminology.*/",
        "setterMethodName" : "setEncryptionKey",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "EncryptionKey",
          "variableName" : "encryptionKey",
          "variableType" : "EncryptionKey",
          "documentation" : "",
          "simpleType" : "EncryptionKey",
          "variableSetterType" : "EncryptionKey"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The encryption key for the custom terminology.</p>\n@param encryptionKey The encryption key for the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "EncryptionKey",
          "variableName" : "encryptionKey",
          "variableType" : "EncryptionKey",
          "documentation" : "<p>The encryption key for the custom terminology.</p>",
          "simpleType" : "EncryptionKey",
          "variableSetterType" : "EncryptionKey"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SizeBytes",
        "c2jShape" : "Integer",
        "deprecated" : false,
        "documentation" : "<p>The size of the file used when importing a custom terminology.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The size of the file used when importing a custom terminology.</p>\n@param sizeBytes The size of the file used when importing a custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSizeBytes",
        "getterDocumentation" : "/**<p>The size of the file used when importing a custom terminology.</p>\n@return The size of the file used when importing a custom terminology.*/",
        "getterMethodName" : "getSizeBytes",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SizeBytes",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SizeBytes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "SizeBytes",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The size of the file used when importing a custom terminology.</p>\n@param sizeBytes The size of the file used when importing a custom terminology.*/",
        "setterMethodName" : "setSizeBytes",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "sizeBytes",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The size of the file used when importing a custom terminology.</p>\n@param sizeBytes The size of the file used when importing a custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "sizeBytes",
          "variableType" : "Integer",
          "documentation" : "<p>The size of the file used when importing a custom terminology.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TermCount",
        "c2jShape" : "Integer",
        "deprecated" : false,
        "documentation" : "<p>The number of terms included in the custom terminology.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The number of terms included in the custom terminology.</p>\n@param termCount The number of terms included in the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTermCount",
        "getterDocumentation" : "/**<p>The number of terms included in the custom terminology.</p>\n@return The number of terms included in the custom terminology.*/",
        "getterMethodName" : "getTermCount",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TermCount",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TermCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "TermCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The number of terms included in the custom terminology.</p>\n@param termCount The number of terms included in the custom terminology.*/",
        "setterMethodName" : "setTermCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "termCount",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The number of terms included in the custom terminology.</p>\n@param termCount The number of terms included in the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "termCount",
          "variableType" : "Integer",
          "documentation" : "<p>The number of terms included in the custom terminology.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreatedAt",
        "c2jShape" : "Timestamp",
        "deprecated" : false,
        "documentation" : "<p>The time at which the custom terminology was created, based on the timestamp.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The time at which the custom terminology was created, based on the timestamp.</p>\n@param createdAt The time at which the custom terminology was created, based on the timestamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreatedAt",
        "getterDocumentation" : "/**<p>The time at which the custom terminology was created, based on the timestamp.</p>\n@return The time at which the custom terminology was created, based on the timestamp.*/",
        "getterMethodName" : "getCreatedAt",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreatedAt",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreatedAt",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreatedAt",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The time at which the custom terminology was created, based on the timestamp.</p>\n@param createdAt The time at which the custom terminology was created, based on the timestamp.*/",
        "setterMethodName" : "setCreatedAt",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "createdAt",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The time at which the custom terminology was created, based on the timestamp.</p>\n@param createdAt The time at which the custom terminology was created, based on the timestamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "createdAt",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The time at which the custom terminology was created, based on the timestamp.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LastUpdatedAt",
        "c2jShape" : "Timestamp",
        "deprecated" : false,
        "documentation" : "<p>The time at which the custom terminology was last update, based on the timestamp.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The time at which the custom terminology was last update, based on the timestamp.</p>\n@param lastUpdatedAt The time at which the custom terminology was last update, based on the timestamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastUpdatedAt",
        "getterDocumentation" : "/**<p>The time at which the custom terminology was last update, based on the timestamp.</p>\n@return The time at which the custom terminology was last update, based on the timestamp.*/",
        "getterMethodName" : "getLastUpdatedAt",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LastUpdatedAt",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LastUpdatedAt",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "LastUpdatedAt",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The time at which the custom terminology was last update, based on the timestamp.</p>\n@param lastUpdatedAt The time at which the custom terminology was last update, based on the timestamp.*/",
        "setterMethodName" : "setLastUpdatedAt",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastUpdatedAt",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The time at which the custom terminology was last update, based on the timestamp.</p>\n@param lastUpdatedAt The time at which the custom terminology was last update, based on the timestamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastUpdatedAt",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The time at which the custom terminology was last update, based on the timestamp.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "TerminologyArn",
          "deprecated" : false,
          "documentation" : "<p> The Amazon Resource Name (ARN) of the custom terminology. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The Amazon Resource Name (ARN) of the custom terminology. </p>\n@param arn The Amazon Resource Name (ARN) of the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p> The Amazon Resource Name (ARN) of the custom terminology. </p>\n@return The Amazon Resource Name (ARN) of the custom terminology.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The Amazon Resource Name (ARN) of the custom terminology. </p>\n@param arn The Amazon Resource Name (ARN) of the custom terminology.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The Amazon Resource Name (ARN) of the custom terminology. </p>\n@param arn The Amazon Resource Name (ARN) of the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p> The Amazon Resource Name (ARN) of the custom terminology. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreatedAt" : {
          "c2jName" : "CreatedAt",
          "c2jShape" : "Timestamp",
          "deprecated" : false,
          "documentation" : "<p>The time at which the custom terminology was created, based on the timestamp.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The time at which the custom terminology was created, based on the timestamp.</p>\n@param createdAt The time at which the custom terminology was created, based on the timestamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreatedAt",
          "getterDocumentation" : "/**<p>The time at which the custom terminology was created, based on the timestamp.</p>\n@return The time at which the custom terminology was created, based on the timestamp.*/",
          "getterMethodName" : "getCreatedAt",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreatedAt",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreatedAt",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreatedAt",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The time at which the custom terminology was created, based on the timestamp.</p>\n@param createdAt The time at which the custom terminology was created, based on the timestamp.*/",
          "setterMethodName" : "setCreatedAt",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "createdAt",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The time at which the custom terminology was created, based on the timestamp.</p>\n@param createdAt The time at which the custom terminology was created, based on the timestamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "createdAt",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The time at which the custom terminology was created, based on the timestamp.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "Description" : {
          "c2jName" : "Description",
          "c2jShape" : "Description",
          "deprecated" : false,
          "documentation" : "<p>The description of the custom terminology properties.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The description of the custom terminology properties.</p>\n@param description The description of the custom terminology properties.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDescription",
          "getterDocumentation" : "/**<p>The description of the custom terminology properties.</p>\n@return The description of the custom terminology properties.*/",
          "getterMethodName" : "getDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Description",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Description",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Description",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The description of the custom terminology properties.</p>\n@param description The description of the custom terminology properties.*/",
          "setterMethodName" : "setDescription",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The description of the custom terminology properties.</p>\n@param description The description of the custom terminology properties.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "<p>The description of the custom terminology properties.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "EncryptionKey" : {
          "c2jName" : "EncryptionKey",
          "c2jShape" : "EncryptionKey",
          "deprecated" : false,
          "documentation" : "<p>The encryption key for the custom terminology.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The encryption key for the custom terminology.</p>\n@param encryptionKey The encryption key for the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withEncryptionKey",
          "getterDocumentation" : "/**<p>The encryption key for the custom terminology.</p>\n@return The encryption key for the custom terminology.*/",
          "getterMethodName" : "getEncryptionKey",
          "getterModel" : {
            "returnType" : "EncryptionKey",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "EncryptionKey",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "EncryptionKey",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "EncryptionKey",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The encryption key for the custom terminology.</p>\n@param encryptionKey The encryption key for the custom terminology.*/",
          "setterMethodName" : "setEncryptionKey",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "EncryptionKey",
            "variableName" : "encryptionKey",
            "variableType" : "EncryptionKey",
            "documentation" : "",
            "simpleType" : "EncryptionKey",
            "variableSetterType" : "EncryptionKey"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The encryption key for the custom terminology.</p>\n@param encryptionKey The encryption key for the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "EncryptionKey",
            "variableName" : "encryptionKey",
            "variableType" : "EncryptionKey",
            "documentation" : "<p>The encryption key for the custom terminology.</p>",
            "simpleType" : "EncryptionKey",
            "variableSetterType" : "EncryptionKey"
          },
          "xmlNameSpaceUri" : null
        },
        "LastUpdatedAt" : {
          "c2jName" : "LastUpdatedAt",
          "c2jShape" : "Timestamp",
          "deprecated" : false,
          "documentation" : "<p>The time at which the custom terminology was last update, based on the timestamp.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The time at which the custom terminology was last update, based on the timestamp.</p>\n@param lastUpdatedAt The time at which the custom terminology was last update, based on the timestamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastUpdatedAt",
          "getterDocumentation" : "/**<p>The time at which the custom terminology was last update, based on the timestamp.</p>\n@return The time at which the custom terminology was last update, based on the timestamp.*/",
          "getterMethodName" : "getLastUpdatedAt",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LastUpdatedAt",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LastUpdatedAt",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "LastUpdatedAt",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The time at which the custom terminology was last update, based on the timestamp.</p>\n@param lastUpdatedAt The time at which the custom terminology was last update, based on the timestamp.*/",
          "setterMethodName" : "setLastUpdatedAt",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastUpdatedAt",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The time at which the custom terminology was last update, based on the timestamp.</p>\n@param lastUpdatedAt The time at which the custom terminology was last update, based on the timestamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastUpdatedAt",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The time at which the custom terminology was last update, based on the timestamp.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "ResourceName",
          "deprecated" : false,
          "documentation" : "<p>The name of the custom terminology.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the custom terminology.</p>\n@param name The name of the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the custom terminology.</p>\n@return The name of the custom terminology.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the custom terminology.</p>\n@param name The name of the custom terminology.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the custom terminology.</p>\n@param name The name of the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the custom terminology.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SizeBytes" : {
          "c2jName" : "SizeBytes",
          "c2jShape" : "Integer",
          "deprecated" : false,
          "documentation" : "<p>The size of the file used when importing a custom terminology.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The size of the file used when importing a custom terminology.</p>\n@param sizeBytes The size of the file used when importing a custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSizeBytes",
          "getterDocumentation" : "/**<p>The size of the file used when importing a custom terminology.</p>\n@return The size of the file used when importing a custom terminology.*/",
          "getterMethodName" : "getSizeBytes",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SizeBytes",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SizeBytes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "SizeBytes",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The size of the file used when importing a custom terminology.</p>\n@param sizeBytes The size of the file used when importing a custom terminology.*/",
          "setterMethodName" : "setSizeBytes",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "sizeBytes",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The size of the file used when importing a custom terminology.</p>\n@param sizeBytes The size of the file used when importing a custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "sizeBytes",
            "variableType" : "Integer",
            "documentation" : "<p>The size of the file used when importing a custom terminology.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "SourceLanguageCode" : {
          "c2jName" : "SourceLanguageCode",
          "c2jShape" : "LanguageCodeString",
          "deprecated" : false,
          "documentation" : "<p>The language code for the source text of the translation request for which the custom terminology is being used.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The language code for the source text of the translation request for which the custom terminology is being used.</p>\n@param sourceLanguageCode The language code for the source text of the translation request for which the custom terminology is being used.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSourceLanguageCode",
          "getterDocumentation" : "/**<p>The language code for the source text of the translation request for which the custom terminology is being used.</p>\n@return The language code for the source text of the translation request for which the custom terminology is being used.*/",
          "getterMethodName" : "getSourceLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SourceLanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SourceLanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SourceLanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code for the source text of the translation request for which the custom terminology is being used.</p>\n@param sourceLanguageCode The language code for the source text of the translation request for which the custom terminology is being used.*/",
          "setterMethodName" : "setSourceLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sourceLanguageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code for the source text of the translation request for which the custom terminology is being used.</p>\n@param sourceLanguageCode The language code for the source text of the translation request for which the custom terminology is being used.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sourceLanguageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code for the source text of the translation request for which the custom terminology is being used.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetLanguageCodes" : {
          "c2jName" : "TargetLanguageCodes",
          "c2jShape" : "LanguageCodeStringList",
          "deprecated" : false,
          "documentation" : "<p>The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.</p>\n@param targetLanguageCodes The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargetLanguageCodes",
          "getterDocumentation" : "/**<p>The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.</p>\n@return The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.*/",
          "getterMethodName" : "getTargetLanguageCodes",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TargetLanguageCodes",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TargetLanguageCodes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "LanguageCodeString",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "TargetLanguageCodes",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.</p>\n@param targetLanguageCodes The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.*/",
          "setterMethodName" : "setTargetLanguageCodes",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "targetLanguageCodes",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTargetLanguageCodes(java.util.Collection)} or {@link #withTargetLanguageCodes(java.util.Collection)} if you want to override the existing values.</p>\n@param targetLanguageCodes The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "targetLanguageCodes",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "TermCount" : {
          "c2jName" : "TermCount",
          "c2jShape" : "Integer",
          "deprecated" : false,
          "documentation" : "<p>The number of terms included in the custom terminology.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The number of terms included in the custom terminology.</p>\n@param termCount The number of terms included in the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTermCount",
          "getterDocumentation" : "/**<p>The number of terms included in the custom terminology.</p>\n@return The number of terms included in the custom terminology.*/",
          "getterMethodName" : "getTermCount",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TermCount",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TermCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "TermCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The number of terms included in the custom terminology.</p>\n@param termCount The number of terms included in the custom terminology.*/",
          "setterMethodName" : "setTermCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "termCount",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The number of terms included in the custom terminology.</p>\n@param termCount The number of terms included in the custom terminology.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "termCount",
            "variableType" : "Integer",
            "documentation" : "<p>The number of terms included in the custom terminology.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TerminologyProperties",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TerminologyProperties",
        "variableName" : "terminologyProperties",
        "variableType" : "TerminologyProperties",
        "documentation" : null,
        "simpleType" : "TerminologyProperties",
        "variableSetterType" : "TerminologyProperties"
      },
      "wrapper" : false
    },
    "TextSizeLimitExceededException" : {
      "c2jName" : "TextSizeLimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> The size of the text you submitted exceeds the size limit. Reduce the size of the text or use a smaller document and then retry your request. </p>",
      "enums" : null,
      "errorCode" : "TextSizeLimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TextSizeLimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TextSizeLimitExceededException",
        "variableName" : "textSizeLimitExceededException",
        "variableType" : "TextSizeLimitExceededException",
        "documentation" : null,
        "simpleType" : "TextSizeLimitExceededException",
        "variableSetterType" : "TextSizeLimitExceededException"
      },
      "wrapper" : false
    },
    "TooManyRequestsException" : {
      "c2jName" : "TooManyRequestsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> You have made too many requests within a short period of time. Wait for a short time and then try your request again.</p>",
      "enums" : null,
      "errorCode" : "TooManyRequestsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TooManyRequestsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TooManyRequestsException",
        "variableName" : "tooManyRequestsException",
        "variableType" : "TooManyRequestsException",
        "documentation" : null,
        "simpleType" : "TooManyRequestsException",
        "variableSetterType" : "TooManyRequestsException"
      },
      "wrapper" : false
    },
    "TranslateTextRequest" : {
      "c2jName" : "TranslateTextRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "TranslateText",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSShineFrontendService_20170701.TranslateText",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Text",
        "c2jShape" : "BoundedLengthString",
        "deprecated" : false,
        "documentation" : "<p>The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.</p>\n@param text The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withText",
        "getterDocumentation" : "/**<p>The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.</p>\n@return The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.*/",
        "getterMethodName" : "getText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Text",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Text",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Text",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.</p>\n@param text The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.*/",
        "setterMethodName" : "setText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "text",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.</p>\n@param text The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "text",
          "variableType" : "String",
          "documentation" : "<p>The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TerminologyNames",
        "c2jShape" : "ResourceNameList",
        "deprecated" : false,
        "documentation" : "<p>The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.</p>\n@param terminologyNames The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTerminologyNames",
        "getterDocumentation" : "/**<p>The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.</p>\n@return The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.*/",
        "getterMethodName" : "getTerminologyNames",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TerminologyNames",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TerminologyNames",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResourceName",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "TerminologyNames",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.</p>\n@param terminologyNames The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.*/",
        "setterMethodName" : "setTerminologyNames",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "terminologyNames",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTerminologyNames(java.util.Collection)} or {@link #withTerminologyNames(java.util.Collection)} if you want to override the existing values.</p>\n@param terminologyNames The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "terminologyNames",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SourceLanguageCode",
        "c2jShape" : "LanguageCodeString",
        "deprecated" : false,
        "documentation" : "<p>The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>\n@param sourceLanguageCode The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSourceLanguageCode",
        "getterDocumentation" : "/**<p>The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>\n@return The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.*/",
        "getterMethodName" : "getSourceLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SourceLanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SourceLanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SourceLanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>\n@param sourceLanguageCode The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.*/",
        "setterMethodName" : "setSourceLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sourceLanguageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>\n@param sourceLanguageCode The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sourceLanguageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TargetLanguageCode",
        "c2jShape" : "LanguageCodeString",
        "deprecated" : false,
        "documentation" : "<p>The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.</p>\n@param targetLanguageCode The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargetLanguageCode",
        "getterDocumentation" : "/**<p>The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.</p>\n@return The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.*/",
        "getterMethodName" : "getTargetLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TargetLanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TargetLanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TargetLanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.</p>\n@param targetLanguageCode The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.*/",
        "setterMethodName" : "setTargetLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "targetLanguageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.</p>\n@param targetLanguageCode The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "targetLanguageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "SourceLanguageCode" : {
          "c2jName" : "SourceLanguageCode",
          "c2jShape" : "LanguageCodeString",
          "deprecated" : false,
          "documentation" : "<p>The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>\n@param sourceLanguageCode The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSourceLanguageCode",
          "getterDocumentation" : "/**<p>The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>\n@return The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.*/",
          "getterMethodName" : "getSourceLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SourceLanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SourceLanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SourceLanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>\n@param sourceLanguageCode The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.*/",
          "setterMethodName" : "setSourceLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sourceLanguageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>\n@param sourceLanguageCode The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sourceLanguageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code for the language of the source text. The language must be a language supported by Amazon Translate. </p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetLanguageCode" : {
          "c2jName" : "TargetLanguageCode",
          "c2jShape" : "LanguageCodeString",
          "deprecated" : false,
          "documentation" : "<p>The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.</p>\n@param targetLanguageCode The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargetLanguageCode",
          "getterDocumentation" : "/**<p>The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.</p>\n@return The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.*/",
          "getterMethodName" : "getTargetLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TargetLanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TargetLanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TargetLanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.</p>\n@param targetLanguageCode The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.*/",
          "setterMethodName" : "setTargetLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "targetLanguageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.</p>\n@param targetLanguageCode The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "targetLanguageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TerminologyNames" : {
          "c2jName" : "TerminologyNames",
          "c2jShape" : "ResourceNameList",
          "deprecated" : false,
          "documentation" : "<p>The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.</p>\n@param terminologyNames The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTerminologyNames",
          "getterDocumentation" : "/**<p>The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.</p>\n@return The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.*/",
          "getterMethodName" : "getTerminologyNames",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TerminologyNames",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TerminologyNames",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResourceName",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "TerminologyNames",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.</p>\n@param terminologyNames The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.*/",
          "setterMethodName" : "setTerminologyNames",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "terminologyNames",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTerminologyNames(java.util.Collection)} or {@link #withTerminologyNames(java.util.Collection)} if you want to override the existing values.</p>\n@param terminologyNames The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "terminologyNames",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The TerminologyNames list that is taken as input to the TranslateText request. This has a minimum length of 0 and a maximum length of 1.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "Text" : {
          "c2jName" : "Text",
          "c2jShape" : "BoundedLengthString",
          "deprecated" : false,
          "documentation" : "<p>The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.</p>\n@param text The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withText",
          "getterDocumentation" : "/**<p>The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.</p>\n@return The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.*/",
          "getterMethodName" : "getText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Text",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Text",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Text",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.</p>\n@param text The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.*/",
          "setterMethodName" : "setText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "text",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.</p>\n@param text The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "text",
            "variableType" : "String",
            "documentation" : "<p>The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Text", "SourceLanguageCode", "TargetLanguageCode" ],
      "shapeName" : "TranslateTextRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TranslateTextRequest",
        "variableName" : "translateTextRequest",
        "variableType" : "TranslateTextRequest",
        "documentation" : null,
        "simpleType" : "TranslateTextRequest",
        "variableSetterType" : "TranslateTextRequest"
      },
      "wrapper" : false
    },
    "TranslateTextResult" : {
      "c2jName" : "TranslateTextResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "TranslatedText",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>The the translated text. The maximum length of this text is 5kb.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The the translated text. The maximum length of this text is 5kb.</p>\n@param translatedText The the translated text. The maximum length of this text is 5kb.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTranslatedText",
        "getterDocumentation" : "/**<p>The the translated text. The maximum length of this text is 5kb.</p>\n@return The the translated text. The maximum length of this text is 5kb.*/",
        "getterMethodName" : "getTranslatedText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TranslatedText",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TranslatedText",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TranslatedText",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The the translated text. The maximum length of this text is 5kb.</p>\n@param translatedText The the translated text. The maximum length of this text is 5kb.*/",
        "setterMethodName" : "setTranslatedText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "translatedText",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The the translated text. The maximum length of this text is 5kb.</p>\n@param translatedText The the translated text. The maximum length of this text is 5kb.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "translatedText",
          "variableType" : "String",
          "documentation" : "<p>The the translated text. The maximum length of this text is 5kb.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SourceLanguageCode",
        "c2jShape" : "LanguageCodeString",
        "deprecated" : false,
        "documentation" : "<p>The language code for the language of the source text. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The language code for the language of the source text. </p>\n@param sourceLanguageCode The language code for the language of the source text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSourceLanguageCode",
        "getterDocumentation" : "/**<p>The language code for the language of the source text. </p>\n@return The language code for the language of the source text.*/",
        "getterMethodName" : "getSourceLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SourceLanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SourceLanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SourceLanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code for the language of the source text. </p>\n@param sourceLanguageCode The language code for the language of the source text.*/",
        "setterMethodName" : "setSourceLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sourceLanguageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code for the language of the source text. </p>\n@param sourceLanguageCode The language code for the language of the source text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sourceLanguageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code for the language of the source text. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TargetLanguageCode",
        "c2jShape" : "LanguageCodeString",
        "deprecated" : false,
        "documentation" : "<p>The language code for the language of the target text. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The language code for the language of the target text. </p>\n@param targetLanguageCode The language code for the language of the target text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargetLanguageCode",
        "getterDocumentation" : "/**<p>The language code for the language of the target text. </p>\n@return The language code for the language of the target text.*/",
        "getterMethodName" : "getTargetLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TargetLanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TargetLanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TargetLanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code for the language of the target text. </p>\n@param targetLanguageCode The language code for the language of the target text.*/",
        "setterMethodName" : "setTargetLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "targetLanguageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code for the language of the target text. </p>\n@param targetLanguageCode The language code for the language of the target text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "targetLanguageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code for the language of the target text. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "AppliedTerminologies",
        "c2jShape" : "AppliedTerminologyList",
        "deprecated" : false,
        "documentation" : "<p>The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.</p>\n@param appliedTerminologies The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAppliedTerminologies",
        "getterDocumentation" : "/**<p>The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.</p>\n@return The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.*/",
        "getterMethodName" : "getAppliedTerminologies",
        "getterModel" : {
          "returnType" : "java.util.List<AppliedTerminology>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "AppliedTerminologies",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "AppliedTerminologies",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "AppliedTerminology",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "AppliedTerminology",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "AppliedTerminology",
              "variableName" : "member",
              "variableType" : "AppliedTerminology",
              "documentation" : "",
              "simpleType" : "AppliedTerminology",
              "variableSetterType" : "AppliedTerminology"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "AppliedTerminology",
              "variableName" : "member",
              "variableType" : "AppliedTerminology",
              "documentation" : "",
              "simpleType" : "AppliedTerminology",
              "variableSetterType" : "AppliedTerminology"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "AppliedTerminology",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "AppliedTerminology",
          "templateImplType" : "java.util.ArrayList<AppliedTerminology>",
          "templateType" : "java.util.List<AppliedTerminology>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "AppliedTerminologies",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.</p>\n@param appliedTerminologies The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.*/",
        "setterMethodName" : "setAppliedTerminologies",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<AppliedTerminology>",
          "variableName" : "appliedTerminologies",
          "variableType" : "java.util.List<AppliedTerminology>",
          "documentation" : "",
          "simpleType" : "List<AppliedTerminology>",
          "variableSetterType" : "java.util.Collection<AppliedTerminology>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAppliedTerminologies(java.util.Collection)} or {@link #withAppliedTerminologies(java.util.Collection)} if you want to override the existing values.</p>\n@param appliedTerminologies The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<AppliedTerminology>",
          "variableName" : "appliedTerminologies",
          "variableType" : "java.util.List<AppliedTerminology>",
          "documentation" : "<p>The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.</p>",
          "simpleType" : "List<AppliedTerminology>",
          "variableSetterType" : "java.util.Collection<AppliedTerminology>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AppliedTerminologies" : {
          "c2jName" : "AppliedTerminologies",
          "c2jShape" : "AppliedTerminologyList",
          "deprecated" : false,
          "documentation" : "<p>The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.</p>\n@param appliedTerminologies The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAppliedTerminologies",
          "getterDocumentation" : "/**<p>The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.</p>\n@return The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.*/",
          "getterMethodName" : "getAppliedTerminologies",
          "getterModel" : {
            "returnType" : "java.util.List<AppliedTerminology>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "AppliedTerminologies",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "AppliedTerminologies",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "AppliedTerminology",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "AppliedTerminology",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "AppliedTerminology",
                "variableName" : "member",
                "variableType" : "AppliedTerminology",
                "documentation" : "",
                "simpleType" : "AppliedTerminology",
                "variableSetterType" : "AppliedTerminology"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "AppliedTerminology",
                "variableName" : "member",
                "variableType" : "AppliedTerminology",
                "documentation" : "",
                "simpleType" : "AppliedTerminology",
                "variableSetterType" : "AppliedTerminology"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "AppliedTerminology",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "AppliedTerminology",
            "templateImplType" : "java.util.ArrayList<AppliedTerminology>",
            "templateType" : "java.util.List<AppliedTerminology>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "AppliedTerminologies",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.</p>\n@param appliedTerminologies The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.*/",
          "setterMethodName" : "setAppliedTerminologies",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<AppliedTerminology>",
            "variableName" : "appliedTerminologies",
            "variableType" : "java.util.List<AppliedTerminology>",
            "documentation" : "",
            "simpleType" : "List<AppliedTerminology>",
            "variableSetterType" : "java.util.Collection<AppliedTerminology>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAppliedTerminologies(java.util.Collection)} or {@link #withAppliedTerminologies(java.util.Collection)} if you want to override the existing values.</p>\n@param appliedTerminologies The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<AppliedTerminology>",
            "variableName" : "appliedTerminologies",
            "variableType" : "java.util.List<AppliedTerminology>",
            "documentation" : "<p>The names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.</p>",
            "simpleType" : "List<AppliedTerminology>",
            "variableSetterType" : "java.util.Collection<AppliedTerminology>"
          },
          "xmlNameSpaceUri" : null
        },
        "SourceLanguageCode" : {
          "c2jName" : "SourceLanguageCode",
          "c2jShape" : "LanguageCodeString",
          "deprecated" : false,
          "documentation" : "<p>The language code for the language of the source text. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The language code for the language of the source text. </p>\n@param sourceLanguageCode The language code for the language of the source text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSourceLanguageCode",
          "getterDocumentation" : "/**<p>The language code for the language of the source text. </p>\n@return The language code for the language of the source text.*/",
          "getterMethodName" : "getSourceLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SourceLanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SourceLanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SourceLanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code for the language of the source text. </p>\n@param sourceLanguageCode The language code for the language of the source text.*/",
          "setterMethodName" : "setSourceLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sourceLanguageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code for the language of the source text. </p>\n@param sourceLanguageCode The language code for the language of the source text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sourceLanguageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code for the language of the source text. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetLanguageCode" : {
          "c2jName" : "TargetLanguageCode",
          "c2jShape" : "LanguageCodeString",
          "deprecated" : false,
          "documentation" : "<p>The language code for the language of the target text. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The language code for the language of the target text. </p>\n@param targetLanguageCode The language code for the language of the target text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargetLanguageCode",
          "getterDocumentation" : "/**<p>The language code for the language of the target text. </p>\n@return The language code for the language of the target text.*/",
          "getterMethodName" : "getTargetLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TargetLanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TargetLanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TargetLanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code for the language of the target text. </p>\n@param targetLanguageCode The language code for the language of the target text.*/",
          "setterMethodName" : "setTargetLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "targetLanguageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code for the language of the target text. </p>\n@param targetLanguageCode The language code for the language of the target text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "targetLanguageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code for the language of the target text. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TranslatedText" : {
          "c2jName" : "TranslatedText",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>The the translated text. The maximum length of this text is 5kb.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The the translated text. The maximum length of this text is 5kb.</p>\n@param translatedText The the translated text. The maximum length of this text is 5kb.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTranslatedText",
          "getterDocumentation" : "/**<p>The the translated text. The maximum length of this text is 5kb.</p>\n@return The the translated text. The maximum length of this text is 5kb.*/",
          "getterMethodName" : "getTranslatedText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TranslatedText",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TranslatedText",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TranslatedText",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The the translated text. The maximum length of this text is 5kb.</p>\n@param translatedText The the translated text. The maximum length of this text is 5kb.*/",
          "setterMethodName" : "setTranslatedText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "translatedText",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The the translated text. The maximum length of this text is 5kb.</p>\n@param translatedText The the translated text. The maximum length of this text is 5kb.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "translatedText",
            "variableType" : "String",
            "documentation" : "<p>The the translated text. The maximum length of this text is 5kb.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "TranslatedText", "SourceLanguageCode", "TargetLanguageCode" ],
      "shapeName" : "TranslateTextResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TranslateTextResult",
        "variableName" : "translateTextResult",
        "variableType" : "TranslateTextResult",
        "documentation" : null,
        "simpleType" : "TranslateTextResult",
        "variableSetterType" : "TranslateTextResult"
      },
      "wrapper" : false
    },
    "UnsupportedLanguagePairException" : {
      "c2jName" : "UnsupportedLanguagePairException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Amazon Translate does not support translation from the language of the source text into the requested target language. For more information, see <a>how-to-error-msg</a>. </p>",
      "enums" : null,
      "errorCode" : "UnsupportedLanguagePairException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "SourceLanguageCode",
        "c2jShape" : "LanguageCodeString",
        "deprecated" : false,
        "documentation" : "<p>The language code for the language of the input text. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The language code for the language of the input text. </p>\n@param sourceLanguageCode The language code for the language of the input text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSourceLanguageCode",
        "getterDocumentation" : "/**<p>The language code for the language of the input text. </p>\n@return The language code for the language of the input text.*/",
        "getterMethodName" : "getSourceLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SourceLanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SourceLanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SourceLanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code for the language of the input text. </p>\n@param sourceLanguageCode The language code for the language of the input text.*/",
        "setterMethodName" : "setSourceLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sourceLanguageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code for the language of the input text. </p>\n@param sourceLanguageCode The language code for the language of the input text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sourceLanguageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code for the language of the input text. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TargetLanguageCode",
        "c2jShape" : "LanguageCodeString",
        "deprecated" : false,
        "documentation" : "<p>The language code for the language of the translated text. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The language code for the language of the translated text. </p>\n@param targetLanguageCode The language code for the language of the translated text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargetLanguageCode",
        "getterDocumentation" : "/**<p>The language code for the language of the translated text. </p>\n@return The language code for the language of the translated text.*/",
        "getterMethodName" : "getTargetLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TargetLanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TargetLanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TargetLanguageCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The language code for the language of the translated text. </p>\n@param targetLanguageCode The language code for the language of the translated text.*/",
        "setterMethodName" : "setTargetLanguageCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "targetLanguageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code for the language of the translated text. </p>\n@param targetLanguageCode The language code for the language of the translated text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "targetLanguageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code for the language of the translated text. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "SourceLanguageCode" : {
          "c2jName" : "SourceLanguageCode",
          "c2jShape" : "LanguageCodeString",
          "deprecated" : false,
          "documentation" : "<p>The language code for the language of the input text. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The language code for the language of the input text. </p>\n@param sourceLanguageCode The language code for the language of the input text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSourceLanguageCode",
          "getterDocumentation" : "/**<p>The language code for the language of the input text. </p>\n@return The language code for the language of the input text.*/",
          "getterMethodName" : "getSourceLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SourceLanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SourceLanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SourceLanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code for the language of the input text. </p>\n@param sourceLanguageCode The language code for the language of the input text.*/",
          "setterMethodName" : "setSourceLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sourceLanguageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code for the language of the input text. </p>\n@param sourceLanguageCode The language code for the language of the input text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sourceLanguageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code for the language of the input text. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetLanguageCode" : {
          "c2jName" : "TargetLanguageCode",
          "c2jShape" : "LanguageCodeString",
          "deprecated" : false,
          "documentation" : "<p>The language code for the language of the translated text. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The language code for the language of the translated text. </p>\n@param targetLanguageCode The language code for the language of the translated text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargetLanguageCode",
          "getterDocumentation" : "/**<p>The language code for the language of the translated text. </p>\n@return The language code for the language of the translated text.*/",
          "getterMethodName" : "getTargetLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TargetLanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TargetLanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TargetLanguageCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The language code for the language of the translated text. </p>\n@param targetLanguageCode The language code for the language of the translated text.*/",
          "setterMethodName" : "setTargetLanguageCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "targetLanguageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code for the language of the translated text. </p>\n@param targetLanguageCode The language code for the language of the translated text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "targetLanguageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code for the language of the translated text. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UnsupportedLanguagePairException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UnsupportedLanguagePairException",
        "variableName" : "unsupportedLanguagePairException",
        "variableType" : "UnsupportedLanguagePairException",
        "documentation" : null,
        "simpleType" : "UnsupportedLanguagePairException",
        "variableSetterType" : "UnsupportedLanguagePairException"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "examples" : {
    "examples" : { },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2014-2019 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AmazonTranslateException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.translate.model.AmazonTranslateException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.translate.model.transform"
}