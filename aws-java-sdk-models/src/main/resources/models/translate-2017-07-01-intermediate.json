{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "contentTypeOverride" : null,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "ClientMutationMethods", "ClientConstructors", "EnumSetterOverload" ],
    "emitLegacyEnumSetterFor" : null,
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipClientMethodForOperations" : [ ],
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : true,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false
  },
  "metadata" : {
    "apiVersion" : "2017-07-01",
    "asyncClient" : "AmazonTranslateAsyncClient",
    "asyncClientBuilderClassName" : "AmazonTranslateAsyncClientBuilder",
    "asyncInterface" : "AmazonTranslateAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : null,
    "cucumberModuleInjectorClassName" : "AmazonTranslateModuleInjector",
    "defaultEndpoint" : "translate.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "translate.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<p>Provides translation between English and one of six languages, or between one of the six languages and English.</p>",
    "endpointPrefix" : "translate",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.translate",
    "packagePath" : "com/amazonaws/services/translate",
    "protocol" : "json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : null,
    "serviceFullName" : "Amazon Translate",
    "serviceName" : "Amazon Translate",
    "signingName" : "translate",
    "smokeTestsPackageName" : "com.amazonaws.services.translate.smoketests",
    "syncClient" : "AmazonTranslateClient",
    "syncClientBuilderClassName" : "AmazonTranslateClientBuilder",
    "syncInterface" : "AmazonTranslate",
    "uid" : "translate-2017-07-01",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "TranslateText" : {
      "asyncCallableType" : "java.util.concurrent.Callable<TranslateTextResult>",
      "asyncFutureType" : "java.util.concurrent.Future<TranslateTextResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<TranslateTextRequest, TranslateTextResult>",
      "asyncReturnType" : "TranslateTextResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Translates input text from the source language to the target language. You can translate between English (en) and one of the following languages, or between one of the following languages and English.</p> <ul> <li> <p>Arabic (ar)</p> </li> <li> <p>Chinese (Simplified) (zh)</p> </li> <li> <p>French (fr)</p> </li> <li> <p>German (de)</p> </li> <li> <p>Portuguese (pt)</p> </li> <li> <p>Spanish (es)</p> </li> </ul> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TextSizeLimitExceededException",
        "documentation" : "<p>The size of the input text exceeds the length constraint for the <code>Text</code> field. Try again with a shorter text. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "<p>The number of requests exceeds the limit. Resubmit your request later.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "UnsupportedLanguagePairException",
        "documentation" : "<p>Amazon Translate cannot translate input text in the source language into this target language. For more information, see <a>how-to-error-msg</a>. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "DetectedLanguageLowConfidenceException",
        "documentation" : "<p>The confidence that Amazon Comprehend accurately detected the source language is low. If a low confidence level is acceptable for your application, you can use the language in the exception to call Amazon Translate again. For more information, see the <a href=\"https://docs.aws.amazon.com/comprehend/latest/dg/API_DetectDominantLanguage.html\">DetectDominantLanguage</a> operation in the <i>Amazon Comprehend Developer Guide</i>.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p>An internal server error occurred. Retry your request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>Amazon Translate is unavailable. Retry your request later.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "TranslateTextRequest",
        "variableName" : "translateTextRequest",
        "variableType" : "TranslateTextRequest",
        "documentation" : "",
        "simpleType" : "TranslateTextRequest",
        "variableSetterType" : "TranslateTextRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "translateText",
      "operationName" : "TranslateText",
      "returnType" : {
        "returnType" : "TranslateTextResult",
        "documentation" : null
      },
      "syncReturnType" : "TranslateTextResult"
    }
  },
  "shapes" : {
    "DetectedLanguageLowConfidenceException" : {
      "c2jName" : "DetectedLanguageLowConfidenceException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The confidence that Amazon Comprehend accurately detected the source language is low. If a low confidence level is acceptable for your application, you can use the language in the exception to call Amazon Translate again. For more information, see the <a href=\"https://docs.aws.amazon.com/comprehend/latest/dg/API_DetectDominantLanguage.html\">DetectDominantLanguage</a> operation in the <i>Amazon Comprehend Developer Guide</i>.</p>",
      "enums" : null,
      "errorCode" : "DetectedLanguageLowConfidenceException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "DetectedLanguageCode",
        "c2jShape" : "LanguageCodeString",
        "deprecated" : false,
        "documentation" : "<p>Auto detected language code from Comprehend.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Auto detected language code from Comprehend.</p>\n@param detectedLanguageCode Auto detected language code from Comprehend.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDetectedLanguageCode",
        "getterDocumentation" : "/**<p>Auto detected language code from Comprehend.</p>\n@return Auto detected language code from Comprehend.*/",
        "getterMethodName" : "getDetectedLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "DetectedLanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "DetectedLanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DetectedLanguageCode",
        "setterDocumentation" : "/**<p>Auto detected language code from Comprehend.</p>\n@param detectedLanguageCode Auto detected language code from Comprehend.*/",
        "setterMethodName" : "setDetectedLanguageCode",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "detectedLanguageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Auto detected language code from Comprehend.</p>\n@param detectedLanguageCode Auto detected language code from Comprehend.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "detectedLanguageCode",
          "variableType" : "String",
          "documentation" : "<p>Auto detected language code from Comprehend.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DetectedLanguageCode" : {
          "c2jName" : "DetectedLanguageCode",
          "c2jShape" : "LanguageCodeString",
          "deprecated" : false,
          "documentation" : "<p>Auto detected language code from Comprehend.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Auto detected language code from Comprehend.</p>\n@param detectedLanguageCode Auto detected language code from Comprehend.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDetectedLanguageCode",
          "getterDocumentation" : "/**<p>Auto detected language code from Comprehend.</p>\n@return Auto detected language code from Comprehend.*/",
          "getterMethodName" : "getDetectedLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "DetectedLanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "DetectedLanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DetectedLanguageCode",
          "setterDocumentation" : "/**<p>Auto detected language code from Comprehend.</p>\n@param detectedLanguageCode Auto detected language code from Comprehend.*/",
          "setterMethodName" : "setDetectedLanguageCode",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "detectedLanguageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Auto detected language code from Comprehend.</p>\n@param detectedLanguageCode Auto detected language code from Comprehend.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "detectedLanguageCode",
            "variableType" : "String",
            "documentation" : "<p>Auto detected language code from Comprehend.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DetectedLanguageLowConfidenceException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DetectedLanguageLowConfidenceException",
        "variableName" : "detectedLanguageLowConfidenceException",
        "variableType" : "DetectedLanguageLowConfidenceException",
        "documentation" : null,
        "simpleType" : "DetectedLanguageLowConfidenceException",
        "variableSetterType" : "DetectedLanguageLowConfidenceException"
      },
      "wrapper" : false
    },
    "InternalServerException" : {
      "c2jName" : "InternalServerException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An internal server error occurred. Retry your request.</p>",
      "enums" : null,
      "errorCode" : "InternalServerException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InternalServerException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InternalServerException",
        "variableName" : "internalServerException",
        "variableType" : "InternalServerException",
        "documentation" : null,
        "simpleType" : "InternalServerException",
        "variableSetterType" : "InternalServerException"
      },
      "wrapper" : false
    },
    "InvalidRequestException" : {
      "c2jName" : "InvalidRequestException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The request is invalid.</p>",
      "enums" : null,
      "errorCode" : "InvalidRequestException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRequestException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRequestException",
        "variableName" : "invalidRequestException",
        "variableType" : "InvalidRequestException",
        "documentation" : null,
        "simpleType" : "InvalidRequestException",
        "variableSetterType" : "InvalidRequestException"
      },
      "wrapper" : false
    },
    "ServiceUnavailableException" : {
      "c2jName" : "ServiceUnavailableException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Amazon Translate is unavailable. Retry your request later.</p>",
      "enums" : null,
      "errorCode" : "ServiceUnavailableException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ServiceUnavailableException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ServiceUnavailableException",
        "variableName" : "serviceUnavailableException",
        "variableType" : "ServiceUnavailableException",
        "documentation" : null,
        "simpleType" : "ServiceUnavailableException",
        "variableSetterType" : "ServiceUnavailableException"
      },
      "wrapper" : false
    },
    "TextSizeLimitExceededException" : {
      "c2jName" : "TextSizeLimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The size of the input text exceeds the length constraint for the <code>Text</code> field. Try again with a shorter text. </p>",
      "enums" : null,
      "errorCode" : "TextSizeLimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TextSizeLimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "TextSizeLimitExceededException",
        "variableName" : "textSizeLimitExceededException",
        "variableType" : "TextSizeLimitExceededException",
        "documentation" : null,
        "simpleType" : "TextSizeLimitExceededException",
        "variableSetterType" : "TextSizeLimitExceededException"
      },
      "wrapper" : false
    },
    "TooManyRequestsException" : {
      "c2jName" : "TooManyRequestsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The number of requests exceeds the limit. Resubmit your request later.</p>",
      "enums" : null,
      "errorCode" : "TooManyRequestsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TooManyRequestsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "TooManyRequestsException",
        "variableName" : "tooManyRequestsException",
        "variableType" : "TooManyRequestsException",
        "documentation" : null,
        "simpleType" : "TooManyRequestsException",
        "variableSetterType" : "TooManyRequestsException"
      },
      "wrapper" : false
    },
    "TranslateTextRequest" : {
      "c2jName" : "TranslateTextRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "TranslateText",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSShineFrontendService_20170701.TranslateText",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Text",
        "c2jShape" : "BoundedLengthString",
        "deprecated" : false,
        "documentation" : "<p>The text to translate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The text to translate.</p>\n@param text The text to translate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withText",
        "getterDocumentation" : "/**<p>The text to translate.</p>\n@return The text to translate.*/",
        "getterMethodName" : "getText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Text",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Text",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Text",
        "setterDocumentation" : "/**<p>The text to translate.</p>\n@param text The text to translate.*/",
        "setterMethodName" : "setText",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "text",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The text to translate.</p>\n@param text The text to translate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "text",
          "variableType" : "String",
          "documentation" : "<p>The text to translate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SourceLanguageCode",
        "c2jShape" : "LanguageCodeString",
        "deprecated" : false,
        "documentation" : "<p>One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>\n@param sourceLanguageCode One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSourceLanguageCode",
        "getterDocumentation" : "/**<p>One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>\n@return One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.*/",
        "getterMethodName" : "getSourceLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SourceLanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SourceLanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SourceLanguageCode",
        "setterDocumentation" : "/**<p>One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>\n@param sourceLanguageCode One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.*/",
        "setterMethodName" : "setSourceLanguageCode",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceLanguageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>\n@param sourceLanguageCode One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceLanguageCode",
          "variableType" : "String",
          "documentation" : "<p>One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TargetLanguageCode",
        "c2jShape" : "LanguageCodeString",
        "deprecated" : false,
        "documentation" : "<p>One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".</p>\n@param targetLanguageCode One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargetLanguageCode",
        "getterDocumentation" : "/**<p>One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".</p>\n@return One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".*/",
        "getterMethodName" : "getTargetLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TargetLanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TargetLanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TargetLanguageCode",
        "setterDocumentation" : "/**<p>One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".</p>\n@param targetLanguageCode One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".*/",
        "setterMethodName" : "setTargetLanguageCode",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "targetLanguageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".</p>\n@param targetLanguageCode One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "targetLanguageCode",
          "variableType" : "String",
          "documentation" : "<p>One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "SourceLanguageCode" : {
          "c2jName" : "SourceLanguageCode",
          "c2jShape" : "LanguageCodeString",
          "deprecated" : false,
          "documentation" : "<p>One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>\n@param sourceLanguageCode One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSourceLanguageCode",
          "getterDocumentation" : "/**<p>One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>\n@return One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.*/",
          "getterMethodName" : "getSourceLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SourceLanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SourceLanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SourceLanguageCode",
          "setterDocumentation" : "/**<p>One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>\n@param sourceLanguageCode One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.*/",
          "setterMethodName" : "setSourceLanguageCode",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceLanguageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>\n@param sourceLanguageCode One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceLanguageCode",
            "variableType" : "String",
            "documentation" : "<p>One of the supported language codes for the source text. If the <code>TargetLanguageCode</code> is not \"en\", the <code>SourceLanguageCode</code> must be \"en\".</p> <p>To have Amazon Translate determine the source language of your text, you can specify <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>, Amazon Translate will call Amazon Comprehend to determine the source language.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetLanguageCode" : {
          "c2jName" : "TargetLanguageCode",
          "c2jShape" : "LanguageCodeString",
          "deprecated" : false,
          "documentation" : "<p>One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".</p>\n@param targetLanguageCode One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargetLanguageCode",
          "getterDocumentation" : "/**<p>One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".</p>\n@return One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".*/",
          "getterMethodName" : "getTargetLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TargetLanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TargetLanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TargetLanguageCode",
          "setterDocumentation" : "/**<p>One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".</p>\n@param targetLanguageCode One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".*/",
          "setterMethodName" : "setTargetLanguageCode",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "targetLanguageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".</p>\n@param targetLanguageCode One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "targetLanguageCode",
            "variableType" : "String",
            "documentation" : "<p>One of the supported language codes for the target text. If the <code>SourceLanguageCode</code> is not \"en\", the <code>TargetLanguageCode</code> must be \"en\".</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Text" : {
          "c2jName" : "Text",
          "c2jShape" : "BoundedLengthString",
          "deprecated" : false,
          "documentation" : "<p>The text to translate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The text to translate.</p>\n@param text The text to translate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withText",
          "getterDocumentation" : "/**<p>The text to translate.</p>\n@return The text to translate.*/",
          "getterMethodName" : "getText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Text",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Text",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Text",
          "setterDocumentation" : "/**<p>The text to translate.</p>\n@param text The text to translate.*/",
          "setterMethodName" : "setText",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "text",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The text to translate.</p>\n@param text The text to translate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "text",
            "variableType" : "String",
            "documentation" : "<p>The text to translate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Text", "SourceLanguageCode", "TargetLanguageCode" ],
      "shapeName" : "TranslateTextRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "TranslateTextRequest",
        "variableName" : "translateTextRequest",
        "variableType" : "TranslateTextRequest",
        "documentation" : null,
        "simpleType" : "TranslateTextRequest",
        "variableSetterType" : "TranslateTextRequest"
      },
      "wrapper" : false
    },
    "TranslateTextResult" : {
      "c2jName" : "TranslateTextResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "TranslatedText",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>The text translated into the target language.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The text translated into the target language.</p>\n@param translatedText The text translated into the target language.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTranslatedText",
        "getterDocumentation" : "/**<p>The text translated into the target language.</p>\n@return The text translated into the target language.*/",
        "getterMethodName" : "getTranslatedText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TranslatedText",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TranslatedText",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TranslatedText",
        "setterDocumentation" : "/**<p>The text translated into the target language.</p>\n@param translatedText The text translated into the target language.*/",
        "setterMethodName" : "setTranslatedText",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "translatedText",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The text translated into the target language.</p>\n@param translatedText The text translated into the target language.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "translatedText",
          "variableType" : "String",
          "documentation" : "<p>The text translated into the target language.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SourceLanguageCode",
        "c2jShape" : "LanguageCodeString",
        "deprecated" : false,
        "documentation" : "<p>The language code for the language of the input text. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The language code for the language of the input text. </p>\n@param sourceLanguageCode The language code for the language of the input text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSourceLanguageCode",
        "getterDocumentation" : "/**<p>The language code for the language of the input text. </p>\n@return The language code for the language of the input text.*/",
        "getterMethodName" : "getSourceLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SourceLanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SourceLanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SourceLanguageCode",
        "setterDocumentation" : "/**<p>The language code for the language of the input text. </p>\n@param sourceLanguageCode The language code for the language of the input text.*/",
        "setterMethodName" : "setSourceLanguageCode",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceLanguageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code for the language of the input text. </p>\n@param sourceLanguageCode The language code for the language of the input text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceLanguageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code for the language of the input text. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TargetLanguageCode",
        "c2jShape" : "LanguageCodeString",
        "deprecated" : false,
        "documentation" : "<p>The language code for the language of the translated text. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The language code for the language of the translated text. </p>\n@param targetLanguageCode The language code for the language of the translated text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargetLanguageCode",
        "getterDocumentation" : "/**<p>The language code for the language of the translated text. </p>\n@return The language code for the language of the translated text.*/",
        "getterMethodName" : "getTargetLanguageCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TargetLanguageCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TargetLanguageCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TargetLanguageCode",
        "setterDocumentation" : "/**<p>The language code for the language of the translated text. </p>\n@param targetLanguageCode The language code for the language of the translated text.*/",
        "setterMethodName" : "setTargetLanguageCode",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "targetLanguageCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The language code for the language of the translated text. </p>\n@param targetLanguageCode The language code for the language of the translated text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "targetLanguageCode",
          "variableType" : "String",
          "documentation" : "<p>The language code for the language of the translated text. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "SourceLanguageCode" : {
          "c2jName" : "SourceLanguageCode",
          "c2jShape" : "LanguageCodeString",
          "deprecated" : false,
          "documentation" : "<p>The language code for the language of the input text. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The language code for the language of the input text. </p>\n@param sourceLanguageCode The language code for the language of the input text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSourceLanguageCode",
          "getterDocumentation" : "/**<p>The language code for the language of the input text. </p>\n@return The language code for the language of the input text.*/",
          "getterMethodName" : "getSourceLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SourceLanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SourceLanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SourceLanguageCode",
          "setterDocumentation" : "/**<p>The language code for the language of the input text. </p>\n@param sourceLanguageCode The language code for the language of the input text.*/",
          "setterMethodName" : "setSourceLanguageCode",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceLanguageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code for the language of the input text. </p>\n@param sourceLanguageCode The language code for the language of the input text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceLanguageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code for the language of the input text. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetLanguageCode" : {
          "c2jName" : "TargetLanguageCode",
          "c2jShape" : "LanguageCodeString",
          "deprecated" : false,
          "documentation" : "<p>The language code for the language of the translated text. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The language code for the language of the translated text. </p>\n@param targetLanguageCode The language code for the language of the translated text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargetLanguageCode",
          "getterDocumentation" : "/**<p>The language code for the language of the translated text. </p>\n@return The language code for the language of the translated text.*/",
          "getterMethodName" : "getTargetLanguageCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TargetLanguageCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TargetLanguageCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TargetLanguageCode",
          "setterDocumentation" : "/**<p>The language code for the language of the translated text. </p>\n@param targetLanguageCode The language code for the language of the translated text.*/",
          "setterMethodName" : "setTargetLanguageCode",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "targetLanguageCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The language code for the language of the translated text. </p>\n@param targetLanguageCode The language code for the language of the translated text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "targetLanguageCode",
            "variableType" : "String",
            "documentation" : "<p>The language code for the language of the translated text. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TranslatedText" : {
          "c2jName" : "TranslatedText",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>The text translated into the target language.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The text translated into the target language.</p>\n@param translatedText The text translated into the target language.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTranslatedText",
          "getterDocumentation" : "/**<p>The text translated into the target language.</p>\n@return The text translated into the target language.*/",
          "getterMethodName" : "getTranslatedText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TranslatedText",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TranslatedText",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TranslatedText",
          "setterDocumentation" : "/**<p>The text translated into the target language.</p>\n@param translatedText The text translated into the target language.*/",
          "setterMethodName" : "setTranslatedText",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "translatedText",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The text translated into the target language.</p>\n@param translatedText The text translated into the target language.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "translatedText",
            "variableType" : "String",
            "documentation" : "<p>The text translated into the target language.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "TranslatedText", "SourceLanguageCode", "TargetLanguageCode" ],
      "shapeName" : "TranslateTextResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "TranslateTextResult",
        "variableName" : "translateTextResult",
        "variableType" : "TranslateTextResult",
        "documentation" : null,
        "simpleType" : "TranslateTextResult",
        "variableSetterType" : "TranslateTextResult"
      },
      "wrapper" : false
    },
    "UnsupportedLanguagePairException" : {
      "c2jName" : "UnsupportedLanguagePairException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Amazon Translate cannot translate input text in the source language into this target language. For more information, see <a>how-to-error-msg</a>. </p>",
      "enums" : null,
      "errorCode" : "UnsupportedLanguagePairException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UnsupportedLanguagePairException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "UnsupportedLanguagePairException",
        "variableName" : "unsupportedLanguagePairException",
        "variableType" : "UnsupportedLanguagePairException",
        "documentation" : null,
        "simpleType" : "UnsupportedLanguagePairException",
        "variableSetterType" : "UnsupportedLanguagePairException"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "customAuthorizers" : { },
  "examples" : {
    "examples" : { },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2013-2018 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AmazonTranslateException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.translate.model.AmazonTranslateException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.translate.model.transform"
}