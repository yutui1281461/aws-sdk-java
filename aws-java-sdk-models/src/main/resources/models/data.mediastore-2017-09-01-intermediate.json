{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "contentTypeOverride" : null,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "EnumSetterOverload", "ClientConstructors", "ClientMutationMethods" ],
    "emitLegacyEnumSetterFor" : null,
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipClientMethodForOperations" : [ ],
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : true,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false
  },
  "metadata" : {
    "apiVersion" : "2017-09-01",
    "asyncClient" : "AWSMediaStoreDataAsyncClient",
    "asyncClientBuilderClassName" : "AWSMediaStoreDataAsyncClientBuilder",
    "asyncInterface" : "AWSMediaStoreDataAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : "",
    "cucumberModuleInjectorClassName" : "AWSMediaStoreDataModuleInjector",
    "defaultEndpoint" : "data.mediastore.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "data.mediastore.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<p>An AWS Elemental MediaStore asset is an object, similar to an object in the Amazon S3 service. Objects are the fundamental entities that are stored in AWS Elemental MediaStore.</p>",
    "endpointPrefix" : "data.mediastore",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.mediastoredata",
    "packagePath" : "com/amazonaws/services/mediastoredata",
    "protocol" : "rest-json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : "MediaStore Data",
    "serviceFullName" : "AWS Elemental MediaStore Data Plane",
    "serviceName" : "MediaStore Data",
    "signingName" : "mediastore",
    "smokeTestsPackageName" : "com.amazonaws.services.mediastoredata.smoketests",
    "syncClient" : "AWSMediaStoreDataClient",
    "syncClientBuilderClassName" : "AWSMediaStoreDataClientBuilder",
    "syncInterface" : "AWSMediaStoreData",
    "uid" : "mediastore-data-2017-09-01",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "DeleteObject" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteObjectResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteObjectResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteObjectRequest, DeleteObjectResult>",
      "asyncReturnType" : "DeleteObjectResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes an object at the specified path.</p>",
      "exceptions" : [ {
        "exceptionName" : "ContainerNotFoundException",
        "documentation" : "<p>The specified container was not found for the specified account.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ObjectNotFoundException",
        "documentation" : "<p>Could not perform an operation on an object that does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteObjectRequest",
        "variableName" : "deleteObjectRequest",
        "variableType" : "DeleteObjectRequest",
        "documentation" : "",
        "simpleType" : "DeleteObjectRequest",
        "variableSetterType" : "DeleteObjectRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteObject",
      "operationName" : "DeleteObject",
      "returnType" : {
        "returnType" : "DeleteObjectResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteObjectResult"
    },
    "DescribeObject" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeObjectResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeObjectResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeObjectRequest, DescribeObjectResult>",
      "asyncReturnType" : "DescribeObjectResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets the headers for an object at the specified path.</p>",
      "exceptions" : [ {
        "exceptionName" : "ContainerNotFoundException",
        "documentation" : "<p>The specified container was not found for the specified account.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ObjectNotFoundException",
        "documentation" : "<p>Could not perform an operation on an object that does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DescribeObjectRequest",
        "variableName" : "describeObjectRequest",
        "variableType" : "DescribeObjectRequest",
        "documentation" : "",
        "simpleType" : "DescribeObjectRequest",
        "variableSetterType" : "DescribeObjectRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "describeObject",
      "operationName" : "DescribeObject",
      "returnType" : {
        "returnType" : "DescribeObjectResult",
        "documentation" : null
      },
      "syncReturnType" : "DescribeObjectResult"
    },
    "GetObject" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetObjectResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetObjectResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetObjectRequest, GetObjectResult>",
      "asyncReturnType" : "GetObjectResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Downloads the object at the specified path.</p>",
      "exceptions" : [ {
        "exceptionName" : "ContainerNotFoundException",
        "documentation" : "<p>The specified container was not found for the specified account.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ObjectNotFoundException",
        "documentation" : "<p>Could not perform an operation on an object that does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "RequestedRangeNotSatisfiableException",
        "documentation" : "<p>The requested content range is not valid.</p>",
        "httpStatusCode" : 416
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : true,
      "input" : {
        "variableDeclarationType" : "GetObjectRequest",
        "variableName" : "getObjectRequest",
        "variableType" : "GetObjectRequest",
        "documentation" : "",
        "simpleType" : "GetObjectRequest",
        "variableSetterType" : "GetObjectRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getObject",
      "operationName" : "GetObject",
      "returnType" : {
        "returnType" : "GetObjectResult",
        "documentation" : null
      },
      "syncReturnType" : "GetObjectResult"
    },
    "ListItems" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListItemsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListItemsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListItemsRequest, ListItemsResult>",
      "asyncReturnType" : "ListItemsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Provides a list of metadata entries about folders and objects in the specified folder.</p>",
      "exceptions" : [ {
        "exceptionName" : "ContainerNotFoundException",
        "documentation" : "<p>The specified container was not found for the specified account.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListItemsRequest",
        "variableName" : "listItemsRequest",
        "variableType" : "ListItemsRequest",
        "documentation" : "",
        "simpleType" : "ListItemsRequest",
        "variableSetterType" : "ListItemsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listItems",
      "operationName" : "ListItems",
      "returnType" : {
        "returnType" : "ListItemsResult",
        "documentation" : null
      },
      "syncReturnType" : "ListItemsResult"
    },
    "PutObject" : {
      "asyncCallableType" : "java.util.concurrent.Callable<PutObjectResult>",
      "asyncFutureType" : "java.util.concurrent.Future<PutObjectResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutObjectRequest, PutObjectResult>",
      "asyncReturnType" : "PutObjectResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Uploads an object to the specified path. Object sizes are limited to 10 MB.</p>",
      "exceptions" : [ {
        "exceptionName" : "ContainerNotFoundException",
        "documentation" : "<p>The specified container was not found for the specified account.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "PutObjectRequest",
        "variableName" : "putObjectRequest",
        "variableType" : "PutObjectRequest",
        "documentation" : "",
        "simpleType" : "PutObjectRequest",
        "variableSetterType" : "PutObjectRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "putObject",
      "operationName" : "PutObject",
      "returnType" : {
        "returnType" : "PutObjectResult",
        "documentation" : null
      },
      "syncReturnType" : "PutObjectResult"
    }
  },
  "shapes" : {
    "ContainerNotFoundException" : {
      "c2jName" : "ContainerNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified container was not found for the specified account.</p>",
      "enums" : null,
      "errorCode" : "ContainerNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ContainerNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ContainerNotFoundException",
        "variableName" : "containerNotFoundException",
        "variableType" : "ContainerNotFoundException",
        "documentation" : null,
        "simpleType" : "ContainerNotFoundException",
        "variableSetterType" : "ContainerNotFoundException"
      },
      "wrapper" : false
    },
    "DeleteObjectRequest" : {
      "c2jName" : "DeleteObjectRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteObject",
        "locationName" : null,
        "requestUri" : "/{Path+}",
        "target" : null,
        "verb" : "DELETE",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Path",
        "c2jShape" : "PathNaming",
        "deprecated" : false,
        "documentation" : "<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPath",
        "getterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@return The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;*/",
        "getterMethodName" : "getPath",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : true,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "GREEDY_PATH",
          "marshallLocationName" : "Path",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Path",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Path",
        "setterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;*/",
        "setterMethodName" : "setPath",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "path",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "path",
          "variableType" : "String",
          "documentation" : "<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Path" : {
          "c2jName" : "Path",
          "c2jShape" : "PathNaming",
          "deprecated" : false,
          "documentation" : "<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPath",
          "getterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@return The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;*/",
          "getterMethodName" : "getPath",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : true,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "GREEDY_PATH",
            "marshallLocationName" : "Path",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Path",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Path",
          "setterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;*/",
          "setterMethodName" : "setPath",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "path",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "path",
            "variableType" : "String",
            "documentation" : "<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Path" ],
      "shapeName" : "DeleteObjectRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteObjectRequest",
        "variableName" : "deleteObjectRequest",
        "variableType" : "DeleteObjectRequest",
        "documentation" : null,
        "simpleType" : "DeleteObjectRequest",
        "variableSetterType" : "DeleteObjectRequest"
      },
      "wrapper" : false
    },
    "DeleteObjectResult" : {
      "c2jName" : "DeleteObjectResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteObjectResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteObjectResult",
        "variableName" : "deleteObjectResult",
        "variableType" : "DeleteObjectResult",
        "documentation" : null,
        "simpleType" : "DeleteObjectResult",
        "variableSetterType" : "DeleteObjectResult"
      },
      "wrapper" : false
    },
    "DescribeObjectRequest" : {
      "c2jName" : "DescribeObjectRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DescribeObject",
        "locationName" : null,
        "requestUri" : "/{Path+}",
        "target" : null,
        "verb" : "HEAD",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Path",
        "c2jShape" : "PathNaming",
        "deprecated" : false,
        "documentation" : "<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPath",
        "getterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@return The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;*/",
        "getterMethodName" : "getPath",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : true,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "GREEDY_PATH",
          "marshallLocationName" : "Path",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Path",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Path",
        "setterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;*/",
        "setterMethodName" : "setPath",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "path",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "path",
          "variableType" : "String",
          "documentation" : "<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Path" : {
          "c2jName" : "Path",
          "c2jShape" : "PathNaming",
          "deprecated" : false,
          "documentation" : "<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPath",
          "getterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@return The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;*/",
          "getterMethodName" : "getPath",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : true,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "GREEDY_PATH",
            "marshallLocationName" : "Path",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Path",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Path",
          "setterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;*/",
          "setterMethodName" : "setPath",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "path",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "path",
            "variableType" : "String",
            "documentation" : "<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Path" ],
      "shapeName" : "DescribeObjectRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DescribeObjectRequest",
        "variableName" : "describeObjectRequest",
        "variableType" : "DescribeObjectRequest",
        "documentation" : null,
        "simpleType" : "DescribeObjectRequest",
        "variableSetterType" : "DescribeObjectRequest"
      },
      "wrapper" : false
    },
    "DescribeObjectResult" : {
      "c2jName" : "DescribeObjectResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : true,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ETag",
        "c2jShape" : "ETag",
        "deprecated" : false,
        "documentation" : "<p>The ETag that represents a unique instance of the object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ETag that represents a unique instance of the object.</p>\n@param eTag The ETag that represents a unique instance of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withETag",
        "getterDocumentation" : "/**<p>The ETag that represents a unique instance of the object.</p>\n@return The ETag that represents a unique instance of the object.*/",
        "getterMethodName" : "getETag",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "ETag",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ETag",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ETag",
        "setterDocumentation" : "/**<p>The ETag that represents a unique instance of the object.</p>\n@param eTag The ETag that represents a unique instance of the object.*/",
        "setterMethodName" : "setETag",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "eTag",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ETag that represents a unique instance of the object.</p>\n@param eTag The ETag that represents a unique instance of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "eTag",
          "variableType" : "String",
          "documentation" : "<p>The ETag that represents a unique instance of the object.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ContentType",
        "c2jShape" : "ContentType",
        "deprecated" : false,
        "documentation" : "<p>The content type of the object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContentType",
        "getterDocumentation" : "/**<p>The content type of the object.</p>\n@return The content type of the object.*/",
        "getterMethodName" : "getContentType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "Content-Type",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Content-Type",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContentType",
        "setterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.*/",
        "setterMethodName" : "setContentType",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "contentType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "contentType",
          "variableType" : "String",
          "documentation" : "<p>The content type of the object.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ContentLength",
        "c2jShape" : "NonNegativeLong",
        "deprecated" : false,
        "documentation" : "<p>The length of the object in bytes.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The length of the object in bytes.</p>\n@param contentLength The length of the object in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContentLength",
        "getterDocumentation" : "/**<p>The length of the object in bytes.</p>\n@return The length of the object in bytes.*/",
        "getterMethodName" : "getContentLength",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "Content-Length",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Content-Length",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "ContentLength",
        "setterDocumentation" : "/**<p>The length of the object in bytes.</p>\n@param contentLength The length of the object in bytes.*/",
        "setterMethodName" : "setContentLength",
        "setterModel" : {
          "variableDeclarationType" : "Long",
          "variableName" : "contentLength",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The length of the object in bytes.</p>\n@param contentLength The length of the object in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Long",
          "variableName" : "contentLength",
          "variableType" : "Long",
          "documentation" : "<p>The length of the object in bytes.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CacheControl",
        "c2jShape" : "StringPrimitive",
        "deprecated" : false,
        "documentation" : "<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCacheControl",
        "getterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@return An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.*/",
        "getterMethodName" : "getCacheControl",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "Cache-Control",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Cache-Control",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CacheControl",
        "setterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.*/",
        "setterMethodName" : "setCacheControl",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "cacheControl",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "cacheControl",
          "variableType" : "String",
          "documentation" : "<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LastModified",
        "c2jShape" : "TimeStamp",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the object was last modified.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the object was last modified.</p>\n@param lastModified The date and time that the object was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastModified",
        "getterDocumentation" : "/**<p>The date and time that the object was last modified.</p>\n@return The date and time that the object was last modified.*/",
        "getterMethodName" : "getLastModified",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "Last-Modified",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Last-Modified",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "LastModified",
        "setterDocumentation" : "/**<p>The date and time that the object was last modified.</p>\n@param lastModified The date and time that the object was last modified.*/",
        "setterMethodName" : "setLastModified",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModified",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the object was last modified.</p>\n@param lastModified The date and time that the object was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModified",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time that the object was last modified.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CacheControl" : {
          "c2jName" : "CacheControl",
          "c2jShape" : "StringPrimitive",
          "deprecated" : false,
          "documentation" : "<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCacheControl",
          "getterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@return An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.*/",
          "getterMethodName" : "getCacheControl",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "Cache-Control",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Cache-Control",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CacheControl",
          "setterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.*/",
          "setterMethodName" : "setCacheControl",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "cacheControl",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "cacheControl",
            "variableType" : "String",
            "documentation" : "<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ContentLength" : {
          "c2jName" : "ContentLength",
          "c2jShape" : "NonNegativeLong",
          "deprecated" : false,
          "documentation" : "<p>The length of the object in bytes.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The length of the object in bytes.</p>\n@param contentLength The length of the object in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContentLength",
          "getterDocumentation" : "/**<p>The length of the object in bytes.</p>\n@return The length of the object in bytes.*/",
          "getterMethodName" : "getContentLength",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "Content-Length",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Content-Length",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "ContentLength",
          "setterDocumentation" : "/**<p>The length of the object in bytes.</p>\n@param contentLength The length of the object in bytes.*/",
          "setterMethodName" : "setContentLength",
          "setterModel" : {
            "variableDeclarationType" : "Long",
            "variableName" : "contentLength",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The length of the object in bytes.</p>\n@param contentLength The length of the object in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Long",
            "variableName" : "contentLength",
            "variableType" : "Long",
            "documentation" : "<p>The length of the object in bytes.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "ContentType" : {
          "c2jName" : "ContentType",
          "c2jShape" : "ContentType",
          "deprecated" : false,
          "documentation" : "<p>The content type of the object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContentType",
          "getterDocumentation" : "/**<p>The content type of the object.</p>\n@return The content type of the object.*/",
          "getterMethodName" : "getContentType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "Content-Type",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Content-Type",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContentType",
          "setterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.*/",
          "setterMethodName" : "setContentType",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "contentType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "contentType",
            "variableType" : "String",
            "documentation" : "<p>The content type of the object.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ETag" : {
          "c2jName" : "ETag",
          "c2jShape" : "ETag",
          "deprecated" : false,
          "documentation" : "<p>The ETag that represents a unique instance of the object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ETag that represents a unique instance of the object.</p>\n@param eTag The ETag that represents a unique instance of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withETag",
          "getterDocumentation" : "/**<p>The ETag that represents a unique instance of the object.</p>\n@return The ETag that represents a unique instance of the object.*/",
          "getterMethodName" : "getETag",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "ETag",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ETag",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ETag",
          "setterDocumentation" : "/**<p>The ETag that represents a unique instance of the object.</p>\n@param eTag The ETag that represents a unique instance of the object.*/",
          "setterMethodName" : "setETag",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "eTag",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ETag that represents a unique instance of the object.</p>\n@param eTag The ETag that represents a unique instance of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "eTag",
            "variableType" : "String",
            "documentation" : "<p>The ETag that represents a unique instance of the object.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LastModified" : {
          "c2jName" : "LastModified",
          "c2jShape" : "TimeStamp",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the object was last modified.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the object was last modified.</p>\n@param lastModified The date and time that the object was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastModified",
          "getterDocumentation" : "/**<p>The date and time that the object was last modified.</p>\n@return The date and time that the object was last modified.*/",
          "getterMethodName" : "getLastModified",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "Last-Modified",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Last-Modified",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "LastModified",
          "setterDocumentation" : "/**<p>The date and time that the object was last modified.</p>\n@param lastModified The date and time that the object was last modified.*/",
          "setterMethodName" : "setLastModified",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModified",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the object was last modified.</p>\n@param lastModified The date and time that the object was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModified",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time that the object was last modified.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DescribeObjectResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DescribeObjectResult",
        "variableName" : "describeObjectResult",
        "variableType" : "DescribeObjectResult",
        "documentation" : null,
        "simpleType" : "DescribeObjectResult",
        "variableSetterType" : "DescribeObjectResult"
      },
      "wrapper" : false
    },
    "GetObjectRequest" : {
      "c2jName" : "GetObjectRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : true,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetObject",
        "locationName" : null,
        "requestUri" : "/{Path+}",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Path",
        "c2jShape" : "PathNaming",
        "deprecated" : false,
        "documentation" : "<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPath",
        "getterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>\n@return The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.*/",
        "getterMethodName" : "getPath",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : true,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "GREEDY_PATH",
          "marshallLocationName" : "Path",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Path",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Path",
        "setterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.*/",
        "setterMethodName" : "setPath",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "path",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "path",
          "variableType" : "String",
          "documentation" : "<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Range",
        "c2jShape" : "RangePattern",
        "deprecated" : false,
        "documentation" : "<p>The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>\n@param range The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRange",
        "getterDocumentation" : "/**<p>The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>\n@return The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.*/",
        "getterMethodName" : "getRange",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "Range",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Range",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Range",
        "setterDocumentation" : "/**<p>The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>\n@param range The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.*/",
        "setterMethodName" : "setRange",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "range",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>\n@param range The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "range",
          "variableType" : "String",
          "documentation" : "<p>The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Path" : {
          "c2jName" : "Path",
          "c2jShape" : "PathNaming",
          "deprecated" : false,
          "documentation" : "<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPath",
          "getterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>\n@return The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.*/",
          "getterMethodName" : "getPath",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : true,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "GREEDY_PATH",
            "marshallLocationName" : "Path",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Path",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Path",
          "setterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.*/",
          "setterMethodName" : "setPath",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "path",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "path",
            "variableType" : "String",
            "documentation" : "<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Range" : {
          "c2jName" : "Range",
          "c2jShape" : "RangePattern",
          "deprecated" : false,
          "documentation" : "<p>The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>\n@param range The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRange",
          "getterDocumentation" : "/**<p>The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>\n@return The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.*/",
          "getterMethodName" : "getRange",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "Range",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Range",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Range",
          "setterDocumentation" : "/**<p>The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>\n@param range The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.*/",
          "setterMethodName" : "setRange",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "range",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>\n@param range The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "range",
            "variableType" : "String",
            "documentation" : "<p>The range bytes of an object to retrieve. For more information about the <code>Range</code> header, go to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Path" ],
      "shapeName" : "GetObjectRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetObjectRequest",
        "variableName" : "getObjectRequest",
        "variableType" : "GetObjectRequest",
        "documentation" : null,
        "simpleType" : "GetObjectRequest",
        "variableSetterType" : "GetObjectRequest"
      },
      "wrapper" : false
    },
    "GetObjectResult" : {
      "c2jName" : "GetObjectResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : true,
      "hasPayloadMember" : true,
      "hasStatusCodeMember" : true,
      "hasStreamingMember" : true,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Body",
        "c2jShape" : "PayloadBlob",
        "deprecated" : false,
        "documentation" : "<p>The bytes of the object. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The bytes of the object. </p>\n@param body The bytes of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBody",
        "getterDocumentation" : "/**<p>The bytes of the object. </p>\n@return The bytes of the object.*/",
        "getterMethodName" : "getBody",
        "getterModel" : {
          "returnType" : "java.io.InputStream",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : true,
          "isStreaming" : true,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Body",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Body",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : true,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.io.InputStream",
        "marshallingType" : "STREAM",
        "name" : "Body",
        "setterDocumentation" : "/**<p>The bytes of the object. </p>\n@param body The bytes of the object.*/",
        "setterMethodName" : "setBody",
        "setterModel" : {
          "variableDeclarationType" : "java.io.InputStream",
          "variableName" : "body",
          "variableType" : "java.io.InputStream",
          "documentation" : "",
          "simpleType" : "InputStream",
          "variableSetterType" : "java.io.InputStream"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The bytes of the object. </p>\n@param body The bytes of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.io.InputStream",
          "variableName" : "body",
          "variableType" : "java.io.InputStream",
          "documentation" : "<p>The bytes of the object. </p>",
          "simpleType" : "InputStream",
          "variableSetterType" : "java.io.InputStream"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CacheControl",
        "c2jShape" : "StringPrimitive",
        "deprecated" : false,
        "documentation" : "<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCacheControl",
        "getterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@return An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.*/",
        "getterMethodName" : "getCacheControl",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "Cache-Control",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Cache-Control",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CacheControl",
        "setterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.*/",
        "setterMethodName" : "setCacheControl",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "cacheControl",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "cacheControl",
          "variableType" : "String",
          "documentation" : "<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ContentRange",
        "c2jShape" : "ContentRangePattern",
        "deprecated" : false,
        "documentation" : "<p>The range of bytes to retrieve.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The range of bytes to retrieve.</p>\n@param contentRange The range of bytes to retrieve.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContentRange",
        "getterDocumentation" : "/**<p>The range of bytes to retrieve.</p>\n@return The range of bytes to retrieve.*/",
        "getterMethodName" : "getContentRange",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "Content-Range",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Content-Range",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContentRange",
        "setterDocumentation" : "/**<p>The range of bytes to retrieve.</p>\n@param contentRange The range of bytes to retrieve.*/",
        "setterMethodName" : "setContentRange",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "contentRange",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The range of bytes to retrieve.</p>\n@param contentRange The range of bytes to retrieve.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "contentRange",
          "variableType" : "String",
          "documentation" : "<p>The range of bytes to retrieve.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ContentLength",
        "c2jShape" : "NonNegativeLong",
        "deprecated" : false,
        "documentation" : "<p>The length of the object in bytes.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The length of the object in bytes.</p>\n@param contentLength The length of the object in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContentLength",
        "getterDocumentation" : "/**<p>The length of the object in bytes.</p>\n@return The length of the object in bytes.*/",
        "getterMethodName" : "getContentLength",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "Content-Length",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Content-Length",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "ContentLength",
        "setterDocumentation" : "/**<p>The length of the object in bytes.</p>\n@param contentLength The length of the object in bytes.*/",
        "setterMethodName" : "setContentLength",
        "setterModel" : {
          "variableDeclarationType" : "Long",
          "variableName" : "contentLength",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The length of the object in bytes.</p>\n@param contentLength The length of the object in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Long",
          "variableName" : "contentLength",
          "variableType" : "Long",
          "documentation" : "<p>The length of the object in bytes.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ContentType",
        "c2jShape" : "ContentType",
        "deprecated" : false,
        "documentation" : "<p>The content type of the object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContentType",
        "getterDocumentation" : "/**<p>The content type of the object.</p>\n@return The content type of the object.*/",
        "getterMethodName" : "getContentType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "Content-Type",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Content-Type",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContentType",
        "setterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.*/",
        "setterMethodName" : "setContentType",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "contentType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "contentType",
          "variableType" : "String",
          "documentation" : "<p>The content type of the object.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ETag",
        "c2jShape" : "ETag",
        "deprecated" : false,
        "documentation" : "<p>The ETag that represents a unique instance of the object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ETag that represents a unique instance of the object.</p>\n@param eTag The ETag that represents a unique instance of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withETag",
        "getterDocumentation" : "/**<p>The ETag that represents a unique instance of the object.</p>\n@return The ETag that represents a unique instance of the object.*/",
        "getterMethodName" : "getETag",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "ETag",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ETag",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ETag",
        "setterDocumentation" : "/**<p>The ETag that represents a unique instance of the object.</p>\n@param eTag The ETag that represents a unique instance of the object.*/",
        "setterMethodName" : "setETag",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "eTag",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ETag that represents a unique instance of the object.</p>\n@param eTag The ETag that represents a unique instance of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "eTag",
          "variableType" : "String",
          "documentation" : "<p>The ETag that represents a unique instance of the object.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LastModified",
        "c2jShape" : "TimeStamp",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the object was last modified.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the object was last modified.</p>\n@param lastModified The date and time that the object was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastModified",
        "getterDocumentation" : "/**<p>The date and time that the object was last modified.</p>\n@return The date and time that the object was last modified.*/",
        "getterMethodName" : "getLastModified",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "Last-Modified",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Last-Modified",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "LastModified",
        "setterDocumentation" : "/**<p>The date and time that the object was last modified.</p>\n@param lastModified The date and time that the object was last modified.*/",
        "setterMethodName" : "setLastModified",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModified",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the object was last modified.</p>\n@param lastModified The date and time that the object was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModified",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time that the object was last modified.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "StatusCode",
        "c2jShape" : "statusCode",
        "deprecated" : false,
        "documentation" : "<p>The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.</p>\n@param statusCode The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStatusCode",
        "getterDocumentation" : "/**<p>The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.</p>\n@return The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.*/",
        "getterMethodName" : "getStatusCode",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "statusCode",
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "StatusCode",
          "queryString" : false,
          "statusCode" : true,
          "unmarshallLocationName" : "StatusCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "StatusCode",
        "setterDocumentation" : "/**<p>The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.</p>\n@param statusCode The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.*/",
        "setterMethodName" : "setStatusCode",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "statusCode",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.</p>\n@param statusCode The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "statusCode",
          "variableType" : "Integer",
          "documentation" : "<p>The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Body" : {
          "c2jName" : "Body",
          "c2jShape" : "PayloadBlob",
          "deprecated" : false,
          "documentation" : "<p>The bytes of the object. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The bytes of the object. </p>\n@param body The bytes of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBody",
          "getterDocumentation" : "/**<p>The bytes of the object. </p>\n@return The bytes of the object.*/",
          "getterMethodName" : "getBody",
          "getterModel" : {
            "returnType" : "java.io.InputStream",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : true,
            "isStreaming" : true,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Body",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Body",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : true,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.io.InputStream",
          "marshallingType" : "STREAM",
          "name" : "Body",
          "setterDocumentation" : "/**<p>The bytes of the object. </p>\n@param body The bytes of the object.*/",
          "setterMethodName" : "setBody",
          "setterModel" : {
            "variableDeclarationType" : "java.io.InputStream",
            "variableName" : "body",
            "variableType" : "java.io.InputStream",
            "documentation" : "",
            "simpleType" : "InputStream",
            "variableSetterType" : "java.io.InputStream"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The bytes of the object. </p>\n@param body The bytes of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.io.InputStream",
            "variableName" : "body",
            "variableType" : "java.io.InputStream",
            "documentation" : "<p>The bytes of the object. </p>",
            "simpleType" : "InputStream",
            "variableSetterType" : "java.io.InputStream"
          },
          "xmlNameSpaceUri" : null
        },
        "CacheControl" : {
          "c2jName" : "CacheControl",
          "c2jShape" : "StringPrimitive",
          "deprecated" : false,
          "documentation" : "<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCacheControl",
          "getterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@return An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.*/",
          "getterMethodName" : "getCacheControl",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "Cache-Control",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Cache-Control",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CacheControl",
          "setterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.*/",
          "setterMethodName" : "setCacheControl",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "cacheControl",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "cacheControl",
            "variableType" : "String",
            "documentation" : "<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP spec at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ContentLength" : {
          "c2jName" : "ContentLength",
          "c2jShape" : "NonNegativeLong",
          "deprecated" : false,
          "documentation" : "<p>The length of the object in bytes.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The length of the object in bytes.</p>\n@param contentLength The length of the object in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContentLength",
          "getterDocumentation" : "/**<p>The length of the object in bytes.</p>\n@return The length of the object in bytes.*/",
          "getterMethodName" : "getContentLength",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "Content-Length",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Content-Length",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "ContentLength",
          "setterDocumentation" : "/**<p>The length of the object in bytes.</p>\n@param contentLength The length of the object in bytes.*/",
          "setterMethodName" : "setContentLength",
          "setterModel" : {
            "variableDeclarationType" : "Long",
            "variableName" : "contentLength",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The length of the object in bytes.</p>\n@param contentLength The length of the object in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Long",
            "variableName" : "contentLength",
            "variableType" : "Long",
            "documentation" : "<p>The length of the object in bytes.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "ContentRange" : {
          "c2jName" : "ContentRange",
          "c2jShape" : "ContentRangePattern",
          "deprecated" : false,
          "documentation" : "<p>The range of bytes to retrieve.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The range of bytes to retrieve.</p>\n@param contentRange The range of bytes to retrieve.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContentRange",
          "getterDocumentation" : "/**<p>The range of bytes to retrieve.</p>\n@return The range of bytes to retrieve.*/",
          "getterMethodName" : "getContentRange",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "Content-Range",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Content-Range",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContentRange",
          "setterDocumentation" : "/**<p>The range of bytes to retrieve.</p>\n@param contentRange The range of bytes to retrieve.*/",
          "setterMethodName" : "setContentRange",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "contentRange",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The range of bytes to retrieve.</p>\n@param contentRange The range of bytes to retrieve.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "contentRange",
            "variableType" : "String",
            "documentation" : "<p>The range of bytes to retrieve.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ContentType" : {
          "c2jName" : "ContentType",
          "c2jShape" : "ContentType",
          "deprecated" : false,
          "documentation" : "<p>The content type of the object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContentType",
          "getterDocumentation" : "/**<p>The content type of the object.</p>\n@return The content type of the object.*/",
          "getterMethodName" : "getContentType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "Content-Type",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Content-Type",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContentType",
          "setterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.*/",
          "setterMethodName" : "setContentType",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "contentType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "contentType",
            "variableType" : "String",
            "documentation" : "<p>The content type of the object.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ETag" : {
          "c2jName" : "ETag",
          "c2jShape" : "ETag",
          "deprecated" : false,
          "documentation" : "<p>The ETag that represents a unique instance of the object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ETag that represents a unique instance of the object.</p>\n@param eTag The ETag that represents a unique instance of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withETag",
          "getterDocumentation" : "/**<p>The ETag that represents a unique instance of the object.</p>\n@return The ETag that represents a unique instance of the object.*/",
          "getterMethodName" : "getETag",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "ETag",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ETag",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ETag",
          "setterDocumentation" : "/**<p>The ETag that represents a unique instance of the object.</p>\n@param eTag The ETag that represents a unique instance of the object.*/",
          "setterMethodName" : "setETag",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "eTag",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ETag that represents a unique instance of the object.</p>\n@param eTag The ETag that represents a unique instance of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "eTag",
            "variableType" : "String",
            "documentation" : "<p>The ETag that represents a unique instance of the object.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LastModified" : {
          "c2jName" : "LastModified",
          "c2jShape" : "TimeStamp",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the object was last modified.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the object was last modified.</p>\n@param lastModified The date and time that the object was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastModified",
          "getterDocumentation" : "/**<p>The date and time that the object was last modified.</p>\n@return The date and time that the object was last modified.*/",
          "getterMethodName" : "getLastModified",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "Last-Modified",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Last-Modified",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "LastModified",
          "setterDocumentation" : "/**<p>The date and time that the object was last modified.</p>\n@param lastModified The date and time that the object was last modified.*/",
          "setterMethodName" : "setLastModified",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModified",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the object was last modified.</p>\n@param lastModified The date and time that the object was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModified",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time that the object was last modified.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "StatusCode" : {
          "c2jName" : "StatusCode",
          "c2jShape" : "statusCode",
          "deprecated" : false,
          "documentation" : "<p>The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.</p>\n@param statusCode The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStatusCode",
          "getterDocumentation" : "/**<p>The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.</p>\n@return The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.*/",
          "getterMethodName" : "getStatusCode",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "statusCode",
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "StatusCode",
            "queryString" : false,
            "statusCode" : true,
            "unmarshallLocationName" : "StatusCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "StatusCode",
          "setterDocumentation" : "/**<p>The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.</p>\n@param statusCode The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.*/",
          "setterMethodName" : "setStatusCode",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "statusCode",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.</p>\n@param statusCode The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "statusCode",
            "variableType" : "Integer",
            "documentation" : "<p>The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "StatusCode" ],
      "shapeName" : "GetObjectResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetObjectResult",
        "variableName" : "getObjectResult",
        "variableType" : "GetObjectResult",
        "documentation" : null,
        "simpleType" : "GetObjectResult",
        "variableSetterType" : "GetObjectResult"
      },
      "wrapper" : false
    },
    "InternalServerErrorException" : {
      "c2jName" : "InternalServerError",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The service is temporarily unavailable.</p>",
      "enums" : null,
      "errorCode" : "InternalServerError",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InternalServerErrorException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InternalServerErrorException",
        "variableName" : "internalServerErrorException",
        "variableType" : "InternalServerErrorException",
        "documentation" : null,
        "simpleType" : "InternalServerErrorException",
        "variableSetterType" : "InternalServerErrorException"
      },
      "wrapper" : false
    },
    "Item" : {
      "c2jName" : "Item",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A metadata entry for a folder or object.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Name",
        "c2jShape" : "ItemName",
        "deprecated" : false,
        "documentation" : "<p>The name of the item.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the item.</p>\n@param name The name of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the item.</p>\n@return The name of the item.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "setterDocumentation" : "/**<p>The name of the item.</p>\n@param name The name of the item.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the item.</p>\n@param name The name of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the item.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Type",
        "c2jShape" : "ItemType",
        "deprecated" : false,
        "documentation" : "<p>The item type (folder or object).</p>",
        "enumType" : "ItemType",
        "fluentSetterDocumentation" : "/**<p>The item type (folder or object).</p>\n@param type The item type (folder or object).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ItemType*/",
        "fluentSetterMethodName" : "withType",
        "getterDocumentation" : "/**<p>The item type (folder or object).</p>\n@return The item type (folder or object).\n@see ItemType*/",
        "getterMethodName" : "getType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Type",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Type",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Type",
        "setterDocumentation" : "/**<p>The item type (folder or object).</p>\n@param type The item type (folder or object).\n@see ItemType*/",
        "setterMethodName" : "setType",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The item type (folder or object).</p>\n@param type The item type (folder or object).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ItemType*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "<p>The item type (folder or object).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ETag",
        "c2jShape" : "ETag",
        "deprecated" : false,
        "documentation" : "<p>The ETag that represents a unique instance of the item.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ETag that represents a unique instance of the item.</p>\n@param eTag The ETag that represents a unique instance of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withETag",
        "getterDocumentation" : "/**<p>The ETag that represents a unique instance of the item.</p>\n@return The ETag that represents a unique instance of the item.*/",
        "getterMethodName" : "getETag",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ETag",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ETag",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ETag",
        "setterDocumentation" : "/**<p>The ETag that represents a unique instance of the item.</p>\n@param eTag The ETag that represents a unique instance of the item.*/",
        "setterMethodName" : "setETag",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "eTag",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ETag that represents a unique instance of the item.</p>\n@param eTag The ETag that represents a unique instance of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "eTag",
          "variableType" : "String",
          "documentation" : "<p>The ETag that represents a unique instance of the item.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LastModified",
        "c2jShape" : "TimeStamp",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the item was last modified.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the item was last modified.</p>\n@param lastModified The date and time that the item was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastModified",
        "getterDocumentation" : "/**<p>The date and time that the item was last modified.</p>\n@return The date and time that the item was last modified.*/",
        "getterMethodName" : "getLastModified",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LastModified",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LastModified",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "LastModified",
        "setterDocumentation" : "/**<p>The date and time that the item was last modified.</p>\n@param lastModified The date and time that the item was last modified.*/",
        "setterMethodName" : "setLastModified",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModified",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the item was last modified.</p>\n@param lastModified The date and time that the item was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModified",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time that the item was last modified.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ContentType",
        "c2jShape" : "ContentType",
        "deprecated" : false,
        "documentation" : "<p>The content type of the item.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The content type of the item.</p>\n@param contentType The content type of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContentType",
        "getterDocumentation" : "/**<p>The content type of the item.</p>\n@return The content type of the item.*/",
        "getterMethodName" : "getContentType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ContentType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ContentType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContentType",
        "setterDocumentation" : "/**<p>The content type of the item.</p>\n@param contentType The content type of the item.*/",
        "setterMethodName" : "setContentType",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "contentType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The content type of the item.</p>\n@param contentType The content type of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "contentType",
          "variableType" : "String",
          "documentation" : "<p>The content type of the item.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ContentLength",
        "c2jShape" : "NonNegativeLong",
        "deprecated" : false,
        "documentation" : "<p>The length of the item in bytes.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The length of the item in bytes.</p>\n@param contentLength The length of the item in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContentLength",
        "getterDocumentation" : "/**<p>The length of the item in bytes.</p>\n@return The length of the item in bytes.*/",
        "getterMethodName" : "getContentLength",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ContentLength",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ContentLength",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "ContentLength",
        "setterDocumentation" : "/**<p>The length of the item in bytes.</p>\n@param contentLength The length of the item in bytes.*/",
        "setterMethodName" : "setContentLength",
        "setterModel" : {
          "variableDeclarationType" : "Long",
          "variableName" : "contentLength",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The length of the item in bytes.</p>\n@param contentLength The length of the item in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Long",
          "variableName" : "contentLength",
          "variableType" : "Long",
          "documentation" : "<p>The length of the item in bytes.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ContentLength" : {
          "c2jName" : "ContentLength",
          "c2jShape" : "NonNegativeLong",
          "deprecated" : false,
          "documentation" : "<p>The length of the item in bytes.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The length of the item in bytes.</p>\n@param contentLength The length of the item in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContentLength",
          "getterDocumentation" : "/**<p>The length of the item in bytes.</p>\n@return The length of the item in bytes.*/",
          "getterMethodName" : "getContentLength",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ContentLength",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ContentLength",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "ContentLength",
          "setterDocumentation" : "/**<p>The length of the item in bytes.</p>\n@param contentLength The length of the item in bytes.*/",
          "setterMethodName" : "setContentLength",
          "setterModel" : {
            "variableDeclarationType" : "Long",
            "variableName" : "contentLength",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The length of the item in bytes.</p>\n@param contentLength The length of the item in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Long",
            "variableName" : "contentLength",
            "variableType" : "Long",
            "documentation" : "<p>The length of the item in bytes.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "ContentType" : {
          "c2jName" : "ContentType",
          "c2jShape" : "ContentType",
          "deprecated" : false,
          "documentation" : "<p>The content type of the item.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The content type of the item.</p>\n@param contentType The content type of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContentType",
          "getterDocumentation" : "/**<p>The content type of the item.</p>\n@return The content type of the item.*/",
          "getterMethodName" : "getContentType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ContentType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ContentType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContentType",
          "setterDocumentation" : "/**<p>The content type of the item.</p>\n@param contentType The content type of the item.*/",
          "setterMethodName" : "setContentType",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "contentType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The content type of the item.</p>\n@param contentType The content type of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "contentType",
            "variableType" : "String",
            "documentation" : "<p>The content type of the item.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ETag" : {
          "c2jName" : "ETag",
          "c2jShape" : "ETag",
          "deprecated" : false,
          "documentation" : "<p>The ETag that represents a unique instance of the item.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ETag that represents a unique instance of the item.</p>\n@param eTag The ETag that represents a unique instance of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withETag",
          "getterDocumentation" : "/**<p>The ETag that represents a unique instance of the item.</p>\n@return The ETag that represents a unique instance of the item.*/",
          "getterMethodName" : "getETag",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ETag",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ETag",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ETag",
          "setterDocumentation" : "/**<p>The ETag that represents a unique instance of the item.</p>\n@param eTag The ETag that represents a unique instance of the item.*/",
          "setterMethodName" : "setETag",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "eTag",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ETag that represents a unique instance of the item.</p>\n@param eTag The ETag that represents a unique instance of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "eTag",
            "variableType" : "String",
            "documentation" : "<p>The ETag that represents a unique instance of the item.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LastModified" : {
          "c2jName" : "LastModified",
          "c2jShape" : "TimeStamp",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the item was last modified.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the item was last modified.</p>\n@param lastModified The date and time that the item was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastModified",
          "getterDocumentation" : "/**<p>The date and time that the item was last modified.</p>\n@return The date and time that the item was last modified.*/",
          "getterMethodName" : "getLastModified",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LastModified",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LastModified",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "LastModified",
          "setterDocumentation" : "/**<p>The date and time that the item was last modified.</p>\n@param lastModified The date and time that the item was last modified.*/",
          "setterMethodName" : "setLastModified",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModified",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the item was last modified.</p>\n@param lastModified The date and time that the item was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModified",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time that the item was last modified.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "ItemName",
          "deprecated" : false,
          "documentation" : "<p>The name of the item.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the item.</p>\n@param name The name of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the item.</p>\n@return The name of the item.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "setterDocumentation" : "/**<p>The name of the item.</p>\n@param name The name of the item.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the item.</p>\n@param name The name of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the item.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Type" : {
          "c2jName" : "Type",
          "c2jShape" : "ItemType",
          "deprecated" : false,
          "documentation" : "<p>The item type (folder or object).</p>",
          "enumType" : "ItemType",
          "fluentSetterDocumentation" : "/**<p>The item type (folder or object).</p>\n@param type The item type (folder or object).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ItemType*/",
          "fluentSetterMethodName" : "withType",
          "getterDocumentation" : "/**<p>The item type (folder or object).</p>\n@return The item type (folder or object).\n@see ItemType*/",
          "getterMethodName" : "getType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Type",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Type",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Type",
          "setterDocumentation" : "/**<p>The item type (folder or object).</p>\n@param type The item type (folder or object).\n@see ItemType*/",
          "setterMethodName" : "setType",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The item type (folder or object).</p>\n@param type The item type (folder or object).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ItemType*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "<p>The item type (folder or object).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Item",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Item",
        "variableName" : "item",
        "variableType" : "Item",
        "documentation" : null,
        "simpleType" : "Item",
        "variableSetterType" : "Item"
      },
      "wrapper" : false
    },
    "ItemType" : {
      "c2jName" : "ItemType",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "OBJECT",
        "value" : "OBJECT"
      }, {
        "name" : "FOLDER",
        "value" : "FOLDER"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ItemType",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ItemType",
        "variableName" : "itemType",
        "variableType" : "ItemType",
        "documentation" : null,
        "simpleType" : "ItemType",
        "variableSetterType" : "ItemType"
      },
      "wrapper" : false
    },
    "ListItemsRequest" : {
      "c2jName" : "ListItemsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListItems",
        "locationName" : null,
        "requestUri" : "/",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Path",
        "c2jShape" : "ListPathNaming",
        "deprecated" : false,
        "documentation" : "<p>The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPath",
        "getterDocumentation" : "/**<p>The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@return The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;*/",
        "getterMethodName" : "getPath",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "Path",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "Path",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Path",
        "setterDocumentation" : "/**<p>The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;*/",
        "setterMethodName" : "setPath",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "path",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "path",
          "variableType" : "String",
          "documentation" : "<p>The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "ListLimit",
        "deprecated" : false,
        "documentation" : "<p>The maximum results to return. The service might return fewer results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum results to return. The service might return fewer results.</p>\n@param maxResults The maximum results to return. The service might return fewer results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum results to return. The service might return fewer results.</p>\n@return The maximum results to return. The service might return fewer results.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "MaxResults",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "setterDocumentation" : "/**<p>The maximum results to return. The service might return fewer results.</p>\n@param maxResults The maximum results to return. The service might return fewer results.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum results to return. The service might return fewer results.</p>\n@param maxResults The maximum results to return. The service might return fewer results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum results to return. The service might return fewer results.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p>The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.</p>\n@param nextToken The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.</p>\n@return The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "NextToken",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.</p>\n@param nextToken The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.</p>\n@param nextToken The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "ListLimit",
          "deprecated" : false,
          "documentation" : "<p>The maximum results to return. The service might return fewer results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum results to return. The service might return fewer results.</p>\n@param maxResults The maximum results to return. The service might return fewer results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum results to return. The service might return fewer results.</p>\n@return The maximum results to return. The service might return fewer results.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "MaxResults",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "setterDocumentation" : "/**<p>The maximum results to return. The service might return fewer results.</p>\n@param maxResults The maximum results to return. The service might return fewer results.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum results to return. The service might return fewer results.</p>\n@param maxResults The maximum results to return. The service might return fewer results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum results to return. The service might return fewer results.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p>The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.</p>\n@param nextToken The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.</p>\n@return The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "NextToken",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.</p>\n@param nextToken The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.</p>\n@param nextToken The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The <code>NextToken</code> received in the <code>ListItemsResponse</code> for the same container and path. Tokens expire after 15 minutes.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Path" : {
          "c2jName" : "Path",
          "c2jShape" : "ListPathNaming",
          "deprecated" : false,
          "documentation" : "<p>The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPath",
          "getterDocumentation" : "/**<p>The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@return The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;*/",
          "getterMethodName" : "getPath",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "Path",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "Path",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Path",
          "setterDocumentation" : "/**<p>The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;*/",
          "setterMethodName" : "setPath",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "path",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>\n@param path The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "path",
            "variableType" : "String",
            "documentation" : "<p>The path in the container from which to retrieve items. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListItemsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListItemsRequest",
        "variableName" : "listItemsRequest",
        "variableType" : "ListItemsRequest",
        "documentation" : null,
        "simpleType" : "ListItemsRequest",
        "variableSetterType" : "ListItemsRequest"
      },
      "wrapper" : false
    },
    "ListItemsResult" : {
      "c2jName" : "ListItemsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Items",
        "c2jShape" : "ItemList",
        "deprecated" : false,
        "documentation" : "<p>Metadata entries for the folders and objects at the requested path.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Metadata entries for the folders and objects at the requested path.</p>\n@param items Metadata entries for the folders and objects at the requested path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withItems",
        "getterDocumentation" : "/**<p>Metadata entries for the folders and objects at the requested path.</p>\n@return Metadata entries for the folders and objects at the requested path.*/",
        "getterMethodName" : "getItems",
        "getterModel" : {
          "returnType" : "java.util.List<Item>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Items",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Items",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Item",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Item",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Item",
              "variableName" : "member",
              "variableType" : "Item",
              "documentation" : "",
              "simpleType" : "Item",
              "variableSetterType" : "Item"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Item",
              "variableName" : "member",
              "variableType" : "Item",
              "documentation" : "",
              "simpleType" : "Item",
              "variableSetterType" : "Item"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Item",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Item",
          "templateImplType" : "java.util.ArrayList<Item>",
          "templateType" : "java.util.List<Item>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Items",
        "setterDocumentation" : "/**<p>Metadata entries for the folders and objects at the requested path.</p>\n@param items Metadata entries for the folders and objects at the requested path.*/",
        "setterMethodName" : "setItems",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Item>",
          "variableName" : "items",
          "variableType" : "java.util.List<Item>",
          "documentation" : "",
          "simpleType" : "List<Item>",
          "variableSetterType" : "java.util.Collection<Item>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Metadata entries for the folders and objects at the requested path.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setItems(java.util.Collection)} or {@link #withItems(java.util.Collection)} if you want to override the existing values.</p>\n@param items Metadata entries for the folders and objects at the requested path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Item>",
          "variableName" : "items",
          "variableType" : "java.util.List<Item>",
          "documentation" : "<p>Metadata entries for the folders and objects at the requested path.</p>",
          "simpleType" : "List<Item>",
          "variableSetterType" : "java.util.Collection<Item>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p>The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.</p>\n@param nextToken The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.</p>\n@return The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.</p>\n@param nextToken The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.</p>\n@param nextToken The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Items" : {
          "c2jName" : "Items",
          "c2jShape" : "ItemList",
          "deprecated" : false,
          "documentation" : "<p>Metadata entries for the folders and objects at the requested path.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Metadata entries for the folders and objects at the requested path.</p>\n@param items Metadata entries for the folders and objects at the requested path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withItems",
          "getterDocumentation" : "/**<p>Metadata entries for the folders and objects at the requested path.</p>\n@return Metadata entries for the folders and objects at the requested path.*/",
          "getterMethodName" : "getItems",
          "getterModel" : {
            "returnType" : "java.util.List<Item>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Items",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Items",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Item",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Item",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Item",
                "variableName" : "member",
                "variableType" : "Item",
                "documentation" : "",
                "simpleType" : "Item",
                "variableSetterType" : "Item"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Item",
                "variableName" : "member",
                "variableType" : "Item",
                "documentation" : "",
                "simpleType" : "Item",
                "variableSetterType" : "Item"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Item",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Item",
            "templateImplType" : "java.util.ArrayList<Item>",
            "templateType" : "java.util.List<Item>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Items",
          "setterDocumentation" : "/**<p>Metadata entries for the folders and objects at the requested path.</p>\n@param items Metadata entries for the folders and objects at the requested path.*/",
          "setterMethodName" : "setItems",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Item>",
            "variableName" : "items",
            "variableType" : "java.util.List<Item>",
            "documentation" : "",
            "simpleType" : "List<Item>",
            "variableSetterType" : "java.util.Collection<Item>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Metadata entries for the folders and objects at the requested path.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setItems(java.util.Collection)} or {@link #withItems(java.util.Collection)} if you want to override the existing values.</p>\n@param items Metadata entries for the folders and objects at the requested path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Item>",
            "variableName" : "items",
            "variableType" : "java.util.List<Item>",
            "documentation" : "<p>Metadata entries for the folders and objects at the requested path.</p>",
            "simpleType" : "List<Item>",
            "variableSetterType" : "java.util.Collection<Item>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p>The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.</p>\n@param nextToken The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.</p>\n@return The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.</p>\n@param nextToken The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.</p>\n@param nextToken The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListItemsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListItemsResult",
        "variableName" : "listItemsResult",
        "variableType" : "ListItemsResult",
        "documentation" : null,
        "simpleType" : "ListItemsResult",
        "variableSetterType" : "ListItemsResult"
      },
      "wrapper" : false
    },
    "ObjectNotFoundException" : {
      "c2jName" : "ObjectNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Could not perform an operation on an object that does not exist.</p>",
      "enums" : null,
      "errorCode" : "ObjectNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ObjectNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ObjectNotFoundException",
        "variableName" : "objectNotFoundException",
        "variableType" : "ObjectNotFoundException",
        "documentation" : null,
        "simpleType" : "ObjectNotFoundException",
        "variableSetterType" : "ObjectNotFoundException"
      },
      "wrapper" : false
    },
    "PutObjectRequest" : {
      "c2jName" : "PutObjectRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : true,
      "hasPayloadMember" : true,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : true,
      "marshaller" : {
        "action" : "PutObject",
        "locationName" : null,
        "requestUri" : "/{Path+}",
        "target" : null,
        "verb" : "PUT",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Body",
        "c2jShape" : "PayloadBlob",
        "deprecated" : false,
        "documentation" : "<p>The bytes to be stored. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The bytes to be stored. </p>\n@param body The bytes to be stored.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBody",
        "getterDocumentation" : "/**<p>The bytes to be stored. </p>\n@return The bytes to be stored.*/",
        "getterMethodName" : "getBody",
        "getterModel" : {
          "returnType" : "java.io.InputStream",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : true,
          "isStreaming" : true,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Body",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Body",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : true,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.io.InputStream",
        "marshallingType" : "STREAM",
        "name" : "Body",
        "setterDocumentation" : "/**<p>The bytes to be stored. </p>\n@param body The bytes to be stored.*/",
        "setterMethodName" : "setBody",
        "setterModel" : {
          "variableDeclarationType" : "java.io.InputStream",
          "variableName" : "body",
          "variableType" : "java.io.InputStream",
          "documentation" : "",
          "simpleType" : "InputStream",
          "variableSetterType" : "java.io.InputStream"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The bytes to be stored. </p>\n@param body The bytes to be stored.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.io.InputStream",
          "variableName" : "body",
          "variableType" : "java.io.InputStream",
          "documentation" : "<p>The bytes to be stored. </p>",
          "simpleType" : "InputStream",
          "variableSetterType" : "java.io.InputStream"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Path",
        "c2jShape" : "PathNaming",
        "deprecated" : false,
        "documentation" : "<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPath",
        "getterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>\n@return The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.*/",
        "getterMethodName" : "getPath",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : true,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "GREEDY_PATH",
          "marshallLocationName" : "Path",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Path",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Path",
        "setterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.*/",
        "setterMethodName" : "setPath",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "path",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "path",
          "variableType" : "String",
          "documentation" : "<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ContentType",
        "c2jShape" : "ContentType",
        "deprecated" : false,
        "documentation" : "<p>The content type of the object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContentType",
        "getterDocumentation" : "/**<p>The content type of the object.</p>\n@return The content type of the object.*/",
        "getterMethodName" : "getContentType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "Content-Type",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Content-Type",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContentType",
        "setterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.*/",
        "setterMethodName" : "setContentType",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "contentType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "contentType",
          "variableType" : "String",
          "documentation" : "<p>The content type of the object.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CacheControl",
        "c2jShape" : "StringPrimitive",
        "deprecated" : false,
        "documentation" : "<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCacheControl",
        "getterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@return An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.*/",
        "getterMethodName" : "getCacheControl",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "Cache-Control",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Cache-Control",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CacheControl",
        "setterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.*/",
        "setterMethodName" : "setCacheControl",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "cacheControl",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "cacheControl",
          "variableType" : "String",
          "documentation" : "<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "StorageClass",
        "c2jShape" : "StorageClass",
        "deprecated" : false,
        "documentation" : "<p>Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.</p>",
        "enumType" : "StorageClass",
        "fluentSetterDocumentation" : "/**<p>Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.</p>\n@param storageClass Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.\n@return Returns a reference to this object so that method calls can be chained together.\n@see StorageClass*/",
        "fluentSetterMethodName" : "withStorageClass",
        "getterDocumentation" : "/**<p>Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.</p>\n@return Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.\n@see StorageClass*/",
        "getterMethodName" : "getStorageClass",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-storage-class",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-storage-class",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "StorageClass",
        "setterDocumentation" : "/**<p>Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.</p>\n@param storageClass Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.\n@see StorageClass*/",
        "setterMethodName" : "setStorageClass",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "storageClass",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.</p>\n@param storageClass Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.\n@return Returns a reference to this object so that method calls can be chained together.\n@see StorageClass*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "storageClass",
          "variableType" : "String",
          "documentation" : "<p>Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Body" : {
          "c2jName" : "Body",
          "c2jShape" : "PayloadBlob",
          "deprecated" : false,
          "documentation" : "<p>The bytes to be stored. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The bytes to be stored. </p>\n@param body The bytes to be stored.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBody",
          "getterDocumentation" : "/**<p>The bytes to be stored. </p>\n@return The bytes to be stored.*/",
          "getterMethodName" : "getBody",
          "getterModel" : {
            "returnType" : "java.io.InputStream",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : true,
            "isStreaming" : true,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Body",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Body",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : true,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.io.InputStream",
          "marshallingType" : "STREAM",
          "name" : "Body",
          "setterDocumentation" : "/**<p>The bytes to be stored. </p>\n@param body The bytes to be stored.*/",
          "setterMethodName" : "setBody",
          "setterModel" : {
            "variableDeclarationType" : "java.io.InputStream",
            "variableName" : "body",
            "variableType" : "java.io.InputStream",
            "documentation" : "",
            "simpleType" : "InputStream",
            "variableSetterType" : "java.io.InputStream"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The bytes to be stored. </p>\n@param body The bytes to be stored.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.io.InputStream",
            "variableName" : "body",
            "variableType" : "java.io.InputStream",
            "documentation" : "<p>The bytes to be stored. </p>",
            "simpleType" : "InputStream",
            "variableSetterType" : "java.io.InputStream"
          },
          "xmlNameSpaceUri" : null
        },
        "CacheControl" : {
          "c2jName" : "CacheControl",
          "c2jShape" : "StringPrimitive",
          "deprecated" : false,
          "documentation" : "<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCacheControl",
          "getterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@return An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.*/",
          "getterMethodName" : "getCacheControl",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "Cache-Control",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Cache-Control",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CacheControl",
          "setterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.*/",
          "setterMethodName" : "setCacheControl",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "cacheControl",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>\n@param cacheControl An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "cacheControl",
            "variableType" : "String",
            "documentation" : "<p>An optional <code>CacheControl</code> header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p> <p>Headers with a custom user-defined value are also accepted.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ContentType" : {
          "c2jName" : "ContentType",
          "c2jShape" : "ContentType",
          "deprecated" : false,
          "documentation" : "<p>The content type of the object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContentType",
          "getterDocumentation" : "/**<p>The content type of the object.</p>\n@return The content type of the object.*/",
          "getterMethodName" : "getContentType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "Content-Type",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Content-Type",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContentType",
          "setterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.*/",
          "setterMethodName" : "setContentType",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "contentType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The content type of the object.</p>\n@param contentType The content type of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "contentType",
            "variableType" : "String",
            "documentation" : "<p>The content type of the object.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Path" : {
          "c2jName" : "Path",
          "c2jShape" : "PathNaming",
          "deprecated" : false,
          "documentation" : "<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPath",
          "getterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>\n@return The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.*/",
          "getterMethodName" : "getPath",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : true,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "GREEDY_PATH",
            "marshallLocationName" : "Path",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Path",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Path",
          "setterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.*/",
          "setterMethodName" : "setPath",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "path",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>\n@param path The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "path",
            "variableType" : "String",
            "documentation" : "<p>The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;</p> <p>For example, to upload the file <code>mlaw.avi</code> to the folder path <code>premium\\canada</code> in the container <code>movies</code>, enter the path <code>premium/canada/mlaw.avi</code>.</p> <p>Do not include the container name in this path.</p> <p>If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing <code>premium/usa</code> subfolder. If you specify <code>premium/canada</code>, the service creates a <code>canada</code> subfolder in the <code>premium</code> folder. You then have two subfolders, <code>usa</code> and <code>canada</code>, in the <code>premium</code> folder. </p> <p>There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.</p> <p>For more information about folders and how they exist in a container, see the <a href=\"http://docs.aws.amazon.com/mediastore/latest/ug/\">AWS Elemental MediaStore User Guide</a>.</p> <p>The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StorageClass" : {
          "c2jName" : "StorageClass",
          "c2jShape" : "StorageClass",
          "deprecated" : false,
          "documentation" : "<p>Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.</p>",
          "enumType" : "StorageClass",
          "fluentSetterDocumentation" : "/**<p>Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.</p>\n@param storageClass Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.\n@return Returns a reference to this object so that method calls can be chained together.\n@see StorageClass*/",
          "fluentSetterMethodName" : "withStorageClass",
          "getterDocumentation" : "/**<p>Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.</p>\n@return Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.\n@see StorageClass*/",
          "getterMethodName" : "getStorageClass",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-storage-class",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-storage-class",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "StorageClass",
          "setterDocumentation" : "/**<p>Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.</p>\n@param storageClass Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.\n@see StorageClass*/",
          "setterMethodName" : "setStorageClass",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "storageClass",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.</p>\n@param storageClass Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.\n@return Returns a reference to this object so that method calls can be chained together.\n@see StorageClass*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "storageClass",
            "variableType" : "String",
            "documentation" : "<p>Indicates the storage class of a <code>Put</code> request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Body", "Path" ],
      "shapeName" : "PutObjectRequest",
      "signerAware" : true,
      "signerType" : "AWS4UnsignedPayloadSignerType",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PutObjectRequest",
        "variableName" : "putObjectRequest",
        "variableType" : "PutObjectRequest",
        "documentation" : null,
        "simpleType" : "PutObjectRequest",
        "variableSetterType" : "PutObjectRequest"
      },
      "wrapper" : false
    },
    "PutObjectResult" : {
      "c2jName" : "PutObjectResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ContentSHA256",
        "c2jShape" : "SHA256Hash",
        "deprecated" : false,
        "documentation" : "<p>The SHA256 digest of the object that is persisted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The SHA256 digest of the object that is persisted.</p>\n@param contentSHA256 The SHA256 digest of the object that is persisted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContentSHA256",
        "getterDocumentation" : "/**<p>The SHA256 digest of the object that is persisted.</p>\n@return The SHA256 digest of the object that is persisted.*/",
        "getterMethodName" : "getContentSHA256",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ContentSHA256",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ContentSHA256",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContentSHA256",
        "setterDocumentation" : "/**<p>The SHA256 digest of the object that is persisted.</p>\n@param contentSHA256 The SHA256 digest of the object that is persisted.*/",
        "setterMethodName" : "setContentSHA256",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "contentSHA256",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The SHA256 digest of the object that is persisted.</p>\n@param contentSHA256 The SHA256 digest of the object that is persisted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "contentSHA256",
          "variableType" : "String",
          "documentation" : "<p>The SHA256 digest of the object that is persisted.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ETag",
        "c2jShape" : "ETag",
        "deprecated" : false,
        "documentation" : "<p>Unique identifier of the object in the container.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Unique identifier of the object in the container.</p>\n@param eTag Unique identifier of the object in the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withETag",
        "getterDocumentation" : "/**<p>Unique identifier of the object in the container.</p>\n@return Unique identifier of the object in the container.*/",
        "getterMethodName" : "getETag",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ETag",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ETag",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ETag",
        "setterDocumentation" : "/**<p>Unique identifier of the object in the container.</p>\n@param eTag Unique identifier of the object in the container.*/",
        "setterMethodName" : "setETag",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "eTag",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Unique identifier of the object in the container.</p>\n@param eTag Unique identifier of the object in the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "eTag",
          "variableType" : "String",
          "documentation" : "<p>Unique identifier of the object in the container.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "StorageClass",
        "c2jShape" : "StorageClass",
        "deprecated" : false,
        "documentation" : "<p>The storage class where the object was persisted. Should be “Temporal”.</p>",
        "enumType" : "StorageClass",
        "fluentSetterDocumentation" : "/**<p>The storage class where the object was persisted. Should be “Temporal”.</p>\n@param storageClass The storage class where the object was persisted. Should be “Temporal”.\n@return Returns a reference to this object so that method calls can be chained together.\n@see StorageClass*/",
        "fluentSetterMethodName" : "withStorageClass",
        "getterDocumentation" : "/**<p>The storage class where the object was persisted. Should be “Temporal”.</p>\n@return The storage class where the object was persisted. Should be “Temporal”.\n@see StorageClass*/",
        "getterMethodName" : "getStorageClass",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "StorageClass",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "StorageClass",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "StorageClass",
        "setterDocumentation" : "/**<p>The storage class where the object was persisted. Should be “Temporal”.</p>\n@param storageClass The storage class where the object was persisted. Should be “Temporal”.\n@see StorageClass*/",
        "setterMethodName" : "setStorageClass",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "storageClass",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The storage class where the object was persisted. Should be “Temporal”.</p>\n@param storageClass The storage class where the object was persisted. Should be “Temporal”.\n@return Returns a reference to this object so that method calls can be chained together.\n@see StorageClass*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "storageClass",
          "variableType" : "String",
          "documentation" : "<p>The storage class where the object was persisted. Should be “Temporal”.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ContentSHA256" : {
          "c2jName" : "ContentSHA256",
          "c2jShape" : "SHA256Hash",
          "deprecated" : false,
          "documentation" : "<p>The SHA256 digest of the object that is persisted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The SHA256 digest of the object that is persisted.</p>\n@param contentSHA256 The SHA256 digest of the object that is persisted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContentSHA256",
          "getterDocumentation" : "/**<p>The SHA256 digest of the object that is persisted.</p>\n@return The SHA256 digest of the object that is persisted.*/",
          "getterMethodName" : "getContentSHA256",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ContentSHA256",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ContentSHA256",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContentSHA256",
          "setterDocumentation" : "/**<p>The SHA256 digest of the object that is persisted.</p>\n@param contentSHA256 The SHA256 digest of the object that is persisted.*/",
          "setterMethodName" : "setContentSHA256",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "contentSHA256",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The SHA256 digest of the object that is persisted.</p>\n@param contentSHA256 The SHA256 digest of the object that is persisted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "contentSHA256",
            "variableType" : "String",
            "documentation" : "<p>The SHA256 digest of the object that is persisted.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ETag" : {
          "c2jName" : "ETag",
          "c2jShape" : "ETag",
          "deprecated" : false,
          "documentation" : "<p>Unique identifier of the object in the container.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Unique identifier of the object in the container.</p>\n@param eTag Unique identifier of the object in the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withETag",
          "getterDocumentation" : "/**<p>Unique identifier of the object in the container.</p>\n@return Unique identifier of the object in the container.*/",
          "getterMethodName" : "getETag",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ETag",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ETag",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ETag",
          "setterDocumentation" : "/**<p>Unique identifier of the object in the container.</p>\n@param eTag Unique identifier of the object in the container.*/",
          "setterMethodName" : "setETag",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "eTag",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Unique identifier of the object in the container.</p>\n@param eTag Unique identifier of the object in the container.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "eTag",
            "variableType" : "String",
            "documentation" : "<p>Unique identifier of the object in the container.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StorageClass" : {
          "c2jName" : "StorageClass",
          "c2jShape" : "StorageClass",
          "deprecated" : false,
          "documentation" : "<p>The storage class where the object was persisted. Should be “Temporal”.</p>",
          "enumType" : "StorageClass",
          "fluentSetterDocumentation" : "/**<p>The storage class where the object was persisted. Should be “Temporal”.</p>\n@param storageClass The storage class where the object was persisted. Should be “Temporal”.\n@return Returns a reference to this object so that method calls can be chained together.\n@see StorageClass*/",
          "fluentSetterMethodName" : "withStorageClass",
          "getterDocumentation" : "/**<p>The storage class where the object was persisted. Should be “Temporal”.</p>\n@return The storage class where the object was persisted. Should be “Temporal”.\n@see StorageClass*/",
          "getterMethodName" : "getStorageClass",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "StorageClass",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "StorageClass",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "StorageClass",
          "setterDocumentation" : "/**<p>The storage class where the object was persisted. Should be “Temporal”.</p>\n@param storageClass The storage class where the object was persisted. Should be “Temporal”.\n@see StorageClass*/",
          "setterMethodName" : "setStorageClass",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "storageClass",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The storage class where the object was persisted. Should be “Temporal”.</p>\n@param storageClass The storage class where the object was persisted. Should be “Temporal”.\n@return Returns a reference to this object so that method calls can be chained together.\n@see StorageClass*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "storageClass",
            "variableType" : "String",
            "documentation" : "<p>The storage class where the object was persisted. Should be “Temporal”.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PutObjectResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PutObjectResult",
        "variableName" : "putObjectResult",
        "variableType" : "PutObjectResult",
        "documentation" : null,
        "simpleType" : "PutObjectResult",
        "variableSetterType" : "PutObjectResult"
      },
      "wrapper" : false
    },
    "RequestedRangeNotSatisfiableException" : {
      "c2jName" : "RequestedRangeNotSatisfiableException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The requested content range is not valid.</p>",
      "enums" : null,
      "errorCode" : "RequestedRangeNotSatisfiableException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RequestedRangeNotSatisfiableException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RequestedRangeNotSatisfiableException",
        "variableName" : "requestedRangeNotSatisfiableException",
        "variableType" : "RequestedRangeNotSatisfiableException",
        "documentation" : null,
        "simpleType" : "RequestedRangeNotSatisfiableException",
        "variableSetterType" : "RequestedRangeNotSatisfiableException"
      },
      "wrapper" : false
    },
    "StorageClass" : {
      "c2jName" : "StorageClass",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "TEMPORAL",
        "value" : "TEMPORAL"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "StorageClass",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "StorageClass",
        "variableName" : "storageClass",
        "variableType" : "StorageClass",
        "documentation" : null,
        "simpleType" : "StorageClass",
        "variableSetterType" : "StorageClass"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "customAuthorizers" : { },
  "examples" : {
    "examples" : { },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2013-2018 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AWSMediaStoreDataException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.mediastoredata.model.AWSMediaStoreDataException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.mediastoredata.model.transform"
}