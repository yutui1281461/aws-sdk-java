{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "contentTypeOverride" : null,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "EnumSetterOverload" ],
    "emitLegacyEnumSetterFor" : {
      "Difference" : [ "changeType" ],
      "ListRepositoriesInput" : [ "sortBy", "order" ]
    },
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipClientMethodForOperations" : [ ],
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : false,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false
  },
  "metadata" : {
    "apiVersion" : "2015-04-13",
    "asyncClient" : "AWSCodeCommitAsyncClient",
    "asyncClientBuilderClassName" : "AWSCodeCommitAsyncClientBuilder",
    "asyncInterface" : "AWSCodeCommitAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : null,
    "cucumberModuleInjectorClassName" : "AWSCodeCommitModuleInjector",
    "defaultEndpoint" : "https://codecommit.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "codecommit.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<fullname>AWS CodeCommit</fullname> <p>This is the <i>AWS CodeCommit API Reference</i>. This reference provides descriptions of the operations and data types for AWS CodeCommit API along with usage examples.</p> <p>You can use the AWS CodeCommit API to work with the following objects:</p> <p>Repositories, by calling the following:</p> <ul> <li> <p> <a>BatchGetRepositories</a>, which returns information about one or more repositories associated with your AWS account.</p> </li> <li> <p> <a>CreateRepository</a>, which creates an AWS CodeCommit repository.</p> </li> <li> <p> <a>DeleteRepository</a>, which deletes an AWS CodeCommit repository.</p> </li> <li> <p> <a>GetRepository</a>, which returns information about a specified repository.</p> </li> <li> <p> <a>ListRepositories</a>, which lists all AWS CodeCommit repositories associated with your AWS account.</p> </li> <li> <p> <a>UpdateRepositoryDescription</a>, which sets or updates the description of the repository.</p> </li> <li> <p> <a>UpdateRepositoryName</a>, which changes the name of the repository. If you change the name of a repository, no other users of that repository will be able to access it until you send them the new HTTPS or SSH URL to use.</p> </li> </ul> <p>Branches, by calling the following:</p> <ul> <li> <p> <a>CreateBranch</a>, which creates a new branch in a specified repository.</p> </li> <li> <p> <a>DeleteBranch</a>, which deletes the specified branch in a repository unless it is the default branch.</p> </li> <li> <p> <a>GetBranch</a>, which returns information about a specified branch.</p> </li> <li> <p> <a>ListBranches</a>, which lists all branches for a specified repository.</p> </li> <li> <p> <a>UpdateDefaultBranch</a>, which changes the default branch for a repository.</p> </li> </ul> <p>Files, by calling the following:</p> <ul> <li> <p> <a>PutFile</a>, which adds or modifies a file in a specified repository and branch.</p> </li> </ul> <p>Information about committed code in a repository, by calling the following:</p> <ul> <li> <p> <a>GetBlob</a>, which returns the base-64 encoded content of an individual Git blob object within a repository.</p> </li> <li> <p> <a>GetCommit</a>, which returns information about a commit, including commit messages and author and committer information.</p> </li> <li> <p> <a>GetDifferences</a>, which returns information about the differences in a valid commit specifier (such as a branch, tag, HEAD, commit ID or other fully qualified reference).</p> </li> </ul> <p>Pull requests, by calling the following:</p> <ul> <li> <p> <a>CreatePullRequest</a>, which creates a pull request in a specified repository.</p> </li> <li> <p> <a>DescribePullRequestEvents</a>, which returns information about one or more pull request events.</p> </li> <li> <p> <a>GetCommentsForPullRequest</a>, which returns information about comments on a specified pull request.</p> </li> <li> <p> <a>GetMergeConflicts</a>, which returns information about merge conflicts between the source and destination branch in a pull request.</p> </li> <li> <p> <a>GetPullRequest</a>, which returns information about a specified pull request.</p> </li> <li> <p> <a>ListPullRequests</a>, which lists all pull requests for a repository.</p> </li> <li> <p> <a>MergePullRequestByFastForward</a>, which merges the source destination branch of a pull request into the specified destination branch for that pull request using the fast-forward merge option.</p> </li> <li> <p> <a>PostCommentForPullRequest</a>, which posts a comment to a pull request at the specified line, file, or request.</p> </li> <li> <p> <a>UpdatePullRequestDescription</a>, which updates the description of a pull request.</p> </li> <li> <p> <a>UpdatePullRequestStatus</a>, which updates the status of a pull request.</p> </li> <li> <p> <a>UpdatePullRequestTitle</a>, which updates the title of a pull request.</p> </li> </ul> <p>Information about comments in a repository, by calling the following:</p> <ul> <li> <p> <a>DeleteCommentContent</a>, which deletes the content of a comment on a commit in a repository.</p> </li> <li> <p> <a>GetComment</a>, which returns information about a comment on a commit.</p> </li> <li> <p> <a>GetCommentsForComparedCommit</a>, which returns information about comments on the comparison between two commit specifiers in a repository.</p> </li> <li> <p> <a>PostCommentForComparedCommit</a>, which creates a comment on the comparison between two commit specifiers in a repository.</p> </li> <li> <p> <a>PostCommentReply</a>, which creates a reply to a comment.</p> </li> <li> <p> <a>UpdateComment</a>, which updates the content of a comment on a commit in a repository.</p> </li> </ul> <p>Triggers, by calling the following:</p> <ul> <li> <p> <a>GetRepositoryTriggers</a>, which returns information about triggers configured for a repository.</p> </li> <li> <p> <a>PutRepositoryTriggers</a>, which replaces all triggers for a repository and can be used to create or delete triggers.</p> </li> <li> <p> <a>TestRepositoryTriggers</a>, which tests the functionality of a repository trigger by sending data to the trigger target.</p> </li> </ul> <p>For information about how to use AWS CodeCommit, see the <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html\">AWS CodeCommit User Guide</a>.</p>",
    "endpointPrefix" : "codecommit",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.codecommit",
    "packagePath" : "com/amazonaws/services/codecommit",
    "protocol" : "json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : "CodeCommit",
    "serviceFullName" : "AWS CodeCommit",
    "serviceName" : "CodeCommit",
    "signingName" : "codecommit",
    "smokeTestsPackageName" : "com.amazonaws.services.codecommit.smoketests",
    "syncClient" : "AWSCodeCommitClient",
    "syncClientBuilderClassName" : "AWSCodeCommitClientBuilder",
    "syncInterface" : "AWSCodeCommit",
    "uid" : "codecommit-2015-04-13",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "BatchGetRepositories" : {
      "asyncCallableType" : "java.util.concurrent.Callable<BatchGetRepositoriesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<BatchGetRepositoriesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<BatchGetRepositoriesRequest, BatchGetRepositoriesResult>",
      "asyncReturnType" : "BatchGetRepositoriesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns information about one or more repositories.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNamesRequiredException",
        "documentation" : "<p>A repository names object is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "MaximumRepositoryNamesExceededException",
        "documentation" : "<p>The maximum number of allowed repository names was exceeded. Currently, this number is 25.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "BatchGetRepositoriesRequest",
        "variableName" : "batchGetRepositoriesRequest",
        "variableType" : "BatchGetRepositoriesRequest",
        "documentation" : "<p>Represents the input of a batch get repositories operation.</p>",
        "simpleType" : "BatchGetRepositoriesRequest",
        "variableSetterType" : "BatchGetRepositoriesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "batchGetRepositories",
      "operationName" : "BatchGetRepositories",
      "returnType" : {
        "returnType" : "BatchGetRepositoriesResult",
        "documentation" : "<p>Represents the output of a batch get repositories operation.</p>"
      },
      "syncReturnType" : "BatchGetRepositoriesResult"
    },
    "CreateBranch" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateBranchResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateBranchResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateBranchRequest, CreateBranchResult>",
      "asyncReturnType" : "CreateBranchResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a new branch in a repository and points the branch to a commit.</p> <note> <p>Calling the create branch operation does not set a repository's default branch. To do this, call the update default branch operation.</p> </note>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BranchNameRequiredException",
        "documentation" : "<p>A branch name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BranchNameExistsException",
        "documentation" : "<p>The specified branch name already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidBranchNameException",
        "documentation" : "<p>The specified reference name is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitIdRequiredException",
        "documentation" : "<p>A commit ID was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitDoesNotExistException",
        "documentation" : "<p>The specified commit does not exist or no commit was specified, and the specified repository has no default branch.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommitIdException",
        "documentation" : "<p>The specified commit ID is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CreateBranchRequest",
        "variableName" : "createBranchRequest",
        "variableType" : "CreateBranchRequest",
        "documentation" : "<p>Represents the input of a create branch operation.</p>",
        "simpleType" : "CreateBranchRequest",
        "variableSetterType" : "CreateBranchRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createBranch",
      "operationName" : "CreateBranch",
      "returnType" : {
        "returnType" : "CreateBranchResult",
        "documentation" : null
      },
      "syncReturnType" : "CreateBranchResult"
    },
    "CreatePullRequest" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreatePullRequestResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreatePullRequestResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreatePullRequestRequest, CreatePullRequestResult>",
      "asyncReturnType" : "CreatePullRequestResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a pull request in the specified repository.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ClientRequestTokenRequiredException",
        "documentation" : "<p>A client request token is required. A client request token is an unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidClientRequestTokenException",
        "documentation" : "<p>The client request token is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "IdempotencyParameterMismatchException",
        "documentation" : "<p>The client request token is not valid. Either the token is not in a valid format, or the token has been used in a previous request and cannot be re-used.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ReferenceNameRequiredException",
        "documentation" : "<p>A reference name is required, but none was provided.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidReferenceNameException",
        "documentation" : "<p>The specified reference name format is not valid. Reference names must conform to the Git references format, for example refs/heads/master. For more information, see <a href=\"https://git-scm.com/book/en/v2/Git-Internals-Git-References\">Git Internals - Git References</a> or consult your Git documentation.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ReferenceDoesNotExistException",
        "documentation" : "<p>The specified reference does not exist. You must provide a full commit ID.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ReferenceTypeNotSupportedException",
        "documentation" : "<p>The specified reference is not a supported type. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TitleRequiredException",
        "documentation" : "<p>A pull request title is required. It cannot be empty or null.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidTitleException",
        "documentation" : "<p>The title of the pull request is not valid. Pull request titles cannot exceed 100 characters in length.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidDescriptionException",
        "documentation" : "<p>The pull request description is not valid. Descriptions are limited to 1,000 characters in length.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TargetsRequiredException",
        "documentation" : "<p>An array of target objects is required. It cannot be empty or null.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidTargetsException",
        "documentation" : "<p>The targets for the pull request is not valid or not in a valid format. Targets are a list of target objects. Each target object must contain the full values for the repository name, source branch, and destination branch for a pull request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TargetRequiredException",
        "documentation" : "<p>A pull request target is required. It cannot be empty or null. A pull request target must contain the full values for the repository name, source branch, and destination branch for the pull request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidTargetException",
        "documentation" : "<p>The target for the pull request is not valid. A target must contain the full values for the repository name, source branch, and destination branch for the pull request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "MultipleRepositoriesInPullRequestException",
        "documentation" : "<p>You cannot include more than one repository in a pull request. Make sure you have specified only one repository name in your request, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "MaximumOpenPullRequestsExceededException",
        "documentation" : "<p>You cannot create the pull request because the repository has too many open pull requests. The maximum number of open pull requests for a repository is 1,000. Close one or more open pull requests, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "SourceAndDestinationAreSameException",
        "documentation" : "<p>The source branch and the destination branch for the pull request are the same. You must specify different branches for the source and destination.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CreatePullRequestRequest",
        "variableName" : "createPullRequestRequest",
        "variableType" : "CreatePullRequestRequest",
        "documentation" : "",
        "simpleType" : "CreatePullRequestRequest",
        "variableSetterType" : "CreatePullRequestRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createPullRequest",
      "operationName" : "CreatePullRequest",
      "returnType" : {
        "returnType" : "CreatePullRequestResult",
        "documentation" : null
      },
      "syncReturnType" : "CreatePullRequestResult"
    },
    "CreateRepository" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateRepositoryResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateRepositoryResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateRepositoryRequest, CreateRepositoryResult>",
      "asyncReturnType" : "CreateRepositoryResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a new, empty repository.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameExistsException",
        "documentation" : "<p>The specified repository name already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryDescriptionException",
        "documentation" : "<p>The specified repository description is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryLimitExceededException",
        "documentation" : "<p>A repository resource limit was exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CreateRepositoryRequest",
        "variableName" : "createRepositoryRequest",
        "variableType" : "CreateRepositoryRequest",
        "documentation" : "<p>Represents the input of a create repository operation.</p>",
        "simpleType" : "CreateRepositoryRequest",
        "variableSetterType" : "CreateRepositoryRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createRepository",
      "operationName" : "CreateRepository",
      "returnType" : {
        "returnType" : "CreateRepositoryResult",
        "documentation" : "<p>Represents the output of a create repository operation.</p>"
      },
      "syncReturnType" : "CreateRepositoryResult"
    },
    "DeleteBranch" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteBranchResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteBranchResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteBranchRequest, DeleteBranchResult>",
      "asyncReturnType" : "DeleteBranchResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes a branch from a repository, unless that branch is the default branch for the repository. </p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BranchNameRequiredException",
        "documentation" : "<p>A branch name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidBranchNameException",
        "documentation" : "<p>The specified reference name is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "DefaultBranchCannotBeDeletedException",
        "documentation" : "<p>The specified branch is the default branch for the repository, and cannot be deleted. To delete this branch, you must first set another branch as the default branch.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteBranchRequest",
        "variableName" : "deleteBranchRequest",
        "variableType" : "DeleteBranchRequest",
        "documentation" : "<p>Represents the input of a delete branch operation.</p>",
        "simpleType" : "DeleteBranchRequest",
        "variableSetterType" : "DeleteBranchRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteBranch",
      "operationName" : "DeleteBranch",
      "returnType" : {
        "returnType" : "DeleteBranchResult",
        "documentation" : "<p>Represents the output of a delete branch operation.</p>"
      },
      "syncReturnType" : "DeleteBranchResult"
    },
    "DeleteCommentContent" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteCommentContentResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteCommentContentResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteCommentContentRequest, DeleteCommentContentResult>",
      "asyncReturnType" : "DeleteCommentContentResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes the content of a comment made on a change, file, or commit in a repository.</p>",
      "exceptions" : [ {
        "exceptionName" : "CommentDoesNotExistException",
        "documentation" : "<p>No comment exists with the provided ID. Verify that you have provided the correct ID, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentIdRequiredException",
        "documentation" : "<p>The comment ID is missing or null. A comment ID is required.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommentIdException",
        "documentation" : "<p>The comment ID is not in a valid format. Make sure that you have provided the full comment ID.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentDeletedException",
        "documentation" : "<p>This comment has already been deleted. You cannot edit or delete a deleted comment.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteCommentContentRequest",
        "variableName" : "deleteCommentContentRequest",
        "variableType" : "DeleteCommentContentRequest",
        "documentation" : "",
        "simpleType" : "DeleteCommentContentRequest",
        "variableSetterType" : "DeleteCommentContentRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteCommentContent",
      "operationName" : "DeleteCommentContent",
      "returnType" : {
        "returnType" : "DeleteCommentContentResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteCommentContentResult"
    },
    "DeleteRepository" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteRepositoryResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteRepositoryResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteRepositoryRequest, DeleteRepositoryResult>",
      "asyncReturnType" : "DeleteRepositoryResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes a repository. If a specified repository was already deleted, a null repository ID will be returned.</p> <important> <p>Deleting a repository also deletes all associated objects and metadata. After a repository is deleted, all future push calls to the deleted repository will fail.</p> </important>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteRepositoryRequest",
        "variableName" : "deleteRepositoryRequest",
        "variableType" : "DeleteRepositoryRequest",
        "documentation" : "<p>Represents the input of a delete repository operation.</p>",
        "simpleType" : "DeleteRepositoryRequest",
        "variableSetterType" : "DeleteRepositoryRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteRepository",
      "operationName" : "DeleteRepository",
      "returnType" : {
        "returnType" : "DeleteRepositoryResult",
        "documentation" : "<p>Represents the output of a delete repository operation.</p>"
      },
      "syncReturnType" : "DeleteRepositoryResult"
    },
    "DescribePullRequestEvents" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DescribePullRequestEventsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DescribePullRequestEventsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribePullRequestEventsRequest, DescribePullRequestEventsResult>",
      "asyncReturnType" : "DescribePullRequestEventsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns information about one or more pull request events.</p>",
      "exceptions" : [ {
        "exceptionName" : "PullRequestDoesNotExistException",
        "documentation" : "<p>The pull request ID could not be found. Make sure that you have specified the correct repository name and pull request ID, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPullRequestIdException",
        "documentation" : "<p>The pull request ID is not valid. Make sure that you have provided the full ID and that the pull request is in the specified repository, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PullRequestIdRequiredException",
        "documentation" : "<p>A pull request ID is required, but none was provided.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPullRequestEventTypeException",
        "documentation" : "<p>The pull request event type is not valid. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidActorArnException",
        "documentation" : "<p>The Amazon Resource Name (ARN) is not valid. Make sure that you have provided the full ARN for the user who initiated the change for the pull request, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ActorDoesNotExistException",
        "documentation" : "<p>The specified Amazon Resource Name (ARN) does not exist in the AWS account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidMaxResultsException",
        "documentation" : "<p>The specified number of maximum results is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidContinuationTokenException",
        "documentation" : "<p>The specified continuation token is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DescribePullRequestEventsRequest",
        "variableName" : "describePullRequestEventsRequest",
        "variableType" : "DescribePullRequestEventsRequest",
        "documentation" : "",
        "simpleType" : "DescribePullRequestEventsRequest",
        "variableSetterType" : "DescribePullRequestEventsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "describePullRequestEvents",
      "operationName" : "DescribePullRequestEvents",
      "returnType" : {
        "returnType" : "DescribePullRequestEventsResult",
        "documentation" : null
      },
      "syncReturnType" : "DescribePullRequestEventsResult"
    },
    "GetBlob" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetBlobResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetBlobResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetBlobRequest, GetBlobResult>",
      "asyncReturnType" : "GetBlobResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns the base-64 encoded content of an individual blob within a repository.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BlobIdRequiredException",
        "documentation" : "<p>A blob ID is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidBlobIdException",
        "documentation" : "<p>The specified blob is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BlobIdDoesNotExistException",
        "documentation" : "<p>The specified blob does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "FileTooLargeException",
        "documentation" : "<p>The specified file exceeds the file size limit for AWS CodeCommit. For more information about limits in AWS CodeCommit, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">AWS CodeCommit User Guide</a>.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetBlobRequest",
        "variableName" : "getBlobRequest",
        "variableType" : "GetBlobRequest",
        "documentation" : "<p>Represents the input of a get blob operation.</p>",
        "simpleType" : "GetBlobRequest",
        "variableSetterType" : "GetBlobRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getBlob",
      "operationName" : "GetBlob",
      "returnType" : {
        "returnType" : "GetBlobResult",
        "documentation" : "<p>Represents the output of a get blob operation.</p>"
      },
      "syncReturnType" : "GetBlobResult"
    },
    "GetBranch" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetBranchResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetBranchResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetBranchRequest, GetBranchResult>",
      "asyncReturnType" : "GetBranchResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns information about a repository branch, including its name and the last commit ID.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BranchNameRequiredException",
        "documentation" : "<p>A branch name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidBranchNameException",
        "documentation" : "<p>The specified reference name is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BranchDoesNotExistException",
        "documentation" : "<p>The specified branch does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetBranchRequest",
        "variableName" : "getBranchRequest",
        "variableType" : "GetBranchRequest",
        "documentation" : "<p>Represents the input of a get branch operation.</p>",
        "simpleType" : "GetBranchRequest",
        "variableSetterType" : "GetBranchRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getBranch",
      "operationName" : "GetBranch",
      "returnType" : {
        "returnType" : "GetBranchResult",
        "documentation" : "<p>Represents the output of a get branch operation.</p>"
      },
      "syncReturnType" : "GetBranchResult"
    },
    "GetComment" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetCommentResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetCommentResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetCommentRequest, GetCommentResult>",
      "asyncReturnType" : "GetCommentResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns the content of a comment made on a change, file, or commit in a repository.</p>",
      "exceptions" : [ {
        "exceptionName" : "CommentDoesNotExistException",
        "documentation" : "<p>No comment exists with the provided ID. Verify that you have provided the correct ID, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentIdRequiredException",
        "documentation" : "<p>The comment ID is missing or null. A comment ID is required.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommentIdException",
        "documentation" : "<p>The comment ID is not in a valid format. Make sure that you have provided the full comment ID.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentDeletedException",
        "documentation" : "<p>This comment has already been deleted. You cannot edit or delete a deleted comment.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetCommentRequest",
        "variableName" : "getCommentRequest",
        "variableType" : "GetCommentRequest",
        "documentation" : "",
        "simpleType" : "GetCommentRequest",
        "variableSetterType" : "GetCommentRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getComment",
      "operationName" : "GetComment",
      "returnType" : {
        "returnType" : "GetCommentResult",
        "documentation" : null
      },
      "syncReturnType" : "GetCommentResult"
    },
    "GetCommentsForComparedCommit" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetCommentsForComparedCommitResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetCommentsForComparedCommitResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetCommentsForComparedCommitRequest, GetCommentsForComparedCommitResult>",
      "asyncReturnType" : "GetCommentsForComparedCommitResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns information about comments made on the comparison between two commits.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitIdRequiredException",
        "documentation" : "<p>A commit ID was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommitIdException",
        "documentation" : "<p>The specified commit ID is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitDoesNotExistException",
        "documentation" : "<p>The specified commit does not exist or no commit was specified, and the specified repository has no default branch.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidMaxResultsException",
        "documentation" : "<p>The specified number of maximum results is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidContinuationTokenException",
        "documentation" : "<p>The specified continuation token is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetCommentsForComparedCommitRequest",
        "variableName" : "getCommentsForComparedCommitRequest",
        "variableType" : "GetCommentsForComparedCommitRequest",
        "documentation" : "",
        "simpleType" : "GetCommentsForComparedCommitRequest",
        "variableSetterType" : "GetCommentsForComparedCommitRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getCommentsForComparedCommit",
      "operationName" : "GetCommentsForComparedCommit",
      "returnType" : {
        "returnType" : "GetCommentsForComparedCommitResult",
        "documentation" : null
      },
      "syncReturnType" : "GetCommentsForComparedCommitResult"
    },
    "GetCommentsForPullRequest" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetCommentsForPullRequestResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetCommentsForPullRequestResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetCommentsForPullRequestRequest, GetCommentsForPullRequestResult>",
      "asyncReturnType" : "GetCommentsForPullRequestResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns comments made on a pull request.</p>",
      "exceptions" : [ {
        "exceptionName" : "PullRequestIdRequiredException",
        "documentation" : "<p>A pull request ID is required, but none was provided.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PullRequestDoesNotExistException",
        "documentation" : "<p>The pull request ID could not be found. Make sure that you have specified the correct repository name and pull request ID, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPullRequestIdException",
        "documentation" : "<p>The pull request ID is not valid. Make sure that you have provided the full ID and that the pull request is in the specified repository, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitIdRequiredException",
        "documentation" : "<p>A commit ID was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommitIdException",
        "documentation" : "<p>The specified commit ID is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitDoesNotExistException",
        "documentation" : "<p>The specified commit does not exist or no commit was specified, and the specified repository has no default branch.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidMaxResultsException",
        "documentation" : "<p>The specified number of maximum results is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidContinuationTokenException",
        "documentation" : "<p>The specified continuation token is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotAssociatedWithPullRequestException",
        "documentation" : "<p>The repository does not contain any pull requests with that pull request ID. Check to make sure you have provided the correct repository name for the pull request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetCommentsForPullRequestRequest",
        "variableName" : "getCommentsForPullRequestRequest",
        "variableType" : "GetCommentsForPullRequestRequest",
        "documentation" : "",
        "simpleType" : "GetCommentsForPullRequestRequest",
        "variableSetterType" : "GetCommentsForPullRequestRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getCommentsForPullRequest",
      "operationName" : "GetCommentsForPullRequest",
      "returnType" : {
        "returnType" : "GetCommentsForPullRequestResult",
        "documentation" : null
      },
      "syncReturnType" : "GetCommentsForPullRequestResult"
    },
    "GetCommit" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetCommitResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetCommitResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetCommitRequest, GetCommitResult>",
      "asyncReturnType" : "GetCommitResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns information about a commit, including commit message and committer information.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitIdRequiredException",
        "documentation" : "<p>A commit ID was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommitIdException",
        "documentation" : "<p>The specified commit ID is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitIdDoesNotExistException",
        "documentation" : "<p>The specified commit ID does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetCommitRequest",
        "variableName" : "getCommitRequest",
        "variableType" : "GetCommitRequest",
        "documentation" : "<p>Represents the input of a get commit operation.</p>",
        "simpleType" : "GetCommitRequest",
        "variableSetterType" : "GetCommitRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getCommit",
      "operationName" : "GetCommit",
      "returnType" : {
        "returnType" : "GetCommitResult",
        "documentation" : "<p>Represents the output of a get commit operation.</p>"
      },
      "syncReturnType" : "GetCommitResult"
    },
    "GetDifferences" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetDifferencesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetDifferencesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetDifferencesRequest, GetDifferencesResult>",
      "asyncReturnType" : "GetDifferencesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns information about the differences in a valid commit specifier (such as a branch, tag, HEAD, commit ID or other fully qualified reference). Results can be limited to a specified path.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidContinuationTokenException",
        "documentation" : "<p>The specified continuation token is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidMaxResultsException",
        "documentation" : "<p>The specified number of maximum results is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommitIdException",
        "documentation" : "<p>The specified commit ID is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitRequiredException",
        "documentation" : "<p>A commit was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommitException",
        "documentation" : "<p>The specified commit is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitDoesNotExistException",
        "documentation" : "<p>The specified commit does not exist or no commit was specified, and the specified repository has no default branch.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPathException",
        "documentation" : "<p>The specified path is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PathDoesNotExistException",
        "documentation" : "<p>The specified path does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetDifferencesRequest",
        "variableName" : "getDifferencesRequest",
        "variableType" : "GetDifferencesRequest",
        "documentation" : "",
        "simpleType" : "GetDifferencesRequest",
        "variableSetterType" : "GetDifferencesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getDifferences",
      "operationName" : "GetDifferences",
      "returnType" : {
        "returnType" : "GetDifferencesResult",
        "documentation" : null
      },
      "syncReturnType" : "GetDifferencesResult"
    },
    "GetMergeConflicts" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetMergeConflictsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetMergeConflictsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetMergeConflictsRequest, GetMergeConflictsResult>",
      "asyncReturnType" : "GetMergeConflictsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns information about merge conflicts between the before and after commit IDs for a pull request in a repository.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "MergeOptionRequiredException",
        "documentation" : "<p>A merge option or stategy is required, and none was provided.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidMergeOptionException",
        "documentation" : "<p>The specified merge option is not valid. The only valid value is FAST_FORWARD_MERGE.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidDestinationCommitSpecifierException",
        "documentation" : "<p>The destination commit specifier is not valid. You must provide a valid branch name, tag, or full commit ID. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidSourceCommitSpecifierException",
        "documentation" : "<p>The source commit specifier is not valid. You must provide a valid branch name, tag, or full commit ID.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitRequiredException",
        "documentation" : "<p>A commit was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitDoesNotExistException",
        "documentation" : "<p>The specified commit does not exist or no commit was specified, and the specified repository has no default branch.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommitException",
        "documentation" : "<p>The specified commit is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TipsDivergenceExceededException",
        "documentation" : "<p>The divergence between the tips of the provided commit specifiers is too great to determine whether there might be any merge conflicts. Locally compare the specifiers using <code>git diff</code> or a diff tool.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetMergeConflictsRequest",
        "variableName" : "getMergeConflictsRequest",
        "variableType" : "GetMergeConflictsRequest",
        "documentation" : "",
        "simpleType" : "GetMergeConflictsRequest",
        "variableSetterType" : "GetMergeConflictsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getMergeConflicts",
      "operationName" : "GetMergeConflicts",
      "returnType" : {
        "returnType" : "GetMergeConflictsResult",
        "documentation" : null
      },
      "syncReturnType" : "GetMergeConflictsResult"
    },
    "GetPullRequest" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetPullRequestResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetPullRequestResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetPullRequestRequest, GetPullRequestResult>",
      "asyncReturnType" : "GetPullRequestResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about a pull request in a specified repository.</p>",
      "exceptions" : [ {
        "exceptionName" : "PullRequestDoesNotExistException",
        "documentation" : "<p>The pull request ID could not be found. Make sure that you have specified the correct repository name and pull request ID, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPullRequestIdException",
        "documentation" : "<p>The pull request ID is not valid. Make sure that you have provided the full ID and that the pull request is in the specified repository, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PullRequestIdRequiredException",
        "documentation" : "<p>A pull request ID is required, but none was provided.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetPullRequestRequest",
        "variableName" : "getPullRequestRequest",
        "variableType" : "GetPullRequestRequest",
        "documentation" : "",
        "simpleType" : "GetPullRequestRequest",
        "variableSetterType" : "GetPullRequestRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getPullRequest",
      "operationName" : "GetPullRequest",
      "returnType" : {
        "returnType" : "GetPullRequestResult",
        "documentation" : null
      },
      "syncReturnType" : "GetPullRequestResult"
    },
    "GetRepository" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetRepositoryResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetRepositoryResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetRepositoryRequest, GetRepositoryResult>",
      "asyncReturnType" : "GetRepositoryResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns information about a repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetRepositoryRequest",
        "variableName" : "getRepositoryRequest",
        "variableType" : "GetRepositoryRequest",
        "documentation" : "<p>Represents the input of a get repository operation.</p>",
        "simpleType" : "GetRepositoryRequest",
        "variableSetterType" : "GetRepositoryRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getRepository",
      "operationName" : "GetRepository",
      "returnType" : {
        "returnType" : "GetRepositoryResult",
        "documentation" : "<p>Represents the output of a get repository operation.</p>"
      },
      "syncReturnType" : "GetRepositoryResult"
    },
    "GetRepositoryTriggers" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetRepositoryTriggersResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetRepositoryTriggersResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetRepositoryTriggersRequest, GetRepositoryTriggersResult>",
      "asyncReturnType" : "GetRepositoryTriggersResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about triggers configured for a repository.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetRepositoryTriggersRequest",
        "variableName" : "getRepositoryTriggersRequest",
        "variableType" : "GetRepositoryTriggersRequest",
        "documentation" : "<p>Represents the input of a get repository triggers operation.</p>",
        "simpleType" : "GetRepositoryTriggersRequest",
        "variableSetterType" : "GetRepositoryTriggersRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getRepositoryTriggers",
      "operationName" : "GetRepositoryTriggers",
      "returnType" : {
        "returnType" : "GetRepositoryTriggersResult",
        "documentation" : "<p>Represents the output of a get repository triggers operation.</p>"
      },
      "syncReturnType" : "GetRepositoryTriggersResult"
    },
    "ListBranches" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListBranchesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListBranchesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListBranchesRequest, ListBranchesResult>",
      "asyncReturnType" : "ListBranchesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about one or more branches in a repository.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidContinuationTokenException",
        "documentation" : "<p>The specified continuation token is not valid.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListBranchesRequest",
        "variableName" : "listBranchesRequest",
        "variableType" : "ListBranchesRequest",
        "documentation" : "<p>Represents the input of a list branches operation.</p>",
        "simpleType" : "ListBranchesRequest",
        "variableSetterType" : "ListBranchesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listBranches",
      "operationName" : "ListBranches",
      "returnType" : {
        "returnType" : "ListBranchesResult",
        "documentation" : "<p>Represents the output of a list branches operation.</p>"
      },
      "syncReturnType" : "ListBranchesResult"
    },
    "ListPullRequests" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListPullRequestsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListPullRequestsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListPullRequestsRequest, ListPullRequestsResult>",
      "asyncReturnType" : "ListPullRequestsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns a list of pull requests for a specified repository. The return list can be refined by pull request status or pull request author ARN.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidPullRequestStatusException",
        "documentation" : "<p>The pull request status is not valid. The only valid values are <code>OPEN</code> and <code>CLOSED</code>.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidAuthorArnException",
        "documentation" : "<p>The Amazon Resource Name (ARN) is not valid. Make sure that you have provided the full ARN for the author of the pull request, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AuthorDoesNotExistException",
        "documentation" : "<p>The specified Amazon Resource Name (ARN) does not exist in the AWS account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidMaxResultsException",
        "documentation" : "<p>The specified number of maximum results is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidContinuationTokenException",
        "documentation" : "<p>The specified continuation token is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListPullRequestsRequest",
        "variableName" : "listPullRequestsRequest",
        "variableType" : "ListPullRequestsRequest",
        "documentation" : "",
        "simpleType" : "ListPullRequestsRequest",
        "variableSetterType" : "ListPullRequestsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listPullRequests",
      "operationName" : "ListPullRequests",
      "returnType" : {
        "returnType" : "ListPullRequestsResult",
        "documentation" : null
      },
      "syncReturnType" : "ListPullRequestsResult"
    },
    "ListRepositories" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListRepositoriesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListRepositoriesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListRepositoriesRequest, ListRepositoriesResult>",
      "asyncReturnType" : "ListRepositoriesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about one or more repositories.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidSortByException",
        "documentation" : "<p>The specified sort by value is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidOrderException",
        "documentation" : "<p>The specified sort order is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidContinuationTokenException",
        "documentation" : "<p>The specified continuation token is not valid.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListRepositoriesRequest",
        "variableName" : "listRepositoriesRequest",
        "variableType" : "ListRepositoriesRequest",
        "documentation" : "<p>Represents the input of a list repositories operation.</p>",
        "simpleType" : "ListRepositoriesRequest",
        "variableSetterType" : "ListRepositoriesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listRepositories",
      "operationName" : "ListRepositories",
      "returnType" : {
        "returnType" : "ListRepositoriesResult",
        "documentation" : "<p>Represents the output of a list repositories operation.</p>"
      },
      "syncReturnType" : "ListRepositoriesResult"
    },
    "MergePullRequestByFastForward" : {
      "asyncCallableType" : "java.util.concurrent.Callable<MergePullRequestByFastForwardResult>",
      "asyncFutureType" : "java.util.concurrent.Future<MergePullRequestByFastForwardResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<MergePullRequestByFastForwardRequest, MergePullRequestByFastForwardResult>",
      "asyncReturnType" : "MergePullRequestByFastForwardResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Closes a pull request and attempts to merge the source commit of a pull request into the specified destination branch for that pull request at the specified commit using the fast-forward merge option.</p>",
      "exceptions" : [ {
        "exceptionName" : "ManualMergeRequiredException",
        "documentation" : "<p>The pull request cannot be merged automatically into the destination branch. You must manually merge the branches and resolve any conflicts.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PullRequestAlreadyClosedException",
        "documentation" : "<p>The pull request status cannot be updated because it is already closed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PullRequestDoesNotExistException",
        "documentation" : "<p>The pull request ID could not be found. Make sure that you have specified the correct repository name and pull request ID, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPullRequestIdException",
        "documentation" : "<p>The pull request ID is not valid. Make sure that you have provided the full ID and that the pull request is in the specified repository, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PullRequestIdRequiredException",
        "documentation" : "<p>A pull request ID is required, but none was provided.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TipOfSourceReferenceIsDifferentException",
        "documentation" : "<p>The tip of the source branch in the destination repository does not match the tip of the source branch specified in your request. The pull request might have been updated. Make sure that you have the latest changes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ReferenceDoesNotExistException",
        "documentation" : "<p>The specified reference does not exist. You must provide a full commit ID.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommitIdException",
        "documentation" : "<p>The specified commit ID is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "MergePullRequestByFastForwardRequest",
        "variableName" : "mergePullRequestByFastForwardRequest",
        "variableType" : "MergePullRequestByFastForwardRequest",
        "documentation" : "",
        "simpleType" : "MergePullRequestByFastForwardRequest",
        "variableSetterType" : "MergePullRequestByFastForwardRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "mergePullRequestByFastForward",
      "operationName" : "MergePullRequestByFastForward",
      "returnType" : {
        "returnType" : "MergePullRequestByFastForwardResult",
        "documentation" : null
      },
      "syncReturnType" : "MergePullRequestByFastForwardResult"
    },
    "PostCommentForComparedCommit" : {
      "asyncCallableType" : "java.util.concurrent.Callable<PostCommentForComparedCommitResult>",
      "asyncFutureType" : "java.util.concurrent.Future<PostCommentForComparedCommitResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PostCommentForComparedCommitRequest, PostCommentForComparedCommitResult>",
      "asyncReturnType" : "PostCommentForComparedCommitResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Posts a comment on the comparison between two commits.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ClientRequestTokenRequiredException",
        "documentation" : "<p>A client request token is required. A client request token is an unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidClientRequestTokenException",
        "documentation" : "<p>The client request token is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "IdempotencyParameterMismatchException",
        "documentation" : "<p>The client request token is not valid. Either the token is not in a valid format, or the token has been used in a previous request and cannot be re-used.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentContentRequiredException",
        "documentation" : "<p>The comment is empty. You must provide some content for a comment. The content cannot be null.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentContentSizeLimitExceededException",
        "documentation" : "<p>The comment is too large. Comments are limited to 1,000 characters.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidFileLocationException",
        "documentation" : "<p>The location of the file is not valid. Make sure that you include the extension of the file as well as the file name.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRelativeFileVersionEnumException",
        "documentation" : "<p>Either the enum is not in a valid format, or the specified file version enum is not valid in respect to the current file version.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PathRequiredException",
        "documentation" : "<p>The filePath for a location cannot be empty or null.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidFilePositionException",
        "documentation" : "<p>The position is not valid. Make sure that the line number exists in the version of the file you want to comment on.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitIdRequiredException",
        "documentation" : "<p>A commit ID was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommitIdException",
        "documentation" : "<p>The specified commit ID is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BeforeCommitIdAndAfterCommitIdAreSameException",
        "documentation" : "<p>The before commit ID and the after commit ID are the same, which is not valid. The before commit ID and the after commit ID must be different commit IDs.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitDoesNotExistException",
        "documentation" : "<p>The specified commit does not exist or no commit was specified, and the specified repository has no default branch.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPathException",
        "documentation" : "<p>The specified path is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PathDoesNotExistException",
        "documentation" : "<p>The specified path does not exist.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "PostCommentForComparedCommitRequest",
        "variableName" : "postCommentForComparedCommitRequest",
        "variableType" : "PostCommentForComparedCommitRequest",
        "documentation" : "",
        "simpleType" : "PostCommentForComparedCommitRequest",
        "variableSetterType" : "PostCommentForComparedCommitRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "postCommentForComparedCommit",
      "operationName" : "PostCommentForComparedCommit",
      "returnType" : {
        "returnType" : "PostCommentForComparedCommitResult",
        "documentation" : null
      },
      "syncReturnType" : "PostCommentForComparedCommitResult"
    },
    "PostCommentForPullRequest" : {
      "asyncCallableType" : "java.util.concurrent.Callable<PostCommentForPullRequestResult>",
      "asyncFutureType" : "java.util.concurrent.Future<PostCommentForPullRequestResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PostCommentForPullRequestRequest, PostCommentForPullRequestResult>",
      "asyncReturnType" : "PostCommentForPullRequestResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Posts a comment on a pull request.</p>",
      "exceptions" : [ {
        "exceptionName" : "PullRequestDoesNotExistException",
        "documentation" : "<p>The pull request ID could not be found. Make sure that you have specified the correct repository name and pull request ID, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPullRequestIdException",
        "documentation" : "<p>The pull request ID is not valid. Make sure that you have provided the full ID and that the pull request is in the specified repository, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PullRequestIdRequiredException",
        "documentation" : "<p>A pull request ID is required, but none was provided.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotAssociatedWithPullRequestException",
        "documentation" : "<p>The repository does not contain any pull requests with that pull request ID. Check to make sure you have provided the correct repository name for the pull request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ClientRequestTokenRequiredException",
        "documentation" : "<p>A client request token is required. A client request token is an unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidClientRequestTokenException",
        "documentation" : "<p>The client request token is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "IdempotencyParameterMismatchException",
        "documentation" : "<p>The client request token is not valid. Either the token is not in a valid format, or the token has been used in a previous request and cannot be re-used.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentContentRequiredException",
        "documentation" : "<p>The comment is empty. You must provide some content for a comment. The content cannot be null.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentContentSizeLimitExceededException",
        "documentation" : "<p>The comment is too large. Comments are limited to 1,000 characters.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidFileLocationException",
        "documentation" : "<p>The location of the file is not valid. Make sure that you include the extension of the file as well as the file name.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRelativeFileVersionEnumException",
        "documentation" : "<p>Either the enum is not in a valid format, or the specified file version enum is not valid in respect to the current file version.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PathRequiredException",
        "documentation" : "<p>The filePath for a location cannot be empty or null.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidFilePositionException",
        "documentation" : "<p>The position is not valid. Make sure that the line number exists in the version of the file you want to comment on.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitIdRequiredException",
        "documentation" : "<p>A commit ID was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommitIdException",
        "documentation" : "<p>The specified commit ID is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitDoesNotExistException",
        "documentation" : "<p>The specified commit does not exist or no commit was specified, and the specified repository has no default branch.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPathException",
        "documentation" : "<p>The specified path is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PathDoesNotExistException",
        "documentation" : "<p>The specified path does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PathRequiredException",
        "documentation" : "<p>The filePath for a location cannot be empty or null.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BeforeCommitIdAndAfterCommitIdAreSameException",
        "documentation" : "<p>The before commit ID and the after commit ID are the same, which is not valid. The before commit ID and the after commit ID must be different commit IDs.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "PostCommentForPullRequestRequest",
        "variableName" : "postCommentForPullRequestRequest",
        "variableType" : "PostCommentForPullRequestRequest",
        "documentation" : "",
        "simpleType" : "PostCommentForPullRequestRequest",
        "variableSetterType" : "PostCommentForPullRequestRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "postCommentForPullRequest",
      "operationName" : "PostCommentForPullRequest",
      "returnType" : {
        "returnType" : "PostCommentForPullRequestResult",
        "documentation" : null
      },
      "syncReturnType" : "PostCommentForPullRequestResult"
    },
    "PostCommentReply" : {
      "asyncCallableType" : "java.util.concurrent.Callable<PostCommentReplyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<PostCommentReplyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PostCommentReplyRequest, PostCommentReplyResult>",
      "asyncReturnType" : "PostCommentReplyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Posts a comment in reply to an existing comment on a comparison between commits or a pull request.</p>",
      "exceptions" : [ {
        "exceptionName" : "ClientRequestTokenRequiredException",
        "documentation" : "<p>A client request token is required. A client request token is an unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidClientRequestTokenException",
        "documentation" : "<p>The client request token is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "IdempotencyParameterMismatchException",
        "documentation" : "<p>The client request token is not valid. Either the token is not in a valid format, or the token has been used in a previous request and cannot be re-used.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentContentRequiredException",
        "documentation" : "<p>The comment is empty. You must provide some content for a comment. The content cannot be null.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentContentSizeLimitExceededException",
        "documentation" : "<p>The comment is too large. Comments are limited to 1,000 characters.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentDoesNotExistException",
        "documentation" : "<p>No comment exists with the provided ID. Verify that you have provided the correct ID, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentIdRequiredException",
        "documentation" : "<p>The comment ID is missing or null. A comment ID is required.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommentIdException",
        "documentation" : "<p>The comment ID is not in a valid format. Make sure that you have provided the full comment ID.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "PostCommentReplyRequest",
        "variableName" : "postCommentReplyRequest",
        "variableType" : "PostCommentReplyRequest",
        "documentation" : "",
        "simpleType" : "PostCommentReplyRequest",
        "variableSetterType" : "PostCommentReplyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "postCommentReply",
      "operationName" : "PostCommentReply",
      "returnType" : {
        "returnType" : "PostCommentReplyResult",
        "documentation" : null
      },
      "syncReturnType" : "PostCommentReplyResult"
    },
    "PutFile" : {
      "asyncCallableType" : "java.util.concurrent.Callable<PutFileResult>",
      "asyncFutureType" : "java.util.concurrent.Future<PutFileResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutFileRequest, PutFileResult>",
      "asyncReturnType" : "PutFileResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Adds or updates a file in an AWS CodeCommit repository.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ParentCommitIdRequiredException",
        "documentation" : "<p>A parent commit ID is required. To view the full commit ID of a branch in a repository, use <a>GetBranch</a> or a Git command (for example, git pull or git log).</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParentCommitIdException",
        "documentation" : "<p>The parent commit ID is not valid. The commit ID cannot be empty, and must match the head commit ID for the branch of the repository where you want to add or update a file.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ParentCommitDoesNotExistException",
        "documentation" : "<p>The parent commit ID is not valid. The specified parent commit ID does not exist in the specified branch of the repository.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ParentCommitIdOutdatedException",
        "documentation" : "<p>The file could not be added because the provided parent commit ID is not the current tip of the specified branch. To view the full commit ID of the current head of the branch, use <a>GetBranch</a>.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "FileContentRequiredException",
        "documentation" : "<p>The file cannot be added because it is empty. Empty files cannot be added to the repository with this API.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "FileContentSizeLimitExceededException",
        "documentation" : "<p>The file cannot be added because it is too large. The maximum file size that can be added using PutFile is 6 MB. For files larger than 6 MB but smaller than 2 GB, add them using a Git client.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PathRequiredException",
        "documentation" : "<p>The filePath for a location cannot be empty or null.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPathException",
        "documentation" : "<p>The specified path is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BranchNameRequiredException",
        "documentation" : "<p>A branch name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidBranchNameException",
        "documentation" : "<p>The specified reference name is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BranchDoesNotExistException",
        "documentation" : "<p>The specified branch does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BranchNameIsTagNameException",
        "documentation" : "<p>The specified branch name is not valid because it is a tag name. Type the name of a current branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidFileModeException",
        "documentation" : "<p>The specified file mode permission is not valid. For a list of valid file mode permissions, see <a>PutFile</a>. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "NameLengthExceededException",
        "documentation" : "<p>The file name is not valid because it has exceeded the character limit for file names. File names, including the path to the file, cannot exceed the character limit. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidEmailException",
        "documentation" : "<p>The specified email address either contains one or more characters that are not allowed, or it exceeds the maximum number of characters allowed for an email address.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitMessageLengthExceededException",
        "documentation" : "<p>The commit message is too long. Provide a shorter string. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "SameFileContentException",
        "documentation" : "<p>The file was not added or updated because the content of the file is exactly the same as the content of that file in the repository and branch that you specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "FileNameConflictsWithDirectoryNameException",
        "documentation" : "<p>A file cannot be added to the repository because the specified file name has the same name as a directory in this repository. Either provide another name for the file, or add the file in a directory that does not match the file name.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "DirectoryNameConflictsWithFileNameException",
        "documentation" : "<p>A file cannot be added to the repository because the specified path name has the same name as a file that already exists in this repository. Either provide a different name for the file, or specify a different path for the file.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "PutFileRequest",
        "variableName" : "putFileRequest",
        "variableType" : "PutFileRequest",
        "documentation" : "",
        "simpleType" : "PutFileRequest",
        "variableSetterType" : "PutFileRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "putFile",
      "operationName" : "PutFile",
      "returnType" : {
        "returnType" : "PutFileResult",
        "documentation" : null
      },
      "syncReturnType" : "PutFileResult"
    },
    "PutRepositoryTriggers" : {
      "asyncCallableType" : "java.util.concurrent.Callable<PutRepositoryTriggersResult>",
      "asyncFutureType" : "java.util.concurrent.Future<PutRepositoryTriggersResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutRepositoryTriggersRequest, PutRepositoryTriggersResult>",
      "asyncReturnType" : "PutRepositoryTriggersResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Replaces all triggers for a repository. This can be used to create or delete triggers.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggersListRequiredException",
        "documentation" : "<p>The list of triggers for the repository is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "MaximumRepositoryTriggersExceededException",
        "documentation" : "<p>The number of triggers allowed for the repository was exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerNameException",
        "documentation" : "<p>The name of the trigger is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerDestinationArnException",
        "documentation" : "<p>The Amazon Resource Name (ARN) for the trigger is not valid for the specified destination. The most common reason for this error is that the ARN does not meet the requirements for the service type.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerRegionException",
        "documentation" : "<p>The region for the trigger target does not match the region for the repository. Triggers must be created in the same region as the target for the trigger.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerCustomDataException",
        "documentation" : "<p>The custom data provided for the trigger is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "MaximumBranchesExceededException",
        "documentation" : "<p>The number of branches for the trigger was exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerBranchNameException",
        "documentation" : "<p>One or more branch names specified for the trigger is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerEventsException",
        "documentation" : "<p>One or more events specified for the trigger is not valid. Check to make sure that all events specified match the requirements for allowed events.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggerNameRequiredException",
        "documentation" : "<p>A name for the trigger is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggerDestinationArnRequiredException",
        "documentation" : "<p>A destination ARN for the target service for the trigger is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggerBranchNameListRequiredException",
        "documentation" : "<p>At least one branch name is required but was not specified in the trigger configuration.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggerEventsListRequiredException",
        "documentation" : "<p>At least one event for the trigger is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "PutRepositoryTriggersRequest",
        "variableName" : "putRepositoryTriggersRequest",
        "variableType" : "PutRepositoryTriggersRequest",
        "documentation" : "<p>Represents the input ofa put repository triggers operation.</p>",
        "simpleType" : "PutRepositoryTriggersRequest",
        "variableSetterType" : "PutRepositoryTriggersRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "putRepositoryTriggers",
      "operationName" : "PutRepositoryTriggers",
      "returnType" : {
        "returnType" : "PutRepositoryTriggersResult",
        "documentation" : "<p>Represents the output of a put repository triggers operation.</p>"
      },
      "syncReturnType" : "PutRepositoryTriggersResult"
    },
    "TestRepositoryTriggers" : {
      "asyncCallableType" : "java.util.concurrent.Callable<TestRepositoryTriggersResult>",
      "asyncFutureType" : "java.util.concurrent.Future<TestRepositoryTriggersResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<TestRepositoryTriggersRequest, TestRepositoryTriggersResult>",
      "asyncReturnType" : "TestRepositoryTriggersResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Tests the functionality of repository triggers by sending information to the trigger target. If real data is available in the repository, the test will send data from the last commit. If no data is available, sample data will be generated.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggersListRequiredException",
        "documentation" : "<p>The list of triggers for the repository is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "MaximumRepositoryTriggersExceededException",
        "documentation" : "<p>The number of triggers allowed for the repository was exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerNameException",
        "documentation" : "<p>The name of the trigger is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerDestinationArnException",
        "documentation" : "<p>The Amazon Resource Name (ARN) for the trigger is not valid for the specified destination. The most common reason for this error is that the ARN does not meet the requirements for the service type.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerRegionException",
        "documentation" : "<p>The region for the trigger target does not match the region for the repository. Triggers must be created in the same region as the target for the trigger.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerCustomDataException",
        "documentation" : "<p>The custom data provided for the trigger is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "MaximumBranchesExceededException",
        "documentation" : "<p>The number of branches for the trigger was exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerBranchNameException",
        "documentation" : "<p>One or more branch names specified for the trigger is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerEventsException",
        "documentation" : "<p>One or more events specified for the trigger is not valid. Check to make sure that all events specified match the requirements for allowed events.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggerNameRequiredException",
        "documentation" : "<p>A name for the trigger is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggerDestinationArnRequiredException",
        "documentation" : "<p>A destination ARN for the target service for the trigger is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggerBranchNameListRequiredException",
        "documentation" : "<p>At least one branch name is required but was not specified in the trigger configuration.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggerEventsListRequiredException",
        "documentation" : "<p>At least one event for the trigger is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "TestRepositoryTriggersRequest",
        "variableName" : "testRepositoryTriggersRequest",
        "variableType" : "TestRepositoryTriggersRequest",
        "documentation" : "<p>Represents the input of a test repository triggers operation.</p>",
        "simpleType" : "TestRepositoryTriggersRequest",
        "variableSetterType" : "TestRepositoryTriggersRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "testRepositoryTriggers",
      "operationName" : "TestRepositoryTriggers",
      "returnType" : {
        "returnType" : "TestRepositoryTriggersResult",
        "documentation" : "<p>Represents the output of a test repository triggers operation.</p>"
      },
      "syncReturnType" : "TestRepositoryTriggersResult"
    },
    "UpdateComment" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateCommentResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateCommentResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateCommentRequest, UpdateCommentResult>",
      "asyncReturnType" : "UpdateCommentResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Replaces the contents of a comment.</p>",
      "exceptions" : [ {
        "exceptionName" : "CommentContentRequiredException",
        "documentation" : "<p>The comment is empty. You must provide some content for a comment. The content cannot be null.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentContentSizeLimitExceededException",
        "documentation" : "<p>The comment is too large. Comments are limited to 1,000 characters.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentDoesNotExistException",
        "documentation" : "<p>No comment exists with the provided ID. Verify that you have provided the correct ID, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentIdRequiredException",
        "documentation" : "<p>The comment ID is missing or null. A comment ID is required.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommentIdException",
        "documentation" : "<p>The comment ID is not in a valid format. Make sure that you have provided the full comment ID.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentNotCreatedByCallerException",
        "documentation" : "<p>You cannot modify or delete this comment. Only comment authors can modify or delete their comments.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommentDeletedException",
        "documentation" : "<p>This comment has already been deleted. You cannot edit or delete a deleted comment.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "UpdateCommentRequest",
        "variableName" : "updateCommentRequest",
        "variableType" : "UpdateCommentRequest",
        "documentation" : "",
        "simpleType" : "UpdateCommentRequest",
        "variableSetterType" : "UpdateCommentRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateComment",
      "operationName" : "UpdateComment",
      "returnType" : {
        "returnType" : "UpdateCommentResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateCommentResult"
    },
    "UpdateDefaultBranch" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateDefaultBranchResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateDefaultBranchResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateDefaultBranchRequest, UpdateDefaultBranchResult>",
      "asyncReturnType" : "UpdateDefaultBranchResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Sets or changes the default branch name for the specified repository.</p> <note> <p>If you use this operation to change the default branch name to the current default branch name, a success message is returned even though the default branch did not change.</p> </note>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BranchNameRequiredException",
        "documentation" : "<p>A branch name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidBranchNameException",
        "documentation" : "<p>The specified reference name is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BranchDoesNotExistException",
        "documentation" : "<p>The specified branch does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "UpdateDefaultBranchRequest",
        "variableName" : "updateDefaultBranchRequest",
        "variableType" : "UpdateDefaultBranchRequest",
        "documentation" : "<p>Represents the input of an update default branch operation.</p>",
        "simpleType" : "UpdateDefaultBranchRequest",
        "variableSetterType" : "UpdateDefaultBranchRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateDefaultBranch",
      "operationName" : "UpdateDefaultBranch",
      "returnType" : {
        "returnType" : "UpdateDefaultBranchResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateDefaultBranchResult"
    },
    "UpdatePullRequestDescription" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdatePullRequestDescriptionResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdatePullRequestDescriptionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdatePullRequestDescriptionRequest, UpdatePullRequestDescriptionResult>",
      "asyncReturnType" : "UpdatePullRequestDescriptionResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Replaces the contents of the description of a pull request.</p>",
      "exceptions" : [ {
        "exceptionName" : "PullRequestDoesNotExistException",
        "documentation" : "<p>The pull request ID could not be found. Make sure that you have specified the correct repository name and pull request ID, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPullRequestIdException",
        "documentation" : "<p>The pull request ID is not valid. Make sure that you have provided the full ID and that the pull request is in the specified repository, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PullRequestIdRequiredException",
        "documentation" : "<p>A pull request ID is required, but none was provided.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidDescriptionException",
        "documentation" : "<p>The pull request description is not valid. Descriptions are limited to 1,000 characters in length.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PullRequestAlreadyClosedException",
        "documentation" : "<p>The pull request status cannot be updated because it is already closed.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "UpdatePullRequestDescriptionRequest",
        "variableName" : "updatePullRequestDescriptionRequest",
        "variableType" : "UpdatePullRequestDescriptionRequest",
        "documentation" : "",
        "simpleType" : "UpdatePullRequestDescriptionRequest",
        "variableSetterType" : "UpdatePullRequestDescriptionRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updatePullRequestDescription",
      "operationName" : "UpdatePullRequestDescription",
      "returnType" : {
        "returnType" : "UpdatePullRequestDescriptionResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdatePullRequestDescriptionResult"
    },
    "UpdatePullRequestStatus" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdatePullRequestStatusResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdatePullRequestStatusResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdatePullRequestStatusRequest, UpdatePullRequestStatusResult>",
      "asyncReturnType" : "UpdatePullRequestStatusResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Updates the status of a pull request. </p>",
      "exceptions" : [ {
        "exceptionName" : "PullRequestDoesNotExistException",
        "documentation" : "<p>The pull request ID could not be found. Make sure that you have specified the correct repository name and pull request ID, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPullRequestIdException",
        "documentation" : "<p>The pull request ID is not valid. Make sure that you have provided the full ID and that the pull request is in the specified repository, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PullRequestIdRequiredException",
        "documentation" : "<p>A pull request ID is required, but none was provided.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPullRequestStatusUpdateException",
        "documentation" : "<p>The pull request status update is not valid. The only valid update is from <code>OPEN</code> to <code>CLOSED</code>.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPullRequestStatusException",
        "documentation" : "<p>The pull request status is not valid. The only valid values are <code>OPEN</code> and <code>CLOSED</code>.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PullRequestStatusRequiredException",
        "documentation" : "<p>A pull request status is required, but none was provided.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "UpdatePullRequestStatusRequest",
        "variableName" : "updatePullRequestStatusRequest",
        "variableType" : "UpdatePullRequestStatusRequest",
        "documentation" : "",
        "simpleType" : "UpdatePullRequestStatusRequest",
        "variableSetterType" : "UpdatePullRequestStatusRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updatePullRequestStatus",
      "operationName" : "UpdatePullRequestStatus",
      "returnType" : {
        "returnType" : "UpdatePullRequestStatusResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdatePullRequestStatusResult"
    },
    "UpdatePullRequestTitle" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdatePullRequestTitleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdatePullRequestTitleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdatePullRequestTitleRequest, UpdatePullRequestTitleResult>",
      "asyncReturnType" : "UpdatePullRequestTitleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Replaces the title of a pull request.</p>",
      "exceptions" : [ {
        "exceptionName" : "PullRequestDoesNotExistException",
        "documentation" : "<p>The pull request ID could not be found. Make sure that you have specified the correct repository name and pull request ID, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPullRequestIdException",
        "documentation" : "<p>The pull request ID is not valid. Make sure that you have provided the full ID and that the pull request is in the specified repository, and then try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PullRequestIdRequiredException",
        "documentation" : "<p>A pull request ID is required, but none was provided.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TitleRequiredException",
        "documentation" : "<p>A pull request title is required. It cannot be empty or null.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidTitleException",
        "documentation" : "<p>The title of the pull request is not valid. Pull request titles cannot exceed 100 characters in length.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PullRequestAlreadyClosedException",
        "documentation" : "<p>The pull request status cannot be updated because it is already closed.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "UpdatePullRequestTitleRequest",
        "variableName" : "updatePullRequestTitleRequest",
        "variableType" : "UpdatePullRequestTitleRequest",
        "documentation" : "",
        "simpleType" : "UpdatePullRequestTitleRequest",
        "variableSetterType" : "UpdatePullRequestTitleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updatePullRequestTitle",
      "operationName" : "UpdatePullRequestTitle",
      "returnType" : {
        "returnType" : "UpdatePullRequestTitleResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdatePullRequestTitleResult"
    },
    "UpdateRepositoryDescription" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateRepositoryDescriptionResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateRepositoryDescriptionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateRepositoryDescriptionRequest, UpdateRepositoryDescriptionResult>",
      "asyncReturnType" : "UpdateRepositoryDescriptionResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Sets or changes the comment or description for a repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryDescriptionException",
        "documentation" : "<p>The specified repository description is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "UpdateRepositoryDescriptionRequest",
        "variableName" : "updateRepositoryDescriptionRequest",
        "variableType" : "UpdateRepositoryDescriptionRequest",
        "documentation" : "<p>Represents the input of an update repository description operation.</p>",
        "simpleType" : "UpdateRepositoryDescriptionRequest",
        "variableSetterType" : "UpdateRepositoryDescriptionRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateRepositoryDescription",
      "operationName" : "UpdateRepositoryDescription",
      "returnType" : {
        "returnType" : "UpdateRepositoryDescriptionResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateRepositoryDescriptionResult"
    },
    "UpdateRepositoryName" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateRepositoryNameResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateRepositoryNameResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateRepositoryNameRequest, UpdateRepositoryNameResult>",
      "asyncReturnType" : "UpdateRepositoryNameResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Renames a repository. The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. The suffix \".git\" is prohibited. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNameExistsException",
        "documentation" : "<p>The specified repository name already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "UpdateRepositoryNameRequest",
        "variableName" : "updateRepositoryNameRequest",
        "variableType" : "UpdateRepositoryNameRequest",
        "documentation" : "<p>Represents the input of an update repository description operation.</p>",
        "simpleType" : "UpdateRepositoryNameRequest",
        "variableSetterType" : "UpdateRepositoryNameRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateRepositoryName",
      "operationName" : "UpdateRepositoryName",
      "returnType" : {
        "returnType" : "UpdateRepositoryNameResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateRepositoryNameResult"
    }
  },
  "shapes" : {
    "ActorDoesNotExistException" : {
      "c2jName" : "ActorDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified Amazon Resource Name (ARN) does not exist in the AWS account.</p>",
      "enums" : null,
      "errorCode" : "ActorDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ActorDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ActorDoesNotExistException",
        "variableName" : "actorDoesNotExistException",
        "variableType" : "ActorDoesNotExistException",
        "documentation" : null,
        "simpleType" : "ActorDoesNotExistException",
        "variableSetterType" : "ActorDoesNotExistException"
      },
      "wrapper" : false
    },
    "AuthorDoesNotExistException" : {
      "c2jName" : "AuthorDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified Amazon Resource Name (ARN) does not exist in the AWS account.</p>",
      "enums" : null,
      "errorCode" : "AuthorDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AuthorDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "AuthorDoesNotExistException",
        "variableName" : "authorDoesNotExistException",
        "variableType" : "AuthorDoesNotExistException",
        "documentation" : null,
        "simpleType" : "AuthorDoesNotExistException",
        "variableSetterType" : "AuthorDoesNotExistException"
      },
      "wrapper" : false
    },
    "BatchGetRepositoriesRequest" : {
      "c2jName" : "BatchGetRepositoriesInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a batch get repositories operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "BatchGetRepositories",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.BatchGetRepositories",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryNames",
        "c2jShape" : "RepositoryNameList",
        "deprecated" : false,
        "documentation" : "<p>The names of the repositories to get information about.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The names of the repositories to get information about.</p>\n@param repositoryNames The names of the repositories to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryNames",
        "getterDocumentation" : "/**<p>The names of the repositories to get information about.</p>\n@return The names of the repositories to get information about.*/",
        "getterMethodName" : "getRepositoryNames",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryNames",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryNames",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryName",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "RepositoryNames",
        "setterDocumentation" : "/**<p>The names of the repositories to get information about.</p>\n@param repositoryNames The names of the repositories to get information about.*/",
        "setterMethodName" : "setRepositoryNames",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "repositoryNames",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The names of the repositories to get information about.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositoryNames(java.util.Collection)} or {@link #withRepositoryNames(java.util.Collection)} if you want to override the existing values.</p>\n@param repositoryNames The names of the repositories to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "repositoryNames",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The names of the repositories to get information about.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryNames" : {
          "c2jName" : "repositoryNames",
          "c2jShape" : "RepositoryNameList",
          "deprecated" : false,
          "documentation" : "<p>The names of the repositories to get information about.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The names of the repositories to get information about.</p>\n@param repositoryNames The names of the repositories to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryNames",
          "getterDocumentation" : "/**<p>The names of the repositories to get information about.</p>\n@return The names of the repositories to get information about.*/",
          "getterMethodName" : "getRepositoryNames",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryNames",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryNames",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryName",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "RepositoryNames",
          "setterDocumentation" : "/**<p>The names of the repositories to get information about.</p>\n@param repositoryNames The names of the repositories to get information about.*/",
          "setterMethodName" : "setRepositoryNames",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "repositoryNames",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The names of the repositories to get information about.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositoryNames(java.util.Collection)} or {@link #withRepositoryNames(java.util.Collection)} if you want to override the existing values.</p>\n@param repositoryNames The names of the repositories to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "repositoryNames",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The names of the repositories to get information about.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryNames" ],
      "shapeName" : "BatchGetRepositoriesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "BatchGetRepositoriesRequest",
        "variableName" : "batchGetRepositoriesRequest",
        "variableType" : "BatchGetRepositoriesRequest",
        "documentation" : null,
        "simpleType" : "BatchGetRepositoriesRequest",
        "variableSetterType" : "BatchGetRepositoriesRequest"
      },
      "wrapper" : false
    },
    "BatchGetRepositoriesResult" : {
      "c2jName" : "BatchGetRepositoriesOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a batch get repositories operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositories",
        "c2jShape" : "RepositoryMetadataList",
        "deprecated" : false,
        "documentation" : "<p>A list of repositories returned by the batch get repositories operation.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of repositories returned by the batch get repositories operation.</p>\n@param repositories A list of repositories returned by the batch get repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositories",
        "getterDocumentation" : "/**<p>A list of repositories returned by the batch get repositories operation.</p>\n@return A list of repositories returned by the batch get repositories operation.*/",
        "getterMethodName" : "getRepositories",
        "getterModel" : {
          "returnType" : "java.util.List<RepositoryMetadata>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositories",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositories",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryMetadata",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "RepositoryMetadata",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "RepositoryMetadata",
              "variableName" : "member",
              "variableType" : "RepositoryMetadata",
              "documentation" : "",
              "simpleType" : "RepositoryMetadata",
              "variableSetterType" : "RepositoryMetadata"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "RepositoryMetadata",
              "variableName" : "member",
              "variableType" : "RepositoryMetadata",
              "documentation" : "",
              "simpleType" : "RepositoryMetadata",
              "variableSetterType" : "RepositoryMetadata"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "RepositoryMetadata",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "RepositoryMetadata",
          "templateImplType" : "java.util.ArrayList<RepositoryMetadata>",
          "templateType" : "java.util.List<RepositoryMetadata>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Repositories",
        "setterDocumentation" : "/**<p>A list of repositories returned by the batch get repositories operation.</p>\n@param repositories A list of repositories returned by the batch get repositories operation.*/",
        "setterMethodName" : "setRepositories",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<RepositoryMetadata>",
          "variableName" : "repositories",
          "variableType" : "java.util.List<RepositoryMetadata>",
          "documentation" : "",
          "simpleType" : "List<RepositoryMetadata>",
          "variableSetterType" : "java.util.Collection<RepositoryMetadata>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of repositories returned by the batch get repositories operation.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositories(java.util.Collection)} or {@link #withRepositories(java.util.Collection)} if you want to override the existing values.</p>\n@param repositories A list of repositories returned by the batch get repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<RepositoryMetadata>",
          "variableName" : "repositories",
          "variableType" : "java.util.List<RepositoryMetadata>",
          "documentation" : "<p>A list of repositories returned by the batch get repositories operation.</p>",
          "simpleType" : "List<RepositoryMetadata>",
          "variableSetterType" : "java.util.Collection<RepositoryMetadata>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoriesNotFound",
        "c2jShape" : "RepositoryNotFoundList",
        "deprecated" : false,
        "documentation" : "<p>Returns a list of repository names for which information could not be found.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Returns a list of repository names for which information could not be found.</p>\n@param repositoriesNotFound Returns a list of repository names for which information could not be found.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoriesNotFound",
        "getterDocumentation" : "/**<p>Returns a list of repository names for which information could not be found.</p>\n@return Returns a list of repository names for which information could not be found.*/",
        "getterMethodName" : "getRepositoriesNotFound",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoriesNotFound",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoriesNotFound",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryName",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "RepositoriesNotFound",
        "setterDocumentation" : "/**<p>Returns a list of repository names for which information could not be found.</p>\n@param repositoriesNotFound Returns a list of repository names for which information could not be found.*/",
        "setterMethodName" : "setRepositoriesNotFound",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "repositoriesNotFound",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Returns a list of repository names for which information could not be found.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositoriesNotFound(java.util.Collection)} or {@link #withRepositoriesNotFound(java.util.Collection)} if you want to override the existing values.</p>\n@param repositoriesNotFound Returns a list of repository names for which information could not be found.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "repositoriesNotFound",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>Returns a list of repository names for which information could not be found.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Repositories" : {
          "c2jName" : "repositories",
          "c2jShape" : "RepositoryMetadataList",
          "deprecated" : false,
          "documentation" : "<p>A list of repositories returned by the batch get repositories operation.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of repositories returned by the batch get repositories operation.</p>\n@param repositories A list of repositories returned by the batch get repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositories",
          "getterDocumentation" : "/**<p>A list of repositories returned by the batch get repositories operation.</p>\n@return A list of repositories returned by the batch get repositories operation.*/",
          "getterMethodName" : "getRepositories",
          "getterModel" : {
            "returnType" : "java.util.List<RepositoryMetadata>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositories",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositories",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryMetadata",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "RepositoryMetadata",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "RepositoryMetadata",
                "variableName" : "member",
                "variableType" : "RepositoryMetadata",
                "documentation" : "",
                "simpleType" : "RepositoryMetadata",
                "variableSetterType" : "RepositoryMetadata"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "RepositoryMetadata",
                "variableName" : "member",
                "variableType" : "RepositoryMetadata",
                "documentation" : "",
                "simpleType" : "RepositoryMetadata",
                "variableSetterType" : "RepositoryMetadata"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "RepositoryMetadata",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "RepositoryMetadata",
            "templateImplType" : "java.util.ArrayList<RepositoryMetadata>",
            "templateType" : "java.util.List<RepositoryMetadata>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Repositories",
          "setterDocumentation" : "/**<p>A list of repositories returned by the batch get repositories operation.</p>\n@param repositories A list of repositories returned by the batch get repositories operation.*/",
          "setterMethodName" : "setRepositories",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<RepositoryMetadata>",
            "variableName" : "repositories",
            "variableType" : "java.util.List<RepositoryMetadata>",
            "documentation" : "",
            "simpleType" : "List<RepositoryMetadata>",
            "variableSetterType" : "java.util.Collection<RepositoryMetadata>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of repositories returned by the batch get repositories operation.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositories(java.util.Collection)} or {@link #withRepositories(java.util.Collection)} if you want to override the existing values.</p>\n@param repositories A list of repositories returned by the batch get repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<RepositoryMetadata>",
            "variableName" : "repositories",
            "variableType" : "java.util.List<RepositoryMetadata>",
            "documentation" : "<p>A list of repositories returned by the batch get repositories operation.</p>",
            "simpleType" : "List<RepositoryMetadata>",
            "variableSetterType" : "java.util.Collection<RepositoryMetadata>"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoriesNotFound" : {
          "c2jName" : "repositoriesNotFound",
          "c2jShape" : "RepositoryNotFoundList",
          "deprecated" : false,
          "documentation" : "<p>Returns a list of repository names for which information could not be found.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Returns a list of repository names for which information could not be found.</p>\n@param repositoriesNotFound Returns a list of repository names for which information could not be found.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoriesNotFound",
          "getterDocumentation" : "/**<p>Returns a list of repository names for which information could not be found.</p>\n@return Returns a list of repository names for which information could not be found.*/",
          "getterMethodName" : "getRepositoriesNotFound",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoriesNotFound",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoriesNotFound",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryName",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "RepositoriesNotFound",
          "setterDocumentation" : "/**<p>Returns a list of repository names for which information could not be found.</p>\n@param repositoriesNotFound Returns a list of repository names for which information could not be found.*/",
          "setterMethodName" : "setRepositoriesNotFound",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "repositoriesNotFound",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Returns a list of repository names for which information could not be found.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositoriesNotFound(java.util.Collection)} or {@link #withRepositoriesNotFound(java.util.Collection)} if you want to override the existing values.</p>\n@param repositoriesNotFound Returns a list of repository names for which information could not be found.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "repositoriesNotFound",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>Returns a list of repository names for which information could not be found.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BatchGetRepositoriesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "BatchGetRepositoriesResult",
        "variableName" : "batchGetRepositoriesResult",
        "variableType" : "BatchGetRepositoriesResult",
        "documentation" : null,
        "simpleType" : "BatchGetRepositoriesResult",
        "variableSetterType" : "BatchGetRepositoriesResult"
      },
      "wrapper" : false
    },
    "BeforeCommitIdAndAfterCommitIdAreSameException" : {
      "c2jName" : "BeforeCommitIdAndAfterCommitIdAreSameException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The before commit ID and the after commit ID are the same, which is not valid. The before commit ID and the after commit ID must be different commit IDs.</p>",
      "enums" : null,
      "errorCode" : "BeforeCommitIdAndAfterCommitIdAreSameException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BeforeCommitIdAndAfterCommitIdAreSameException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "BeforeCommitIdAndAfterCommitIdAreSameException",
        "variableName" : "beforeCommitIdAndAfterCommitIdAreSameException",
        "variableType" : "BeforeCommitIdAndAfterCommitIdAreSameException",
        "documentation" : null,
        "simpleType" : "BeforeCommitIdAndAfterCommitIdAreSameException",
        "variableSetterType" : "BeforeCommitIdAndAfterCommitIdAreSameException"
      },
      "wrapper" : false
    },
    "BlobIdDoesNotExistException" : {
      "c2jName" : "BlobIdDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified blob does not exist.</p>",
      "enums" : null,
      "errorCode" : "BlobIdDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BlobIdDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "BlobIdDoesNotExistException",
        "variableName" : "blobIdDoesNotExistException",
        "variableType" : "BlobIdDoesNotExistException",
        "documentation" : null,
        "simpleType" : "BlobIdDoesNotExistException",
        "variableSetterType" : "BlobIdDoesNotExistException"
      },
      "wrapper" : false
    },
    "BlobIdRequiredException" : {
      "c2jName" : "BlobIdRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A blob ID is required but was not specified.</p>",
      "enums" : null,
      "errorCode" : "BlobIdRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BlobIdRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "BlobIdRequiredException",
        "variableName" : "blobIdRequiredException",
        "variableType" : "BlobIdRequiredException",
        "documentation" : null,
        "simpleType" : "BlobIdRequiredException",
        "variableSetterType" : "BlobIdRequiredException"
      },
      "wrapper" : false
    },
    "BlobMetadata" : {
      "c2jName" : "BlobMetadata",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about a specific Git blob object.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "blobId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>The full ID of the blob.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full ID of the blob.</p>\n@param blobId The full ID of the blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBlobId",
        "getterDocumentation" : "/**<p>The full ID of the blob.</p>\n@return The full ID of the blob.*/",
        "getterMethodName" : "getBlobId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "blobId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "blobId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BlobId",
        "setterDocumentation" : "/**<p>The full ID of the blob.</p>\n@param blobId The full ID of the blob.*/",
        "setterMethodName" : "setBlobId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "blobId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full ID of the blob.</p>\n@param blobId The full ID of the blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "blobId",
          "variableType" : "String",
          "documentation" : "<p>The full ID of the blob.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "path",
        "c2jShape" : "Path",
        "deprecated" : false,
        "documentation" : "<p>The path to the blob and any associated file name, if any.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The path to the blob and any associated file name, if any.</p>\n@param path The path to the blob and any associated file name, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPath",
        "getterDocumentation" : "/**<p>The path to the blob and any associated file name, if any.</p>\n@return The path to the blob and any associated file name, if any.*/",
        "getterMethodName" : "getPath",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "path",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "path",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Path",
        "setterDocumentation" : "/**<p>The path to the blob and any associated file name, if any.</p>\n@param path The path to the blob and any associated file name, if any.*/",
        "setterMethodName" : "setPath",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "path",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The path to the blob and any associated file name, if any.</p>\n@param path The path to the blob and any associated file name, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "path",
          "variableType" : "String",
          "documentation" : "<p>The path to the blob and any associated file name, if any.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "mode",
        "c2jShape" : "Mode",
        "deprecated" : false,
        "documentation" : "<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>\n@param mode The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMode",
        "getterDocumentation" : "/**<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>\n@return The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li>*/",
        "getterMethodName" : "getMode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "mode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "mode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Mode",
        "setterDocumentation" : "/**<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>\n@param mode The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li>*/",
        "setterMethodName" : "setMode",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "mode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>\n@param mode The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "mode",
          "variableType" : "String",
          "documentation" : "<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BlobId" : {
          "c2jName" : "blobId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>The full ID of the blob.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full ID of the blob.</p>\n@param blobId The full ID of the blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBlobId",
          "getterDocumentation" : "/**<p>The full ID of the blob.</p>\n@return The full ID of the blob.*/",
          "getterMethodName" : "getBlobId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "blobId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "blobId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BlobId",
          "setterDocumentation" : "/**<p>The full ID of the blob.</p>\n@param blobId The full ID of the blob.*/",
          "setterMethodName" : "setBlobId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "blobId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full ID of the blob.</p>\n@param blobId The full ID of the blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "blobId",
            "variableType" : "String",
            "documentation" : "<p>The full ID of the blob.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Mode" : {
          "c2jName" : "mode",
          "c2jShape" : "Mode",
          "deprecated" : false,
          "documentation" : "<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>\n@param mode The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMode",
          "getterDocumentation" : "/**<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>\n@return The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li>*/",
          "getterMethodName" : "getMode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "mode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "mode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Mode",
          "setterDocumentation" : "/**<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>\n@param mode The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li>*/",
          "setterMethodName" : "setMode",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "mode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>\n@param mode The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "mode",
            "variableType" : "String",
            "documentation" : "<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Path" : {
          "c2jName" : "path",
          "c2jShape" : "Path",
          "deprecated" : false,
          "documentation" : "<p>The path to the blob and any associated file name, if any.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The path to the blob and any associated file name, if any.</p>\n@param path The path to the blob and any associated file name, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPath",
          "getterDocumentation" : "/**<p>The path to the blob and any associated file name, if any.</p>\n@return The path to the blob and any associated file name, if any.*/",
          "getterMethodName" : "getPath",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "path",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "path",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Path",
          "setterDocumentation" : "/**<p>The path to the blob and any associated file name, if any.</p>\n@param path The path to the blob and any associated file name, if any.*/",
          "setterMethodName" : "setPath",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "path",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The path to the blob and any associated file name, if any.</p>\n@param path The path to the blob and any associated file name, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "path",
            "variableType" : "String",
            "documentation" : "<p>The path to the blob and any associated file name, if any.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BlobMetadata",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "BlobMetadata",
        "variableName" : "blobMetadata",
        "variableType" : "BlobMetadata",
        "documentation" : null,
        "simpleType" : "BlobMetadata",
        "variableSetterType" : "BlobMetadata"
      },
      "wrapper" : false
    },
    "BranchDoesNotExistException" : {
      "c2jName" : "BranchDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified branch does not exist.</p>",
      "enums" : null,
      "errorCode" : "BranchDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BranchDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "BranchDoesNotExistException",
        "variableName" : "branchDoesNotExistException",
        "variableType" : "BranchDoesNotExistException",
        "documentation" : null,
        "simpleType" : "BranchDoesNotExistException",
        "variableSetterType" : "BranchDoesNotExistException"
      },
      "wrapper" : false
    },
    "BranchInfo" : {
      "c2jName" : "BranchInfo",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about a branch.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "branchName",
        "c2jShape" : "BranchName",
        "deprecated" : false,
        "documentation" : "<p>The name of the branch.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the branch.</p>\n@param branchName The name of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBranchName",
        "getterDocumentation" : "/**<p>The name of the branch.</p>\n@return The name of the branch.*/",
        "getterMethodName" : "getBranchName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "branchName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "branchName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BranchName",
        "setterDocumentation" : "/**<p>The name of the branch.</p>\n@param branchName The name of the branch.*/",
        "setterMethodName" : "setBranchName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "branchName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the branch.</p>\n@param branchName The name of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "branchName",
          "variableType" : "String",
          "documentation" : "<p>The name of the branch.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "commitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the last commit made to the branch.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the last commit made to the branch.</p>\n@param commitId The ID of the last commit made to the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommitId",
        "getterDocumentation" : "/**<p>The ID of the last commit made to the branch.</p>\n@return The ID of the last commit made to the branch.*/",
        "getterMethodName" : "getCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CommitId",
        "setterDocumentation" : "/**<p>The ID of the last commit made to the branch.</p>\n@param commitId The ID of the last commit made to the branch.*/",
        "setterMethodName" : "setCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the last commit made to the branch.</p>\n@param commitId The ID of the last commit made to the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the last commit made to the branch.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BranchName" : {
          "c2jName" : "branchName",
          "c2jShape" : "BranchName",
          "deprecated" : false,
          "documentation" : "<p>The name of the branch.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the branch.</p>\n@param branchName The name of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBranchName",
          "getterDocumentation" : "/**<p>The name of the branch.</p>\n@return The name of the branch.*/",
          "getterMethodName" : "getBranchName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "branchName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "branchName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BranchName",
          "setterDocumentation" : "/**<p>The name of the branch.</p>\n@param branchName The name of the branch.*/",
          "setterMethodName" : "setBranchName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "branchName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the branch.</p>\n@param branchName The name of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "branchName",
            "variableType" : "String",
            "documentation" : "<p>The name of the branch.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CommitId" : {
          "c2jName" : "commitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the last commit made to the branch.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the last commit made to the branch.</p>\n@param commitId The ID of the last commit made to the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommitId",
          "getterDocumentation" : "/**<p>The ID of the last commit made to the branch.</p>\n@return The ID of the last commit made to the branch.*/",
          "getterMethodName" : "getCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CommitId",
          "setterDocumentation" : "/**<p>The ID of the last commit made to the branch.</p>\n@param commitId The ID of the last commit made to the branch.*/",
          "setterMethodName" : "setCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the last commit made to the branch.</p>\n@param commitId The ID of the last commit made to the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the last commit made to the branch.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BranchInfo",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "BranchInfo",
        "variableName" : "branchInfo",
        "variableType" : "BranchInfo",
        "documentation" : null,
        "simpleType" : "BranchInfo",
        "variableSetterType" : "BranchInfo"
      },
      "wrapper" : false
    },
    "BranchNameExistsException" : {
      "c2jName" : "BranchNameExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified branch name already exists.</p>",
      "enums" : null,
      "errorCode" : "BranchNameExistsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BranchNameExistsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "BranchNameExistsException",
        "variableName" : "branchNameExistsException",
        "variableType" : "BranchNameExistsException",
        "documentation" : null,
        "simpleType" : "BranchNameExistsException",
        "variableSetterType" : "BranchNameExistsException"
      },
      "wrapper" : false
    },
    "BranchNameIsTagNameException" : {
      "c2jName" : "BranchNameIsTagNameException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified branch name is not valid because it is a tag name. Type the name of a current branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.</p>",
      "enums" : null,
      "errorCode" : "BranchNameIsTagNameException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BranchNameIsTagNameException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "BranchNameIsTagNameException",
        "variableName" : "branchNameIsTagNameException",
        "variableType" : "BranchNameIsTagNameException",
        "documentation" : null,
        "simpleType" : "BranchNameIsTagNameException",
        "variableSetterType" : "BranchNameIsTagNameException"
      },
      "wrapper" : false
    },
    "BranchNameRequiredException" : {
      "c2jName" : "BranchNameRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A branch name is required but was not specified.</p>",
      "enums" : null,
      "errorCode" : "BranchNameRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BranchNameRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "BranchNameRequiredException",
        "variableName" : "branchNameRequiredException",
        "variableType" : "BranchNameRequiredException",
        "documentation" : null,
        "simpleType" : "BranchNameRequiredException",
        "variableSetterType" : "BranchNameRequiredException"
      },
      "wrapper" : false
    },
    "ChangeTypeEnum" : {
      "c2jName" : "ChangeTypeEnum",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "A",
        "value" : "A"
      }, {
        "name" : "M",
        "value" : "M"
      }, {
        "name" : "D",
        "value" : "D"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ChangeTypeEnum",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ChangeTypeEnum",
        "variableName" : "changeTypeEnum",
        "variableType" : "ChangeTypeEnum",
        "documentation" : null,
        "simpleType" : "ChangeTypeEnum",
        "variableSetterType" : "ChangeTypeEnum"
      },
      "wrapper" : false
    },
    "ClientRequestTokenRequiredException" : {
      "c2jName" : "ClientRequestTokenRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A client request token is required. A client request token is an unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
      "enums" : null,
      "errorCode" : "ClientRequestTokenRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ClientRequestTokenRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ClientRequestTokenRequiredException",
        "variableName" : "clientRequestTokenRequiredException",
        "variableType" : "ClientRequestTokenRequiredException",
        "documentation" : null,
        "simpleType" : "ClientRequestTokenRequiredException",
        "variableSetterType" : "ClientRequestTokenRequiredException"
      },
      "wrapper" : false
    },
    "Comment" : {
      "c2jName" : "Comment",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about a specific comment.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "commentId",
        "c2jShape" : "CommentId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated comment ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated comment ID.</p>\n@param commentId The system-generated comment ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommentId",
        "getterDocumentation" : "/**<p>The system-generated comment ID.</p>\n@return The system-generated comment ID.*/",
        "getterMethodName" : "getCommentId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commentId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commentId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CommentId",
        "setterDocumentation" : "/**<p>The system-generated comment ID.</p>\n@param commentId The system-generated comment ID.*/",
        "setterMethodName" : "setCommentId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "commentId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated comment ID.</p>\n@param commentId The system-generated comment ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "commentId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated comment ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "content",
        "c2jShape" : "Content",
        "deprecated" : false,
        "documentation" : "<p>The content of the comment.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The content of the comment.</p>\n@param content The content of the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContent",
        "getterDocumentation" : "/**<p>The content of the comment.</p>\n@return The content of the comment.*/",
        "getterMethodName" : "getContent",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "content",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "content",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Content",
        "setterDocumentation" : "/**<p>The content of the comment.</p>\n@param content The content of the comment.*/",
        "setterMethodName" : "setContent",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "content",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The content of the comment.</p>\n@param content The content of the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "content",
          "variableType" : "String",
          "documentation" : "<p>The content of the comment.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "inReplyTo",
        "c2jShape" : "CommentId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the comment for which this comment is a reply, if any.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the comment for which this comment is a reply, if any.</p>\n@param inReplyTo The ID of the comment for which this comment is a reply, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withInReplyTo",
        "getterDocumentation" : "/**<p>The ID of the comment for which this comment is a reply, if any.</p>\n@return The ID of the comment for which this comment is a reply, if any.*/",
        "getterMethodName" : "getInReplyTo",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "inReplyTo",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "inReplyTo",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "InReplyTo",
        "setterDocumentation" : "/**<p>The ID of the comment for which this comment is a reply, if any.</p>\n@param inReplyTo The ID of the comment for which this comment is a reply, if any.*/",
        "setterMethodName" : "setInReplyTo",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "inReplyTo",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the comment for which this comment is a reply, if any.</p>\n@param inReplyTo The ID of the comment for which this comment is a reply, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "inReplyTo",
          "variableType" : "String",
          "documentation" : "<p>The ID of the comment for which this comment is a reply, if any.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "creationDate",
        "c2jShape" : "CreationDate",
        "deprecated" : false,
        "documentation" : "<p>The date and time the comment was created, in timestamp format.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time the comment was created, in timestamp format.</p>\n@param creationDate The date and time the comment was created, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationDate",
        "getterDocumentation" : "/**<p>The date and time the comment was created, in timestamp format.</p>\n@return The date and time the comment was created, in timestamp format.*/",
        "getterMethodName" : "getCreationDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "creationDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "creationDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreationDate",
        "setterDocumentation" : "/**<p>The date and time the comment was created, in timestamp format.</p>\n@param creationDate The date and time the comment was created, in timestamp format.*/",
        "setterMethodName" : "setCreationDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time the comment was created, in timestamp format.</p>\n@param creationDate The date and time the comment was created, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time the comment was created, in timestamp format.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lastModifiedDate",
        "c2jShape" : "LastModifiedDate",
        "deprecated" : false,
        "documentation" : "<p>The date and time the comment was most recently modified, in timestamp format.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time the comment was most recently modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the comment was most recently modified, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastModifiedDate",
        "getterDocumentation" : "/**<p>The date and time the comment was most recently modified, in timestamp format.</p>\n@return The date and time the comment was most recently modified, in timestamp format.*/",
        "getterMethodName" : "getLastModifiedDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lastModifiedDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lastModifiedDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "LastModifiedDate",
        "setterDocumentation" : "/**<p>The date and time the comment was most recently modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the comment was most recently modified, in timestamp format.*/",
        "setterMethodName" : "setLastModifiedDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModifiedDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time the comment was most recently modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the comment was most recently modified, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModifiedDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time the comment was most recently modified, in timestamp format.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "authorArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) of the person who posted the comment.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the person who posted the comment.</p>\n@param authorArn The Amazon Resource Name (ARN) of the person who posted the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAuthorArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the person who posted the comment.</p>\n@return The Amazon Resource Name (ARN) of the person who posted the comment.*/",
        "getterMethodName" : "getAuthorArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "authorArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "authorArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AuthorArn",
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the person who posted the comment.</p>\n@param authorArn The Amazon Resource Name (ARN) of the person who posted the comment.*/",
        "setterMethodName" : "setAuthorArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "authorArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the person who posted the comment.</p>\n@param authorArn The Amazon Resource Name (ARN) of the person who posted the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "authorArn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the person who posted the comment.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "deleted",
        "c2jShape" : "IsCommentDeleted",
        "deprecated" : false,
        "documentation" : "<p>A Boolean value indicating whether the comment has been deleted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A Boolean value indicating whether the comment has been deleted.</p>\n@param deleted A Boolean value indicating whether the comment has been deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDeleted",
        "getterDocumentation" : "/**<p>A Boolean value indicating whether the comment has been deleted.</p>\n@return A Boolean value indicating whether the comment has been deleted.*/",
        "getterMethodName" : "getDeleted",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "deleted",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "deleted",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "Deleted",
        "setterDocumentation" : "/**<p>A Boolean value indicating whether the comment has been deleted.</p>\n@param deleted A Boolean value indicating whether the comment has been deleted.*/",
        "setterMethodName" : "setDeleted",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "deleted",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A Boolean value indicating whether the comment has been deleted.</p>\n@param deleted A Boolean value indicating whether the comment has been deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "deleted",
          "variableType" : "Boolean",
          "documentation" : "<p>A Boolean value indicating whether the comment has been deleted.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "clientRequestToken",
        "c2jShape" : "ClientRequestToken",
        "deprecated" : false,
        "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withClientRequestToken",
        "getterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@return A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
        "getterMethodName" : "getClientRequestToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "clientRequestToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "clientRequestToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ClientRequestToken",
        "setterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
        "setterMethodName" : "setClientRequestToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AuthorArn" : {
          "c2jName" : "authorArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the person who posted the comment.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the person who posted the comment.</p>\n@param authorArn The Amazon Resource Name (ARN) of the person who posted the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAuthorArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the person who posted the comment.</p>\n@return The Amazon Resource Name (ARN) of the person who posted the comment.*/",
          "getterMethodName" : "getAuthorArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "authorArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "authorArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AuthorArn",
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the person who posted the comment.</p>\n@param authorArn The Amazon Resource Name (ARN) of the person who posted the comment.*/",
          "setterMethodName" : "setAuthorArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "authorArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the person who posted the comment.</p>\n@param authorArn The Amazon Resource Name (ARN) of the person who posted the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "authorArn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the person who posted the comment.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ClientRequestToken" : {
          "c2jName" : "clientRequestToken",
          "c2jShape" : "ClientRequestToken",
          "deprecated" : false,
          "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withClientRequestToken",
          "getterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@return A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
          "getterMethodName" : "getClientRequestToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "clientRequestToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "clientRequestToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ClientRequestToken",
          "setterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
          "setterMethodName" : "setClientRequestToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CommentId" : {
          "c2jName" : "commentId",
          "c2jShape" : "CommentId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated comment ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated comment ID.</p>\n@param commentId The system-generated comment ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommentId",
          "getterDocumentation" : "/**<p>The system-generated comment ID.</p>\n@return The system-generated comment ID.*/",
          "getterMethodName" : "getCommentId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commentId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commentId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CommentId",
          "setterDocumentation" : "/**<p>The system-generated comment ID.</p>\n@param commentId The system-generated comment ID.*/",
          "setterMethodName" : "setCommentId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "commentId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated comment ID.</p>\n@param commentId The system-generated comment ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "commentId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated comment ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Content" : {
          "c2jName" : "content",
          "c2jShape" : "Content",
          "deprecated" : false,
          "documentation" : "<p>The content of the comment.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The content of the comment.</p>\n@param content The content of the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContent",
          "getterDocumentation" : "/**<p>The content of the comment.</p>\n@return The content of the comment.*/",
          "getterMethodName" : "getContent",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "content",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "content",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Content",
          "setterDocumentation" : "/**<p>The content of the comment.</p>\n@param content The content of the comment.*/",
          "setterMethodName" : "setContent",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "content",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The content of the comment.</p>\n@param content The content of the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "content",
            "variableType" : "String",
            "documentation" : "<p>The content of the comment.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreationDate" : {
          "c2jName" : "creationDate",
          "c2jShape" : "CreationDate",
          "deprecated" : false,
          "documentation" : "<p>The date and time the comment was created, in timestamp format.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time the comment was created, in timestamp format.</p>\n@param creationDate The date and time the comment was created, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationDate",
          "getterDocumentation" : "/**<p>The date and time the comment was created, in timestamp format.</p>\n@return The date and time the comment was created, in timestamp format.*/",
          "getterMethodName" : "getCreationDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "creationDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "creationDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreationDate",
          "setterDocumentation" : "/**<p>The date and time the comment was created, in timestamp format.</p>\n@param creationDate The date and time the comment was created, in timestamp format.*/",
          "setterMethodName" : "setCreationDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time the comment was created, in timestamp format.</p>\n@param creationDate The date and time the comment was created, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time the comment was created, in timestamp format.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "Deleted" : {
          "c2jName" : "deleted",
          "c2jShape" : "IsCommentDeleted",
          "deprecated" : false,
          "documentation" : "<p>A Boolean value indicating whether the comment has been deleted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A Boolean value indicating whether the comment has been deleted.</p>\n@param deleted A Boolean value indicating whether the comment has been deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDeleted",
          "getterDocumentation" : "/**<p>A Boolean value indicating whether the comment has been deleted.</p>\n@return A Boolean value indicating whether the comment has been deleted.*/",
          "getterMethodName" : "getDeleted",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "deleted",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "deleted",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "Deleted",
          "setterDocumentation" : "/**<p>A Boolean value indicating whether the comment has been deleted.</p>\n@param deleted A Boolean value indicating whether the comment has been deleted.*/",
          "setterMethodName" : "setDeleted",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "deleted",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A Boolean value indicating whether the comment has been deleted.</p>\n@param deleted A Boolean value indicating whether the comment has been deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "deleted",
            "variableType" : "Boolean",
            "documentation" : "<p>A Boolean value indicating whether the comment has been deleted.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "InReplyTo" : {
          "c2jName" : "inReplyTo",
          "c2jShape" : "CommentId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the comment for which this comment is a reply, if any.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the comment for which this comment is a reply, if any.</p>\n@param inReplyTo The ID of the comment for which this comment is a reply, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withInReplyTo",
          "getterDocumentation" : "/**<p>The ID of the comment for which this comment is a reply, if any.</p>\n@return The ID of the comment for which this comment is a reply, if any.*/",
          "getterMethodName" : "getInReplyTo",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "inReplyTo",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "inReplyTo",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "InReplyTo",
          "setterDocumentation" : "/**<p>The ID of the comment for which this comment is a reply, if any.</p>\n@param inReplyTo The ID of the comment for which this comment is a reply, if any.*/",
          "setterMethodName" : "setInReplyTo",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "inReplyTo",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the comment for which this comment is a reply, if any.</p>\n@param inReplyTo The ID of the comment for which this comment is a reply, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "inReplyTo",
            "variableType" : "String",
            "documentation" : "<p>The ID of the comment for which this comment is a reply, if any.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LastModifiedDate" : {
          "c2jName" : "lastModifiedDate",
          "c2jShape" : "LastModifiedDate",
          "deprecated" : false,
          "documentation" : "<p>The date and time the comment was most recently modified, in timestamp format.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time the comment was most recently modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the comment was most recently modified, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastModifiedDate",
          "getterDocumentation" : "/**<p>The date and time the comment was most recently modified, in timestamp format.</p>\n@return The date and time the comment was most recently modified, in timestamp format.*/",
          "getterMethodName" : "getLastModifiedDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lastModifiedDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lastModifiedDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "LastModifiedDate",
          "setterDocumentation" : "/**<p>The date and time the comment was most recently modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the comment was most recently modified, in timestamp format.*/",
          "setterMethodName" : "setLastModifiedDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModifiedDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time the comment was most recently modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the comment was most recently modified, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModifiedDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time the comment was most recently modified, in timestamp format.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Comment",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Comment",
        "variableName" : "comment",
        "variableType" : "Comment",
        "documentation" : null,
        "simpleType" : "Comment",
        "variableSetterType" : "Comment"
      },
      "wrapper" : false
    },
    "CommentContentRequiredException" : {
      "c2jName" : "CommentContentRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The comment is empty. You must provide some content for a comment. The content cannot be null.</p>",
      "enums" : null,
      "errorCode" : "CommentContentRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommentContentRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CommentContentRequiredException",
        "variableName" : "commentContentRequiredException",
        "variableType" : "CommentContentRequiredException",
        "documentation" : null,
        "simpleType" : "CommentContentRequiredException",
        "variableSetterType" : "CommentContentRequiredException"
      },
      "wrapper" : false
    },
    "CommentContentSizeLimitExceededException" : {
      "c2jName" : "CommentContentSizeLimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The comment is too large. Comments are limited to 1,000 characters.</p>",
      "enums" : null,
      "errorCode" : "CommentContentSizeLimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommentContentSizeLimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CommentContentSizeLimitExceededException",
        "variableName" : "commentContentSizeLimitExceededException",
        "variableType" : "CommentContentSizeLimitExceededException",
        "documentation" : null,
        "simpleType" : "CommentContentSizeLimitExceededException",
        "variableSetterType" : "CommentContentSizeLimitExceededException"
      },
      "wrapper" : false
    },
    "CommentDeletedException" : {
      "c2jName" : "CommentDeletedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>This comment has already been deleted. You cannot edit or delete a deleted comment.</p>",
      "enums" : null,
      "errorCode" : "CommentDeletedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommentDeletedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CommentDeletedException",
        "variableName" : "commentDeletedException",
        "variableType" : "CommentDeletedException",
        "documentation" : null,
        "simpleType" : "CommentDeletedException",
        "variableSetterType" : "CommentDeletedException"
      },
      "wrapper" : false
    },
    "CommentDoesNotExistException" : {
      "c2jName" : "CommentDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>No comment exists with the provided ID. Verify that you have provided the correct ID, and then try again.</p>",
      "enums" : null,
      "errorCode" : "CommentDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommentDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CommentDoesNotExistException",
        "variableName" : "commentDoesNotExistException",
        "variableType" : "CommentDoesNotExistException",
        "documentation" : null,
        "simpleType" : "CommentDoesNotExistException",
        "variableSetterType" : "CommentDoesNotExistException"
      },
      "wrapper" : false
    },
    "CommentIdRequiredException" : {
      "c2jName" : "CommentIdRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The comment ID is missing or null. A comment ID is required.</p>",
      "enums" : null,
      "errorCode" : "CommentIdRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommentIdRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CommentIdRequiredException",
        "variableName" : "commentIdRequiredException",
        "variableType" : "CommentIdRequiredException",
        "documentation" : null,
        "simpleType" : "CommentIdRequiredException",
        "variableSetterType" : "CommentIdRequiredException"
      },
      "wrapper" : false
    },
    "CommentNotCreatedByCallerException" : {
      "c2jName" : "CommentNotCreatedByCallerException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>You cannot modify or delete this comment. Only comment authors can modify or delete their comments.</p>",
      "enums" : null,
      "errorCode" : "CommentNotCreatedByCallerException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommentNotCreatedByCallerException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CommentNotCreatedByCallerException",
        "variableName" : "commentNotCreatedByCallerException",
        "variableType" : "CommentNotCreatedByCallerException",
        "documentation" : null,
        "simpleType" : "CommentNotCreatedByCallerException",
        "variableSetterType" : "CommentNotCreatedByCallerException"
      },
      "wrapper" : false
    },
    "CommentsForComparedCommit" : {
      "c2jName" : "CommentsForComparedCommit",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about comments on the comparison between two commits.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository that contains the compared commits.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the compared commits.</p>\n@param repositoryName The name of the repository that contains the compared commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository that contains the compared commits.</p>\n@return The name of the repository that contains the compared commits.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository that contains the compared commits.</p>\n@param repositoryName The name of the repository that contains the compared commits.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository that contains the compared commits.</p>\n@param repositoryName The name of the repository that contains the compared commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository that contains the compared commits.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforeCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The full commit ID of the commit used to establish the 'before' of the comparison.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit used to establish the 'before' of the comparison.</p>\n@param beforeCommitId The full commit ID of the commit used to establish the 'before' of the comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeCommitId",
        "getterDocumentation" : "/**<p>The full commit ID of the commit used to establish the 'before' of the comparison.</p>\n@return The full commit ID of the commit used to establish the 'before' of the comparison.*/",
        "getterMethodName" : "getBeforeCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforeCommitId",
        "setterDocumentation" : "/**<p>The full commit ID of the commit used to establish the 'before' of the comparison.</p>\n@param beforeCommitId The full commit ID of the commit used to establish the 'before' of the comparison.*/",
        "setterMethodName" : "setBeforeCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full commit ID of the commit used to establish the 'before' of the comparison.</p>\n@param beforeCommitId The full commit ID of the commit used to establish the 'before' of the comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "<p>The full commit ID of the commit used to establish the 'before' of the comparison.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The full commit ID of the commit used to establish the 'after' of the comparison.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit used to establish the 'after' of the comparison.</p>\n@param afterCommitId The full commit ID of the commit used to establish the 'after' of the comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterCommitId",
        "getterDocumentation" : "/**<p>The full commit ID of the commit used to establish the 'after' of the comparison.</p>\n@return The full commit ID of the commit used to establish the 'after' of the comparison.*/",
        "getterMethodName" : "getAfterCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterCommitId",
        "setterDocumentation" : "/**<p>The full commit ID of the commit used to establish the 'after' of the comparison.</p>\n@param afterCommitId The full commit ID of the commit used to establish the 'after' of the comparison.*/",
        "setterMethodName" : "setAfterCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full commit ID of the commit used to establish the 'after' of the comparison.</p>\n@param afterCommitId The full commit ID of the commit used to establish the 'after' of the comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "<p>The full commit ID of the commit used to establish the 'after' of the comparison.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforeBlobId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>The full blob ID of the commit used to establish the 'before' of the comparison.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full blob ID of the commit used to establish the 'before' of the comparison.</p>\n@param beforeBlobId The full blob ID of the commit used to establish the 'before' of the comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeBlobId",
        "getterDocumentation" : "/**<p>The full blob ID of the commit used to establish the 'before' of the comparison.</p>\n@return The full blob ID of the commit used to establish the 'before' of the comparison.*/",
        "getterMethodName" : "getBeforeBlobId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeBlobId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeBlobId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforeBlobId",
        "setterDocumentation" : "/**<p>The full blob ID of the commit used to establish the 'before' of the comparison.</p>\n@param beforeBlobId The full blob ID of the commit used to establish the 'before' of the comparison.*/",
        "setterMethodName" : "setBeforeBlobId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeBlobId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full blob ID of the commit used to establish the 'before' of the comparison.</p>\n@param beforeBlobId The full blob ID of the commit used to establish the 'before' of the comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeBlobId",
          "variableType" : "String",
          "documentation" : "<p>The full blob ID of the commit used to establish the 'before' of the comparison.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterBlobId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>The full blob ID of the commit used to establish the 'after' of the comparison.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full blob ID of the commit used to establish the 'after' of the comparison.</p>\n@param afterBlobId The full blob ID of the commit used to establish the 'after' of the comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterBlobId",
        "getterDocumentation" : "/**<p>The full blob ID of the commit used to establish the 'after' of the comparison.</p>\n@return The full blob ID of the commit used to establish the 'after' of the comparison.*/",
        "getterMethodName" : "getAfterBlobId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterBlobId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterBlobId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterBlobId",
        "setterDocumentation" : "/**<p>The full blob ID of the commit used to establish the 'after' of the comparison.</p>\n@param afterBlobId The full blob ID of the commit used to establish the 'after' of the comparison.*/",
        "setterMethodName" : "setAfterBlobId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterBlobId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full blob ID of the commit used to establish the 'after' of the comparison.</p>\n@param afterBlobId The full blob ID of the commit used to establish the 'after' of the comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterBlobId",
          "variableType" : "String",
          "documentation" : "<p>The full blob ID of the commit used to establish the 'after' of the comparison.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "location",
        "c2jShape" : "Location",
        "deprecated" : false,
        "documentation" : "<p>Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.</p>\n@param location Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLocation",
        "getterDocumentation" : "/**<p>Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.</p>\n@return Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.*/",
        "getterMethodName" : "getLocation",
        "getterModel" : {
          "returnType" : "Location",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "location",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "location",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Location",
        "setterDocumentation" : "/**<p>Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.</p>\n@param location Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.*/",
        "setterMethodName" : "setLocation",
        "setterModel" : {
          "variableDeclarationType" : "Location",
          "variableName" : "location",
          "variableType" : "Location",
          "documentation" : "",
          "simpleType" : "Location",
          "variableSetterType" : "Location"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.</p>\n@param location Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Location",
          "variableName" : "location",
          "variableType" : "Location",
          "documentation" : "<p>Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.</p>",
          "simpleType" : "Location",
          "variableSetterType" : "Location"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "comments",
        "c2jShape" : "Comments",
        "deprecated" : false,
        "documentation" : "<p>An array of comment objects. Each comment object contains information about a comment on the comparison between commits.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of comment objects. Each comment object contains information about a comment on the comparison between commits.</p>\n@param comments An array of comment objects. Each comment object contains information about a comment on the comparison between commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withComments",
        "getterDocumentation" : "/**<p>An array of comment objects. Each comment object contains information about a comment on the comparison between commits.</p>\n@return An array of comment objects. Each comment object contains information about a comment on the comparison between commits.*/",
        "getterMethodName" : "getComments",
        "getterModel" : {
          "returnType" : "java.util.List<Comment>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "comments",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "comments",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Comment",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Comment",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Comment",
              "variableName" : "member",
              "variableType" : "Comment",
              "documentation" : "",
              "simpleType" : "Comment",
              "variableSetterType" : "Comment"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Comment",
              "variableName" : "member",
              "variableType" : "Comment",
              "documentation" : "",
              "simpleType" : "Comment",
              "variableSetterType" : "Comment"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Comment",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Comment",
          "templateImplType" : "java.util.ArrayList<Comment>",
          "templateType" : "java.util.List<Comment>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Comments",
        "setterDocumentation" : "/**<p>An array of comment objects. Each comment object contains information about a comment on the comparison between commits.</p>\n@param comments An array of comment objects. Each comment object contains information about a comment on the comparison between commits.*/",
        "setterMethodName" : "setComments",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Comment>",
          "variableName" : "comments",
          "variableType" : "java.util.List<Comment>",
          "documentation" : "",
          "simpleType" : "List<Comment>",
          "variableSetterType" : "java.util.Collection<Comment>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of comment objects. Each comment object contains information about a comment on the comparison between commits.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setComments(java.util.Collection)} or {@link #withComments(java.util.Collection)} if you want to override the existing values.</p>\n@param comments An array of comment objects. Each comment object contains information about a comment on the comparison between commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Comment>",
          "variableName" : "comments",
          "variableType" : "java.util.List<Comment>",
          "documentation" : "<p>An array of comment objects. Each comment object contains information about a comment on the comparison between commits.</p>",
          "simpleType" : "List<Comment>",
          "variableSetterType" : "java.util.Collection<Comment>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AfterBlobId" : {
          "c2jName" : "afterBlobId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>The full blob ID of the commit used to establish the 'after' of the comparison.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full blob ID of the commit used to establish the 'after' of the comparison.</p>\n@param afterBlobId The full blob ID of the commit used to establish the 'after' of the comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterBlobId",
          "getterDocumentation" : "/**<p>The full blob ID of the commit used to establish the 'after' of the comparison.</p>\n@return The full blob ID of the commit used to establish the 'after' of the comparison.*/",
          "getterMethodName" : "getAfterBlobId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterBlobId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterBlobId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterBlobId",
          "setterDocumentation" : "/**<p>The full blob ID of the commit used to establish the 'after' of the comparison.</p>\n@param afterBlobId The full blob ID of the commit used to establish the 'after' of the comparison.*/",
          "setterMethodName" : "setAfterBlobId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterBlobId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full blob ID of the commit used to establish the 'after' of the comparison.</p>\n@param afterBlobId The full blob ID of the commit used to establish the 'after' of the comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterBlobId",
            "variableType" : "String",
            "documentation" : "<p>The full blob ID of the commit used to establish the 'after' of the comparison.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "AfterCommitId" : {
          "c2jName" : "afterCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The full commit ID of the commit used to establish the 'after' of the comparison.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit used to establish the 'after' of the comparison.</p>\n@param afterCommitId The full commit ID of the commit used to establish the 'after' of the comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterCommitId",
          "getterDocumentation" : "/**<p>The full commit ID of the commit used to establish the 'after' of the comparison.</p>\n@return The full commit ID of the commit used to establish the 'after' of the comparison.*/",
          "getterMethodName" : "getAfterCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterCommitId",
          "setterDocumentation" : "/**<p>The full commit ID of the commit used to establish the 'after' of the comparison.</p>\n@param afterCommitId The full commit ID of the commit used to establish the 'after' of the comparison.*/",
          "setterMethodName" : "setAfterCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full commit ID of the commit used to establish the 'after' of the comparison.</p>\n@param afterCommitId The full commit ID of the commit used to establish the 'after' of the comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "<p>The full commit ID of the commit used to establish the 'after' of the comparison.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeBlobId" : {
          "c2jName" : "beforeBlobId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>The full blob ID of the commit used to establish the 'before' of the comparison.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full blob ID of the commit used to establish the 'before' of the comparison.</p>\n@param beforeBlobId The full blob ID of the commit used to establish the 'before' of the comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeBlobId",
          "getterDocumentation" : "/**<p>The full blob ID of the commit used to establish the 'before' of the comparison.</p>\n@return The full blob ID of the commit used to establish the 'before' of the comparison.*/",
          "getterMethodName" : "getBeforeBlobId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeBlobId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeBlobId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforeBlobId",
          "setterDocumentation" : "/**<p>The full blob ID of the commit used to establish the 'before' of the comparison.</p>\n@param beforeBlobId The full blob ID of the commit used to establish the 'before' of the comparison.*/",
          "setterMethodName" : "setBeforeBlobId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeBlobId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full blob ID of the commit used to establish the 'before' of the comparison.</p>\n@param beforeBlobId The full blob ID of the commit used to establish the 'before' of the comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeBlobId",
            "variableType" : "String",
            "documentation" : "<p>The full blob ID of the commit used to establish the 'before' of the comparison.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeCommitId" : {
          "c2jName" : "beforeCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The full commit ID of the commit used to establish the 'before' of the comparison.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit used to establish the 'before' of the comparison.</p>\n@param beforeCommitId The full commit ID of the commit used to establish the 'before' of the comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeCommitId",
          "getterDocumentation" : "/**<p>The full commit ID of the commit used to establish the 'before' of the comparison.</p>\n@return The full commit ID of the commit used to establish the 'before' of the comparison.*/",
          "getterMethodName" : "getBeforeCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforeCommitId",
          "setterDocumentation" : "/**<p>The full commit ID of the commit used to establish the 'before' of the comparison.</p>\n@param beforeCommitId The full commit ID of the commit used to establish the 'before' of the comparison.*/",
          "setterMethodName" : "setBeforeCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full commit ID of the commit used to establish the 'before' of the comparison.</p>\n@param beforeCommitId The full commit ID of the commit used to establish the 'before' of the comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "<p>The full commit ID of the commit used to establish the 'before' of the comparison.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Comments" : {
          "c2jName" : "comments",
          "c2jShape" : "Comments",
          "deprecated" : false,
          "documentation" : "<p>An array of comment objects. Each comment object contains information about a comment on the comparison between commits.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of comment objects. Each comment object contains information about a comment on the comparison between commits.</p>\n@param comments An array of comment objects. Each comment object contains information about a comment on the comparison between commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withComments",
          "getterDocumentation" : "/**<p>An array of comment objects. Each comment object contains information about a comment on the comparison between commits.</p>\n@return An array of comment objects. Each comment object contains information about a comment on the comparison between commits.*/",
          "getterMethodName" : "getComments",
          "getterModel" : {
            "returnType" : "java.util.List<Comment>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "comments",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "comments",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Comment",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Comment",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Comment",
                "variableName" : "member",
                "variableType" : "Comment",
                "documentation" : "",
                "simpleType" : "Comment",
                "variableSetterType" : "Comment"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Comment",
                "variableName" : "member",
                "variableType" : "Comment",
                "documentation" : "",
                "simpleType" : "Comment",
                "variableSetterType" : "Comment"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Comment",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Comment",
            "templateImplType" : "java.util.ArrayList<Comment>",
            "templateType" : "java.util.List<Comment>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Comments",
          "setterDocumentation" : "/**<p>An array of comment objects. Each comment object contains information about a comment on the comparison between commits.</p>\n@param comments An array of comment objects. Each comment object contains information about a comment on the comparison between commits.*/",
          "setterMethodName" : "setComments",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Comment>",
            "variableName" : "comments",
            "variableType" : "java.util.List<Comment>",
            "documentation" : "",
            "simpleType" : "List<Comment>",
            "variableSetterType" : "java.util.Collection<Comment>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of comment objects. Each comment object contains information about a comment on the comparison between commits.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setComments(java.util.Collection)} or {@link #withComments(java.util.Collection)} if you want to override the existing values.</p>\n@param comments An array of comment objects. Each comment object contains information about a comment on the comparison between commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Comment>",
            "variableName" : "comments",
            "variableType" : "java.util.List<Comment>",
            "documentation" : "<p>An array of comment objects. Each comment object contains information about a comment on the comparison between commits.</p>",
            "simpleType" : "List<Comment>",
            "variableSetterType" : "java.util.Collection<Comment>"
          },
          "xmlNameSpaceUri" : null
        },
        "Location" : {
          "c2jName" : "location",
          "c2jShape" : "Location",
          "deprecated" : false,
          "documentation" : "<p>Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.</p>\n@param location Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLocation",
          "getterDocumentation" : "/**<p>Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.</p>\n@return Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.*/",
          "getterMethodName" : "getLocation",
          "getterModel" : {
            "returnType" : "Location",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "location",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "location",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Location",
          "setterDocumentation" : "/**<p>Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.</p>\n@param location Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.*/",
          "setterMethodName" : "setLocation",
          "setterModel" : {
            "variableDeclarationType" : "Location",
            "variableName" : "location",
            "variableType" : "Location",
            "documentation" : "",
            "simpleType" : "Location",
            "variableSetterType" : "Location"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.</p>\n@param location Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Location",
            "variableName" : "location",
            "variableType" : "Location",
            "documentation" : "<p>Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' or 'AFTER'.</p>",
            "simpleType" : "Location",
            "variableSetterType" : "Location"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that contains the compared commits.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the compared commits.</p>\n@param repositoryName The name of the repository that contains the compared commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository that contains the compared commits.</p>\n@return The name of the repository that contains the compared commits.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository that contains the compared commits.</p>\n@param repositoryName The name of the repository that contains the compared commits.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository that contains the compared commits.</p>\n@param repositoryName The name of the repository that contains the compared commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository that contains the compared commits.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommentsForComparedCommit",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CommentsForComparedCommit",
        "variableName" : "commentsForComparedCommit",
        "variableType" : "CommentsForComparedCommit",
        "documentation" : null,
        "simpleType" : "CommentsForComparedCommit",
        "variableSetterType" : "CommentsForComparedCommit"
      },
      "wrapper" : false
    },
    "CommentsForPullRequest" : {
      "c2jName" : "CommentsForPullRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about comments on a pull request.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "pullRequestId",
        "c2jShape" : "PullRequestId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated ID of the pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request.</p>\n@param pullRequestId The system-generated ID of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestId",
        "getterDocumentation" : "/**<p>The system-generated ID of the pull request.</p>\n@return The system-generated ID of the pull request.*/",
        "getterMethodName" : "getPullRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestId",
        "setterDocumentation" : "/**<p>The system-generated ID of the pull request.</p>\n@param pullRequestId The system-generated ID of the pull request.*/",
        "setterMethodName" : "setPullRequestId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request.</p>\n@param pullRequestId The system-generated ID of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated ID of the pull request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository that contains the pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@return The name of the repository that contains the pull request.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository that contains the pull request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforeCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.</p>\n@param beforeCommitId The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeCommitId",
        "getterDocumentation" : "/**<p>The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.</p>\n@return The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.*/",
        "getterMethodName" : "getBeforeCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforeCommitId",
        "setterDocumentation" : "/**<p>The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.</p>\n@param beforeCommitId The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.*/",
        "setterMethodName" : "setBeforeCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.</p>\n@param beforeCommitId The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "<p>The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>he full commit ID of the commit that was the tip of the source branch at the time the comment was made. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>he full commit ID of the commit that was the tip of the source branch at the time the comment was made. </p>\n@param afterCommitId he full commit ID of the commit that was the tip of the source branch at the time the comment was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterCommitId",
        "getterDocumentation" : "/**<p>he full commit ID of the commit that was the tip of the source branch at the time the comment was made. </p>\n@return he full commit ID of the commit that was the tip of the source branch at the time the comment was made.*/",
        "getterMethodName" : "getAfterCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterCommitId",
        "setterDocumentation" : "/**<p>he full commit ID of the commit that was the tip of the source branch at the time the comment was made. </p>\n@param afterCommitId he full commit ID of the commit that was the tip of the source branch at the time the comment was made.*/",
        "setterMethodName" : "setAfterCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>he full commit ID of the commit that was the tip of the source branch at the time the comment was made. </p>\n@param afterCommitId he full commit ID of the commit that was the tip of the source branch at the time the comment was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "<p>he full commit ID of the commit that was the tip of the source branch at the time the comment was made. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforeBlobId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>The full blob ID of the file on which you want to comment on the destination commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full blob ID of the file on which you want to comment on the destination commit.</p>\n@param beforeBlobId The full blob ID of the file on which you want to comment on the destination commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeBlobId",
        "getterDocumentation" : "/**<p>The full blob ID of the file on which you want to comment on the destination commit.</p>\n@return The full blob ID of the file on which you want to comment on the destination commit.*/",
        "getterMethodName" : "getBeforeBlobId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeBlobId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeBlobId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforeBlobId",
        "setterDocumentation" : "/**<p>The full blob ID of the file on which you want to comment on the destination commit.</p>\n@param beforeBlobId The full blob ID of the file on which you want to comment on the destination commit.*/",
        "setterMethodName" : "setBeforeBlobId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeBlobId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full blob ID of the file on which you want to comment on the destination commit.</p>\n@param beforeBlobId The full blob ID of the file on which you want to comment on the destination commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeBlobId",
          "variableType" : "String",
          "documentation" : "<p>The full blob ID of the file on which you want to comment on the destination commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterBlobId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>The full blob ID of the file on which you want to comment on the source commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full blob ID of the file on which you want to comment on the source commit.</p>\n@param afterBlobId The full blob ID of the file on which you want to comment on the source commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterBlobId",
        "getterDocumentation" : "/**<p>The full blob ID of the file on which you want to comment on the source commit.</p>\n@return The full blob ID of the file on which you want to comment on the source commit.*/",
        "getterMethodName" : "getAfterBlobId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterBlobId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterBlobId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterBlobId",
        "setterDocumentation" : "/**<p>The full blob ID of the file on which you want to comment on the source commit.</p>\n@param afterBlobId The full blob ID of the file on which you want to comment on the source commit.*/",
        "setterMethodName" : "setAfterBlobId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterBlobId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full blob ID of the file on which you want to comment on the source commit.</p>\n@param afterBlobId The full blob ID of the file on which you want to comment on the source commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterBlobId",
          "variableType" : "String",
          "documentation" : "<p>The full blob ID of the file on which you want to comment on the source commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "location",
        "c2jShape" : "Location",
        "deprecated" : false,
        "documentation" : "<p>Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).</p>\n@param location Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLocation",
        "getterDocumentation" : "/**<p>Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).</p>\n@return Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).*/",
        "getterMethodName" : "getLocation",
        "getterModel" : {
          "returnType" : "Location",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "location",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "location",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Location",
        "setterDocumentation" : "/**<p>Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).</p>\n@param location Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).*/",
        "setterMethodName" : "setLocation",
        "setterModel" : {
          "variableDeclarationType" : "Location",
          "variableName" : "location",
          "variableType" : "Location",
          "documentation" : "",
          "simpleType" : "Location",
          "variableSetterType" : "Location"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).</p>\n@param location Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Location",
          "variableName" : "location",
          "variableType" : "Location",
          "documentation" : "<p>Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).</p>",
          "simpleType" : "Location",
          "variableSetterType" : "Location"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "comments",
        "c2jShape" : "Comments",
        "deprecated" : false,
        "documentation" : "<p>An array of comment objects. Each comment object contains information about a comment on the pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of comment objects. Each comment object contains information about a comment on the pull request.</p>\n@param comments An array of comment objects. Each comment object contains information about a comment on the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withComments",
        "getterDocumentation" : "/**<p>An array of comment objects. Each comment object contains information about a comment on the pull request.</p>\n@return An array of comment objects. Each comment object contains information about a comment on the pull request.*/",
        "getterMethodName" : "getComments",
        "getterModel" : {
          "returnType" : "java.util.List<Comment>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "comments",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "comments",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Comment",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Comment",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Comment",
              "variableName" : "member",
              "variableType" : "Comment",
              "documentation" : "",
              "simpleType" : "Comment",
              "variableSetterType" : "Comment"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Comment",
              "variableName" : "member",
              "variableType" : "Comment",
              "documentation" : "",
              "simpleType" : "Comment",
              "variableSetterType" : "Comment"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Comment",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Comment",
          "templateImplType" : "java.util.ArrayList<Comment>",
          "templateType" : "java.util.List<Comment>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Comments",
        "setterDocumentation" : "/**<p>An array of comment objects. Each comment object contains information about a comment on the pull request.</p>\n@param comments An array of comment objects. Each comment object contains information about a comment on the pull request.*/",
        "setterMethodName" : "setComments",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Comment>",
          "variableName" : "comments",
          "variableType" : "java.util.List<Comment>",
          "documentation" : "",
          "simpleType" : "List<Comment>",
          "variableSetterType" : "java.util.Collection<Comment>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of comment objects. Each comment object contains information about a comment on the pull request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setComments(java.util.Collection)} or {@link #withComments(java.util.Collection)} if you want to override the existing values.</p>\n@param comments An array of comment objects. Each comment object contains information about a comment on the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Comment>",
          "variableName" : "comments",
          "variableType" : "java.util.List<Comment>",
          "documentation" : "<p>An array of comment objects. Each comment object contains information about a comment on the pull request.</p>",
          "simpleType" : "List<Comment>",
          "variableSetterType" : "java.util.Collection<Comment>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AfterBlobId" : {
          "c2jName" : "afterBlobId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>The full blob ID of the file on which you want to comment on the source commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full blob ID of the file on which you want to comment on the source commit.</p>\n@param afterBlobId The full blob ID of the file on which you want to comment on the source commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterBlobId",
          "getterDocumentation" : "/**<p>The full blob ID of the file on which you want to comment on the source commit.</p>\n@return The full blob ID of the file on which you want to comment on the source commit.*/",
          "getterMethodName" : "getAfterBlobId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterBlobId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterBlobId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterBlobId",
          "setterDocumentation" : "/**<p>The full blob ID of the file on which you want to comment on the source commit.</p>\n@param afterBlobId The full blob ID of the file on which you want to comment on the source commit.*/",
          "setterMethodName" : "setAfterBlobId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterBlobId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full blob ID of the file on which you want to comment on the source commit.</p>\n@param afterBlobId The full blob ID of the file on which you want to comment on the source commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterBlobId",
            "variableType" : "String",
            "documentation" : "<p>The full blob ID of the file on which you want to comment on the source commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "AfterCommitId" : {
          "c2jName" : "afterCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>he full commit ID of the commit that was the tip of the source branch at the time the comment was made. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>he full commit ID of the commit that was the tip of the source branch at the time the comment was made. </p>\n@param afterCommitId he full commit ID of the commit that was the tip of the source branch at the time the comment was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterCommitId",
          "getterDocumentation" : "/**<p>he full commit ID of the commit that was the tip of the source branch at the time the comment was made. </p>\n@return he full commit ID of the commit that was the tip of the source branch at the time the comment was made.*/",
          "getterMethodName" : "getAfterCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterCommitId",
          "setterDocumentation" : "/**<p>he full commit ID of the commit that was the tip of the source branch at the time the comment was made. </p>\n@param afterCommitId he full commit ID of the commit that was the tip of the source branch at the time the comment was made.*/",
          "setterMethodName" : "setAfterCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>he full commit ID of the commit that was the tip of the source branch at the time the comment was made. </p>\n@param afterCommitId he full commit ID of the commit that was the tip of the source branch at the time the comment was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "<p>he full commit ID of the commit that was the tip of the source branch at the time the comment was made. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeBlobId" : {
          "c2jName" : "beforeBlobId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>The full blob ID of the file on which you want to comment on the destination commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full blob ID of the file on which you want to comment on the destination commit.</p>\n@param beforeBlobId The full blob ID of the file on which you want to comment on the destination commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeBlobId",
          "getterDocumentation" : "/**<p>The full blob ID of the file on which you want to comment on the destination commit.</p>\n@return The full blob ID of the file on which you want to comment on the destination commit.*/",
          "getterMethodName" : "getBeforeBlobId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeBlobId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeBlobId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforeBlobId",
          "setterDocumentation" : "/**<p>The full blob ID of the file on which you want to comment on the destination commit.</p>\n@param beforeBlobId The full blob ID of the file on which you want to comment on the destination commit.*/",
          "setterMethodName" : "setBeforeBlobId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeBlobId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full blob ID of the file on which you want to comment on the destination commit.</p>\n@param beforeBlobId The full blob ID of the file on which you want to comment on the destination commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeBlobId",
            "variableType" : "String",
            "documentation" : "<p>The full blob ID of the file on which you want to comment on the destination commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeCommitId" : {
          "c2jName" : "beforeCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.</p>\n@param beforeCommitId The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeCommitId",
          "getterDocumentation" : "/**<p>The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.</p>\n@return The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.*/",
          "getterMethodName" : "getBeforeCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforeCommitId",
          "setterDocumentation" : "/**<p>The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.</p>\n@param beforeCommitId The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.*/",
          "setterMethodName" : "setBeforeCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.</p>\n@param beforeCommitId The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "<p>The full commit ID of the commit that was the tip of the destination branch when the pull request was created. This commit will be superceded by the after commit in the source branch when and if you merge the source branch into the destination branch.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Comments" : {
          "c2jName" : "comments",
          "c2jShape" : "Comments",
          "deprecated" : false,
          "documentation" : "<p>An array of comment objects. Each comment object contains information about a comment on the pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of comment objects. Each comment object contains information about a comment on the pull request.</p>\n@param comments An array of comment objects. Each comment object contains information about a comment on the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withComments",
          "getterDocumentation" : "/**<p>An array of comment objects. Each comment object contains information about a comment on the pull request.</p>\n@return An array of comment objects. Each comment object contains information about a comment on the pull request.*/",
          "getterMethodName" : "getComments",
          "getterModel" : {
            "returnType" : "java.util.List<Comment>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "comments",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "comments",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Comment",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Comment",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Comment",
                "variableName" : "member",
                "variableType" : "Comment",
                "documentation" : "",
                "simpleType" : "Comment",
                "variableSetterType" : "Comment"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Comment",
                "variableName" : "member",
                "variableType" : "Comment",
                "documentation" : "",
                "simpleType" : "Comment",
                "variableSetterType" : "Comment"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Comment",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Comment",
            "templateImplType" : "java.util.ArrayList<Comment>",
            "templateType" : "java.util.List<Comment>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Comments",
          "setterDocumentation" : "/**<p>An array of comment objects. Each comment object contains information about a comment on the pull request.</p>\n@param comments An array of comment objects. Each comment object contains information about a comment on the pull request.*/",
          "setterMethodName" : "setComments",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Comment>",
            "variableName" : "comments",
            "variableType" : "java.util.List<Comment>",
            "documentation" : "",
            "simpleType" : "List<Comment>",
            "variableSetterType" : "java.util.Collection<Comment>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of comment objects. Each comment object contains information about a comment on the pull request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setComments(java.util.Collection)} or {@link #withComments(java.util.Collection)} if you want to override the existing values.</p>\n@param comments An array of comment objects. Each comment object contains information about a comment on the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Comment>",
            "variableName" : "comments",
            "variableType" : "java.util.List<Comment>",
            "documentation" : "<p>An array of comment objects. Each comment object contains information about a comment on the pull request.</p>",
            "simpleType" : "List<Comment>",
            "variableSetterType" : "java.util.Collection<Comment>"
          },
          "xmlNameSpaceUri" : null
        },
        "Location" : {
          "c2jName" : "location",
          "c2jShape" : "Location",
          "deprecated" : false,
          "documentation" : "<p>Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).</p>\n@param location Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLocation",
          "getterDocumentation" : "/**<p>Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).</p>\n@return Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).*/",
          "getterMethodName" : "getLocation",
          "getterModel" : {
            "returnType" : "Location",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "location",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "location",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Location",
          "setterDocumentation" : "/**<p>Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).</p>\n@param location Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).*/",
          "setterMethodName" : "setLocation",
          "setterModel" : {
            "variableDeclarationType" : "Location",
            "variableName" : "location",
            "variableType" : "Location",
            "documentation" : "",
            "simpleType" : "Location",
            "variableSetterType" : "Location"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).</p>\n@param location Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Location",
            "variableName" : "location",
            "variableType" : "Location",
            "documentation" : "<p>Location information about the comment on the pull request, including the file name, line number, and whether the version of the file where the comment was made is 'BEFORE' (destination branch) or 'AFTER' (source branch).</p>",
            "simpleType" : "Location",
            "variableSetterType" : "Location"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestId" : {
          "c2jName" : "pullRequestId",
          "c2jShape" : "PullRequestId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated ID of the pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request.</p>\n@param pullRequestId The system-generated ID of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestId",
          "getterDocumentation" : "/**<p>The system-generated ID of the pull request.</p>\n@return The system-generated ID of the pull request.*/",
          "getterMethodName" : "getPullRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestId",
          "setterDocumentation" : "/**<p>The system-generated ID of the pull request.</p>\n@param pullRequestId The system-generated ID of the pull request.*/",
          "setterMethodName" : "setPullRequestId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request.</p>\n@param pullRequestId The system-generated ID of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated ID of the pull request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that contains the pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@return The name of the repository that contains the pull request.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository that contains the pull request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommentsForPullRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CommentsForPullRequest",
        "variableName" : "commentsForPullRequest",
        "variableType" : "CommentsForPullRequest",
        "documentation" : null,
        "simpleType" : "CommentsForPullRequest",
        "variableSetterType" : "CommentsForPullRequest"
      },
      "wrapper" : false
    },
    "Commit" : {
      "c2jName" : "Commit",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about a specific commit.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "commitId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>The full SHA of the specified commit. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full SHA of the specified commit. </p>\n@param commitId The full SHA of the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommitId",
        "getterDocumentation" : "/**<p>The full SHA of the specified commit. </p>\n@return The full SHA of the specified commit.*/",
        "getterMethodName" : "getCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CommitId",
        "setterDocumentation" : "/**<p>The full SHA of the specified commit. </p>\n@param commitId The full SHA of the specified commit.*/",
        "setterMethodName" : "setCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full SHA of the specified commit. </p>\n@param commitId The full SHA of the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitId",
          "variableType" : "String",
          "documentation" : "<p>The full SHA of the specified commit. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "treeId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>Tree information for the specified commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Tree information for the specified commit.</p>\n@param treeId Tree information for the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTreeId",
        "getterDocumentation" : "/**<p>Tree information for the specified commit.</p>\n@return Tree information for the specified commit.*/",
        "getterMethodName" : "getTreeId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "treeId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "treeId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TreeId",
        "setterDocumentation" : "/**<p>Tree information for the specified commit.</p>\n@param treeId Tree information for the specified commit.*/",
        "setterMethodName" : "setTreeId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "treeId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Tree information for the specified commit.</p>\n@param treeId Tree information for the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "treeId",
          "variableType" : "String",
          "documentation" : "<p>Tree information for the specified commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "parents",
        "c2jShape" : "ParentList",
        "deprecated" : false,
        "documentation" : "<p>A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.</p>\n@param parents A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withParents",
        "getterDocumentation" : "/**<p>A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.</p>\n@return A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.*/",
        "getterMethodName" : "getParents",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "parents",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "parents",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ObjectId",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Parents",
        "setterDocumentation" : "/**<p>A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.</p>\n@param parents A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.*/",
        "setterMethodName" : "setParents",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "parents",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setParents(java.util.Collection)} or {@link #withParents(java.util.Collection)} if you want to override the existing values.</p>\n@param parents A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "parents",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "message",
        "c2jShape" : "Message",
        "deprecated" : false,
        "documentation" : "<p>The commit message associated with the specified commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The commit message associated with the specified commit.</p>\n@param message The commit message associated with the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMessage",
        "getterDocumentation" : "/**<p>The commit message associated with the specified commit.</p>\n@return The commit message associated with the specified commit.*/",
        "getterMethodName" : "getMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "message",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "message",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Message",
        "setterDocumentation" : "/**<p>The commit message associated with the specified commit.</p>\n@param message The commit message associated with the specified commit.*/",
        "setterMethodName" : "setMessage",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "message",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The commit message associated with the specified commit.</p>\n@param message The commit message associated with the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "message",
          "variableType" : "String",
          "documentation" : "<p>The commit message associated with the specified commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "author",
        "c2jShape" : "UserInfo",
        "deprecated" : false,
        "documentation" : "<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>\n@param author Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAuthor",
        "getterDocumentation" : "/**<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>\n@return Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.*/",
        "getterMethodName" : "getAuthor",
        "getterModel" : {
          "returnType" : "UserInfo",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "author",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "author",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Author",
        "setterDocumentation" : "/**<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>\n@param author Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.*/",
        "setterMethodName" : "setAuthor",
        "setterModel" : {
          "variableDeclarationType" : "UserInfo",
          "variableName" : "author",
          "variableType" : "UserInfo",
          "documentation" : "",
          "simpleType" : "UserInfo",
          "variableSetterType" : "UserInfo"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>\n@param author Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "UserInfo",
          "variableName" : "author",
          "variableType" : "UserInfo",
          "documentation" : "<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>",
          "simpleType" : "UserInfo",
          "variableSetterType" : "UserInfo"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "committer",
        "c2jShape" : "UserInfo",
        "deprecated" : false,
        "documentation" : "<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>\n@param committer Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommitter",
        "getterDocumentation" : "/**<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>\n@return Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.*/",
        "getterMethodName" : "getCommitter",
        "getterModel" : {
          "returnType" : "UserInfo",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "committer",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "committer",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Committer",
        "setterDocumentation" : "/**<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>\n@param committer Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.*/",
        "setterMethodName" : "setCommitter",
        "setterModel" : {
          "variableDeclarationType" : "UserInfo",
          "variableName" : "committer",
          "variableType" : "UserInfo",
          "documentation" : "",
          "simpleType" : "UserInfo",
          "variableSetterType" : "UserInfo"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>\n@param committer Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "UserInfo",
          "variableName" : "committer",
          "variableType" : "UserInfo",
          "documentation" : "<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>",
          "simpleType" : "UserInfo",
          "variableSetterType" : "UserInfo"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "additionalData",
        "c2jShape" : "AdditionalData",
        "deprecated" : false,
        "documentation" : "<p>Any additional data associated with the specified commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Any additional data associated with the specified commit.</p>\n@param additionalData Any additional data associated with the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAdditionalData",
        "getterDocumentation" : "/**<p>Any additional data associated with the specified commit.</p>\n@return Any additional data associated with the specified commit.*/",
        "getterMethodName" : "getAdditionalData",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "additionalData",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "additionalData",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AdditionalData",
        "setterDocumentation" : "/**<p>Any additional data associated with the specified commit.</p>\n@param additionalData Any additional data associated with the specified commit.*/",
        "setterMethodName" : "setAdditionalData",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "additionalData",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Any additional data associated with the specified commit.</p>\n@param additionalData Any additional data associated with the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "additionalData",
          "variableType" : "String",
          "documentation" : "<p>Any additional data associated with the specified commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AdditionalData" : {
          "c2jName" : "additionalData",
          "c2jShape" : "AdditionalData",
          "deprecated" : false,
          "documentation" : "<p>Any additional data associated with the specified commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Any additional data associated with the specified commit.</p>\n@param additionalData Any additional data associated with the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAdditionalData",
          "getterDocumentation" : "/**<p>Any additional data associated with the specified commit.</p>\n@return Any additional data associated with the specified commit.*/",
          "getterMethodName" : "getAdditionalData",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "additionalData",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "additionalData",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AdditionalData",
          "setterDocumentation" : "/**<p>Any additional data associated with the specified commit.</p>\n@param additionalData Any additional data associated with the specified commit.*/",
          "setterMethodName" : "setAdditionalData",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "additionalData",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Any additional data associated with the specified commit.</p>\n@param additionalData Any additional data associated with the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "additionalData",
            "variableType" : "String",
            "documentation" : "<p>Any additional data associated with the specified commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Author" : {
          "c2jName" : "author",
          "c2jShape" : "UserInfo",
          "deprecated" : false,
          "documentation" : "<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>\n@param author Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAuthor",
          "getterDocumentation" : "/**<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>\n@return Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.*/",
          "getterMethodName" : "getAuthor",
          "getterModel" : {
            "returnType" : "UserInfo",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "author",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "author",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Author",
          "setterDocumentation" : "/**<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>\n@param author Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.*/",
          "setterMethodName" : "setAuthor",
          "setterModel" : {
            "variableDeclarationType" : "UserInfo",
            "variableName" : "author",
            "variableType" : "UserInfo",
            "documentation" : "",
            "simpleType" : "UserInfo",
            "variableSetterType" : "UserInfo"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>\n@param author Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "UserInfo",
            "variableName" : "author",
            "variableType" : "UserInfo",
            "documentation" : "<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>",
            "simpleType" : "UserInfo",
            "variableSetterType" : "UserInfo"
          },
          "xmlNameSpaceUri" : null
        },
        "CommitId" : {
          "c2jName" : "commitId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>The full SHA of the specified commit. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full SHA of the specified commit. </p>\n@param commitId The full SHA of the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommitId",
          "getterDocumentation" : "/**<p>The full SHA of the specified commit. </p>\n@return The full SHA of the specified commit.*/",
          "getterMethodName" : "getCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CommitId",
          "setterDocumentation" : "/**<p>The full SHA of the specified commit. </p>\n@param commitId The full SHA of the specified commit.*/",
          "setterMethodName" : "setCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full SHA of the specified commit. </p>\n@param commitId The full SHA of the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitId",
            "variableType" : "String",
            "documentation" : "<p>The full SHA of the specified commit. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Committer" : {
          "c2jName" : "committer",
          "c2jShape" : "UserInfo",
          "deprecated" : false,
          "documentation" : "<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>\n@param committer Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommitter",
          "getterDocumentation" : "/**<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>\n@return Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.*/",
          "getterMethodName" : "getCommitter",
          "getterModel" : {
            "returnType" : "UserInfo",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "committer",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "committer",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Committer",
          "setterDocumentation" : "/**<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>\n@param committer Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.*/",
          "setterMethodName" : "setCommitter",
          "setterModel" : {
            "variableDeclarationType" : "UserInfo",
            "variableName" : "committer",
            "variableType" : "UserInfo",
            "documentation" : "",
            "simpleType" : "UserInfo",
            "variableSetterType" : "UserInfo"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>\n@param committer Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "UserInfo",
            "variableName" : "committer",
            "variableType" : "UserInfo",
            "documentation" : "<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>",
            "simpleType" : "UserInfo",
            "variableSetterType" : "UserInfo"
          },
          "xmlNameSpaceUri" : null
        },
        "Message" : {
          "c2jName" : "message",
          "c2jShape" : "Message",
          "deprecated" : false,
          "documentation" : "<p>The commit message associated with the specified commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The commit message associated with the specified commit.</p>\n@param message The commit message associated with the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMessage",
          "getterDocumentation" : "/**<p>The commit message associated with the specified commit.</p>\n@return The commit message associated with the specified commit.*/",
          "getterMethodName" : "getMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "message",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "message",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Message",
          "setterDocumentation" : "/**<p>The commit message associated with the specified commit.</p>\n@param message The commit message associated with the specified commit.*/",
          "setterMethodName" : "setMessage",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "message",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The commit message associated with the specified commit.</p>\n@param message The commit message associated with the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "message",
            "variableType" : "String",
            "documentation" : "<p>The commit message associated with the specified commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Parents" : {
          "c2jName" : "parents",
          "c2jShape" : "ParentList",
          "deprecated" : false,
          "documentation" : "<p>A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.</p>\n@param parents A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withParents",
          "getterDocumentation" : "/**<p>A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.</p>\n@return A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.*/",
          "getterMethodName" : "getParents",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "parents",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "parents",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ObjectId",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Parents",
          "setterDocumentation" : "/**<p>A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.</p>\n@param parents A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.*/",
          "setterMethodName" : "setParents",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "parents",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setParents(java.util.Collection)} or {@link #withParents(java.util.Collection)} if you want to override the existing values.</p>\n@param parents A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "parents",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>A list of parent commits for the specified commit. Each parent commit ID is the full commit ID.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "TreeId" : {
          "c2jName" : "treeId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>Tree information for the specified commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Tree information for the specified commit.</p>\n@param treeId Tree information for the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTreeId",
          "getterDocumentation" : "/**<p>Tree information for the specified commit.</p>\n@return Tree information for the specified commit.*/",
          "getterMethodName" : "getTreeId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "treeId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "treeId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TreeId",
          "setterDocumentation" : "/**<p>Tree information for the specified commit.</p>\n@param treeId Tree information for the specified commit.*/",
          "setterMethodName" : "setTreeId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "treeId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Tree information for the specified commit.</p>\n@param treeId Tree information for the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "treeId",
            "variableType" : "String",
            "documentation" : "<p>Tree information for the specified commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Commit",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Commit",
        "variableName" : "commit",
        "variableType" : "Commit",
        "documentation" : null,
        "simpleType" : "Commit",
        "variableSetterType" : "Commit"
      },
      "wrapper" : false
    },
    "CommitDoesNotExistException" : {
      "c2jName" : "CommitDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified commit does not exist or no commit was specified, and the specified repository has no default branch.</p>",
      "enums" : null,
      "errorCode" : "CommitDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommitDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CommitDoesNotExistException",
        "variableName" : "commitDoesNotExistException",
        "variableType" : "CommitDoesNotExistException",
        "documentation" : null,
        "simpleType" : "CommitDoesNotExistException",
        "variableSetterType" : "CommitDoesNotExistException"
      },
      "wrapper" : false
    },
    "CommitIdDoesNotExistException" : {
      "c2jName" : "CommitIdDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified commit ID does not exist.</p>",
      "enums" : null,
      "errorCode" : "CommitIdDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommitIdDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CommitIdDoesNotExistException",
        "variableName" : "commitIdDoesNotExistException",
        "variableType" : "CommitIdDoesNotExistException",
        "documentation" : null,
        "simpleType" : "CommitIdDoesNotExistException",
        "variableSetterType" : "CommitIdDoesNotExistException"
      },
      "wrapper" : false
    },
    "CommitIdRequiredException" : {
      "c2jName" : "CommitIdRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A commit ID was not specified.</p>",
      "enums" : null,
      "errorCode" : "CommitIdRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommitIdRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CommitIdRequiredException",
        "variableName" : "commitIdRequiredException",
        "variableType" : "CommitIdRequiredException",
        "documentation" : null,
        "simpleType" : "CommitIdRequiredException",
        "variableSetterType" : "CommitIdRequiredException"
      },
      "wrapper" : false
    },
    "CommitMessageLengthExceededException" : {
      "c2jName" : "CommitMessageLengthExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The commit message is too long. Provide a shorter string. </p>",
      "enums" : null,
      "errorCode" : "CommitMessageLengthExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommitMessageLengthExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CommitMessageLengthExceededException",
        "variableName" : "commitMessageLengthExceededException",
        "variableType" : "CommitMessageLengthExceededException",
        "documentation" : null,
        "simpleType" : "CommitMessageLengthExceededException",
        "variableSetterType" : "CommitMessageLengthExceededException"
      },
      "wrapper" : false
    },
    "CommitRequiredException" : {
      "c2jName" : "CommitRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A commit was not specified.</p>",
      "enums" : null,
      "errorCode" : "CommitRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommitRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CommitRequiredException",
        "variableName" : "commitRequiredException",
        "variableType" : "CommitRequiredException",
        "documentation" : null,
        "simpleType" : "CommitRequiredException",
        "variableSetterType" : "CommitRequiredException"
      },
      "wrapper" : false
    },
    "CreateBranchRequest" : {
      "c2jName" : "CreateBranchInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a create branch operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateBranch",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.CreateBranch",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository in which you want to create the new branch.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository in which you want to create the new branch.</p>\n@param repositoryName The name of the repository in which you want to create the new branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository in which you want to create the new branch.</p>\n@return The name of the repository in which you want to create the new branch.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository in which you want to create the new branch.</p>\n@param repositoryName The name of the repository in which you want to create the new branch.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository in which you want to create the new branch.</p>\n@param repositoryName The name of the repository in which you want to create the new branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository in which you want to create the new branch.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "branchName",
        "c2jShape" : "BranchName",
        "deprecated" : false,
        "documentation" : "<p>The name of the new branch to create.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the new branch to create.</p>\n@param branchName The name of the new branch to create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBranchName",
        "getterDocumentation" : "/**<p>The name of the new branch to create.</p>\n@return The name of the new branch to create.*/",
        "getterMethodName" : "getBranchName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "branchName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "branchName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BranchName",
        "setterDocumentation" : "/**<p>The name of the new branch to create.</p>\n@param branchName The name of the new branch to create.*/",
        "setterMethodName" : "setBranchName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "branchName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the new branch to create.</p>\n@param branchName The name of the new branch to create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "branchName",
          "variableType" : "String",
          "documentation" : "<p>The name of the new branch to create.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "commitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the commit to point the new branch to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the commit to point the new branch to.</p>\n@param commitId The ID of the commit to point the new branch to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommitId",
        "getterDocumentation" : "/**<p>The ID of the commit to point the new branch to.</p>\n@return The ID of the commit to point the new branch to.*/",
        "getterMethodName" : "getCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CommitId",
        "setterDocumentation" : "/**<p>The ID of the commit to point the new branch to.</p>\n@param commitId The ID of the commit to point the new branch to.*/",
        "setterMethodName" : "setCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the commit to point the new branch to.</p>\n@param commitId The ID of the commit to point the new branch to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the commit to point the new branch to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BranchName" : {
          "c2jName" : "branchName",
          "c2jShape" : "BranchName",
          "deprecated" : false,
          "documentation" : "<p>The name of the new branch to create.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the new branch to create.</p>\n@param branchName The name of the new branch to create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBranchName",
          "getterDocumentation" : "/**<p>The name of the new branch to create.</p>\n@return The name of the new branch to create.*/",
          "getterMethodName" : "getBranchName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "branchName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "branchName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BranchName",
          "setterDocumentation" : "/**<p>The name of the new branch to create.</p>\n@param branchName The name of the new branch to create.*/",
          "setterMethodName" : "setBranchName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "branchName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the new branch to create.</p>\n@param branchName The name of the new branch to create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "branchName",
            "variableType" : "String",
            "documentation" : "<p>The name of the new branch to create.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CommitId" : {
          "c2jName" : "commitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the commit to point the new branch to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the commit to point the new branch to.</p>\n@param commitId The ID of the commit to point the new branch to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommitId",
          "getterDocumentation" : "/**<p>The ID of the commit to point the new branch to.</p>\n@return The ID of the commit to point the new branch to.*/",
          "getterMethodName" : "getCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CommitId",
          "setterDocumentation" : "/**<p>The ID of the commit to point the new branch to.</p>\n@param commitId The ID of the commit to point the new branch to.*/",
          "setterMethodName" : "setCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the commit to point the new branch to.</p>\n@param commitId The ID of the commit to point the new branch to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the commit to point the new branch to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository in which you want to create the new branch.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository in which you want to create the new branch.</p>\n@param repositoryName The name of the repository in which you want to create the new branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository in which you want to create the new branch.</p>\n@return The name of the repository in which you want to create the new branch.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository in which you want to create the new branch.</p>\n@param repositoryName The name of the repository in which you want to create the new branch.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository in which you want to create the new branch.</p>\n@param repositoryName The name of the repository in which you want to create the new branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository in which you want to create the new branch.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "branchName", "commitId" ],
      "shapeName" : "CreateBranchRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CreateBranchRequest",
        "variableName" : "createBranchRequest",
        "variableType" : "CreateBranchRequest",
        "documentation" : null,
        "simpleType" : "CreateBranchRequest",
        "variableSetterType" : "CreateBranchRequest"
      },
      "wrapper" : false
    },
    "CreateBranchResult" : {
      "c2jName" : "CreateBranchResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateBranchResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CreateBranchResult",
        "variableName" : "createBranchResult",
        "variableType" : "CreateBranchResult",
        "documentation" : null,
        "simpleType" : "CreateBranchResult",
        "variableSetterType" : "CreateBranchResult"
      },
      "wrapper" : false
    },
    "CreatePullRequestRequest" : {
      "c2jName" : "CreatePullRequestInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreatePullRequest",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.CreatePullRequest",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "title",
        "c2jShape" : "Title",
        "deprecated" : false,
        "documentation" : "<p>The title of the pull request. This title will be used to identify the pull request to other users in the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The title of the pull request. This title will be used to identify the pull request to other users in the repository.</p>\n@param title The title of the pull request. This title will be used to identify the pull request to other users in the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTitle",
        "getterDocumentation" : "/**<p>The title of the pull request. This title will be used to identify the pull request to other users in the repository.</p>\n@return The title of the pull request. This title will be used to identify the pull request to other users in the repository.*/",
        "getterMethodName" : "getTitle",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "title",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "title",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Title",
        "setterDocumentation" : "/**<p>The title of the pull request. This title will be used to identify the pull request to other users in the repository.</p>\n@param title The title of the pull request. This title will be used to identify the pull request to other users in the repository.*/",
        "setterMethodName" : "setTitle",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "title",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The title of the pull request. This title will be used to identify the pull request to other users in the repository.</p>\n@param title The title of the pull request. This title will be used to identify the pull request to other users in the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "title",
          "variableType" : "String",
          "documentation" : "<p>The title of the pull request. This title will be used to identify the pull request to other users in the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "description",
        "c2jShape" : "Description",
        "deprecated" : false,
        "documentation" : "<p>A description of the pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A description of the pull request.</p>\n@param description A description of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDescription",
        "getterDocumentation" : "/**<p>A description of the pull request.</p>\n@return A description of the pull request.*/",
        "getterMethodName" : "getDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "description",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "description",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Description",
        "setterDocumentation" : "/**<p>A description of the pull request.</p>\n@param description A description of the pull request.*/",
        "setterMethodName" : "setDescription",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A description of the pull request.</p>\n@param description A description of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "<p>A description of the pull request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "targets",
        "c2jShape" : "TargetList",
        "deprecated" : false,
        "documentation" : "<p>The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).</p>\n@param targets The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargets",
        "getterDocumentation" : "/**<p>The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).</p>\n@return The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).*/",
        "getterMethodName" : "getTargets",
        "getterModel" : {
          "returnType" : "java.util.List<Target>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "targets",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "targets",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Target",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Target",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Target",
              "variableName" : "member",
              "variableType" : "Target",
              "documentation" : "",
              "simpleType" : "Target",
              "variableSetterType" : "Target"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Target",
              "variableName" : "member",
              "variableType" : "Target",
              "documentation" : "",
              "simpleType" : "Target",
              "variableSetterType" : "Target"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Target",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Target",
          "templateImplType" : "java.util.ArrayList<Target>",
          "templateType" : "java.util.List<Target>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Targets",
        "setterDocumentation" : "/**<p>The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).</p>\n@param targets The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).*/",
        "setterMethodName" : "setTargets",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Target>",
          "variableName" : "targets",
          "variableType" : "java.util.List<Target>",
          "documentation" : "",
          "simpleType" : "List<Target>",
          "variableSetterType" : "java.util.Collection<Target>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTargets(java.util.Collection)} or {@link #withTargets(java.util.Collection)} if you want to override the existing values.</p>\n@param targets The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Target>",
          "variableName" : "targets",
          "variableType" : "java.util.List<Target>",
          "documentation" : "<p>The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).</p>",
          "simpleType" : "List<Target>",
          "variableSetterType" : "java.util.Collection<Target>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "clientRequestToken",
        "c2jShape" : "ClientRequestToken",
        "deprecated" : false,
        "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p> </note>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p> </note>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withClientRequestToken",
        "getterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p> </note>\n@return A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p>*/",
        "getterMethodName" : "getClientRequestToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "clientRequestToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "clientRequestToken",
          "uri" : false
        },
        "idempotencyToken" : true,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ClientRequestToken",
        "setterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p> </note>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p>*/",
        "setterMethodName" : "setClientRequestToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p> </note>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ClientRequestToken" : {
          "c2jName" : "clientRequestToken",
          "c2jShape" : "ClientRequestToken",
          "deprecated" : false,
          "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p> </note>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p> </note>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withClientRequestToken",
          "getterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p> </note>\n@return A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p>*/",
          "getterMethodName" : "getClientRequestToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "clientRequestToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "clientRequestToken",
            "uri" : false
          },
          "idempotencyToken" : true,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ClientRequestToken",
          "setterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p> </note>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p>*/",
          "setterMethodName" : "setClientRequestToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p> </note>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If using an AWS SDK, you do not have to generate an idempotency token, as this will be done for you.</p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Description" : {
          "c2jName" : "description",
          "c2jShape" : "Description",
          "deprecated" : false,
          "documentation" : "<p>A description of the pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A description of the pull request.</p>\n@param description A description of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDescription",
          "getterDocumentation" : "/**<p>A description of the pull request.</p>\n@return A description of the pull request.*/",
          "getterMethodName" : "getDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "description",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "description",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Description",
          "setterDocumentation" : "/**<p>A description of the pull request.</p>\n@param description A description of the pull request.*/",
          "setterMethodName" : "setDescription",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A description of the pull request.</p>\n@param description A description of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "<p>A description of the pull request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Targets" : {
          "c2jName" : "targets",
          "c2jShape" : "TargetList",
          "deprecated" : false,
          "documentation" : "<p>The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).</p>\n@param targets The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargets",
          "getterDocumentation" : "/**<p>The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).</p>\n@return The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).*/",
          "getterMethodName" : "getTargets",
          "getterModel" : {
            "returnType" : "java.util.List<Target>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "targets",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "targets",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Target",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Target",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Target",
                "variableName" : "member",
                "variableType" : "Target",
                "documentation" : "",
                "simpleType" : "Target",
                "variableSetterType" : "Target"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Target",
                "variableName" : "member",
                "variableType" : "Target",
                "documentation" : "",
                "simpleType" : "Target",
                "variableSetterType" : "Target"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Target",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Target",
            "templateImplType" : "java.util.ArrayList<Target>",
            "templateType" : "java.util.List<Target>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Targets",
          "setterDocumentation" : "/**<p>The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).</p>\n@param targets The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).*/",
          "setterMethodName" : "setTargets",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Target>",
            "variableName" : "targets",
            "variableType" : "java.util.List<Target>",
            "documentation" : "",
            "simpleType" : "List<Target>",
            "variableSetterType" : "java.util.Collection<Target>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTargets(java.util.Collection)} or {@link #withTargets(java.util.Collection)} if you want to override the existing values.</p>\n@param targets The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Target>",
            "variableName" : "targets",
            "variableType" : "java.util.List<Target>",
            "documentation" : "<p>The targets for the pull request, including the source of the code to be reviewed (the source branch), and the destination where the creator of the pull request intends the code to be merged after the pull request is closed (the destination branch).</p>",
            "simpleType" : "List<Target>",
            "variableSetterType" : "java.util.Collection<Target>"
          },
          "xmlNameSpaceUri" : null
        },
        "Title" : {
          "c2jName" : "title",
          "c2jShape" : "Title",
          "deprecated" : false,
          "documentation" : "<p>The title of the pull request. This title will be used to identify the pull request to other users in the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The title of the pull request. This title will be used to identify the pull request to other users in the repository.</p>\n@param title The title of the pull request. This title will be used to identify the pull request to other users in the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTitle",
          "getterDocumentation" : "/**<p>The title of the pull request. This title will be used to identify the pull request to other users in the repository.</p>\n@return The title of the pull request. This title will be used to identify the pull request to other users in the repository.*/",
          "getterMethodName" : "getTitle",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "title",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "title",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Title",
          "setterDocumentation" : "/**<p>The title of the pull request. This title will be used to identify the pull request to other users in the repository.</p>\n@param title The title of the pull request. This title will be used to identify the pull request to other users in the repository.*/",
          "setterMethodName" : "setTitle",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "title",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The title of the pull request. This title will be used to identify the pull request to other users in the repository.</p>\n@param title The title of the pull request. This title will be used to identify the pull request to other users in the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "title",
            "variableType" : "String",
            "documentation" : "<p>The title of the pull request. This title will be used to identify the pull request to other users in the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "title", "targets" ],
      "shapeName" : "CreatePullRequestRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CreatePullRequestRequest",
        "variableName" : "createPullRequestRequest",
        "variableType" : "CreatePullRequestRequest",
        "documentation" : null,
        "simpleType" : "CreatePullRequestRequest",
        "variableSetterType" : "CreatePullRequestRequest"
      },
      "wrapper" : false
    },
    "CreatePullRequestResult" : {
      "c2jName" : "CreatePullRequestOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "pullRequest",
        "c2jShape" : "PullRequest",
        "deprecated" : false,
        "documentation" : "<p>Information about the newly created pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the newly created pull request.</p>\n@param pullRequest Information about the newly created pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequest",
        "getterDocumentation" : "/**<p>Information about the newly created pull request.</p>\n@return Information about the newly created pull request.*/",
        "getterMethodName" : "getPullRequest",
        "getterModel" : {
          "returnType" : "PullRequest",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "PullRequest",
        "setterDocumentation" : "/**<p>Information about the newly created pull request.</p>\n@param pullRequest Information about the newly created pull request.*/",
        "setterMethodName" : "setPullRequest",
        "setterModel" : {
          "variableDeclarationType" : "PullRequest",
          "variableName" : "pullRequest",
          "variableType" : "PullRequest",
          "documentation" : "",
          "simpleType" : "PullRequest",
          "variableSetterType" : "PullRequest"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the newly created pull request.</p>\n@param pullRequest Information about the newly created pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "PullRequest",
          "variableName" : "pullRequest",
          "variableType" : "PullRequest",
          "documentation" : "<p>Information about the newly created pull request.</p>",
          "simpleType" : "PullRequest",
          "variableSetterType" : "PullRequest"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PullRequest" : {
          "c2jName" : "pullRequest",
          "c2jShape" : "PullRequest",
          "deprecated" : false,
          "documentation" : "<p>Information about the newly created pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the newly created pull request.</p>\n@param pullRequest Information about the newly created pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequest",
          "getterDocumentation" : "/**<p>Information about the newly created pull request.</p>\n@return Information about the newly created pull request.*/",
          "getterMethodName" : "getPullRequest",
          "getterModel" : {
            "returnType" : "PullRequest",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "PullRequest",
          "setterDocumentation" : "/**<p>Information about the newly created pull request.</p>\n@param pullRequest Information about the newly created pull request.*/",
          "setterMethodName" : "setPullRequest",
          "setterModel" : {
            "variableDeclarationType" : "PullRequest",
            "variableName" : "pullRequest",
            "variableType" : "PullRequest",
            "documentation" : "",
            "simpleType" : "PullRequest",
            "variableSetterType" : "PullRequest"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the newly created pull request.</p>\n@param pullRequest Information about the newly created pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "PullRequest",
            "variableName" : "pullRequest",
            "variableType" : "PullRequest",
            "documentation" : "<p>Information about the newly created pull request.</p>",
            "simpleType" : "PullRequest",
            "variableSetterType" : "PullRequest"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "pullRequest" ],
      "shapeName" : "CreatePullRequestResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CreatePullRequestResult",
        "variableName" : "createPullRequestResult",
        "variableType" : "CreatePullRequestResult",
        "documentation" : null,
        "simpleType" : "CreatePullRequestResult",
        "variableSetterType" : "CreatePullRequestResult"
      },
      "wrapper" : false
    },
    "CreateRepositoryRequest" : {
      "c2jName" : "CreateRepositoryInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a create repository operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateRepository",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.CreateRepository",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>\n@param repositoryName The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>\n@return The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p>*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>\n@param repositoryName The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p>*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>\n@param repositoryName The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryDescription",
        "c2jShape" : "RepositoryDescription",
        "deprecated" : false,
        "documentation" : "<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>\n@param repositoryDescription A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryDescription",
        "getterDocumentation" : "/**<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>\n@return A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p>*/",
        "getterMethodName" : "getRepositoryDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryDescription",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryDescription",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryDescription",
        "setterDocumentation" : "/**<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>\n@param repositoryDescription A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p>*/",
        "setterMethodName" : "setRepositoryDescription",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryDescription",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>\n@param repositoryDescription A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryDescription",
          "variableType" : "String",
          "documentation" : "<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryDescription" : {
          "c2jName" : "repositoryDescription",
          "c2jShape" : "RepositoryDescription",
          "deprecated" : false,
          "documentation" : "<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>\n@param repositoryDescription A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryDescription",
          "getterDocumentation" : "/**<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>\n@return A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p>*/",
          "getterMethodName" : "getRepositoryDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryDescription",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryDescription",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryDescription",
          "setterDocumentation" : "/**<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>\n@param repositoryDescription A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p>*/",
          "setterMethodName" : "setRepositoryDescription",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryDescription",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>\n@param repositoryDescription A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryDescription",
            "variableType" : "String",
            "documentation" : "<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>\n@param repositoryName The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>\n@return The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p>*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>\n@param repositoryName The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p>*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>\n@param repositoryName The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "CreateRepositoryRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CreateRepositoryRequest",
        "variableName" : "createRepositoryRequest",
        "variableType" : "CreateRepositoryRequest",
        "documentation" : null,
        "simpleType" : "CreateRepositoryRequest",
        "variableSetterType" : "CreateRepositoryRequest"
      },
      "wrapper" : false
    },
    "CreateRepositoryResult" : {
      "c2jName" : "CreateRepositoryOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a create repository operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositoryMetadata",
        "c2jShape" : "RepositoryMetadata",
        "deprecated" : false,
        "documentation" : "<p>Information about the newly created repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the newly created repository.</p>\n@param repositoryMetadata Information about the newly created repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryMetadata",
        "getterDocumentation" : "/**<p>Information about the newly created repository.</p>\n@return Information about the newly created repository.*/",
        "getterMethodName" : "getRepositoryMetadata",
        "getterModel" : {
          "returnType" : "RepositoryMetadata",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryMetadata",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryMetadata",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "RepositoryMetadata",
        "setterDocumentation" : "/**<p>Information about the newly created repository.</p>\n@param repositoryMetadata Information about the newly created repository.*/",
        "setterMethodName" : "setRepositoryMetadata",
        "setterModel" : {
          "variableDeclarationType" : "RepositoryMetadata",
          "variableName" : "repositoryMetadata",
          "variableType" : "RepositoryMetadata",
          "documentation" : "",
          "simpleType" : "RepositoryMetadata",
          "variableSetterType" : "RepositoryMetadata"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the newly created repository.</p>\n@param repositoryMetadata Information about the newly created repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "RepositoryMetadata",
          "variableName" : "repositoryMetadata",
          "variableType" : "RepositoryMetadata",
          "documentation" : "<p>Information about the newly created repository.</p>",
          "simpleType" : "RepositoryMetadata",
          "variableSetterType" : "RepositoryMetadata"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryMetadata" : {
          "c2jName" : "repositoryMetadata",
          "c2jShape" : "RepositoryMetadata",
          "deprecated" : false,
          "documentation" : "<p>Information about the newly created repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the newly created repository.</p>\n@param repositoryMetadata Information about the newly created repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryMetadata",
          "getterDocumentation" : "/**<p>Information about the newly created repository.</p>\n@return Information about the newly created repository.*/",
          "getterMethodName" : "getRepositoryMetadata",
          "getterModel" : {
            "returnType" : "RepositoryMetadata",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryMetadata",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryMetadata",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "RepositoryMetadata",
          "setterDocumentation" : "/**<p>Information about the newly created repository.</p>\n@param repositoryMetadata Information about the newly created repository.*/",
          "setterMethodName" : "setRepositoryMetadata",
          "setterModel" : {
            "variableDeclarationType" : "RepositoryMetadata",
            "variableName" : "repositoryMetadata",
            "variableType" : "RepositoryMetadata",
            "documentation" : "",
            "simpleType" : "RepositoryMetadata",
            "variableSetterType" : "RepositoryMetadata"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the newly created repository.</p>\n@param repositoryMetadata Information about the newly created repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "RepositoryMetadata",
            "variableName" : "repositoryMetadata",
            "variableType" : "RepositoryMetadata",
            "documentation" : "<p>Information about the newly created repository.</p>",
            "simpleType" : "RepositoryMetadata",
            "variableSetterType" : "RepositoryMetadata"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateRepositoryResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CreateRepositoryResult",
        "variableName" : "createRepositoryResult",
        "variableType" : "CreateRepositoryResult",
        "documentation" : null,
        "simpleType" : "CreateRepositoryResult",
        "variableSetterType" : "CreateRepositoryResult"
      },
      "wrapper" : false
    },
    "DefaultBranchCannotBeDeletedException" : {
      "c2jName" : "DefaultBranchCannotBeDeletedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified branch is the default branch for the repository, and cannot be deleted. To delete this branch, you must first set another branch as the default branch.</p>",
      "enums" : null,
      "errorCode" : "DefaultBranchCannotBeDeletedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DefaultBranchCannotBeDeletedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DefaultBranchCannotBeDeletedException",
        "variableName" : "defaultBranchCannotBeDeletedException",
        "variableType" : "DefaultBranchCannotBeDeletedException",
        "documentation" : null,
        "simpleType" : "DefaultBranchCannotBeDeletedException",
        "variableSetterType" : "DefaultBranchCannotBeDeletedException"
      },
      "wrapper" : false
    },
    "DeleteBranchRequest" : {
      "c2jName" : "DeleteBranchInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a delete branch operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteBranch",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.DeleteBranch",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository that contains the branch to be deleted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the branch to be deleted.</p>\n@param repositoryName The name of the repository that contains the branch to be deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository that contains the branch to be deleted.</p>\n@return The name of the repository that contains the branch to be deleted.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository that contains the branch to be deleted.</p>\n@param repositoryName The name of the repository that contains the branch to be deleted.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository that contains the branch to be deleted.</p>\n@param repositoryName The name of the repository that contains the branch to be deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository that contains the branch to be deleted.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "branchName",
        "c2jShape" : "BranchName",
        "deprecated" : false,
        "documentation" : "<p>The name of the branch to delete.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the branch to delete.</p>\n@param branchName The name of the branch to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBranchName",
        "getterDocumentation" : "/**<p>The name of the branch to delete.</p>\n@return The name of the branch to delete.*/",
        "getterMethodName" : "getBranchName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "branchName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "branchName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BranchName",
        "setterDocumentation" : "/**<p>The name of the branch to delete.</p>\n@param branchName The name of the branch to delete.*/",
        "setterMethodName" : "setBranchName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "branchName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the branch to delete.</p>\n@param branchName The name of the branch to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "branchName",
          "variableType" : "String",
          "documentation" : "<p>The name of the branch to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BranchName" : {
          "c2jName" : "branchName",
          "c2jShape" : "BranchName",
          "deprecated" : false,
          "documentation" : "<p>The name of the branch to delete.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the branch to delete.</p>\n@param branchName The name of the branch to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBranchName",
          "getterDocumentation" : "/**<p>The name of the branch to delete.</p>\n@return The name of the branch to delete.*/",
          "getterMethodName" : "getBranchName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "branchName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "branchName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BranchName",
          "setterDocumentation" : "/**<p>The name of the branch to delete.</p>\n@param branchName The name of the branch to delete.*/",
          "setterMethodName" : "setBranchName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "branchName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the branch to delete.</p>\n@param branchName The name of the branch to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "branchName",
            "variableType" : "String",
            "documentation" : "<p>The name of the branch to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that contains the branch to be deleted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the branch to be deleted.</p>\n@param repositoryName The name of the repository that contains the branch to be deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository that contains the branch to be deleted.</p>\n@return The name of the repository that contains the branch to be deleted.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository that contains the branch to be deleted.</p>\n@param repositoryName The name of the repository that contains the branch to be deleted.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository that contains the branch to be deleted.</p>\n@param repositoryName The name of the repository that contains the branch to be deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository that contains the branch to be deleted.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "branchName" ],
      "shapeName" : "DeleteBranchRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteBranchRequest",
        "variableName" : "deleteBranchRequest",
        "variableType" : "DeleteBranchRequest",
        "documentation" : null,
        "simpleType" : "DeleteBranchRequest",
        "variableSetterType" : "DeleteBranchRequest"
      },
      "wrapper" : false
    },
    "DeleteBranchResult" : {
      "c2jName" : "DeleteBranchOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a delete branch operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "deletedBranch",
        "c2jShape" : "BranchInfo",
        "deprecated" : false,
        "documentation" : "<p>Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.</p>\n@param deletedBranch Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDeletedBranch",
        "getterDocumentation" : "/**<p>Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.</p>\n@return Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.*/",
        "getterMethodName" : "getDeletedBranch",
        "getterModel" : {
          "returnType" : "BranchInfo",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "deletedBranch",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "deletedBranch",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "DeletedBranch",
        "setterDocumentation" : "/**<p>Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.</p>\n@param deletedBranch Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.*/",
        "setterMethodName" : "setDeletedBranch",
        "setterModel" : {
          "variableDeclarationType" : "BranchInfo",
          "variableName" : "deletedBranch",
          "variableType" : "BranchInfo",
          "documentation" : "",
          "simpleType" : "BranchInfo",
          "variableSetterType" : "BranchInfo"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.</p>\n@param deletedBranch Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BranchInfo",
          "variableName" : "deletedBranch",
          "variableType" : "BranchInfo",
          "documentation" : "<p>Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.</p>",
          "simpleType" : "BranchInfo",
          "variableSetterType" : "BranchInfo"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DeletedBranch" : {
          "c2jName" : "deletedBranch",
          "c2jShape" : "BranchInfo",
          "deprecated" : false,
          "documentation" : "<p>Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.</p>\n@param deletedBranch Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDeletedBranch",
          "getterDocumentation" : "/**<p>Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.</p>\n@return Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.*/",
          "getterMethodName" : "getDeletedBranch",
          "getterModel" : {
            "returnType" : "BranchInfo",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "deletedBranch",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "deletedBranch",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "DeletedBranch",
          "setterDocumentation" : "/**<p>Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.</p>\n@param deletedBranch Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.*/",
          "setterMethodName" : "setDeletedBranch",
          "setterModel" : {
            "variableDeclarationType" : "BranchInfo",
            "variableName" : "deletedBranch",
            "variableType" : "BranchInfo",
            "documentation" : "",
            "simpleType" : "BranchInfo",
            "variableSetterType" : "BranchInfo"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.</p>\n@param deletedBranch Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BranchInfo",
            "variableName" : "deletedBranch",
            "variableType" : "BranchInfo",
            "documentation" : "<p>Information about the branch deleted by the operation, including the branch name and the commit ID that was the tip of the branch.</p>",
            "simpleType" : "BranchInfo",
            "variableSetterType" : "BranchInfo"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteBranchResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteBranchResult",
        "variableName" : "deleteBranchResult",
        "variableType" : "DeleteBranchResult",
        "documentation" : null,
        "simpleType" : "DeleteBranchResult",
        "variableSetterType" : "DeleteBranchResult"
      },
      "wrapper" : false
    },
    "DeleteCommentContentRequest" : {
      "c2jName" : "DeleteCommentContentInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteCommentContent",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.DeleteCommentContent",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "commentId",
        "c2jShape" : "CommentId",
        "deprecated" : false,
        "documentation" : "<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommentId",
        "getterDocumentation" : "/**<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@return The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.*/",
        "getterMethodName" : "getCommentId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commentId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commentId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CommentId",
        "setterDocumentation" : "/**<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.*/",
        "setterMethodName" : "setCommentId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "commentId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "commentId",
          "variableType" : "String",
          "documentation" : "<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CommentId" : {
          "c2jName" : "commentId",
          "c2jShape" : "CommentId",
          "deprecated" : false,
          "documentation" : "<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommentId",
          "getterDocumentation" : "/**<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@return The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.*/",
          "getterMethodName" : "getCommentId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commentId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commentId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CommentId",
          "setterDocumentation" : "/**<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.*/",
          "setterMethodName" : "setCommentId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "commentId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "commentId",
            "variableType" : "String",
            "documentation" : "<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "commentId" ],
      "shapeName" : "DeleteCommentContentRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteCommentContentRequest",
        "variableName" : "deleteCommentContentRequest",
        "variableType" : "DeleteCommentContentRequest",
        "documentation" : null,
        "simpleType" : "DeleteCommentContentRequest",
        "variableSetterType" : "DeleteCommentContentRequest"
      },
      "wrapper" : false
    },
    "DeleteCommentContentResult" : {
      "c2jName" : "DeleteCommentContentOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "comment",
        "c2jShape" : "Comment",
        "deprecated" : false,
        "documentation" : "<p>Information about the comment you just deleted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the comment you just deleted.</p>\n@param comment Information about the comment you just deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withComment",
        "getterDocumentation" : "/**<p>Information about the comment you just deleted.</p>\n@return Information about the comment you just deleted.*/",
        "getterMethodName" : "getComment",
        "getterModel" : {
          "returnType" : "Comment",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "comment",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "comment",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Comment",
        "setterDocumentation" : "/**<p>Information about the comment you just deleted.</p>\n@param comment Information about the comment you just deleted.*/",
        "setterMethodName" : "setComment",
        "setterModel" : {
          "variableDeclarationType" : "Comment",
          "variableName" : "comment",
          "variableType" : "Comment",
          "documentation" : "",
          "simpleType" : "Comment",
          "variableSetterType" : "Comment"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the comment you just deleted.</p>\n@param comment Information about the comment you just deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Comment",
          "variableName" : "comment",
          "variableType" : "Comment",
          "documentation" : "<p>Information about the comment you just deleted.</p>",
          "simpleType" : "Comment",
          "variableSetterType" : "Comment"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Comment" : {
          "c2jName" : "comment",
          "c2jShape" : "Comment",
          "deprecated" : false,
          "documentation" : "<p>Information about the comment you just deleted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the comment you just deleted.</p>\n@param comment Information about the comment you just deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withComment",
          "getterDocumentation" : "/**<p>Information about the comment you just deleted.</p>\n@return Information about the comment you just deleted.*/",
          "getterMethodName" : "getComment",
          "getterModel" : {
            "returnType" : "Comment",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "comment",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "comment",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Comment",
          "setterDocumentation" : "/**<p>Information about the comment you just deleted.</p>\n@param comment Information about the comment you just deleted.*/",
          "setterMethodName" : "setComment",
          "setterModel" : {
            "variableDeclarationType" : "Comment",
            "variableName" : "comment",
            "variableType" : "Comment",
            "documentation" : "",
            "simpleType" : "Comment",
            "variableSetterType" : "Comment"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the comment you just deleted.</p>\n@param comment Information about the comment you just deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Comment",
            "variableName" : "comment",
            "variableType" : "Comment",
            "documentation" : "<p>Information about the comment you just deleted.</p>",
            "simpleType" : "Comment",
            "variableSetterType" : "Comment"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteCommentContentResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteCommentContentResult",
        "variableName" : "deleteCommentContentResult",
        "variableType" : "DeleteCommentContentResult",
        "documentation" : null,
        "simpleType" : "DeleteCommentContentResult",
        "variableSetterType" : "DeleteCommentContentResult"
      },
      "wrapper" : false
    },
    "DeleteRepositoryRequest" : {
      "c2jName" : "DeleteRepositoryInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a delete repository operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteRepository",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.DeleteRepository",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to delete.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@return The name of the repository to delete.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to delete.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@return The name of the repository to delete.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "DeleteRepositoryRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteRepositoryRequest",
        "variableName" : "deleteRepositoryRequest",
        "variableType" : "DeleteRepositoryRequest",
        "documentation" : null,
        "simpleType" : "DeleteRepositoryRequest",
        "variableSetterType" : "DeleteRepositoryRequest"
      },
      "wrapper" : false
    },
    "DeleteRepositoryResult" : {
      "c2jName" : "DeleteRepositoryOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a delete repository operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositoryId",
        "c2jShape" : "RepositoryId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the repository that was deleted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the repository that was deleted.</p>\n@param repositoryId The ID of the repository that was deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryId",
        "getterDocumentation" : "/**<p>The ID of the repository that was deleted.</p>\n@return The ID of the repository that was deleted.*/",
        "getterMethodName" : "getRepositoryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryId",
        "setterDocumentation" : "/**<p>The ID of the repository that was deleted.</p>\n@param repositoryId The ID of the repository that was deleted.*/",
        "setterMethodName" : "setRepositoryId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the repository that was deleted.</p>\n@param repositoryId The ID of the repository that was deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the repository that was deleted.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryId" : {
          "c2jName" : "repositoryId",
          "c2jShape" : "RepositoryId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the repository that was deleted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the repository that was deleted.</p>\n@param repositoryId The ID of the repository that was deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryId",
          "getterDocumentation" : "/**<p>The ID of the repository that was deleted.</p>\n@return The ID of the repository that was deleted.*/",
          "getterMethodName" : "getRepositoryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryId",
          "setterDocumentation" : "/**<p>The ID of the repository that was deleted.</p>\n@param repositoryId The ID of the repository that was deleted.*/",
          "setterMethodName" : "setRepositoryId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the repository that was deleted.</p>\n@param repositoryId The ID of the repository that was deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the repository that was deleted.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteRepositoryResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteRepositoryResult",
        "variableName" : "deleteRepositoryResult",
        "variableType" : "DeleteRepositoryResult",
        "documentation" : null,
        "simpleType" : "DeleteRepositoryResult",
        "variableSetterType" : "DeleteRepositoryResult"
      },
      "wrapper" : false
    },
    "DescribePullRequestEventsRequest" : {
      "c2jName" : "DescribePullRequestEventsInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DescribePullRequestEvents",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.DescribePullRequestEvents",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "pullRequestId",
        "c2jShape" : "PullRequestId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestId",
        "getterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@return The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
        "getterMethodName" : "getPullRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestId",
        "setterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
        "setterMethodName" : "setPullRequestId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "pullRequestEventType",
        "c2jShape" : "PullRequestEventType",
        "deprecated" : false,
        "documentation" : "<p>Optional. The pull request event type about which you want to return information.</p>",
        "enumType" : "PullRequestEventType",
        "fluentSetterDocumentation" : "/**<p>Optional. The pull request event type about which you want to return information.</p>\n@param pullRequestEventType Optional. The pull request event type about which you want to return information.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestEventType*/",
        "fluentSetterMethodName" : "withPullRequestEventType",
        "getterDocumentation" : "/**<p>Optional. The pull request event type about which you want to return information.</p>\n@return Optional. The pull request event type about which you want to return information.\n@see PullRequestEventType*/",
        "getterMethodName" : "getPullRequestEventType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestEventType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestEventType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestEventType",
        "setterDocumentation" : "/**<p>Optional. The pull request event type about which you want to return information.</p>\n@param pullRequestEventType Optional. The pull request event type about which you want to return information.\n@see PullRequestEventType*/",
        "setterMethodName" : "setPullRequestEventType",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestEventType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Optional. The pull request event type about which you want to return information.</p>\n@param pullRequestEventType Optional. The pull request event type about which you want to return information.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestEventType*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestEventType",
          "variableType" : "String",
          "documentation" : "<p>Optional. The pull request event type about which you want to return information.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "actorArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>\n@param actorArn The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withActorArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>\n@return The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.*/",
        "getterMethodName" : "getActorArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "actorArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "actorArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ActorArn",
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>\n@param actorArn The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.*/",
        "setterMethodName" : "setActorArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "actorArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>\n@param actorArn The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "actorArn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@return An enumeration token that when provided in a request, returns the next batch of the results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.</p>\n@return A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "maxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "maxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "setterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ActorArn" : {
          "c2jName" : "actorArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>\n@param actorArn The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withActorArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>\n@return The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.*/",
          "getterMethodName" : "getActorArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "actorArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "actorArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ActorArn",
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>\n@param actorArn The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.*/",
          "setterMethodName" : "setActorArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "actorArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>\n@param actorArn The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "actorArn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.</p>\n@return A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "maxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "maxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "setterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>A non-negative integer used to limit the number of returned results. The default is 100 events, which is also the maximum number of events that can be returned in a result.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@return An enumeration token that when provided in a request, returns the next batch of the results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestEventType" : {
          "c2jName" : "pullRequestEventType",
          "c2jShape" : "PullRequestEventType",
          "deprecated" : false,
          "documentation" : "<p>Optional. The pull request event type about which you want to return information.</p>",
          "enumType" : "PullRequestEventType",
          "fluentSetterDocumentation" : "/**<p>Optional. The pull request event type about which you want to return information.</p>\n@param pullRequestEventType Optional. The pull request event type about which you want to return information.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestEventType*/",
          "fluentSetterMethodName" : "withPullRequestEventType",
          "getterDocumentation" : "/**<p>Optional. The pull request event type about which you want to return information.</p>\n@return Optional. The pull request event type about which you want to return information.\n@see PullRequestEventType*/",
          "getterMethodName" : "getPullRequestEventType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestEventType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestEventType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestEventType",
          "setterDocumentation" : "/**<p>Optional. The pull request event type about which you want to return information.</p>\n@param pullRequestEventType Optional. The pull request event type about which you want to return information.\n@see PullRequestEventType*/",
          "setterMethodName" : "setPullRequestEventType",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestEventType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Optional. The pull request event type about which you want to return information.</p>\n@param pullRequestEventType Optional. The pull request event type about which you want to return information.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestEventType*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestEventType",
            "variableType" : "String",
            "documentation" : "<p>Optional. The pull request event type about which you want to return information.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestId" : {
          "c2jName" : "pullRequestId",
          "c2jShape" : "PullRequestId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestId",
          "getterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@return The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
          "getterMethodName" : "getPullRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestId",
          "setterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
          "setterMethodName" : "setPullRequestId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "pullRequestId" ],
      "shapeName" : "DescribePullRequestEventsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DescribePullRequestEventsRequest",
        "variableName" : "describePullRequestEventsRequest",
        "variableType" : "DescribePullRequestEventsRequest",
        "documentation" : null,
        "simpleType" : "DescribePullRequestEventsRequest",
        "variableSetterType" : "DescribePullRequestEventsRequest"
      },
      "wrapper" : false
    },
    "DescribePullRequestEventsResult" : {
      "c2jName" : "DescribePullRequestEventsOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "pullRequestEvents",
        "c2jShape" : "PullRequestEventList",
        "deprecated" : false,
        "documentation" : "<p>Information about the pull request events.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the pull request events.</p>\n@param pullRequestEvents Information about the pull request events.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestEvents",
        "getterDocumentation" : "/**<p>Information about the pull request events.</p>\n@return Information about the pull request events.*/",
        "getterMethodName" : "getPullRequestEvents",
        "getterModel" : {
          "returnType" : "java.util.List<PullRequestEvent>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestEvents",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestEvents",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "PullRequestEvent",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "PullRequestEvent",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "PullRequestEvent",
              "variableName" : "member",
              "variableType" : "PullRequestEvent",
              "documentation" : "",
              "simpleType" : "PullRequestEvent",
              "variableSetterType" : "PullRequestEvent"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "PullRequestEvent",
              "variableName" : "member",
              "variableType" : "PullRequestEvent",
              "documentation" : "",
              "simpleType" : "PullRequestEvent",
              "variableSetterType" : "PullRequestEvent"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "PullRequestEvent",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "PullRequestEvent",
          "templateImplType" : "java.util.ArrayList<PullRequestEvent>",
          "templateType" : "java.util.List<PullRequestEvent>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "PullRequestEvents",
        "setterDocumentation" : "/**<p>Information about the pull request events.</p>\n@param pullRequestEvents Information about the pull request events.*/",
        "setterMethodName" : "setPullRequestEvents",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<PullRequestEvent>",
          "variableName" : "pullRequestEvents",
          "variableType" : "java.util.List<PullRequestEvent>",
          "documentation" : "",
          "simpleType" : "List<PullRequestEvent>",
          "variableSetterType" : "java.util.Collection<PullRequestEvent>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the pull request events.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPullRequestEvents(java.util.Collection)} or {@link #withPullRequestEvents(java.util.Collection)} if you want to override the existing values.</p>\n@param pullRequestEvents Information about the pull request events.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<PullRequestEvent>",
          "variableName" : "pullRequestEvents",
          "variableType" : "java.util.List<PullRequestEvent>",
          "documentation" : "<p>Information about the pull request events.</p>",
          "simpleType" : "List<PullRequestEvent>",
          "variableSetterType" : "java.util.Collection<PullRequestEvent>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@return An enumeration token that can be used in a request to return the next batch of the results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@return An enumeration token that can be used in a request to return the next batch of the results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestEvents" : {
          "c2jName" : "pullRequestEvents",
          "c2jShape" : "PullRequestEventList",
          "deprecated" : false,
          "documentation" : "<p>Information about the pull request events.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the pull request events.</p>\n@param pullRequestEvents Information about the pull request events.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestEvents",
          "getterDocumentation" : "/**<p>Information about the pull request events.</p>\n@return Information about the pull request events.*/",
          "getterMethodName" : "getPullRequestEvents",
          "getterModel" : {
            "returnType" : "java.util.List<PullRequestEvent>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestEvents",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestEvents",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "PullRequestEvent",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "PullRequestEvent",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "PullRequestEvent",
                "variableName" : "member",
                "variableType" : "PullRequestEvent",
                "documentation" : "",
                "simpleType" : "PullRequestEvent",
                "variableSetterType" : "PullRequestEvent"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "PullRequestEvent",
                "variableName" : "member",
                "variableType" : "PullRequestEvent",
                "documentation" : "",
                "simpleType" : "PullRequestEvent",
                "variableSetterType" : "PullRequestEvent"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "PullRequestEvent",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "PullRequestEvent",
            "templateImplType" : "java.util.ArrayList<PullRequestEvent>",
            "templateType" : "java.util.List<PullRequestEvent>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "PullRequestEvents",
          "setterDocumentation" : "/**<p>Information about the pull request events.</p>\n@param pullRequestEvents Information about the pull request events.*/",
          "setterMethodName" : "setPullRequestEvents",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<PullRequestEvent>",
            "variableName" : "pullRequestEvents",
            "variableType" : "java.util.List<PullRequestEvent>",
            "documentation" : "",
            "simpleType" : "List<PullRequestEvent>",
            "variableSetterType" : "java.util.Collection<PullRequestEvent>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the pull request events.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPullRequestEvents(java.util.Collection)} or {@link #withPullRequestEvents(java.util.Collection)} if you want to override the existing values.</p>\n@param pullRequestEvents Information about the pull request events.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<PullRequestEvent>",
            "variableName" : "pullRequestEvents",
            "variableType" : "java.util.List<PullRequestEvent>",
            "documentation" : "<p>Information about the pull request events.</p>",
            "simpleType" : "List<PullRequestEvent>",
            "variableSetterType" : "java.util.Collection<PullRequestEvent>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "pullRequestEvents" ],
      "shapeName" : "DescribePullRequestEventsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DescribePullRequestEventsResult",
        "variableName" : "describePullRequestEventsResult",
        "variableType" : "DescribePullRequestEventsResult",
        "documentation" : null,
        "simpleType" : "DescribePullRequestEventsResult",
        "variableSetterType" : "DescribePullRequestEventsResult"
      },
      "wrapper" : false
    },
    "Difference" : {
      "c2jName" : "Difference",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about a set of differences for a commit specifier.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "beforeBlob",
        "c2jShape" : "BlobMetadata",
        "deprecated" : false,
        "documentation" : "<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param beforeBlob Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeBlob",
        "getterDocumentation" : "/**<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@return Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.*/",
        "getterMethodName" : "getBeforeBlob",
        "getterModel" : {
          "returnType" : "BlobMetadata",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeBlob",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeBlob",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "BeforeBlob",
        "setterDocumentation" : "/**<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param beforeBlob Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.*/",
        "setterMethodName" : "setBeforeBlob",
        "setterModel" : {
          "variableDeclarationType" : "BlobMetadata",
          "variableName" : "beforeBlob",
          "variableType" : "BlobMetadata",
          "documentation" : "",
          "simpleType" : "BlobMetadata",
          "variableSetterType" : "BlobMetadata"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param beforeBlob Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BlobMetadata",
          "variableName" : "beforeBlob",
          "variableType" : "BlobMetadata",
          "documentation" : "<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
          "simpleType" : "BlobMetadata",
          "variableSetterType" : "BlobMetadata"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterBlob",
        "c2jShape" : "BlobMetadata",
        "deprecated" : false,
        "documentation" : "<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param afterBlob Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterBlob",
        "getterDocumentation" : "/**<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@return Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.*/",
        "getterMethodName" : "getAfterBlob",
        "getterModel" : {
          "returnType" : "BlobMetadata",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterBlob",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterBlob",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "AfterBlob",
        "setterDocumentation" : "/**<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param afterBlob Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.*/",
        "setterMethodName" : "setAfterBlob",
        "setterModel" : {
          "variableDeclarationType" : "BlobMetadata",
          "variableName" : "afterBlob",
          "variableType" : "BlobMetadata",
          "documentation" : "",
          "simpleType" : "BlobMetadata",
          "variableSetterType" : "BlobMetadata"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param afterBlob Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BlobMetadata",
          "variableName" : "afterBlob",
          "variableType" : "BlobMetadata",
          "documentation" : "<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
          "simpleType" : "BlobMetadata",
          "variableSetterType" : "BlobMetadata"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "changeType",
        "c2jShape" : "ChangeTypeEnum",
        "deprecated" : false,
        "documentation" : "<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>",
        "enumType" : "ChangeTypeEnum",
        "fluentSetterDocumentation" : "/**<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>\n@param changeType Whether the change type of the difference is an addition (A), deletion (D), or modification (M).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ChangeTypeEnum*/",
        "fluentSetterMethodName" : "withChangeType",
        "getterDocumentation" : "/**<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>\n@return Whether the change type of the difference is an addition (A), deletion (D), or modification (M).\n@see ChangeTypeEnum*/",
        "getterMethodName" : "getChangeType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "changeType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "changeType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ChangeType",
        "setterDocumentation" : "/**<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>\n@param changeType Whether the change type of the difference is an addition (A), deletion (D), or modification (M).\n@see ChangeTypeEnum*/",
        "setterMethodName" : "setChangeType",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "changeType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>\n@param changeType Whether the change type of the difference is an addition (A), deletion (D), or modification (M).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ChangeTypeEnum*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "changeType",
          "variableType" : "String",
          "documentation" : "<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AfterBlob" : {
          "c2jName" : "afterBlob",
          "c2jShape" : "BlobMetadata",
          "deprecated" : false,
          "documentation" : "<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param afterBlob Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterBlob",
          "getterDocumentation" : "/**<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@return Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.*/",
          "getterMethodName" : "getAfterBlob",
          "getterModel" : {
            "returnType" : "BlobMetadata",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterBlob",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterBlob",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "AfterBlob",
          "setterDocumentation" : "/**<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param afterBlob Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.*/",
          "setterMethodName" : "setAfterBlob",
          "setterModel" : {
            "variableDeclarationType" : "BlobMetadata",
            "variableName" : "afterBlob",
            "variableType" : "BlobMetadata",
            "documentation" : "",
            "simpleType" : "BlobMetadata",
            "variableSetterType" : "BlobMetadata"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param afterBlob Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BlobMetadata",
            "variableName" : "afterBlob",
            "variableType" : "BlobMetadata",
            "documentation" : "<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
            "simpleType" : "BlobMetadata",
            "variableSetterType" : "BlobMetadata"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeBlob" : {
          "c2jName" : "beforeBlob",
          "c2jShape" : "BlobMetadata",
          "deprecated" : false,
          "documentation" : "<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param beforeBlob Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeBlob",
          "getterDocumentation" : "/**<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@return Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.*/",
          "getterMethodName" : "getBeforeBlob",
          "getterModel" : {
            "returnType" : "BlobMetadata",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeBlob",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeBlob",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "BeforeBlob",
          "setterDocumentation" : "/**<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param beforeBlob Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.*/",
          "setterMethodName" : "setBeforeBlob",
          "setterModel" : {
            "variableDeclarationType" : "BlobMetadata",
            "variableName" : "beforeBlob",
            "variableType" : "BlobMetadata",
            "documentation" : "",
            "simpleType" : "BlobMetadata",
            "variableSetterType" : "BlobMetadata"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param beforeBlob Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BlobMetadata",
            "variableName" : "beforeBlob",
            "variableType" : "BlobMetadata",
            "documentation" : "<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
            "simpleType" : "BlobMetadata",
            "variableSetterType" : "BlobMetadata"
          },
          "xmlNameSpaceUri" : null
        },
        "ChangeType" : {
          "c2jName" : "changeType",
          "c2jShape" : "ChangeTypeEnum",
          "deprecated" : false,
          "documentation" : "<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>",
          "enumType" : "ChangeTypeEnum",
          "fluentSetterDocumentation" : "/**<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>\n@param changeType Whether the change type of the difference is an addition (A), deletion (D), or modification (M).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ChangeTypeEnum*/",
          "fluentSetterMethodName" : "withChangeType",
          "getterDocumentation" : "/**<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>\n@return Whether the change type of the difference is an addition (A), deletion (D), or modification (M).\n@see ChangeTypeEnum*/",
          "getterMethodName" : "getChangeType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "changeType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "changeType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ChangeType",
          "setterDocumentation" : "/**<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>\n@param changeType Whether the change type of the difference is an addition (A), deletion (D), or modification (M).\n@see ChangeTypeEnum*/",
          "setterMethodName" : "setChangeType",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "changeType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>\n@param changeType Whether the change type of the difference is an addition (A), deletion (D), or modification (M).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ChangeTypeEnum*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "changeType",
            "variableType" : "String",
            "documentation" : "<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Difference",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Difference",
        "variableName" : "difference",
        "variableType" : "Difference",
        "documentation" : null,
        "simpleType" : "Difference",
        "variableSetterType" : "Difference"
      },
      "wrapper" : false
    },
    "DirectoryNameConflictsWithFileNameException" : {
      "c2jName" : "DirectoryNameConflictsWithFileNameException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A file cannot be added to the repository because the specified path name has the same name as a file that already exists in this repository. Either provide a different name for the file, or specify a different path for the file.</p>",
      "enums" : null,
      "errorCode" : "DirectoryNameConflictsWithFileNameException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DirectoryNameConflictsWithFileNameException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DirectoryNameConflictsWithFileNameException",
        "variableName" : "directoryNameConflictsWithFileNameException",
        "variableType" : "DirectoryNameConflictsWithFileNameException",
        "documentation" : null,
        "simpleType" : "DirectoryNameConflictsWithFileNameException",
        "variableSetterType" : "DirectoryNameConflictsWithFileNameException"
      },
      "wrapper" : false
    },
    "EncryptionIntegrityChecksFailedException" : {
      "c2jName" : "EncryptionIntegrityChecksFailedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An encryption integrity check failed.</p>",
      "enums" : null,
      "errorCode" : "EncryptionIntegrityChecksFailedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "EncryptionIntegrityChecksFailedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "EncryptionIntegrityChecksFailedException",
        "variableName" : "encryptionIntegrityChecksFailedException",
        "variableType" : "EncryptionIntegrityChecksFailedException",
        "documentation" : null,
        "simpleType" : "EncryptionIntegrityChecksFailedException",
        "variableSetterType" : "EncryptionIntegrityChecksFailedException"
      },
      "wrapper" : false
    },
    "EncryptionKeyAccessDeniedException" : {
      "c2jName" : "EncryptionKeyAccessDeniedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An encryption key could not be accessed.</p>",
      "enums" : null,
      "errorCode" : "EncryptionKeyAccessDeniedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "EncryptionKeyAccessDeniedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "EncryptionKeyAccessDeniedException",
        "variableName" : "encryptionKeyAccessDeniedException",
        "variableType" : "EncryptionKeyAccessDeniedException",
        "documentation" : null,
        "simpleType" : "EncryptionKeyAccessDeniedException",
        "variableSetterType" : "EncryptionKeyAccessDeniedException"
      },
      "wrapper" : false
    },
    "EncryptionKeyDisabledException" : {
      "c2jName" : "EncryptionKeyDisabledException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The encryption key is disabled.</p>",
      "enums" : null,
      "errorCode" : "EncryptionKeyDisabledException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "EncryptionKeyDisabledException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "EncryptionKeyDisabledException",
        "variableName" : "encryptionKeyDisabledException",
        "variableType" : "EncryptionKeyDisabledException",
        "documentation" : null,
        "simpleType" : "EncryptionKeyDisabledException",
        "variableSetterType" : "EncryptionKeyDisabledException"
      },
      "wrapper" : false
    },
    "EncryptionKeyNotFoundException" : {
      "c2jName" : "EncryptionKeyNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>No encryption key was found.</p>",
      "enums" : null,
      "errorCode" : "EncryptionKeyNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "EncryptionKeyNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "EncryptionKeyNotFoundException",
        "variableName" : "encryptionKeyNotFoundException",
        "variableType" : "EncryptionKeyNotFoundException",
        "documentation" : null,
        "simpleType" : "EncryptionKeyNotFoundException",
        "variableSetterType" : "EncryptionKeyNotFoundException"
      },
      "wrapper" : false
    },
    "EncryptionKeyUnavailableException" : {
      "c2jName" : "EncryptionKeyUnavailableException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The encryption key is not available.</p>",
      "enums" : null,
      "errorCode" : "EncryptionKeyUnavailableException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "EncryptionKeyUnavailableException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "EncryptionKeyUnavailableException",
        "variableName" : "encryptionKeyUnavailableException",
        "variableType" : "EncryptionKeyUnavailableException",
        "documentation" : null,
        "simpleType" : "EncryptionKeyUnavailableException",
        "variableSetterType" : "EncryptionKeyUnavailableException"
      },
      "wrapper" : false
    },
    "FileContentRequiredException" : {
      "c2jName" : "FileContentRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The file cannot be added because it is empty. Empty files cannot be added to the repository with this API.</p>",
      "enums" : null,
      "errorCode" : "FileContentRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "FileContentRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "FileContentRequiredException",
        "variableName" : "fileContentRequiredException",
        "variableType" : "FileContentRequiredException",
        "documentation" : null,
        "simpleType" : "FileContentRequiredException",
        "variableSetterType" : "FileContentRequiredException"
      },
      "wrapper" : false
    },
    "FileContentSizeLimitExceededException" : {
      "c2jName" : "FileContentSizeLimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The file cannot be added because it is too large. The maximum file size that can be added using PutFile is 6 MB. For files larger than 6 MB but smaller than 2 GB, add them using a Git client.</p>",
      "enums" : null,
      "errorCode" : "FileContentSizeLimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "FileContentSizeLimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "FileContentSizeLimitExceededException",
        "variableName" : "fileContentSizeLimitExceededException",
        "variableType" : "FileContentSizeLimitExceededException",
        "documentation" : null,
        "simpleType" : "FileContentSizeLimitExceededException",
        "variableSetterType" : "FileContentSizeLimitExceededException"
      },
      "wrapper" : false
    },
    "FileModeTypeEnum" : {
      "c2jName" : "FileModeTypeEnum",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "EXECUTABLE",
        "value" : "EXECUTABLE"
      }, {
        "name" : "NORMAL",
        "value" : "NORMAL"
      }, {
        "name" : "SYMLINK",
        "value" : "SYMLINK"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "FileModeTypeEnum",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "FileModeTypeEnum",
        "variableName" : "fileModeTypeEnum",
        "variableType" : "FileModeTypeEnum",
        "documentation" : null,
        "simpleType" : "FileModeTypeEnum",
        "variableSetterType" : "FileModeTypeEnum"
      },
      "wrapper" : false
    },
    "FileNameConflictsWithDirectoryNameException" : {
      "c2jName" : "FileNameConflictsWithDirectoryNameException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A file cannot be added to the repository because the specified file name has the same name as a directory in this repository. Either provide another name for the file, or add the file in a directory that does not match the file name.</p>",
      "enums" : null,
      "errorCode" : "FileNameConflictsWithDirectoryNameException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "FileNameConflictsWithDirectoryNameException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "FileNameConflictsWithDirectoryNameException",
        "variableName" : "fileNameConflictsWithDirectoryNameException",
        "variableType" : "FileNameConflictsWithDirectoryNameException",
        "documentation" : null,
        "simpleType" : "FileNameConflictsWithDirectoryNameException",
        "variableSetterType" : "FileNameConflictsWithDirectoryNameException"
      },
      "wrapper" : false
    },
    "FileTooLargeException" : {
      "c2jName" : "FileTooLargeException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified file exceeds the file size limit for AWS CodeCommit. For more information about limits in AWS CodeCommit, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">AWS CodeCommit User Guide</a>.</p>",
      "enums" : null,
      "errorCode" : "FileTooLargeException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "FileTooLargeException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "FileTooLargeException",
        "variableName" : "fileTooLargeException",
        "variableType" : "FileTooLargeException",
        "documentation" : null,
        "simpleType" : "FileTooLargeException",
        "variableSetterType" : "FileTooLargeException"
      },
      "wrapper" : false
    },
    "GetBlobRequest" : {
      "c2jName" : "GetBlobInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a get blob operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetBlob",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetBlob",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository that contains the blob.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the blob.</p>\n@param repositoryName The name of the repository that contains the blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository that contains the blob.</p>\n@return The name of the repository that contains the blob.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository that contains the blob.</p>\n@param repositoryName The name of the repository that contains the blob.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository that contains the blob.</p>\n@param repositoryName The name of the repository that contains the blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository that contains the blob.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "blobId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the blob, which is its SHA-1 pointer.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBlobId",
        "getterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@return The ID of the blob, which is its SHA-1 pointer.*/",
        "getterMethodName" : "getBlobId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "blobId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "blobId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BlobId",
        "setterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.*/",
        "setterMethodName" : "setBlobId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "blobId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "blobId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the blob, which is its SHA-1 pointer.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BlobId" : {
          "c2jName" : "blobId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the blob, which is its SHA-1 pointer.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBlobId",
          "getterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@return The ID of the blob, which is its SHA-1 pointer.*/",
          "getterMethodName" : "getBlobId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "blobId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "blobId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BlobId",
          "setterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.*/",
          "setterMethodName" : "setBlobId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "blobId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "blobId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the blob, which is its SHA-1 pointer.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that contains the blob.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the blob.</p>\n@param repositoryName The name of the repository that contains the blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository that contains the blob.</p>\n@return The name of the repository that contains the blob.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository that contains the blob.</p>\n@param repositoryName The name of the repository that contains the blob.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository that contains the blob.</p>\n@param repositoryName The name of the repository that contains the blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository that contains the blob.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "blobId" ],
      "shapeName" : "GetBlobRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetBlobRequest",
        "variableName" : "getBlobRequest",
        "variableType" : "GetBlobRequest",
        "documentation" : null,
        "simpleType" : "GetBlobRequest",
        "variableSetterType" : "GetBlobRequest"
      },
      "wrapper" : false
    },
    "GetBlobResult" : {
      "c2jName" : "GetBlobOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a get blob operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "content",
        "c2jShape" : "blob",
        "deprecated" : false,
        "documentation" : "<p>The content of the blob, usually a file.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The content of the blob, usually a file.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param content The content of the blob, usually a file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContent",
        "getterDocumentation" : "/**<p>The content of the blob, usually a file.</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The content of the blob, usually a file.*/",
        "getterMethodName" : "getContent",
        "getterModel" : {
          "returnType" : "java.nio.ByteBuffer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "content",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "content",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.nio.ByteBuffer",
        "marshallingType" : "BYTE_BUFFER",
        "name" : "Content",
        "setterDocumentation" : "/**<p>The content of the blob, usually a file.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param content The content of the blob, usually a file.*/",
        "setterMethodName" : "setContent",
        "setterModel" : {
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "variableName" : "content",
          "variableType" : "java.nio.ByteBuffer",
          "documentation" : "",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The content of the blob, usually a file.</p>\n@param content The content of the blob, usually a file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "variableName" : "content",
          "variableType" : "java.nio.ByteBuffer",
          "documentation" : "<p>The content of the blob, usually a file.</p>",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Content" : {
          "c2jName" : "content",
          "c2jShape" : "blob",
          "deprecated" : false,
          "documentation" : "<p>The content of the blob, usually a file.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The content of the blob, usually a file.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param content The content of the blob, usually a file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContent",
          "getterDocumentation" : "/**<p>The content of the blob, usually a file.</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The content of the blob, usually a file.*/",
          "getterMethodName" : "getContent",
          "getterModel" : {
            "returnType" : "java.nio.ByteBuffer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "content",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "content",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.nio.ByteBuffer",
          "marshallingType" : "BYTE_BUFFER",
          "name" : "Content",
          "setterDocumentation" : "/**<p>The content of the blob, usually a file.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param content The content of the blob, usually a file.*/",
          "setterMethodName" : "setContent",
          "setterModel" : {
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "variableName" : "content",
            "variableType" : "java.nio.ByteBuffer",
            "documentation" : "",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The content of the blob, usually a file.</p>\n@param content The content of the blob, usually a file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "variableName" : "content",
            "variableType" : "java.nio.ByteBuffer",
            "documentation" : "<p>The content of the blob, usually a file.</p>",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "content" ],
      "shapeName" : "GetBlobResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetBlobResult",
        "variableName" : "getBlobResult",
        "variableType" : "GetBlobResult",
        "documentation" : null,
        "simpleType" : "GetBlobResult",
        "variableSetterType" : "GetBlobResult"
      },
      "wrapper" : false
    },
    "GetBranchRequest" : {
      "c2jName" : "GetBranchInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a get branch operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetBranch",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetBranch",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository that contains the branch for which you want to retrieve information.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the branch for which you want to retrieve information.</p>\n@param repositoryName The name of the repository that contains the branch for which you want to retrieve information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository that contains the branch for which you want to retrieve information.</p>\n@return The name of the repository that contains the branch for which you want to retrieve information.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository that contains the branch for which you want to retrieve information.</p>\n@param repositoryName The name of the repository that contains the branch for which you want to retrieve information.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository that contains the branch for which you want to retrieve information.</p>\n@param repositoryName The name of the repository that contains the branch for which you want to retrieve information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository that contains the branch for which you want to retrieve information.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "branchName",
        "c2jShape" : "BranchName",
        "deprecated" : false,
        "documentation" : "<p>The name of the branch for which you want to retrieve information.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the branch for which you want to retrieve information.</p>\n@param branchName The name of the branch for which you want to retrieve information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBranchName",
        "getterDocumentation" : "/**<p>The name of the branch for which you want to retrieve information.</p>\n@return The name of the branch for which you want to retrieve information.*/",
        "getterMethodName" : "getBranchName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "branchName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "branchName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BranchName",
        "setterDocumentation" : "/**<p>The name of the branch for which you want to retrieve information.</p>\n@param branchName The name of the branch for which you want to retrieve information.*/",
        "setterMethodName" : "setBranchName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "branchName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the branch for which you want to retrieve information.</p>\n@param branchName The name of the branch for which you want to retrieve information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "branchName",
          "variableType" : "String",
          "documentation" : "<p>The name of the branch for which you want to retrieve information.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BranchName" : {
          "c2jName" : "branchName",
          "c2jShape" : "BranchName",
          "deprecated" : false,
          "documentation" : "<p>The name of the branch for which you want to retrieve information.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the branch for which you want to retrieve information.</p>\n@param branchName The name of the branch for which you want to retrieve information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBranchName",
          "getterDocumentation" : "/**<p>The name of the branch for which you want to retrieve information.</p>\n@return The name of the branch for which you want to retrieve information.*/",
          "getterMethodName" : "getBranchName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "branchName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "branchName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BranchName",
          "setterDocumentation" : "/**<p>The name of the branch for which you want to retrieve information.</p>\n@param branchName The name of the branch for which you want to retrieve information.*/",
          "setterMethodName" : "setBranchName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "branchName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the branch for which you want to retrieve information.</p>\n@param branchName The name of the branch for which you want to retrieve information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "branchName",
            "variableType" : "String",
            "documentation" : "<p>The name of the branch for which you want to retrieve information.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that contains the branch for which you want to retrieve information.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the branch for which you want to retrieve information.</p>\n@param repositoryName The name of the repository that contains the branch for which you want to retrieve information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository that contains the branch for which you want to retrieve information.</p>\n@return The name of the repository that contains the branch for which you want to retrieve information.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository that contains the branch for which you want to retrieve information.</p>\n@param repositoryName The name of the repository that contains the branch for which you want to retrieve information.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository that contains the branch for which you want to retrieve information.</p>\n@param repositoryName The name of the repository that contains the branch for which you want to retrieve information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository that contains the branch for which you want to retrieve information.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetBranchRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetBranchRequest",
        "variableName" : "getBranchRequest",
        "variableType" : "GetBranchRequest",
        "documentation" : null,
        "simpleType" : "GetBranchRequest",
        "variableSetterType" : "GetBranchRequest"
      },
      "wrapper" : false
    },
    "GetBranchResult" : {
      "c2jName" : "GetBranchOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a get branch operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "branch",
        "c2jShape" : "BranchInfo",
        "deprecated" : false,
        "documentation" : "<p>The name of the branch.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the branch.</p>\n@param branch The name of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBranch",
        "getterDocumentation" : "/**<p>The name of the branch.</p>\n@return The name of the branch.*/",
        "getterMethodName" : "getBranch",
        "getterModel" : {
          "returnType" : "BranchInfo",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "branch",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "branch",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Branch",
        "setterDocumentation" : "/**<p>The name of the branch.</p>\n@param branch The name of the branch.*/",
        "setterMethodName" : "setBranch",
        "setterModel" : {
          "variableDeclarationType" : "BranchInfo",
          "variableName" : "branch",
          "variableType" : "BranchInfo",
          "documentation" : "",
          "simpleType" : "BranchInfo",
          "variableSetterType" : "BranchInfo"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the branch.</p>\n@param branch The name of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BranchInfo",
          "variableName" : "branch",
          "variableType" : "BranchInfo",
          "documentation" : "<p>The name of the branch.</p>",
          "simpleType" : "BranchInfo",
          "variableSetterType" : "BranchInfo"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Branch" : {
          "c2jName" : "branch",
          "c2jShape" : "BranchInfo",
          "deprecated" : false,
          "documentation" : "<p>The name of the branch.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the branch.</p>\n@param branch The name of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBranch",
          "getterDocumentation" : "/**<p>The name of the branch.</p>\n@return The name of the branch.*/",
          "getterMethodName" : "getBranch",
          "getterModel" : {
            "returnType" : "BranchInfo",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "branch",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "branch",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Branch",
          "setterDocumentation" : "/**<p>The name of the branch.</p>\n@param branch The name of the branch.*/",
          "setterMethodName" : "setBranch",
          "setterModel" : {
            "variableDeclarationType" : "BranchInfo",
            "variableName" : "branch",
            "variableType" : "BranchInfo",
            "documentation" : "",
            "simpleType" : "BranchInfo",
            "variableSetterType" : "BranchInfo"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the branch.</p>\n@param branch The name of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BranchInfo",
            "variableName" : "branch",
            "variableType" : "BranchInfo",
            "documentation" : "<p>The name of the branch.</p>",
            "simpleType" : "BranchInfo",
            "variableSetterType" : "BranchInfo"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetBranchResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetBranchResult",
        "variableName" : "getBranchResult",
        "variableType" : "GetBranchResult",
        "documentation" : null,
        "simpleType" : "GetBranchResult",
        "variableSetterType" : "GetBranchResult"
      },
      "wrapper" : false
    },
    "GetCommentRequest" : {
      "c2jName" : "GetCommentInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetComment",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetComment",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "commentId",
        "c2jShape" : "CommentId",
        "deprecated" : false,
        "documentation" : "<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommentId",
        "getterDocumentation" : "/**<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@return The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.*/",
        "getterMethodName" : "getCommentId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commentId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commentId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CommentId",
        "setterDocumentation" : "/**<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.*/",
        "setterMethodName" : "setCommentId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "commentId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "commentId",
          "variableType" : "String",
          "documentation" : "<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CommentId" : {
          "c2jName" : "commentId",
          "c2jShape" : "CommentId",
          "deprecated" : false,
          "documentation" : "<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommentId",
          "getterDocumentation" : "/**<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@return The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.*/",
          "getterMethodName" : "getCommentId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commentId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commentId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CommentId",
          "setterDocumentation" : "/**<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.*/",
          "setterMethodName" : "setCommentId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "commentId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "commentId",
            "variableType" : "String",
            "documentation" : "<p>The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "commentId" ],
      "shapeName" : "GetCommentRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetCommentRequest",
        "variableName" : "getCommentRequest",
        "variableType" : "GetCommentRequest",
        "documentation" : null,
        "simpleType" : "GetCommentRequest",
        "variableSetterType" : "GetCommentRequest"
      },
      "wrapper" : false
    },
    "GetCommentResult" : {
      "c2jName" : "GetCommentOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "comment",
        "c2jShape" : "Comment",
        "deprecated" : false,
        "documentation" : "<p>The contents of the comment.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The contents of the comment.</p>\n@param comment The contents of the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withComment",
        "getterDocumentation" : "/**<p>The contents of the comment.</p>\n@return The contents of the comment.*/",
        "getterMethodName" : "getComment",
        "getterModel" : {
          "returnType" : "Comment",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "comment",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "comment",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Comment",
        "setterDocumentation" : "/**<p>The contents of the comment.</p>\n@param comment The contents of the comment.*/",
        "setterMethodName" : "setComment",
        "setterModel" : {
          "variableDeclarationType" : "Comment",
          "variableName" : "comment",
          "variableType" : "Comment",
          "documentation" : "",
          "simpleType" : "Comment",
          "variableSetterType" : "Comment"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The contents of the comment.</p>\n@param comment The contents of the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Comment",
          "variableName" : "comment",
          "variableType" : "Comment",
          "documentation" : "<p>The contents of the comment.</p>",
          "simpleType" : "Comment",
          "variableSetterType" : "Comment"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Comment" : {
          "c2jName" : "comment",
          "c2jShape" : "Comment",
          "deprecated" : false,
          "documentation" : "<p>The contents of the comment.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The contents of the comment.</p>\n@param comment The contents of the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withComment",
          "getterDocumentation" : "/**<p>The contents of the comment.</p>\n@return The contents of the comment.*/",
          "getterMethodName" : "getComment",
          "getterModel" : {
            "returnType" : "Comment",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "comment",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "comment",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Comment",
          "setterDocumentation" : "/**<p>The contents of the comment.</p>\n@param comment The contents of the comment.*/",
          "setterMethodName" : "setComment",
          "setterModel" : {
            "variableDeclarationType" : "Comment",
            "variableName" : "comment",
            "variableType" : "Comment",
            "documentation" : "",
            "simpleType" : "Comment",
            "variableSetterType" : "Comment"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The contents of the comment.</p>\n@param comment The contents of the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Comment",
            "variableName" : "comment",
            "variableType" : "Comment",
            "documentation" : "<p>The contents of the comment.</p>",
            "simpleType" : "Comment",
            "variableSetterType" : "Comment"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetCommentResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetCommentResult",
        "variableName" : "getCommentResult",
        "variableType" : "GetCommentResult",
        "documentation" : null,
        "simpleType" : "GetCommentResult",
        "variableSetterType" : "GetCommentResult"
      },
      "wrapper" : false
    },
    "GetCommentsForComparedCommitRequest" : {
      "c2jName" : "GetCommentsForComparedCommitInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetCommentsForComparedCommit",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetCommentsForComparedCommit",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository where you want to compare commits.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository where you want to compare commits.</p>\n@param repositoryName The name of the repository where you want to compare commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository where you want to compare commits.</p>\n@return The name of the repository where you want to compare commits.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository where you want to compare commits.</p>\n@param repositoryName The name of the repository where you want to compare commits.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository where you want to compare commits.</p>\n@param repositoryName The name of the repository where you want to compare commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository where you want to compare commits.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforeCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId To establish the directionality of the comparison, the full commit ID of the 'before' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeCommitId",
        "getterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>\n@return To establish the directionality of the comparison, the full commit ID of the 'before' commit.*/",
        "getterMethodName" : "getBeforeCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforeCommitId",
        "setterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId To establish the directionality of the comparison, the full commit ID of the 'before' commit.*/",
        "setterMethodName" : "setBeforeCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId To establish the directionality of the comparison, the full commit ID of the 'before' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>\n@param afterCommitId To establish the directionality of the comparison, the full commit ID of the 'after' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterCommitId",
        "getterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>\n@return To establish the directionality of the comparison, the full commit ID of the 'after' commit.*/",
        "getterMethodName" : "getAfterCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterCommitId",
        "setterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>\n@param afterCommitId To establish the directionality of the comparison, the full commit ID of the 'after' commit.*/",
        "setterMethodName" : "setAfterCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>\n@param afterCommitId To establish the directionality of the comparison, the full commit ID of the 'after' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results. </p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results. </p>\n@return An enumeration token that when provided in a request, returns the next batch of the results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results. </p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results. </p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.</p>\n@return A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "maxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "maxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "setterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AfterCommitId" : {
          "c2jName" : "afterCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>\n@param afterCommitId To establish the directionality of the comparison, the full commit ID of the 'after' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterCommitId",
          "getterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>\n@return To establish the directionality of the comparison, the full commit ID of the 'after' commit.*/",
          "getterMethodName" : "getAfterCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterCommitId",
          "setterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>\n@param afterCommitId To establish the directionality of the comparison, the full commit ID of the 'after' commit.*/",
          "setterMethodName" : "setAfterCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>\n@param afterCommitId To establish the directionality of the comparison, the full commit ID of the 'after' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeCommitId" : {
          "c2jName" : "beforeCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId To establish the directionality of the comparison, the full commit ID of the 'before' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeCommitId",
          "getterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>\n@return To establish the directionality of the comparison, the full commit ID of the 'before' commit.*/",
          "getterMethodName" : "getBeforeCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforeCommitId",
          "setterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId To establish the directionality of the comparison, the full commit ID of the 'before' commit.*/",
          "setterMethodName" : "setBeforeCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId To establish the directionality of the comparison, the full commit ID of the 'before' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.</p>\n@return A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "maxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "maxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "setterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>A non-negative integer used to limit the number of returned results. The default is 100 comments, and is configurable up to 500.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results. </p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results. </p>\n@return An enumeration token that when provided in a request, returns the next batch of the results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results. </p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results. </p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository where you want to compare commits.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository where you want to compare commits.</p>\n@param repositoryName The name of the repository where you want to compare commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository where you want to compare commits.</p>\n@return The name of the repository where you want to compare commits.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository where you want to compare commits.</p>\n@param repositoryName The name of the repository where you want to compare commits.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository where you want to compare commits.</p>\n@param repositoryName The name of the repository where you want to compare commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository where you want to compare commits.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "afterCommitId" ],
      "shapeName" : "GetCommentsForComparedCommitRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetCommentsForComparedCommitRequest",
        "variableName" : "getCommentsForComparedCommitRequest",
        "variableType" : "GetCommentsForComparedCommitRequest",
        "documentation" : null,
        "simpleType" : "GetCommentsForComparedCommitRequest",
        "variableSetterType" : "GetCommentsForComparedCommitRequest"
      },
      "wrapper" : false
    },
    "GetCommentsForComparedCommitResult" : {
      "c2jName" : "GetCommentsForComparedCommitOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "commentsForComparedCommitData",
        "c2jShape" : "CommentsForComparedCommitData",
        "deprecated" : false,
        "documentation" : "<p>A list of comment objects on the compared commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of comment objects on the compared commit.</p>\n@param commentsForComparedCommitData A list of comment objects on the compared commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommentsForComparedCommitData",
        "getterDocumentation" : "/**<p>A list of comment objects on the compared commit.</p>\n@return A list of comment objects on the compared commit.*/",
        "getterMethodName" : "getCommentsForComparedCommitData",
        "getterModel" : {
          "returnType" : "java.util.List<CommentsForComparedCommit>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commentsForComparedCommitData",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commentsForComparedCommitData",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "CommentsForComparedCommit",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "CommentsForComparedCommit",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "CommentsForComparedCommit",
              "variableName" : "member",
              "variableType" : "CommentsForComparedCommit",
              "documentation" : "",
              "simpleType" : "CommentsForComparedCommit",
              "variableSetterType" : "CommentsForComparedCommit"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "CommentsForComparedCommit",
              "variableName" : "member",
              "variableType" : "CommentsForComparedCommit",
              "documentation" : "",
              "simpleType" : "CommentsForComparedCommit",
              "variableSetterType" : "CommentsForComparedCommit"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "CommentsForComparedCommit",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "CommentsForComparedCommit",
          "templateImplType" : "java.util.ArrayList<CommentsForComparedCommit>",
          "templateType" : "java.util.List<CommentsForComparedCommit>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "CommentsForComparedCommitData",
        "setterDocumentation" : "/**<p>A list of comment objects on the compared commit.</p>\n@param commentsForComparedCommitData A list of comment objects on the compared commit.*/",
        "setterMethodName" : "setCommentsForComparedCommitData",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<CommentsForComparedCommit>",
          "variableName" : "commentsForComparedCommitData",
          "variableType" : "java.util.List<CommentsForComparedCommit>",
          "documentation" : "",
          "simpleType" : "List<CommentsForComparedCommit>",
          "variableSetterType" : "java.util.Collection<CommentsForComparedCommit>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of comment objects on the compared commit.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCommentsForComparedCommitData(java.util.Collection)} or {@link #withCommentsForComparedCommitData(java.util.Collection)} if you want to override the existing values.</p>\n@param commentsForComparedCommitData A list of comment objects on the compared commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<CommentsForComparedCommit>",
          "variableName" : "commentsForComparedCommitData",
          "variableType" : "java.util.List<CommentsForComparedCommit>",
          "documentation" : "<p>A list of comment objects on the compared commit.</p>",
          "simpleType" : "List<CommentsForComparedCommit>",
          "variableSetterType" : "java.util.Collection<CommentsForComparedCommit>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@return An enumeration token that can be used in a request to return the next batch of the results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CommentsForComparedCommitData" : {
          "c2jName" : "commentsForComparedCommitData",
          "c2jShape" : "CommentsForComparedCommitData",
          "deprecated" : false,
          "documentation" : "<p>A list of comment objects on the compared commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of comment objects on the compared commit.</p>\n@param commentsForComparedCommitData A list of comment objects on the compared commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommentsForComparedCommitData",
          "getterDocumentation" : "/**<p>A list of comment objects on the compared commit.</p>\n@return A list of comment objects on the compared commit.*/",
          "getterMethodName" : "getCommentsForComparedCommitData",
          "getterModel" : {
            "returnType" : "java.util.List<CommentsForComparedCommit>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commentsForComparedCommitData",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commentsForComparedCommitData",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "CommentsForComparedCommit",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "CommentsForComparedCommit",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "CommentsForComparedCommit",
                "variableName" : "member",
                "variableType" : "CommentsForComparedCommit",
                "documentation" : "",
                "simpleType" : "CommentsForComparedCommit",
                "variableSetterType" : "CommentsForComparedCommit"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "CommentsForComparedCommit",
                "variableName" : "member",
                "variableType" : "CommentsForComparedCommit",
                "documentation" : "",
                "simpleType" : "CommentsForComparedCommit",
                "variableSetterType" : "CommentsForComparedCommit"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "CommentsForComparedCommit",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "CommentsForComparedCommit",
            "templateImplType" : "java.util.ArrayList<CommentsForComparedCommit>",
            "templateType" : "java.util.List<CommentsForComparedCommit>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "CommentsForComparedCommitData",
          "setterDocumentation" : "/**<p>A list of comment objects on the compared commit.</p>\n@param commentsForComparedCommitData A list of comment objects on the compared commit.*/",
          "setterMethodName" : "setCommentsForComparedCommitData",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<CommentsForComparedCommit>",
            "variableName" : "commentsForComparedCommitData",
            "variableType" : "java.util.List<CommentsForComparedCommit>",
            "documentation" : "",
            "simpleType" : "List<CommentsForComparedCommit>",
            "variableSetterType" : "java.util.Collection<CommentsForComparedCommit>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of comment objects on the compared commit.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCommentsForComparedCommitData(java.util.Collection)} or {@link #withCommentsForComparedCommitData(java.util.Collection)} if you want to override the existing values.</p>\n@param commentsForComparedCommitData A list of comment objects on the compared commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<CommentsForComparedCommit>",
            "variableName" : "commentsForComparedCommitData",
            "variableType" : "java.util.List<CommentsForComparedCommit>",
            "documentation" : "<p>A list of comment objects on the compared commit.</p>",
            "simpleType" : "List<CommentsForComparedCommit>",
            "variableSetterType" : "java.util.Collection<CommentsForComparedCommit>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@return An enumeration token that can be used in a request to return the next batch of the results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetCommentsForComparedCommitResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetCommentsForComparedCommitResult",
        "variableName" : "getCommentsForComparedCommitResult",
        "variableType" : "GetCommentsForComparedCommitResult",
        "documentation" : null,
        "simpleType" : "GetCommentsForComparedCommitResult",
        "variableSetterType" : "GetCommentsForComparedCommitResult"
      },
      "wrapper" : false
    },
    "GetCommentsForPullRequestRequest" : {
      "c2jName" : "GetCommentsForPullRequestInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetCommentsForPullRequest",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetCommentsForPullRequest",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "pullRequestId",
        "c2jShape" : "PullRequestId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestId",
        "getterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@return The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
        "getterMethodName" : "getPullRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestId",
        "setterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
        "setterMethodName" : "setPullRequestId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository that contains the pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@return The name of the repository that contains the pull request.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository that contains the pull request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforeCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeCommitId",
        "getterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>\n@return The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.*/",
        "getterMethodName" : "getBeforeCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforeCommitId",
        "setterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.*/",
        "setterMethodName" : "setBeforeCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterCommitId",
        "getterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.</p>\n@return The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.*/",
        "getterMethodName" : "getAfterCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterCommitId",
        "setterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.*/",
        "setterMethodName" : "setAfterCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@return An enumeration token that when provided in a request, returns the next batch of the results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.</p>\n@return A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "maxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "maxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "setterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AfterCommitId" : {
          "c2jName" : "afterCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterCommitId",
          "getterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.</p>\n@return The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.*/",
          "getterMethodName" : "getAfterCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterCommitId",
          "setterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.*/",
          "setterMethodName" : "setAfterCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeCommitId" : {
          "c2jName" : "beforeCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeCommitId",
          "getterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>\n@return The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.*/",
          "getterMethodName" : "getBeforeCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforeCommitId",
          "setterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.*/",
          "setterMethodName" : "setBeforeCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.</p>\n@return A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "maxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "maxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "setterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.</p>\n@param maxResults A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>A non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@return An enumeration token that when provided in a request, returns the next batch of the results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestId" : {
          "c2jName" : "pullRequestId",
          "c2jShape" : "PullRequestId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestId",
          "getterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@return The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
          "getterMethodName" : "getPullRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestId",
          "setterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
          "setterMethodName" : "setPullRequestId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that contains the pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@return The name of the repository that contains the pull request.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository that contains the pull request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "pullRequestId" ],
      "shapeName" : "GetCommentsForPullRequestRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetCommentsForPullRequestRequest",
        "variableName" : "getCommentsForPullRequestRequest",
        "variableType" : "GetCommentsForPullRequestRequest",
        "documentation" : null,
        "simpleType" : "GetCommentsForPullRequestRequest",
        "variableSetterType" : "GetCommentsForPullRequestRequest"
      },
      "wrapper" : false
    },
    "GetCommentsForPullRequestResult" : {
      "c2jName" : "GetCommentsForPullRequestOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "commentsForPullRequestData",
        "c2jShape" : "CommentsForPullRequestData",
        "deprecated" : false,
        "documentation" : "<p>An array of comment objects on the pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of comment objects on the pull request.</p>\n@param commentsForPullRequestData An array of comment objects on the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommentsForPullRequestData",
        "getterDocumentation" : "/**<p>An array of comment objects on the pull request.</p>\n@return An array of comment objects on the pull request.*/",
        "getterMethodName" : "getCommentsForPullRequestData",
        "getterModel" : {
          "returnType" : "java.util.List<CommentsForPullRequest>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commentsForPullRequestData",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commentsForPullRequestData",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "CommentsForPullRequest",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "CommentsForPullRequest",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "CommentsForPullRequest",
              "variableName" : "member",
              "variableType" : "CommentsForPullRequest",
              "documentation" : "",
              "simpleType" : "CommentsForPullRequest",
              "variableSetterType" : "CommentsForPullRequest"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "CommentsForPullRequest",
              "variableName" : "member",
              "variableType" : "CommentsForPullRequest",
              "documentation" : "",
              "simpleType" : "CommentsForPullRequest",
              "variableSetterType" : "CommentsForPullRequest"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "CommentsForPullRequest",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "CommentsForPullRequest",
          "templateImplType" : "java.util.ArrayList<CommentsForPullRequest>",
          "templateType" : "java.util.List<CommentsForPullRequest>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "CommentsForPullRequestData",
        "setterDocumentation" : "/**<p>An array of comment objects on the pull request.</p>\n@param commentsForPullRequestData An array of comment objects on the pull request.*/",
        "setterMethodName" : "setCommentsForPullRequestData",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<CommentsForPullRequest>",
          "variableName" : "commentsForPullRequestData",
          "variableType" : "java.util.List<CommentsForPullRequest>",
          "documentation" : "",
          "simpleType" : "List<CommentsForPullRequest>",
          "variableSetterType" : "java.util.Collection<CommentsForPullRequest>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of comment objects on the pull request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCommentsForPullRequestData(java.util.Collection)} or {@link #withCommentsForPullRequestData(java.util.Collection)} if you want to override the existing values.</p>\n@param commentsForPullRequestData An array of comment objects on the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<CommentsForPullRequest>",
          "variableName" : "commentsForPullRequestData",
          "variableType" : "java.util.List<CommentsForPullRequest>",
          "documentation" : "<p>An array of comment objects on the pull request.</p>",
          "simpleType" : "List<CommentsForPullRequest>",
          "variableSetterType" : "java.util.Collection<CommentsForPullRequest>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@return An enumeration token that can be used in a request to return the next batch of the results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CommentsForPullRequestData" : {
          "c2jName" : "commentsForPullRequestData",
          "c2jShape" : "CommentsForPullRequestData",
          "deprecated" : false,
          "documentation" : "<p>An array of comment objects on the pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of comment objects on the pull request.</p>\n@param commentsForPullRequestData An array of comment objects on the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommentsForPullRequestData",
          "getterDocumentation" : "/**<p>An array of comment objects on the pull request.</p>\n@return An array of comment objects on the pull request.*/",
          "getterMethodName" : "getCommentsForPullRequestData",
          "getterModel" : {
            "returnType" : "java.util.List<CommentsForPullRequest>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commentsForPullRequestData",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commentsForPullRequestData",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "CommentsForPullRequest",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "CommentsForPullRequest",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "CommentsForPullRequest",
                "variableName" : "member",
                "variableType" : "CommentsForPullRequest",
                "documentation" : "",
                "simpleType" : "CommentsForPullRequest",
                "variableSetterType" : "CommentsForPullRequest"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "CommentsForPullRequest",
                "variableName" : "member",
                "variableType" : "CommentsForPullRequest",
                "documentation" : "",
                "simpleType" : "CommentsForPullRequest",
                "variableSetterType" : "CommentsForPullRequest"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "CommentsForPullRequest",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "CommentsForPullRequest",
            "templateImplType" : "java.util.ArrayList<CommentsForPullRequest>",
            "templateType" : "java.util.List<CommentsForPullRequest>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "CommentsForPullRequestData",
          "setterDocumentation" : "/**<p>An array of comment objects on the pull request.</p>\n@param commentsForPullRequestData An array of comment objects on the pull request.*/",
          "setterMethodName" : "setCommentsForPullRequestData",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<CommentsForPullRequest>",
            "variableName" : "commentsForPullRequestData",
            "variableType" : "java.util.List<CommentsForPullRequest>",
            "documentation" : "",
            "simpleType" : "List<CommentsForPullRequest>",
            "variableSetterType" : "java.util.Collection<CommentsForPullRequest>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of comment objects on the pull request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCommentsForPullRequestData(java.util.Collection)} or {@link #withCommentsForPullRequestData(java.util.Collection)} if you want to override the existing values.</p>\n@param commentsForPullRequestData An array of comment objects on the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<CommentsForPullRequest>",
            "variableName" : "commentsForPullRequestData",
            "variableType" : "java.util.List<CommentsForPullRequest>",
            "documentation" : "<p>An array of comment objects on the pull request.</p>",
            "simpleType" : "List<CommentsForPullRequest>",
            "variableSetterType" : "java.util.Collection<CommentsForPullRequest>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@return An enumeration token that can be used in a request to return the next batch of the results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetCommentsForPullRequestResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetCommentsForPullRequestResult",
        "variableName" : "getCommentsForPullRequestResult",
        "variableType" : "GetCommentsForPullRequestResult",
        "documentation" : null,
        "simpleType" : "GetCommentsForPullRequestResult",
        "variableSetterType" : "GetCommentsForPullRequestResult"
      },
      "wrapper" : false
    },
    "GetCommitRequest" : {
      "c2jName" : "GetCommitInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a get commit operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetCommit",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetCommit",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to which the commit was made.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to which the commit was made.</p>\n@param repositoryName The name of the repository to which the commit was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to which the commit was made.</p>\n@return The name of the repository to which the commit was made.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository to which the commit was made.</p>\n@param repositoryName The name of the repository to which the commit was made.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to which the commit was made.</p>\n@param repositoryName The name of the repository to which the commit was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to which the commit was made.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "commitId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>The commit ID. Commit IDs are the full SHA of the commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The commit ID. Commit IDs are the full SHA of the commit.</p>\n@param commitId The commit ID. Commit IDs are the full SHA of the commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommitId",
        "getterDocumentation" : "/**<p>The commit ID. Commit IDs are the full SHA of the commit.</p>\n@return The commit ID. Commit IDs are the full SHA of the commit.*/",
        "getterMethodName" : "getCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CommitId",
        "setterDocumentation" : "/**<p>The commit ID. Commit IDs are the full SHA of the commit.</p>\n@param commitId The commit ID. Commit IDs are the full SHA of the commit.*/",
        "setterMethodName" : "setCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The commit ID. Commit IDs are the full SHA of the commit.</p>\n@param commitId The commit ID. Commit IDs are the full SHA of the commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitId",
          "variableType" : "String",
          "documentation" : "<p>The commit ID. Commit IDs are the full SHA of the commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CommitId" : {
          "c2jName" : "commitId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>The commit ID. Commit IDs are the full SHA of the commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The commit ID. Commit IDs are the full SHA of the commit.</p>\n@param commitId The commit ID. Commit IDs are the full SHA of the commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommitId",
          "getterDocumentation" : "/**<p>The commit ID. Commit IDs are the full SHA of the commit.</p>\n@return The commit ID. Commit IDs are the full SHA of the commit.*/",
          "getterMethodName" : "getCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CommitId",
          "setterDocumentation" : "/**<p>The commit ID. Commit IDs are the full SHA of the commit.</p>\n@param commitId The commit ID. Commit IDs are the full SHA of the commit.*/",
          "setterMethodName" : "setCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The commit ID. Commit IDs are the full SHA of the commit.</p>\n@param commitId The commit ID. Commit IDs are the full SHA of the commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitId",
            "variableType" : "String",
            "documentation" : "<p>The commit ID. Commit IDs are the full SHA of the commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to which the commit was made.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to which the commit was made.</p>\n@param repositoryName The name of the repository to which the commit was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to which the commit was made.</p>\n@return The name of the repository to which the commit was made.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository to which the commit was made.</p>\n@param repositoryName The name of the repository to which the commit was made.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to which the commit was made.</p>\n@param repositoryName The name of the repository to which the commit was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to which the commit was made.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "commitId" ],
      "shapeName" : "GetCommitRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetCommitRequest",
        "variableName" : "getCommitRequest",
        "variableType" : "GetCommitRequest",
        "documentation" : null,
        "simpleType" : "GetCommitRequest",
        "variableSetterType" : "GetCommitRequest"
      },
      "wrapper" : false
    },
    "GetCommitResult" : {
      "c2jName" : "GetCommitOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a get commit operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "commit",
        "c2jShape" : "Commit",
        "deprecated" : false,
        "documentation" : "<p>A commit data type object that contains information about the specified commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A commit data type object that contains information about the specified commit.</p>\n@param commit A commit data type object that contains information about the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommit",
        "getterDocumentation" : "/**<p>A commit data type object that contains information about the specified commit.</p>\n@return A commit data type object that contains information about the specified commit.*/",
        "getterMethodName" : "getCommit",
        "getterModel" : {
          "returnType" : "Commit",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commit",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commit",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Commit",
        "setterDocumentation" : "/**<p>A commit data type object that contains information about the specified commit.</p>\n@param commit A commit data type object that contains information about the specified commit.*/",
        "setterMethodName" : "setCommit",
        "setterModel" : {
          "variableDeclarationType" : "Commit",
          "variableName" : "commit",
          "variableType" : "Commit",
          "documentation" : "",
          "simpleType" : "Commit",
          "variableSetterType" : "Commit"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A commit data type object that contains information about the specified commit.</p>\n@param commit A commit data type object that contains information about the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Commit",
          "variableName" : "commit",
          "variableType" : "Commit",
          "documentation" : "<p>A commit data type object that contains information about the specified commit.</p>",
          "simpleType" : "Commit",
          "variableSetterType" : "Commit"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Commit" : {
          "c2jName" : "commit",
          "c2jShape" : "Commit",
          "deprecated" : false,
          "documentation" : "<p>A commit data type object that contains information about the specified commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A commit data type object that contains information about the specified commit.</p>\n@param commit A commit data type object that contains information about the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommit",
          "getterDocumentation" : "/**<p>A commit data type object that contains information about the specified commit.</p>\n@return A commit data type object that contains information about the specified commit.*/",
          "getterMethodName" : "getCommit",
          "getterModel" : {
            "returnType" : "Commit",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commit",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commit",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Commit",
          "setterDocumentation" : "/**<p>A commit data type object that contains information about the specified commit.</p>\n@param commit A commit data type object that contains information about the specified commit.*/",
          "setterMethodName" : "setCommit",
          "setterModel" : {
            "variableDeclarationType" : "Commit",
            "variableName" : "commit",
            "variableType" : "Commit",
            "documentation" : "",
            "simpleType" : "Commit",
            "variableSetterType" : "Commit"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A commit data type object that contains information about the specified commit.</p>\n@param commit A commit data type object that contains information about the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Commit",
            "variableName" : "commit",
            "variableType" : "Commit",
            "documentation" : "<p>A commit data type object that contains information about the specified commit.</p>",
            "simpleType" : "Commit",
            "variableSetterType" : "Commit"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "commit" ],
      "shapeName" : "GetCommitResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetCommitResult",
        "variableName" : "getCommitResult",
        "variableType" : "GetCommitResult",
        "documentation" : null,
        "simpleType" : "GetCommitResult",
        "variableSetterType" : "GetCommitResult"
      },
      "wrapper" : false
    },
    "GetDifferencesRequest" : {
      "c2jName" : "GetDifferencesInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetDifferences",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetDifferences",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository where you want to get differences.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository where you want to get differences.</p>\n@param repositoryName The name of the repository where you want to get differences.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository where you want to get differences.</p>\n@return The name of the repository where you want to get differences.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository where you want to get differences.</p>\n@param repositoryName The name of the repository where you want to get differences.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository where you want to get differences.</p>\n@param repositoryName The name of the repository where you want to get differences.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository where you want to get differences.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforeCommitSpecifier",
        "c2jShape" : "CommitName",
        "deprecated" : false,
        "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>\n@param beforeCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeCommitSpecifier",
        "getterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>\n@return The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.*/",
        "getterMethodName" : "getBeforeCommitSpecifier",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeCommitSpecifier",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeCommitSpecifier",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforeCommitSpecifier",
        "setterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>\n@param beforeCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.*/",
        "setterMethodName" : "setBeforeCommitSpecifier",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitSpecifier",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>\n@param beforeCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitSpecifier",
          "variableType" : "String",
          "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterCommitSpecifier",
        "c2jShape" : "CommitName",
        "deprecated" : false,
        "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>\n@param afterCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterCommitSpecifier",
        "getterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>\n@return The branch, tag, HEAD, or other fully qualified reference used to identify a commit.*/",
        "getterMethodName" : "getAfterCommitSpecifier",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterCommitSpecifier",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterCommitSpecifier",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterCommitSpecifier",
        "setterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>\n@param afterCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit.*/",
        "setterMethodName" : "setAfterCommitSpecifier",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitSpecifier",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>\n@param afterCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitSpecifier",
          "variableType" : "String",
          "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforePath",
        "c2jShape" : "Path",
        "deprecated" : false,
        "documentation" : "<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>\n@param beforePath The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforePath",
        "getterDocumentation" : "/**<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>\n@return The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.*/",
        "getterMethodName" : "getBeforePath",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforePath",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforePath",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforePath",
        "setterDocumentation" : "/**<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>\n@param beforePath The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.*/",
        "setterMethodName" : "setBeforePath",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforePath",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>\n@param beforePath The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforePath",
          "variableType" : "String",
          "documentation" : "<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterPath",
        "c2jShape" : "Path",
        "deprecated" : false,
        "documentation" : "<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>\n@param afterPath The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterPath",
        "getterDocumentation" : "/**<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>\n@return The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.*/",
        "getterMethodName" : "getAfterPath",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterPath",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterPath",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterPath",
        "setterDocumentation" : "/**<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>\n@param afterPath The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.*/",
        "setterMethodName" : "setAfterPath",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterPath",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>\n@param afterPath The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterPath",
          "variableType" : "String",
          "documentation" : "<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "Limit",
        "deprecated" : false,
        "documentation" : "<p>A non-negative integer used to limit the number of returned results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@return A non-negative integer used to limit the number of returned results.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "setterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>A non-negative integer used to limit the number of returned results.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@return An enumeration token that when provided in a request, returns the next batch of the results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AfterCommitSpecifier" : {
          "c2jName" : "afterCommitSpecifier",
          "c2jShape" : "CommitName",
          "deprecated" : false,
          "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>\n@param afterCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterCommitSpecifier",
          "getterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>\n@return The branch, tag, HEAD, or other fully qualified reference used to identify a commit.*/",
          "getterMethodName" : "getAfterCommitSpecifier",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterCommitSpecifier",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterCommitSpecifier",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterCommitSpecifier",
          "setterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>\n@param afterCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit.*/",
          "setterMethodName" : "setAfterCommitSpecifier",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitSpecifier",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>\n@param afterCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitSpecifier",
            "variableType" : "String",
            "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "AfterPath" : {
          "c2jName" : "afterPath",
          "c2jShape" : "Path",
          "deprecated" : false,
          "documentation" : "<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>\n@param afterPath The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterPath",
          "getterDocumentation" : "/**<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>\n@return The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.*/",
          "getterMethodName" : "getAfterPath",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterPath",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterPath",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterPath",
          "setterDocumentation" : "/**<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>\n@param afterPath The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.*/",
          "setterMethodName" : "setAfterPath",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterPath",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>\n@param afterPath The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterPath",
            "variableType" : "String",
            "documentation" : "<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeCommitSpecifier" : {
          "c2jName" : "beforeCommitSpecifier",
          "c2jShape" : "CommitName",
          "deprecated" : false,
          "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>\n@param beforeCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeCommitSpecifier",
          "getterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>\n@return The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.*/",
          "getterMethodName" : "getBeforeCommitSpecifier",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeCommitSpecifier",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeCommitSpecifier",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforeCommitSpecifier",
          "setterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>\n@param beforeCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.*/",
          "setterMethodName" : "setBeforeCommitSpecifier",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitSpecifier",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>\n@param beforeCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitSpecifier",
            "variableType" : "String",
            "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforePath" : {
          "c2jName" : "beforePath",
          "c2jShape" : "Path",
          "deprecated" : false,
          "documentation" : "<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>\n@param beforePath The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforePath",
          "getterDocumentation" : "/**<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>\n@return The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.*/",
          "getterMethodName" : "getBeforePath",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforePath",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforePath",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforePath",
          "setterDocumentation" : "/**<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>\n@param beforePath The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.*/",
          "setterMethodName" : "setBeforePath",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforePath",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>\n@param beforePath The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforePath",
            "variableType" : "String",
            "documentation" : "<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "Limit",
          "deprecated" : false,
          "documentation" : "<p>A non-negative integer used to limit the number of returned results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@return A non-negative integer used to limit the number of returned results.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "setterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>A non-negative integer used to limit the number of returned results.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@return An enumeration token that when provided in a request, returns the next batch of the results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository where you want to get differences.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository where you want to get differences.</p>\n@param repositoryName The name of the repository where you want to get differences.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository where you want to get differences.</p>\n@return The name of the repository where you want to get differences.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository where you want to get differences.</p>\n@param repositoryName The name of the repository where you want to get differences.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository where you want to get differences.</p>\n@param repositoryName The name of the repository where you want to get differences.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository where you want to get differences.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "afterCommitSpecifier" ],
      "shapeName" : "GetDifferencesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetDifferencesRequest",
        "variableName" : "getDifferencesRequest",
        "variableType" : "GetDifferencesRequest",
        "documentation" : null,
        "simpleType" : "GetDifferencesRequest",
        "variableSetterType" : "GetDifferencesRequest"
      },
      "wrapper" : false
    },
    "GetDifferencesResult" : {
      "c2jName" : "GetDifferencesOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "differences",
        "c2jShape" : "DifferenceList",
        "deprecated" : false,
        "documentation" : "<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>\n@param differences A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDifferences",
        "getterDocumentation" : "/**<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>\n@return A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).*/",
        "getterMethodName" : "getDifferences",
        "getterModel" : {
          "returnType" : "java.util.List<Difference>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "differences",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "differences",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Difference",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Difference",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Difference",
              "variableName" : "member",
              "variableType" : "Difference",
              "documentation" : "",
              "simpleType" : "Difference",
              "variableSetterType" : "Difference"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Difference",
              "variableName" : "member",
              "variableType" : "Difference",
              "documentation" : "",
              "simpleType" : "Difference",
              "variableSetterType" : "Difference"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Difference",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Difference",
          "templateImplType" : "java.util.ArrayList<Difference>",
          "templateType" : "java.util.List<Difference>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Differences",
        "setterDocumentation" : "/**<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>\n@param differences A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).*/",
        "setterMethodName" : "setDifferences",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Difference>",
          "variableName" : "differences",
          "variableType" : "java.util.List<Difference>",
          "documentation" : "",
          "simpleType" : "List<Difference>",
          "variableSetterType" : "java.util.Collection<Difference>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDifferences(java.util.Collection)} or {@link #withDifferences(java.util.Collection)} if you want to override the existing values.</p>\n@param differences A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Difference>",
          "variableName" : "differences",
          "variableType" : "java.util.List<Difference>",
          "documentation" : "<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>",
          "simpleType" : "List<Difference>",
          "variableSetterType" : "java.util.Collection<Difference>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@return An enumeration token that can be used in a request to return the next batch of the results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Differences" : {
          "c2jName" : "differences",
          "c2jShape" : "DifferenceList",
          "deprecated" : false,
          "documentation" : "<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>\n@param differences A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDifferences",
          "getterDocumentation" : "/**<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>\n@return A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).*/",
          "getterMethodName" : "getDifferences",
          "getterModel" : {
            "returnType" : "java.util.List<Difference>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "differences",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "differences",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Difference",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Difference",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Difference",
                "variableName" : "member",
                "variableType" : "Difference",
                "documentation" : "",
                "simpleType" : "Difference",
                "variableSetterType" : "Difference"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Difference",
                "variableName" : "member",
                "variableType" : "Difference",
                "documentation" : "",
                "simpleType" : "Difference",
                "variableSetterType" : "Difference"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Difference",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Difference",
            "templateImplType" : "java.util.ArrayList<Difference>",
            "templateType" : "java.util.List<Difference>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Differences",
          "setterDocumentation" : "/**<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>\n@param differences A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).*/",
          "setterMethodName" : "setDifferences",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Difference>",
            "variableName" : "differences",
            "variableType" : "java.util.List<Difference>",
            "documentation" : "",
            "simpleType" : "List<Difference>",
            "variableSetterType" : "java.util.Collection<Difference>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDifferences(java.util.Collection)} or {@link #withDifferences(java.util.Collection)} if you want to override the existing values.</p>\n@param differences A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Difference>",
            "variableName" : "differences",
            "variableType" : "java.util.List<Difference>",
            "documentation" : "<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>",
            "simpleType" : "List<Difference>",
            "variableSetterType" : "java.util.Collection<Difference>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@return An enumeration token that can be used in a request to return the next batch of the results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetDifferencesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetDifferencesResult",
        "variableName" : "getDifferencesResult",
        "variableType" : "GetDifferencesResult",
        "documentation" : null,
        "simpleType" : "GetDifferencesResult",
        "variableSetterType" : "GetDifferencesResult"
      },
      "wrapper" : false
    },
    "GetMergeConflictsRequest" : {
      "c2jName" : "GetMergeConflictsInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetMergeConflicts",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetMergeConflicts",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository where the pull request was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@return The name of the repository where the pull request was created.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository where the pull request was created.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "destinationCommitSpecifier",
        "c2jShape" : "CommitName",
        "deprecated" : false,
        "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>\n@param destinationCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDestinationCommitSpecifier",
        "getterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>\n@return The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.*/",
        "getterMethodName" : "getDestinationCommitSpecifier",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "destinationCommitSpecifier",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "destinationCommitSpecifier",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DestinationCommitSpecifier",
        "setterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>\n@param destinationCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.*/",
        "setterMethodName" : "setDestinationCommitSpecifier",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "destinationCommitSpecifier",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>\n@param destinationCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "destinationCommitSpecifier",
          "variableType" : "String",
          "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sourceCommitSpecifier",
        "c2jShape" : "CommitName",
        "deprecated" : false,
        "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>\n@param sourceCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSourceCommitSpecifier",
        "getterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>\n@return The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.*/",
        "getterMethodName" : "getSourceCommitSpecifier",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sourceCommitSpecifier",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sourceCommitSpecifier",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SourceCommitSpecifier",
        "setterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>\n@param sourceCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.*/",
        "setterMethodName" : "setSourceCommitSpecifier",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceCommitSpecifier",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>\n@param sourceCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceCommitSpecifier",
          "variableType" : "String",
          "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "mergeOption",
        "c2jShape" : "MergeOptionTypeEnum",
        "deprecated" : false,
        "documentation" : "<p>The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.</p>",
        "enumType" : "MergeOptionTypeEnum",
        "fluentSetterDocumentation" : "/**<p>The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.</p>\n@param mergeOption The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MergeOptionTypeEnum*/",
        "fluentSetterMethodName" : "withMergeOption",
        "getterDocumentation" : "/**<p>The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.</p>\n@return The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.\n@see MergeOptionTypeEnum*/",
        "getterMethodName" : "getMergeOption",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "mergeOption",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "mergeOption",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "MergeOption",
        "setterDocumentation" : "/**<p>The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.</p>\n@param mergeOption The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.\n@see MergeOptionTypeEnum*/",
        "setterMethodName" : "setMergeOption",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "mergeOption",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.</p>\n@param mergeOption The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MergeOptionTypeEnum*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "mergeOption",
          "variableType" : "String",
          "documentation" : "<p>The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DestinationCommitSpecifier" : {
          "c2jName" : "destinationCommitSpecifier",
          "c2jShape" : "CommitName",
          "deprecated" : false,
          "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>\n@param destinationCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDestinationCommitSpecifier",
          "getterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>\n@return The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.*/",
          "getterMethodName" : "getDestinationCommitSpecifier",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "destinationCommitSpecifier",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "destinationCommitSpecifier",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DestinationCommitSpecifier",
          "setterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>\n@param destinationCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.*/",
          "setterMethodName" : "setDestinationCommitSpecifier",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "destinationCommitSpecifier",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>\n@param destinationCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "destinationCommitSpecifier",
            "variableType" : "String",
            "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MergeOption" : {
          "c2jName" : "mergeOption",
          "c2jShape" : "MergeOptionTypeEnum",
          "deprecated" : false,
          "documentation" : "<p>The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.</p>",
          "enumType" : "MergeOptionTypeEnum",
          "fluentSetterDocumentation" : "/**<p>The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.</p>\n@param mergeOption The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MergeOptionTypeEnum*/",
          "fluentSetterMethodName" : "withMergeOption",
          "getterDocumentation" : "/**<p>The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.</p>\n@return The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.\n@see MergeOptionTypeEnum*/",
          "getterMethodName" : "getMergeOption",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "mergeOption",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "mergeOption",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "MergeOption",
          "setterDocumentation" : "/**<p>The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.</p>\n@param mergeOption The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.\n@see MergeOptionTypeEnum*/",
          "setterMethodName" : "setMergeOption",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "mergeOption",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.</p>\n@param mergeOption The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MergeOptionTypeEnum*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "mergeOption",
            "variableType" : "String",
            "documentation" : "<p>The merge option or strategy you want to use to merge the code. The only valid value is FAST_FORWARD_MERGE.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository where the pull request was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@return The name of the repository where the pull request was created.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository where the pull request was created.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SourceCommitSpecifier" : {
          "c2jName" : "sourceCommitSpecifier",
          "c2jShape" : "CommitName",
          "deprecated" : false,
          "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>\n@param sourceCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSourceCommitSpecifier",
          "getterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>\n@return The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.*/",
          "getterMethodName" : "getSourceCommitSpecifier",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sourceCommitSpecifier",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sourceCommitSpecifier",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SourceCommitSpecifier",
          "setterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>\n@param sourceCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.*/",
          "setterMethodName" : "setSourceCommitSpecifier",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceCommitSpecifier",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>\n@param sourceCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceCommitSpecifier",
            "variableType" : "String",
            "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, a branch name or a full commit ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "destinationCommitSpecifier", "sourceCommitSpecifier", "mergeOption" ],
      "shapeName" : "GetMergeConflictsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetMergeConflictsRequest",
        "variableName" : "getMergeConflictsRequest",
        "variableType" : "GetMergeConflictsRequest",
        "documentation" : null,
        "simpleType" : "GetMergeConflictsRequest",
        "variableSetterType" : "GetMergeConflictsRequest"
      },
      "wrapper" : false
    },
    "GetMergeConflictsResult" : {
      "c2jName" : "GetMergeConflictsOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "mergeable",
        "c2jShape" : "IsMergeable",
        "deprecated" : false,
        "documentation" : "<p>A Boolean value that indicates whether the code is mergable by the specified merge option.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A Boolean value that indicates whether the code is mergable by the specified merge option.</p>\n@param mergeable A Boolean value that indicates whether the code is mergable by the specified merge option.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMergeable",
        "getterDocumentation" : "/**<p>A Boolean value that indicates whether the code is mergable by the specified merge option.</p>\n@return A Boolean value that indicates whether the code is mergable by the specified merge option.*/",
        "getterMethodName" : "getMergeable",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "mergeable",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "mergeable",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "Mergeable",
        "setterDocumentation" : "/**<p>A Boolean value that indicates whether the code is mergable by the specified merge option.</p>\n@param mergeable A Boolean value that indicates whether the code is mergable by the specified merge option.*/",
        "setterMethodName" : "setMergeable",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "mergeable",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A Boolean value that indicates whether the code is mergable by the specified merge option.</p>\n@param mergeable A Boolean value that indicates whether the code is mergable by the specified merge option.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "mergeable",
          "variableType" : "Boolean",
          "documentation" : "<p>A Boolean value that indicates whether the code is mergable by the specified merge option.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "destinationCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The commit ID of the destination commit specifier that was used in the merge evaluation.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The commit ID of the destination commit specifier that was used in the merge evaluation.</p>\n@param destinationCommitId The commit ID of the destination commit specifier that was used in the merge evaluation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDestinationCommitId",
        "getterDocumentation" : "/**<p>The commit ID of the destination commit specifier that was used in the merge evaluation.</p>\n@return The commit ID of the destination commit specifier that was used in the merge evaluation.*/",
        "getterMethodName" : "getDestinationCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "destinationCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "destinationCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DestinationCommitId",
        "setterDocumentation" : "/**<p>The commit ID of the destination commit specifier that was used in the merge evaluation.</p>\n@param destinationCommitId The commit ID of the destination commit specifier that was used in the merge evaluation.*/",
        "setterMethodName" : "setDestinationCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "destinationCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The commit ID of the destination commit specifier that was used in the merge evaluation.</p>\n@param destinationCommitId The commit ID of the destination commit specifier that was used in the merge evaluation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "destinationCommitId",
          "variableType" : "String",
          "documentation" : "<p>The commit ID of the destination commit specifier that was used in the merge evaluation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sourceCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The commit ID of the source commit specifier that was used in the merge evaluation.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The commit ID of the source commit specifier that was used in the merge evaluation.</p>\n@param sourceCommitId The commit ID of the source commit specifier that was used in the merge evaluation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSourceCommitId",
        "getterDocumentation" : "/**<p>The commit ID of the source commit specifier that was used in the merge evaluation.</p>\n@return The commit ID of the source commit specifier that was used in the merge evaluation.*/",
        "getterMethodName" : "getSourceCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sourceCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sourceCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SourceCommitId",
        "setterDocumentation" : "/**<p>The commit ID of the source commit specifier that was used in the merge evaluation.</p>\n@param sourceCommitId The commit ID of the source commit specifier that was used in the merge evaluation.*/",
        "setterMethodName" : "setSourceCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The commit ID of the source commit specifier that was used in the merge evaluation.</p>\n@param sourceCommitId The commit ID of the source commit specifier that was used in the merge evaluation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceCommitId",
          "variableType" : "String",
          "documentation" : "<p>The commit ID of the source commit specifier that was used in the merge evaluation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DestinationCommitId" : {
          "c2jName" : "destinationCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The commit ID of the destination commit specifier that was used in the merge evaluation.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The commit ID of the destination commit specifier that was used in the merge evaluation.</p>\n@param destinationCommitId The commit ID of the destination commit specifier that was used in the merge evaluation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDestinationCommitId",
          "getterDocumentation" : "/**<p>The commit ID of the destination commit specifier that was used in the merge evaluation.</p>\n@return The commit ID of the destination commit specifier that was used in the merge evaluation.*/",
          "getterMethodName" : "getDestinationCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "destinationCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "destinationCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DestinationCommitId",
          "setterDocumentation" : "/**<p>The commit ID of the destination commit specifier that was used in the merge evaluation.</p>\n@param destinationCommitId The commit ID of the destination commit specifier that was used in the merge evaluation.*/",
          "setterMethodName" : "setDestinationCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "destinationCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The commit ID of the destination commit specifier that was used in the merge evaluation.</p>\n@param destinationCommitId The commit ID of the destination commit specifier that was used in the merge evaluation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "destinationCommitId",
            "variableType" : "String",
            "documentation" : "<p>The commit ID of the destination commit specifier that was used in the merge evaluation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Mergeable" : {
          "c2jName" : "mergeable",
          "c2jShape" : "IsMergeable",
          "deprecated" : false,
          "documentation" : "<p>A Boolean value that indicates whether the code is mergable by the specified merge option.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A Boolean value that indicates whether the code is mergable by the specified merge option.</p>\n@param mergeable A Boolean value that indicates whether the code is mergable by the specified merge option.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMergeable",
          "getterDocumentation" : "/**<p>A Boolean value that indicates whether the code is mergable by the specified merge option.</p>\n@return A Boolean value that indicates whether the code is mergable by the specified merge option.*/",
          "getterMethodName" : "getMergeable",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "mergeable",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "mergeable",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "Mergeable",
          "setterDocumentation" : "/**<p>A Boolean value that indicates whether the code is mergable by the specified merge option.</p>\n@param mergeable A Boolean value that indicates whether the code is mergable by the specified merge option.*/",
          "setterMethodName" : "setMergeable",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "mergeable",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A Boolean value that indicates whether the code is mergable by the specified merge option.</p>\n@param mergeable A Boolean value that indicates whether the code is mergable by the specified merge option.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "mergeable",
            "variableType" : "Boolean",
            "documentation" : "<p>A Boolean value that indicates whether the code is mergable by the specified merge option.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "SourceCommitId" : {
          "c2jName" : "sourceCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The commit ID of the source commit specifier that was used in the merge evaluation.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The commit ID of the source commit specifier that was used in the merge evaluation.</p>\n@param sourceCommitId The commit ID of the source commit specifier that was used in the merge evaluation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSourceCommitId",
          "getterDocumentation" : "/**<p>The commit ID of the source commit specifier that was used in the merge evaluation.</p>\n@return The commit ID of the source commit specifier that was used in the merge evaluation.*/",
          "getterMethodName" : "getSourceCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sourceCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sourceCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SourceCommitId",
          "setterDocumentation" : "/**<p>The commit ID of the source commit specifier that was used in the merge evaluation.</p>\n@param sourceCommitId The commit ID of the source commit specifier that was used in the merge evaluation.*/",
          "setterMethodName" : "setSourceCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The commit ID of the source commit specifier that was used in the merge evaluation.</p>\n@param sourceCommitId The commit ID of the source commit specifier that was used in the merge evaluation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceCommitId",
            "variableType" : "String",
            "documentation" : "<p>The commit ID of the source commit specifier that was used in the merge evaluation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "mergeable", "destinationCommitId", "sourceCommitId" ],
      "shapeName" : "GetMergeConflictsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetMergeConflictsResult",
        "variableName" : "getMergeConflictsResult",
        "variableType" : "GetMergeConflictsResult",
        "documentation" : null,
        "simpleType" : "GetMergeConflictsResult",
        "variableSetterType" : "GetMergeConflictsResult"
      },
      "wrapper" : false
    },
    "GetPullRequestRequest" : {
      "c2jName" : "GetPullRequestInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetPullRequest",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetPullRequest",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "pullRequestId",
        "c2jShape" : "PullRequestId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestId",
        "getterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@return The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
        "getterMethodName" : "getPullRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestId",
        "setterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
        "setterMethodName" : "setPullRequestId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PullRequestId" : {
          "c2jName" : "pullRequestId",
          "c2jShape" : "PullRequestId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestId",
          "getterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@return The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
          "getterMethodName" : "getPullRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestId",
          "setterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
          "setterMethodName" : "setPullRequestId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "pullRequestId" ],
      "shapeName" : "GetPullRequestRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetPullRequestRequest",
        "variableName" : "getPullRequestRequest",
        "variableType" : "GetPullRequestRequest",
        "documentation" : null,
        "simpleType" : "GetPullRequestRequest",
        "variableSetterType" : "GetPullRequestRequest"
      },
      "wrapper" : false
    },
    "GetPullRequestResult" : {
      "c2jName" : "GetPullRequestOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "pullRequest",
        "c2jShape" : "PullRequest",
        "deprecated" : false,
        "documentation" : "<p>Information about the specified pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the specified pull request.</p>\n@param pullRequest Information about the specified pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequest",
        "getterDocumentation" : "/**<p>Information about the specified pull request.</p>\n@return Information about the specified pull request.*/",
        "getterMethodName" : "getPullRequest",
        "getterModel" : {
          "returnType" : "PullRequest",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "PullRequest",
        "setterDocumentation" : "/**<p>Information about the specified pull request.</p>\n@param pullRequest Information about the specified pull request.*/",
        "setterMethodName" : "setPullRequest",
        "setterModel" : {
          "variableDeclarationType" : "PullRequest",
          "variableName" : "pullRequest",
          "variableType" : "PullRequest",
          "documentation" : "",
          "simpleType" : "PullRequest",
          "variableSetterType" : "PullRequest"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the specified pull request.</p>\n@param pullRequest Information about the specified pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "PullRequest",
          "variableName" : "pullRequest",
          "variableType" : "PullRequest",
          "documentation" : "<p>Information about the specified pull request.</p>",
          "simpleType" : "PullRequest",
          "variableSetterType" : "PullRequest"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PullRequest" : {
          "c2jName" : "pullRequest",
          "c2jShape" : "PullRequest",
          "deprecated" : false,
          "documentation" : "<p>Information about the specified pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the specified pull request.</p>\n@param pullRequest Information about the specified pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequest",
          "getterDocumentation" : "/**<p>Information about the specified pull request.</p>\n@return Information about the specified pull request.*/",
          "getterMethodName" : "getPullRequest",
          "getterModel" : {
            "returnType" : "PullRequest",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "PullRequest",
          "setterDocumentation" : "/**<p>Information about the specified pull request.</p>\n@param pullRequest Information about the specified pull request.*/",
          "setterMethodName" : "setPullRequest",
          "setterModel" : {
            "variableDeclarationType" : "PullRequest",
            "variableName" : "pullRequest",
            "variableType" : "PullRequest",
            "documentation" : "",
            "simpleType" : "PullRequest",
            "variableSetterType" : "PullRequest"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the specified pull request.</p>\n@param pullRequest Information about the specified pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "PullRequest",
            "variableName" : "pullRequest",
            "variableType" : "PullRequest",
            "documentation" : "<p>Information about the specified pull request.</p>",
            "simpleType" : "PullRequest",
            "variableSetterType" : "PullRequest"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "pullRequest" ],
      "shapeName" : "GetPullRequestResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetPullRequestResult",
        "variableName" : "getPullRequestResult",
        "variableType" : "GetPullRequestResult",
        "documentation" : null,
        "simpleType" : "GetPullRequestResult",
        "variableSetterType" : "GetPullRequestResult"
      },
      "wrapper" : false
    },
    "GetRepositoryRequest" : {
      "c2jName" : "GetRepositoryInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a get repository operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetRepository",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetRepository",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to get information about.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to get information about.</p>\n@param repositoryName The name of the repository to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to get information about.</p>\n@return The name of the repository to get information about.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository to get information about.</p>\n@param repositoryName The name of the repository to get information about.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to get information about.</p>\n@param repositoryName The name of the repository to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to get information about.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to get information about.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to get information about.</p>\n@param repositoryName The name of the repository to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to get information about.</p>\n@return The name of the repository to get information about.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository to get information about.</p>\n@param repositoryName The name of the repository to get information about.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to get information about.</p>\n@param repositoryName The name of the repository to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to get information about.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "GetRepositoryRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetRepositoryRequest",
        "variableName" : "getRepositoryRequest",
        "variableType" : "GetRepositoryRequest",
        "documentation" : null,
        "simpleType" : "GetRepositoryRequest",
        "variableSetterType" : "GetRepositoryRequest"
      },
      "wrapper" : false
    },
    "GetRepositoryResult" : {
      "c2jName" : "GetRepositoryOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a get repository operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositoryMetadata",
        "c2jShape" : "RepositoryMetadata",
        "deprecated" : false,
        "documentation" : "<p>Information about the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the repository.</p>\n@param repositoryMetadata Information about the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryMetadata",
        "getterDocumentation" : "/**<p>Information about the repository.</p>\n@return Information about the repository.*/",
        "getterMethodName" : "getRepositoryMetadata",
        "getterModel" : {
          "returnType" : "RepositoryMetadata",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryMetadata",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryMetadata",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "RepositoryMetadata",
        "setterDocumentation" : "/**<p>Information about the repository.</p>\n@param repositoryMetadata Information about the repository.*/",
        "setterMethodName" : "setRepositoryMetadata",
        "setterModel" : {
          "variableDeclarationType" : "RepositoryMetadata",
          "variableName" : "repositoryMetadata",
          "variableType" : "RepositoryMetadata",
          "documentation" : "",
          "simpleType" : "RepositoryMetadata",
          "variableSetterType" : "RepositoryMetadata"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the repository.</p>\n@param repositoryMetadata Information about the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "RepositoryMetadata",
          "variableName" : "repositoryMetadata",
          "variableType" : "RepositoryMetadata",
          "documentation" : "<p>Information about the repository.</p>",
          "simpleType" : "RepositoryMetadata",
          "variableSetterType" : "RepositoryMetadata"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryMetadata" : {
          "c2jName" : "repositoryMetadata",
          "c2jShape" : "RepositoryMetadata",
          "deprecated" : false,
          "documentation" : "<p>Information about the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the repository.</p>\n@param repositoryMetadata Information about the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryMetadata",
          "getterDocumentation" : "/**<p>Information about the repository.</p>\n@return Information about the repository.*/",
          "getterMethodName" : "getRepositoryMetadata",
          "getterModel" : {
            "returnType" : "RepositoryMetadata",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryMetadata",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryMetadata",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "RepositoryMetadata",
          "setterDocumentation" : "/**<p>Information about the repository.</p>\n@param repositoryMetadata Information about the repository.*/",
          "setterMethodName" : "setRepositoryMetadata",
          "setterModel" : {
            "variableDeclarationType" : "RepositoryMetadata",
            "variableName" : "repositoryMetadata",
            "variableType" : "RepositoryMetadata",
            "documentation" : "",
            "simpleType" : "RepositoryMetadata",
            "variableSetterType" : "RepositoryMetadata"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the repository.</p>\n@param repositoryMetadata Information about the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "RepositoryMetadata",
            "variableName" : "repositoryMetadata",
            "variableType" : "RepositoryMetadata",
            "documentation" : "<p>Information about the repository.</p>",
            "simpleType" : "RepositoryMetadata",
            "variableSetterType" : "RepositoryMetadata"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetRepositoryResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetRepositoryResult",
        "variableName" : "getRepositoryResult",
        "variableType" : "GetRepositoryResult",
        "documentation" : null,
        "simpleType" : "GetRepositoryResult",
        "variableSetterType" : "GetRepositoryResult"
      },
      "wrapper" : false
    },
    "GetRepositoryTriggersRequest" : {
      "c2jName" : "GetRepositoryTriggersInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a get repository triggers operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetRepositoryTriggers",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetRepositoryTriggers",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository for which the trigger is configured.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository for which the trigger is configured.</p>\n@param repositoryName The name of the repository for which the trigger is configured.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository for which the trigger is configured.</p>\n@return The name of the repository for which the trigger is configured.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository for which the trigger is configured.</p>\n@param repositoryName The name of the repository for which the trigger is configured.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository for which the trigger is configured.</p>\n@param repositoryName The name of the repository for which the trigger is configured.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository for which the trigger is configured.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository for which the trigger is configured.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository for which the trigger is configured.</p>\n@param repositoryName The name of the repository for which the trigger is configured.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository for which the trigger is configured.</p>\n@return The name of the repository for which the trigger is configured.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository for which the trigger is configured.</p>\n@param repositoryName The name of the repository for which the trigger is configured.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository for which the trigger is configured.</p>\n@param repositoryName The name of the repository for which the trigger is configured.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository for which the trigger is configured.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "GetRepositoryTriggersRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetRepositoryTriggersRequest",
        "variableName" : "getRepositoryTriggersRequest",
        "variableType" : "GetRepositoryTriggersRequest",
        "documentation" : null,
        "simpleType" : "GetRepositoryTriggersRequest",
        "variableSetterType" : "GetRepositoryTriggersRequest"
      },
      "wrapper" : false
    },
    "GetRepositoryTriggersResult" : {
      "c2jName" : "GetRepositoryTriggersOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a get repository triggers operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "configurationId",
        "c2jShape" : "RepositoryTriggersConfigurationId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated unique ID for the trigger.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated unique ID for the trigger.</p>\n@param configurationId The system-generated unique ID for the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfigurationId",
        "getterDocumentation" : "/**<p>The system-generated unique ID for the trigger.</p>\n@return The system-generated unique ID for the trigger.*/",
        "getterMethodName" : "getConfigurationId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "configurationId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "configurationId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ConfigurationId",
        "setterDocumentation" : "/**<p>The system-generated unique ID for the trigger.</p>\n@param configurationId The system-generated unique ID for the trigger.*/",
        "setterMethodName" : "setConfigurationId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "configurationId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated unique ID for the trigger.</p>\n@param configurationId The system-generated unique ID for the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "configurationId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated unique ID for the trigger.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "triggers",
        "c2jShape" : "RepositoryTriggersList",
        "deprecated" : false,
        "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@param triggers The JSON block of configuration information for each trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTriggers",
        "getterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@return The JSON block of configuration information for each trigger.*/",
        "getterMethodName" : "getTriggers",
        "getterModel" : {
          "returnType" : "java.util.List<RepositoryTrigger>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "triggers",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "triggers",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryTrigger",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "RepositoryTrigger",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "RepositoryTrigger",
              "variableName" : "member",
              "variableType" : "RepositoryTrigger",
              "documentation" : "",
              "simpleType" : "RepositoryTrigger",
              "variableSetterType" : "RepositoryTrigger"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "RepositoryTrigger",
              "variableName" : "member",
              "variableType" : "RepositoryTrigger",
              "documentation" : "",
              "simpleType" : "RepositoryTrigger",
              "variableSetterType" : "RepositoryTrigger"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "RepositoryTrigger",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "RepositoryTrigger",
          "templateImplType" : "java.util.ArrayList<RepositoryTrigger>",
          "templateType" : "java.util.List<RepositoryTrigger>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Triggers",
        "setterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@param triggers The JSON block of configuration information for each trigger.*/",
        "setterMethodName" : "setTriggers",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
          "variableName" : "triggers",
          "variableType" : "java.util.List<RepositoryTrigger>",
          "documentation" : "",
          "simpleType" : "List<RepositoryTrigger>",
          "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTriggers(java.util.Collection)} or {@link #withTriggers(java.util.Collection)} if you want to override the existing values.</p>\n@param triggers The JSON block of configuration information for each trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
          "variableName" : "triggers",
          "variableType" : "java.util.List<RepositoryTrigger>",
          "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
          "simpleType" : "List<RepositoryTrigger>",
          "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ConfigurationId" : {
          "c2jName" : "configurationId",
          "c2jShape" : "RepositoryTriggersConfigurationId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated unique ID for the trigger.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated unique ID for the trigger.</p>\n@param configurationId The system-generated unique ID for the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfigurationId",
          "getterDocumentation" : "/**<p>The system-generated unique ID for the trigger.</p>\n@return The system-generated unique ID for the trigger.*/",
          "getterMethodName" : "getConfigurationId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "configurationId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "configurationId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ConfigurationId",
          "setterDocumentation" : "/**<p>The system-generated unique ID for the trigger.</p>\n@param configurationId The system-generated unique ID for the trigger.*/",
          "setterMethodName" : "setConfigurationId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "configurationId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated unique ID for the trigger.</p>\n@param configurationId The system-generated unique ID for the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "configurationId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated unique ID for the trigger.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Triggers" : {
          "c2jName" : "triggers",
          "c2jShape" : "RepositoryTriggersList",
          "deprecated" : false,
          "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@param triggers The JSON block of configuration information for each trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTriggers",
          "getterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@return The JSON block of configuration information for each trigger.*/",
          "getterMethodName" : "getTriggers",
          "getterModel" : {
            "returnType" : "java.util.List<RepositoryTrigger>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "triggers",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "triggers",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryTrigger",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "RepositoryTrigger",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "RepositoryTrigger",
                "variableName" : "member",
                "variableType" : "RepositoryTrigger",
                "documentation" : "",
                "simpleType" : "RepositoryTrigger",
                "variableSetterType" : "RepositoryTrigger"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "RepositoryTrigger",
                "variableName" : "member",
                "variableType" : "RepositoryTrigger",
                "documentation" : "",
                "simpleType" : "RepositoryTrigger",
                "variableSetterType" : "RepositoryTrigger"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "RepositoryTrigger",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "RepositoryTrigger",
            "templateImplType" : "java.util.ArrayList<RepositoryTrigger>",
            "templateType" : "java.util.List<RepositoryTrigger>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Triggers",
          "setterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@param triggers The JSON block of configuration information for each trigger.*/",
          "setterMethodName" : "setTriggers",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
            "variableName" : "triggers",
            "variableType" : "java.util.List<RepositoryTrigger>",
            "documentation" : "",
            "simpleType" : "List<RepositoryTrigger>",
            "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTriggers(java.util.Collection)} or {@link #withTriggers(java.util.Collection)} if you want to override the existing values.</p>\n@param triggers The JSON block of configuration information for each trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
            "variableName" : "triggers",
            "variableType" : "java.util.List<RepositoryTrigger>",
            "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
            "simpleType" : "List<RepositoryTrigger>",
            "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetRepositoryTriggersResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetRepositoryTriggersResult",
        "variableName" : "getRepositoryTriggersResult",
        "variableType" : "GetRepositoryTriggersResult",
        "documentation" : null,
        "simpleType" : "GetRepositoryTriggersResult",
        "variableSetterType" : "GetRepositoryTriggersResult"
      },
      "wrapper" : false
    },
    "IdempotencyParameterMismatchException" : {
      "c2jName" : "IdempotencyParameterMismatchException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The client request token is not valid. Either the token is not in a valid format, or the token has been used in a previous request and cannot be re-used.</p>",
      "enums" : null,
      "errorCode" : "IdempotencyParameterMismatchException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "IdempotencyParameterMismatchException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "IdempotencyParameterMismatchException",
        "variableName" : "idempotencyParameterMismatchException",
        "variableType" : "IdempotencyParameterMismatchException",
        "documentation" : null,
        "simpleType" : "IdempotencyParameterMismatchException",
        "variableSetterType" : "IdempotencyParameterMismatchException"
      },
      "wrapper" : false
    },
    "InvalidActorArnException" : {
      "c2jName" : "InvalidActorArnException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The Amazon Resource Name (ARN) is not valid. Make sure that you have provided the full ARN for the user who initiated the change for the pull request, and then try again.</p>",
      "enums" : null,
      "errorCode" : "InvalidActorArnException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidActorArnException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidActorArnException",
        "variableName" : "invalidActorArnException",
        "variableType" : "InvalidActorArnException",
        "documentation" : null,
        "simpleType" : "InvalidActorArnException",
        "variableSetterType" : "InvalidActorArnException"
      },
      "wrapper" : false
    },
    "InvalidAuthorArnException" : {
      "c2jName" : "InvalidAuthorArnException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The Amazon Resource Name (ARN) is not valid. Make sure that you have provided the full ARN for the author of the pull request, and then try again.</p>",
      "enums" : null,
      "errorCode" : "InvalidAuthorArnException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidAuthorArnException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidAuthorArnException",
        "variableName" : "invalidAuthorArnException",
        "variableType" : "InvalidAuthorArnException",
        "documentation" : null,
        "simpleType" : "InvalidAuthorArnException",
        "variableSetterType" : "InvalidAuthorArnException"
      },
      "wrapper" : false
    },
    "InvalidBlobIdException" : {
      "c2jName" : "InvalidBlobIdException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified blob is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidBlobIdException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidBlobIdException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidBlobIdException",
        "variableName" : "invalidBlobIdException",
        "variableType" : "InvalidBlobIdException",
        "documentation" : null,
        "simpleType" : "InvalidBlobIdException",
        "variableSetterType" : "InvalidBlobIdException"
      },
      "wrapper" : false
    },
    "InvalidBranchNameException" : {
      "c2jName" : "InvalidBranchNameException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified reference name is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidBranchNameException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidBranchNameException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidBranchNameException",
        "variableName" : "invalidBranchNameException",
        "variableType" : "InvalidBranchNameException",
        "documentation" : null,
        "simpleType" : "InvalidBranchNameException",
        "variableSetterType" : "InvalidBranchNameException"
      },
      "wrapper" : false
    },
    "InvalidClientRequestTokenException" : {
      "c2jName" : "InvalidClientRequestTokenException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The client request token is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidClientRequestTokenException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidClientRequestTokenException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidClientRequestTokenException",
        "variableName" : "invalidClientRequestTokenException",
        "variableType" : "InvalidClientRequestTokenException",
        "documentation" : null,
        "simpleType" : "InvalidClientRequestTokenException",
        "variableSetterType" : "InvalidClientRequestTokenException"
      },
      "wrapper" : false
    },
    "InvalidCommentIdException" : {
      "c2jName" : "InvalidCommentIdException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The comment ID is not in a valid format. Make sure that you have provided the full comment ID.</p>",
      "enums" : null,
      "errorCode" : "InvalidCommentIdException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidCommentIdException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidCommentIdException",
        "variableName" : "invalidCommentIdException",
        "variableType" : "InvalidCommentIdException",
        "documentation" : null,
        "simpleType" : "InvalidCommentIdException",
        "variableSetterType" : "InvalidCommentIdException"
      },
      "wrapper" : false
    },
    "InvalidCommitException" : {
      "c2jName" : "InvalidCommitException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified commit is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidCommitException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidCommitException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidCommitException",
        "variableName" : "invalidCommitException",
        "variableType" : "InvalidCommitException",
        "documentation" : null,
        "simpleType" : "InvalidCommitException",
        "variableSetterType" : "InvalidCommitException"
      },
      "wrapper" : false
    },
    "InvalidCommitIdException" : {
      "c2jName" : "InvalidCommitIdException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified commit ID is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidCommitIdException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidCommitIdException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidCommitIdException",
        "variableName" : "invalidCommitIdException",
        "variableType" : "InvalidCommitIdException",
        "documentation" : null,
        "simpleType" : "InvalidCommitIdException",
        "variableSetterType" : "InvalidCommitIdException"
      },
      "wrapper" : false
    },
    "InvalidContinuationTokenException" : {
      "c2jName" : "InvalidContinuationTokenException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified continuation token is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidContinuationTokenException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidContinuationTokenException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidContinuationTokenException",
        "variableName" : "invalidContinuationTokenException",
        "variableType" : "InvalidContinuationTokenException",
        "documentation" : null,
        "simpleType" : "InvalidContinuationTokenException",
        "variableSetterType" : "InvalidContinuationTokenException"
      },
      "wrapper" : false
    },
    "InvalidDescriptionException" : {
      "c2jName" : "InvalidDescriptionException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The pull request description is not valid. Descriptions are limited to 1,000 characters in length.</p>",
      "enums" : null,
      "errorCode" : "InvalidDescriptionException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidDescriptionException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidDescriptionException",
        "variableName" : "invalidDescriptionException",
        "variableType" : "InvalidDescriptionException",
        "documentation" : null,
        "simpleType" : "InvalidDescriptionException",
        "variableSetterType" : "InvalidDescriptionException"
      },
      "wrapper" : false
    },
    "InvalidDestinationCommitSpecifierException" : {
      "c2jName" : "InvalidDestinationCommitSpecifierException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The destination commit specifier is not valid. You must provide a valid branch name, tag, or full commit ID. </p>",
      "enums" : null,
      "errorCode" : "InvalidDestinationCommitSpecifierException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidDestinationCommitSpecifierException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidDestinationCommitSpecifierException",
        "variableName" : "invalidDestinationCommitSpecifierException",
        "variableType" : "InvalidDestinationCommitSpecifierException",
        "documentation" : null,
        "simpleType" : "InvalidDestinationCommitSpecifierException",
        "variableSetterType" : "InvalidDestinationCommitSpecifierException"
      },
      "wrapper" : false
    },
    "InvalidEmailException" : {
      "c2jName" : "InvalidEmailException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified email address either contains one or more characters that are not allowed, or it exceeds the maximum number of characters allowed for an email address.</p>",
      "enums" : null,
      "errorCode" : "InvalidEmailException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidEmailException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidEmailException",
        "variableName" : "invalidEmailException",
        "variableType" : "InvalidEmailException",
        "documentation" : null,
        "simpleType" : "InvalidEmailException",
        "variableSetterType" : "InvalidEmailException"
      },
      "wrapper" : false
    },
    "InvalidFileLocationException" : {
      "c2jName" : "InvalidFileLocationException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The location of the file is not valid. Make sure that you include the extension of the file as well as the file name.</p>",
      "enums" : null,
      "errorCode" : "InvalidFileLocationException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidFileLocationException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidFileLocationException",
        "variableName" : "invalidFileLocationException",
        "variableType" : "InvalidFileLocationException",
        "documentation" : null,
        "simpleType" : "InvalidFileLocationException",
        "variableSetterType" : "InvalidFileLocationException"
      },
      "wrapper" : false
    },
    "InvalidFileModeException" : {
      "c2jName" : "InvalidFileModeException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified file mode permission is not valid. For a list of valid file mode permissions, see <a>PutFile</a>. </p>",
      "enums" : null,
      "errorCode" : "InvalidFileModeException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidFileModeException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidFileModeException",
        "variableName" : "invalidFileModeException",
        "variableType" : "InvalidFileModeException",
        "documentation" : null,
        "simpleType" : "InvalidFileModeException",
        "variableSetterType" : "InvalidFileModeException"
      },
      "wrapper" : false
    },
    "InvalidFilePositionException" : {
      "c2jName" : "InvalidFilePositionException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The position is not valid. Make sure that the line number exists in the version of the file you want to comment on.</p>",
      "enums" : null,
      "errorCode" : "InvalidFilePositionException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidFilePositionException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidFilePositionException",
        "variableName" : "invalidFilePositionException",
        "variableType" : "InvalidFilePositionException",
        "documentation" : null,
        "simpleType" : "InvalidFilePositionException",
        "variableSetterType" : "InvalidFilePositionException"
      },
      "wrapper" : false
    },
    "InvalidMaxResultsException" : {
      "c2jName" : "InvalidMaxResultsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified number of maximum results is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidMaxResultsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidMaxResultsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidMaxResultsException",
        "variableName" : "invalidMaxResultsException",
        "variableType" : "InvalidMaxResultsException",
        "documentation" : null,
        "simpleType" : "InvalidMaxResultsException",
        "variableSetterType" : "InvalidMaxResultsException"
      },
      "wrapper" : false
    },
    "InvalidMergeOptionException" : {
      "c2jName" : "InvalidMergeOptionException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified merge option is not valid. The only valid value is FAST_FORWARD_MERGE.</p>",
      "enums" : null,
      "errorCode" : "InvalidMergeOptionException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidMergeOptionException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidMergeOptionException",
        "variableName" : "invalidMergeOptionException",
        "variableType" : "InvalidMergeOptionException",
        "documentation" : null,
        "simpleType" : "InvalidMergeOptionException",
        "variableSetterType" : "InvalidMergeOptionException"
      },
      "wrapper" : false
    },
    "InvalidOrderException" : {
      "c2jName" : "InvalidOrderException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified sort order is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidOrderException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidOrderException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidOrderException",
        "variableName" : "invalidOrderException",
        "variableType" : "InvalidOrderException",
        "documentation" : null,
        "simpleType" : "InvalidOrderException",
        "variableSetterType" : "InvalidOrderException"
      },
      "wrapper" : false
    },
    "InvalidParentCommitIdException" : {
      "c2jName" : "InvalidParentCommitIdException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The parent commit ID is not valid. The commit ID cannot be empty, and must match the head commit ID for the branch of the repository where you want to add or update a file.</p>",
      "enums" : null,
      "errorCode" : "InvalidParentCommitIdException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidParentCommitIdException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidParentCommitIdException",
        "variableName" : "invalidParentCommitIdException",
        "variableType" : "InvalidParentCommitIdException",
        "documentation" : null,
        "simpleType" : "InvalidParentCommitIdException",
        "variableSetterType" : "InvalidParentCommitIdException"
      },
      "wrapper" : false
    },
    "InvalidPathException" : {
      "c2jName" : "InvalidPathException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified path is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidPathException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidPathException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidPathException",
        "variableName" : "invalidPathException",
        "variableType" : "InvalidPathException",
        "documentation" : null,
        "simpleType" : "InvalidPathException",
        "variableSetterType" : "InvalidPathException"
      },
      "wrapper" : false
    },
    "InvalidPullRequestEventTypeException" : {
      "c2jName" : "InvalidPullRequestEventTypeException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The pull request event type is not valid. </p>",
      "enums" : null,
      "errorCode" : "InvalidPullRequestEventTypeException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidPullRequestEventTypeException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidPullRequestEventTypeException",
        "variableName" : "invalidPullRequestEventTypeException",
        "variableType" : "InvalidPullRequestEventTypeException",
        "documentation" : null,
        "simpleType" : "InvalidPullRequestEventTypeException",
        "variableSetterType" : "InvalidPullRequestEventTypeException"
      },
      "wrapper" : false
    },
    "InvalidPullRequestIdException" : {
      "c2jName" : "InvalidPullRequestIdException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The pull request ID is not valid. Make sure that you have provided the full ID and that the pull request is in the specified repository, and then try again.</p>",
      "enums" : null,
      "errorCode" : "InvalidPullRequestIdException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidPullRequestIdException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidPullRequestIdException",
        "variableName" : "invalidPullRequestIdException",
        "variableType" : "InvalidPullRequestIdException",
        "documentation" : null,
        "simpleType" : "InvalidPullRequestIdException",
        "variableSetterType" : "InvalidPullRequestIdException"
      },
      "wrapper" : false
    },
    "InvalidPullRequestStatusException" : {
      "c2jName" : "InvalidPullRequestStatusException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The pull request status is not valid. The only valid values are <code>OPEN</code> and <code>CLOSED</code>.</p>",
      "enums" : null,
      "errorCode" : "InvalidPullRequestStatusException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidPullRequestStatusException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidPullRequestStatusException",
        "variableName" : "invalidPullRequestStatusException",
        "variableType" : "InvalidPullRequestStatusException",
        "documentation" : null,
        "simpleType" : "InvalidPullRequestStatusException",
        "variableSetterType" : "InvalidPullRequestStatusException"
      },
      "wrapper" : false
    },
    "InvalidPullRequestStatusUpdateException" : {
      "c2jName" : "InvalidPullRequestStatusUpdateException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The pull request status update is not valid. The only valid update is from <code>OPEN</code> to <code>CLOSED</code>.</p>",
      "enums" : null,
      "errorCode" : "InvalidPullRequestStatusUpdateException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidPullRequestStatusUpdateException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidPullRequestStatusUpdateException",
        "variableName" : "invalidPullRequestStatusUpdateException",
        "variableType" : "InvalidPullRequestStatusUpdateException",
        "documentation" : null,
        "simpleType" : "InvalidPullRequestStatusUpdateException",
        "variableSetterType" : "InvalidPullRequestStatusUpdateException"
      },
      "wrapper" : false
    },
    "InvalidReferenceNameException" : {
      "c2jName" : "InvalidReferenceNameException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified reference name format is not valid. Reference names must conform to the Git references format, for example refs/heads/master. For more information, see <a href=\"https://git-scm.com/book/en/v2/Git-Internals-Git-References\">Git Internals - Git References</a> or consult your Git documentation.</p>",
      "enums" : null,
      "errorCode" : "InvalidReferenceNameException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidReferenceNameException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidReferenceNameException",
        "variableName" : "invalidReferenceNameException",
        "variableType" : "InvalidReferenceNameException",
        "documentation" : null,
        "simpleType" : "InvalidReferenceNameException",
        "variableSetterType" : "InvalidReferenceNameException"
      },
      "wrapper" : false
    },
    "InvalidRelativeFileVersionEnumException" : {
      "c2jName" : "InvalidRelativeFileVersionEnumException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Either the enum is not in a valid format, or the specified file version enum is not valid in respect to the current file version.</p>",
      "enums" : null,
      "errorCode" : "InvalidRelativeFileVersionEnumException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRelativeFileVersionEnumException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRelativeFileVersionEnumException",
        "variableName" : "invalidRelativeFileVersionEnumException",
        "variableType" : "InvalidRelativeFileVersionEnumException",
        "documentation" : null,
        "simpleType" : "InvalidRelativeFileVersionEnumException",
        "variableSetterType" : "InvalidRelativeFileVersionEnumException"
      },
      "wrapper" : false
    },
    "InvalidRepositoryDescriptionException" : {
      "c2jName" : "InvalidRepositoryDescriptionException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified repository description is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidRepositoryDescriptionException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRepositoryDescriptionException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRepositoryDescriptionException",
        "variableName" : "invalidRepositoryDescriptionException",
        "variableType" : "InvalidRepositoryDescriptionException",
        "documentation" : null,
        "simpleType" : "InvalidRepositoryDescriptionException",
        "variableSetterType" : "InvalidRepositoryDescriptionException"
      },
      "wrapper" : false
    },
    "InvalidRepositoryNameException" : {
      "c2jName" : "InvalidRepositoryNameException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
      "enums" : null,
      "errorCode" : "InvalidRepositoryNameException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRepositoryNameException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRepositoryNameException",
        "variableName" : "invalidRepositoryNameException",
        "variableType" : "InvalidRepositoryNameException",
        "documentation" : null,
        "simpleType" : "InvalidRepositoryNameException",
        "variableSetterType" : "InvalidRepositoryNameException"
      },
      "wrapper" : false
    },
    "InvalidRepositoryTriggerBranchNameException" : {
      "c2jName" : "InvalidRepositoryTriggerBranchNameException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>One or more branch names specified for the trigger is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidRepositoryTriggerBranchNameException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRepositoryTriggerBranchNameException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRepositoryTriggerBranchNameException",
        "variableName" : "invalidRepositoryTriggerBranchNameException",
        "variableType" : "InvalidRepositoryTriggerBranchNameException",
        "documentation" : null,
        "simpleType" : "InvalidRepositoryTriggerBranchNameException",
        "variableSetterType" : "InvalidRepositoryTriggerBranchNameException"
      },
      "wrapper" : false
    },
    "InvalidRepositoryTriggerCustomDataException" : {
      "c2jName" : "InvalidRepositoryTriggerCustomDataException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The custom data provided for the trigger is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidRepositoryTriggerCustomDataException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRepositoryTriggerCustomDataException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRepositoryTriggerCustomDataException",
        "variableName" : "invalidRepositoryTriggerCustomDataException",
        "variableType" : "InvalidRepositoryTriggerCustomDataException",
        "documentation" : null,
        "simpleType" : "InvalidRepositoryTriggerCustomDataException",
        "variableSetterType" : "InvalidRepositoryTriggerCustomDataException"
      },
      "wrapper" : false
    },
    "InvalidRepositoryTriggerDestinationArnException" : {
      "c2jName" : "InvalidRepositoryTriggerDestinationArnException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The Amazon Resource Name (ARN) for the trigger is not valid for the specified destination. The most common reason for this error is that the ARN does not meet the requirements for the service type.</p>",
      "enums" : null,
      "errorCode" : "InvalidRepositoryTriggerDestinationArnException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRepositoryTriggerDestinationArnException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRepositoryTriggerDestinationArnException",
        "variableName" : "invalidRepositoryTriggerDestinationArnException",
        "variableType" : "InvalidRepositoryTriggerDestinationArnException",
        "documentation" : null,
        "simpleType" : "InvalidRepositoryTriggerDestinationArnException",
        "variableSetterType" : "InvalidRepositoryTriggerDestinationArnException"
      },
      "wrapper" : false
    },
    "InvalidRepositoryTriggerEventsException" : {
      "c2jName" : "InvalidRepositoryTriggerEventsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>One or more events specified for the trigger is not valid. Check to make sure that all events specified match the requirements for allowed events.</p>",
      "enums" : null,
      "errorCode" : "InvalidRepositoryTriggerEventsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRepositoryTriggerEventsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRepositoryTriggerEventsException",
        "variableName" : "invalidRepositoryTriggerEventsException",
        "variableType" : "InvalidRepositoryTriggerEventsException",
        "documentation" : null,
        "simpleType" : "InvalidRepositoryTriggerEventsException",
        "variableSetterType" : "InvalidRepositoryTriggerEventsException"
      },
      "wrapper" : false
    },
    "InvalidRepositoryTriggerNameException" : {
      "c2jName" : "InvalidRepositoryTriggerNameException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The name of the trigger is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidRepositoryTriggerNameException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRepositoryTriggerNameException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRepositoryTriggerNameException",
        "variableName" : "invalidRepositoryTriggerNameException",
        "variableType" : "InvalidRepositoryTriggerNameException",
        "documentation" : null,
        "simpleType" : "InvalidRepositoryTriggerNameException",
        "variableSetterType" : "InvalidRepositoryTriggerNameException"
      },
      "wrapper" : false
    },
    "InvalidRepositoryTriggerRegionException" : {
      "c2jName" : "InvalidRepositoryTriggerRegionException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The region for the trigger target does not match the region for the repository. Triggers must be created in the same region as the target for the trigger.</p>",
      "enums" : null,
      "errorCode" : "InvalidRepositoryTriggerRegionException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRepositoryTriggerRegionException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRepositoryTriggerRegionException",
        "variableName" : "invalidRepositoryTriggerRegionException",
        "variableType" : "InvalidRepositoryTriggerRegionException",
        "documentation" : null,
        "simpleType" : "InvalidRepositoryTriggerRegionException",
        "variableSetterType" : "InvalidRepositoryTriggerRegionException"
      },
      "wrapper" : false
    },
    "InvalidSortByException" : {
      "c2jName" : "InvalidSortByException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified sort by value is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidSortByException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidSortByException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidSortByException",
        "variableName" : "invalidSortByException",
        "variableType" : "InvalidSortByException",
        "documentation" : null,
        "simpleType" : "InvalidSortByException",
        "variableSetterType" : "InvalidSortByException"
      },
      "wrapper" : false
    },
    "InvalidSourceCommitSpecifierException" : {
      "c2jName" : "InvalidSourceCommitSpecifierException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The source commit specifier is not valid. You must provide a valid branch name, tag, or full commit ID.</p>",
      "enums" : null,
      "errorCode" : "InvalidSourceCommitSpecifierException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidSourceCommitSpecifierException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidSourceCommitSpecifierException",
        "variableName" : "invalidSourceCommitSpecifierException",
        "variableType" : "InvalidSourceCommitSpecifierException",
        "documentation" : null,
        "simpleType" : "InvalidSourceCommitSpecifierException",
        "variableSetterType" : "InvalidSourceCommitSpecifierException"
      },
      "wrapper" : false
    },
    "InvalidTargetException" : {
      "c2jName" : "InvalidTargetException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The target for the pull request is not valid. A target must contain the full values for the repository name, source branch, and destination branch for the pull request.</p>",
      "enums" : null,
      "errorCode" : "InvalidTargetException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidTargetException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidTargetException",
        "variableName" : "invalidTargetException",
        "variableType" : "InvalidTargetException",
        "documentation" : null,
        "simpleType" : "InvalidTargetException",
        "variableSetterType" : "InvalidTargetException"
      },
      "wrapper" : false
    },
    "InvalidTargetsException" : {
      "c2jName" : "InvalidTargetsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The targets for the pull request is not valid or not in a valid format. Targets are a list of target objects. Each target object must contain the full values for the repository name, source branch, and destination branch for a pull request.</p>",
      "enums" : null,
      "errorCode" : "InvalidTargetsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidTargetsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidTargetsException",
        "variableName" : "invalidTargetsException",
        "variableType" : "InvalidTargetsException",
        "documentation" : null,
        "simpleType" : "InvalidTargetsException",
        "variableSetterType" : "InvalidTargetsException"
      },
      "wrapper" : false
    },
    "InvalidTitleException" : {
      "c2jName" : "InvalidTitleException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The title of the pull request is not valid. Pull request titles cannot exceed 100 characters in length.</p>",
      "enums" : null,
      "errorCode" : "InvalidTitleException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidTitleException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidTitleException",
        "variableName" : "invalidTitleException",
        "variableType" : "InvalidTitleException",
        "documentation" : null,
        "simpleType" : "InvalidTitleException",
        "variableSetterType" : "InvalidTitleException"
      },
      "wrapper" : false
    },
    "ListBranchesRequest" : {
      "c2jName" : "ListBranchesInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a list branches operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListBranches",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.ListBranches",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository that contains the branches.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the branches.</p>\n@param repositoryName The name of the repository that contains the branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository that contains the branches.</p>\n@return The name of the repository that contains the branches.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository that contains the branches.</p>\n@param repositoryName The name of the repository that contains the branches.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository that contains the branches.</p>\n@param repositoryName The name of the repository that contains the branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository that contains the branches.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that allows the operation to batch the results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results.</p>\n@param nextToken An enumeration token that allows the operation to batch the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results.</p>\n@return An enumeration token that allows the operation to batch the results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results.</p>\n@param nextToken An enumeration token that allows the operation to batch the results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results.</p>\n@param nextToken An enumeration token that allows the operation to batch the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that allows the operation to batch the results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that allows the operation to batch the results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results.</p>\n@param nextToken An enumeration token that allows the operation to batch the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results.</p>\n@return An enumeration token that allows the operation to batch the results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results.</p>\n@param nextToken An enumeration token that allows the operation to batch the results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results.</p>\n@param nextToken An enumeration token that allows the operation to batch the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that allows the operation to batch the results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that contains the branches.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the branches.</p>\n@param repositoryName The name of the repository that contains the branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository that contains the branches.</p>\n@return The name of the repository that contains the branches.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository that contains the branches.</p>\n@param repositoryName The name of the repository that contains the branches.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository that contains the branches.</p>\n@param repositoryName The name of the repository that contains the branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository that contains the branches.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "ListBranchesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListBranchesRequest",
        "variableName" : "listBranchesRequest",
        "variableType" : "ListBranchesRequest",
        "documentation" : null,
        "simpleType" : "ListBranchesRequest",
        "variableSetterType" : "ListBranchesRequest"
      },
      "wrapper" : false
    },
    "ListBranchesResult" : {
      "c2jName" : "ListBranchesOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a list branches operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "branches",
        "c2jShape" : "BranchNameList",
        "deprecated" : false,
        "documentation" : "<p>The list of branch names.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The list of branch names.</p>\n@param branches The list of branch names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBranches",
        "getterDocumentation" : "/**<p>The list of branch names.</p>\n@return The list of branch names.*/",
        "getterMethodName" : "getBranches",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "branches",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "branches",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "BranchName",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Branches",
        "setterDocumentation" : "/**<p>The list of branch names.</p>\n@param branches The list of branch names.*/",
        "setterMethodName" : "setBranches",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "branches",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The list of branch names.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setBranches(java.util.Collection)} or {@link #withBranches(java.util.Collection)} if you want to override the existing values.</p>\n@param branches The list of branch names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "branches",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The list of branch names.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that returns the batch of the results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that returns the batch of the results.</p>\n@param nextToken An enumeration token that returns the batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that returns the batch of the results.</p>\n@return An enumeration token that returns the batch of the results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that returns the batch of the results.</p>\n@param nextToken An enumeration token that returns the batch of the results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that returns the batch of the results.</p>\n@param nextToken An enumeration token that returns the batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that returns the batch of the results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Branches" : {
          "c2jName" : "branches",
          "c2jShape" : "BranchNameList",
          "deprecated" : false,
          "documentation" : "<p>The list of branch names.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The list of branch names.</p>\n@param branches The list of branch names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBranches",
          "getterDocumentation" : "/**<p>The list of branch names.</p>\n@return The list of branch names.*/",
          "getterMethodName" : "getBranches",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "branches",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "branches",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "BranchName",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Branches",
          "setterDocumentation" : "/**<p>The list of branch names.</p>\n@param branches The list of branch names.*/",
          "setterMethodName" : "setBranches",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "branches",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The list of branch names.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setBranches(java.util.Collection)} or {@link #withBranches(java.util.Collection)} if you want to override the existing values.</p>\n@param branches The list of branch names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "branches",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The list of branch names.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that returns the batch of the results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that returns the batch of the results.</p>\n@param nextToken An enumeration token that returns the batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that returns the batch of the results.</p>\n@return An enumeration token that returns the batch of the results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that returns the batch of the results.</p>\n@param nextToken An enumeration token that returns the batch of the results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that returns the batch of the results.</p>\n@param nextToken An enumeration token that returns the batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that returns the batch of the results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListBranchesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListBranchesResult",
        "variableName" : "listBranchesResult",
        "variableType" : "ListBranchesResult",
        "documentation" : null,
        "simpleType" : "ListBranchesResult",
        "variableSetterType" : "ListBranchesResult"
      },
      "wrapper" : false
    },
    "ListPullRequestsRequest" : {
      "c2jName" : "ListPullRequestsInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListPullRequests",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.ListPullRequests",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository for which you want to list pull requests.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository for which you want to list pull requests.</p>\n@param repositoryName The name of the repository for which you want to list pull requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository for which you want to list pull requests.</p>\n@return The name of the repository for which you want to list pull requests.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository for which you want to list pull requests.</p>\n@param repositoryName The name of the repository for which you want to list pull requests.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository for which you want to list pull requests.</p>\n@param repositoryName The name of the repository for which you want to list pull requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository for which you want to list pull requests.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "authorArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.</p>\n@param authorArn Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAuthorArn",
        "getterDocumentation" : "/**<p>Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.</p>\n@return Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.*/",
        "getterMethodName" : "getAuthorArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "authorArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "authorArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AuthorArn",
        "setterDocumentation" : "/**<p>Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.</p>\n@param authorArn Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.*/",
        "setterMethodName" : "setAuthorArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "authorArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.</p>\n@param authorArn Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "authorArn",
          "variableType" : "String",
          "documentation" : "<p>Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "pullRequestStatus",
        "c2jShape" : "PullRequestStatusEnum",
        "deprecated" : false,
        "documentation" : "<p>Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.</p>",
        "enumType" : "PullRequestStatusEnum",
        "fluentSetterDocumentation" : "/**<p>Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.</p>\n@param pullRequestStatus Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestStatusEnum*/",
        "fluentSetterMethodName" : "withPullRequestStatus",
        "getterDocumentation" : "/**<p>Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.</p>\n@return Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.\n@see PullRequestStatusEnum*/",
        "getterMethodName" : "getPullRequestStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestStatus",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestStatus",
        "setterDocumentation" : "/**<p>Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.</p>\n@param pullRequestStatus Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.\n@see PullRequestStatusEnum*/",
        "setterMethodName" : "setPullRequestStatus",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.</p>\n@param pullRequestStatus Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestStatusEnum*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestStatus",
          "variableType" : "String",
          "documentation" : "<p>Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@return An enumeration token that when provided in a request, returns the next batch of the results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>A non-negative integer used to limit the number of returned results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@return A non-negative integer used to limit the number of returned results.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "maxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "maxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "setterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>A non-negative integer used to limit the number of returned results.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AuthorArn" : {
          "c2jName" : "authorArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.</p>\n@param authorArn Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAuthorArn",
          "getterDocumentation" : "/**<p>Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.</p>\n@return Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.*/",
          "getterMethodName" : "getAuthorArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "authorArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "authorArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AuthorArn",
          "setterDocumentation" : "/**<p>Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.</p>\n@param authorArn Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.*/",
          "setterMethodName" : "setAuthorArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "authorArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.</p>\n@param authorArn Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "authorArn",
            "variableType" : "String",
            "documentation" : "<p>Optional. The Amazon Resource Name (ARN) of the user who created the pull request. If used, this filters the results to pull requests created by that user.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>A non-negative integer used to limit the number of returned results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@return A non-negative integer used to limit the number of returned results.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "maxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "maxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "setterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>A non-negative integer used to limit the number of returned results.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@return An enumeration token that when provided in a request, returns the next batch of the results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestStatus" : {
          "c2jName" : "pullRequestStatus",
          "c2jShape" : "PullRequestStatusEnum",
          "deprecated" : false,
          "documentation" : "<p>Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.</p>",
          "enumType" : "PullRequestStatusEnum",
          "fluentSetterDocumentation" : "/**<p>Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.</p>\n@param pullRequestStatus Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestStatusEnum*/",
          "fluentSetterMethodName" : "withPullRequestStatus",
          "getterDocumentation" : "/**<p>Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.</p>\n@return Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.\n@see PullRequestStatusEnum*/",
          "getterMethodName" : "getPullRequestStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestStatus",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestStatus",
          "setterDocumentation" : "/**<p>Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.</p>\n@param pullRequestStatus Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.\n@see PullRequestStatusEnum*/",
          "setterMethodName" : "setPullRequestStatus",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.</p>\n@param pullRequestStatus Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestStatusEnum*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestStatus",
            "variableType" : "String",
            "documentation" : "<p>Optional. The status of the pull request. If used, this refines the results to the pull requests that match the specified status.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository for which you want to list pull requests.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository for which you want to list pull requests.</p>\n@param repositoryName The name of the repository for which you want to list pull requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository for which you want to list pull requests.</p>\n@return The name of the repository for which you want to list pull requests.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository for which you want to list pull requests.</p>\n@param repositoryName The name of the repository for which you want to list pull requests.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository for which you want to list pull requests.</p>\n@param repositoryName The name of the repository for which you want to list pull requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository for which you want to list pull requests.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "ListPullRequestsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListPullRequestsRequest",
        "variableName" : "listPullRequestsRequest",
        "variableType" : "ListPullRequestsRequest",
        "documentation" : null,
        "simpleType" : "ListPullRequestsRequest",
        "variableSetterType" : "ListPullRequestsRequest"
      },
      "wrapper" : false
    },
    "ListPullRequestsResult" : {
      "c2jName" : "ListPullRequestsOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "pullRequestIds",
        "c2jShape" : "PullRequestIdList",
        "deprecated" : false,
        "documentation" : "<p>The system-generated IDs of the pull requests.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated IDs of the pull requests.</p>\n@param pullRequestIds The system-generated IDs of the pull requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestIds",
        "getterDocumentation" : "/**<p>The system-generated IDs of the pull requests.</p>\n@return The system-generated IDs of the pull requests.*/",
        "getterMethodName" : "getPullRequestIds",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestIds",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "PullRequestId",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "PullRequestIds",
        "setterDocumentation" : "/**<p>The system-generated IDs of the pull requests.</p>\n@param pullRequestIds The system-generated IDs of the pull requests.*/",
        "setterMethodName" : "setPullRequestIds",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "pullRequestIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated IDs of the pull requests.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPullRequestIds(java.util.Collection)} or {@link #withPullRequestIds(java.util.Collection)} if you want to override the existing values.</p>\n@param pullRequestIds The system-generated IDs of the pull requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "pullRequestIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The system-generated IDs of the pull requests.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@return An enumeration token that when provided in a request, returns the next batch of the results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@return An enumeration token that when provided in a request, returns the next batch of the results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestIds" : {
          "c2jName" : "pullRequestIds",
          "c2jShape" : "PullRequestIdList",
          "deprecated" : false,
          "documentation" : "<p>The system-generated IDs of the pull requests.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated IDs of the pull requests.</p>\n@param pullRequestIds The system-generated IDs of the pull requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestIds",
          "getterDocumentation" : "/**<p>The system-generated IDs of the pull requests.</p>\n@return The system-generated IDs of the pull requests.*/",
          "getterMethodName" : "getPullRequestIds",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestIds",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "PullRequestId",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "PullRequestIds",
          "setterDocumentation" : "/**<p>The system-generated IDs of the pull requests.</p>\n@param pullRequestIds The system-generated IDs of the pull requests.*/",
          "setterMethodName" : "setPullRequestIds",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "pullRequestIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated IDs of the pull requests.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPullRequestIds(java.util.Collection)} or {@link #withPullRequestIds(java.util.Collection)} if you want to override the existing values.</p>\n@param pullRequestIds The system-generated IDs of the pull requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "pullRequestIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The system-generated IDs of the pull requests.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "pullRequestIds" ],
      "shapeName" : "ListPullRequestsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListPullRequestsResult",
        "variableName" : "listPullRequestsResult",
        "variableType" : "ListPullRequestsResult",
        "documentation" : null,
        "simpleType" : "ListPullRequestsResult",
        "variableSetterType" : "ListPullRequestsResult"
      },
      "wrapper" : false
    },
    "ListRepositoriesRequest" : {
      "c2jName" : "ListRepositoriesInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a list repositories operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListRepositories",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.ListRepositories",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@return An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sortBy",
        "c2jShape" : "SortByEnum",
        "deprecated" : false,
        "documentation" : "<p>The criteria used to sort the results of a list repositories operation.</p>",
        "enumType" : "SortByEnum",
        "fluentSetterDocumentation" : "/**<p>The criteria used to sort the results of a list repositories operation.</p>\n@param sortBy The criteria used to sort the results of a list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see SortByEnum*/",
        "fluentSetterMethodName" : "withSortBy",
        "getterDocumentation" : "/**<p>The criteria used to sort the results of a list repositories operation.</p>\n@return The criteria used to sort the results of a list repositories operation.\n@see SortByEnum*/",
        "getterMethodName" : "getSortBy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sortBy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sortBy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SortBy",
        "setterDocumentation" : "/**<p>The criteria used to sort the results of a list repositories operation.</p>\n@param sortBy The criteria used to sort the results of a list repositories operation.\n@see SortByEnum*/",
        "setterMethodName" : "setSortBy",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "sortBy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The criteria used to sort the results of a list repositories operation.</p>\n@param sortBy The criteria used to sort the results of a list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see SortByEnum*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "sortBy",
          "variableType" : "String",
          "documentation" : "<p>The criteria used to sort the results of a list repositories operation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "order",
        "c2jShape" : "OrderEnum",
        "deprecated" : false,
        "documentation" : "<p>The order in which to sort the results of a list repositories operation.</p>",
        "enumType" : "OrderEnum",
        "fluentSetterDocumentation" : "/**<p>The order in which to sort the results of a list repositories operation.</p>\n@param order The order in which to sort the results of a list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrderEnum*/",
        "fluentSetterMethodName" : "withOrder",
        "getterDocumentation" : "/**<p>The order in which to sort the results of a list repositories operation.</p>\n@return The order in which to sort the results of a list repositories operation.\n@see OrderEnum*/",
        "getterMethodName" : "getOrder",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "order",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "order",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Order",
        "setterDocumentation" : "/**<p>The order in which to sort the results of a list repositories operation.</p>\n@param order The order in which to sort the results of a list repositories operation.\n@see OrderEnum*/",
        "setterMethodName" : "setOrder",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "order",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The order in which to sort the results of a list repositories operation.</p>\n@param order The order in which to sort the results of a list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrderEnum*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "order",
          "variableType" : "String",
          "documentation" : "<p>The order in which to sort the results of a list repositories operation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@return An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Order" : {
          "c2jName" : "order",
          "c2jShape" : "OrderEnum",
          "deprecated" : false,
          "documentation" : "<p>The order in which to sort the results of a list repositories operation.</p>",
          "enumType" : "OrderEnum",
          "fluentSetterDocumentation" : "/**<p>The order in which to sort the results of a list repositories operation.</p>\n@param order The order in which to sort the results of a list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrderEnum*/",
          "fluentSetterMethodName" : "withOrder",
          "getterDocumentation" : "/**<p>The order in which to sort the results of a list repositories operation.</p>\n@return The order in which to sort the results of a list repositories operation.\n@see OrderEnum*/",
          "getterMethodName" : "getOrder",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "order",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "order",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Order",
          "setterDocumentation" : "/**<p>The order in which to sort the results of a list repositories operation.</p>\n@param order The order in which to sort the results of a list repositories operation.\n@see OrderEnum*/",
          "setterMethodName" : "setOrder",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "order",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The order in which to sort the results of a list repositories operation.</p>\n@param order The order in which to sort the results of a list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrderEnum*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "order",
            "variableType" : "String",
            "documentation" : "<p>The order in which to sort the results of a list repositories operation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SortBy" : {
          "c2jName" : "sortBy",
          "c2jShape" : "SortByEnum",
          "deprecated" : false,
          "documentation" : "<p>The criteria used to sort the results of a list repositories operation.</p>",
          "enumType" : "SortByEnum",
          "fluentSetterDocumentation" : "/**<p>The criteria used to sort the results of a list repositories operation.</p>\n@param sortBy The criteria used to sort the results of a list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see SortByEnum*/",
          "fluentSetterMethodName" : "withSortBy",
          "getterDocumentation" : "/**<p>The criteria used to sort the results of a list repositories operation.</p>\n@return The criteria used to sort the results of a list repositories operation.\n@see SortByEnum*/",
          "getterMethodName" : "getSortBy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sortBy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sortBy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SortBy",
          "setterDocumentation" : "/**<p>The criteria used to sort the results of a list repositories operation.</p>\n@param sortBy The criteria used to sort the results of a list repositories operation.\n@see SortByEnum*/",
          "setterMethodName" : "setSortBy",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "sortBy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The criteria used to sort the results of a list repositories operation.</p>\n@param sortBy The criteria used to sort the results of a list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see SortByEnum*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "sortBy",
            "variableType" : "String",
            "documentation" : "<p>The criteria used to sort the results of a list repositories operation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListRepositoriesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListRepositoriesRequest",
        "variableName" : "listRepositoriesRequest",
        "variableType" : "ListRepositoriesRequest",
        "documentation" : null,
        "simpleType" : "ListRepositoriesRequest",
        "variableSetterType" : "ListRepositoriesRequest"
      },
      "wrapper" : false
    },
    "ListRepositoriesResult" : {
      "c2jName" : "ListRepositoriesOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a list repositories operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositories",
        "c2jShape" : "RepositoryNameIdPairList",
        "deprecated" : false,
        "documentation" : "<p>Lists the repositories called by the list repositories operation.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Lists the repositories called by the list repositories operation.</p>\n@param repositories Lists the repositories called by the list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositories",
        "getterDocumentation" : "/**<p>Lists the repositories called by the list repositories operation.</p>\n@return Lists the repositories called by the list repositories operation.*/",
        "getterMethodName" : "getRepositories",
        "getterModel" : {
          "returnType" : "java.util.List<RepositoryNameIdPair>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositories",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositories",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryNameIdPair",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "RepositoryNameIdPair",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "RepositoryNameIdPair",
              "variableName" : "member",
              "variableType" : "RepositoryNameIdPair",
              "documentation" : "",
              "simpleType" : "RepositoryNameIdPair",
              "variableSetterType" : "RepositoryNameIdPair"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "RepositoryNameIdPair",
              "variableName" : "member",
              "variableType" : "RepositoryNameIdPair",
              "documentation" : "",
              "simpleType" : "RepositoryNameIdPair",
              "variableSetterType" : "RepositoryNameIdPair"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "RepositoryNameIdPair",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "RepositoryNameIdPair",
          "templateImplType" : "java.util.ArrayList<RepositoryNameIdPair>",
          "templateType" : "java.util.List<RepositoryNameIdPair>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Repositories",
        "setterDocumentation" : "/**<p>Lists the repositories called by the list repositories operation.</p>\n@param repositories Lists the repositories called by the list repositories operation.*/",
        "setterMethodName" : "setRepositories",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<RepositoryNameIdPair>",
          "variableName" : "repositories",
          "variableType" : "java.util.List<RepositoryNameIdPair>",
          "documentation" : "",
          "simpleType" : "List<RepositoryNameIdPair>",
          "variableSetterType" : "java.util.Collection<RepositoryNameIdPair>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Lists the repositories called by the list repositories operation.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositories(java.util.Collection)} or {@link #withRepositories(java.util.Collection)} if you want to override the existing values.</p>\n@param repositories Lists the repositories called by the list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<RepositoryNameIdPair>",
          "variableName" : "repositories",
          "variableType" : "java.util.List<RepositoryNameIdPair>",
          "documentation" : "<p>Lists the repositories called by the list repositories operation.</p>",
          "simpleType" : "List<RepositoryNameIdPair>",
          "variableSetterType" : "java.util.Collection<RepositoryNameIdPair>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@return An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@return An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Repositories" : {
          "c2jName" : "repositories",
          "c2jShape" : "RepositoryNameIdPairList",
          "deprecated" : false,
          "documentation" : "<p>Lists the repositories called by the list repositories operation.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Lists the repositories called by the list repositories operation.</p>\n@param repositories Lists the repositories called by the list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositories",
          "getterDocumentation" : "/**<p>Lists the repositories called by the list repositories operation.</p>\n@return Lists the repositories called by the list repositories operation.*/",
          "getterMethodName" : "getRepositories",
          "getterModel" : {
            "returnType" : "java.util.List<RepositoryNameIdPair>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositories",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositories",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryNameIdPair",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "RepositoryNameIdPair",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "RepositoryNameIdPair",
                "variableName" : "member",
                "variableType" : "RepositoryNameIdPair",
                "documentation" : "",
                "simpleType" : "RepositoryNameIdPair",
                "variableSetterType" : "RepositoryNameIdPair"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "RepositoryNameIdPair",
                "variableName" : "member",
                "variableType" : "RepositoryNameIdPair",
                "documentation" : "",
                "simpleType" : "RepositoryNameIdPair",
                "variableSetterType" : "RepositoryNameIdPair"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "RepositoryNameIdPair",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "RepositoryNameIdPair",
            "templateImplType" : "java.util.ArrayList<RepositoryNameIdPair>",
            "templateType" : "java.util.List<RepositoryNameIdPair>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Repositories",
          "setterDocumentation" : "/**<p>Lists the repositories called by the list repositories operation.</p>\n@param repositories Lists the repositories called by the list repositories operation.*/",
          "setterMethodName" : "setRepositories",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<RepositoryNameIdPair>",
            "variableName" : "repositories",
            "variableType" : "java.util.List<RepositoryNameIdPair>",
            "documentation" : "",
            "simpleType" : "List<RepositoryNameIdPair>",
            "variableSetterType" : "java.util.Collection<RepositoryNameIdPair>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Lists the repositories called by the list repositories operation.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositories(java.util.Collection)} or {@link #withRepositories(java.util.Collection)} if you want to override the existing values.</p>\n@param repositories Lists the repositories called by the list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<RepositoryNameIdPair>",
            "variableName" : "repositories",
            "variableType" : "java.util.List<RepositoryNameIdPair>",
            "documentation" : "<p>Lists the repositories called by the list repositories operation.</p>",
            "simpleType" : "List<RepositoryNameIdPair>",
            "variableSetterType" : "java.util.Collection<RepositoryNameIdPair>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListRepositoriesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListRepositoriesResult",
        "variableName" : "listRepositoriesResult",
        "variableType" : "ListRepositoriesResult",
        "documentation" : null,
        "simpleType" : "ListRepositoriesResult",
        "variableSetterType" : "ListRepositoriesResult"
      },
      "wrapper" : false
    },
    "Location" : {
      "c2jName" : "Location",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about the location of a change or comment in the comparison between two commits or a pull request.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "filePath",
        "c2jShape" : "Path",
        "deprecated" : false,
        "documentation" : "<p>The name of the file being compared, including its extension and subdirectory, if any.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the file being compared, including its extension and subdirectory, if any.</p>\n@param filePath The name of the file being compared, including its extension and subdirectory, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilePath",
        "getterDocumentation" : "/**<p>The name of the file being compared, including its extension and subdirectory, if any.</p>\n@return The name of the file being compared, including its extension and subdirectory, if any.*/",
        "getterMethodName" : "getFilePath",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "filePath",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "filePath",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FilePath",
        "setterDocumentation" : "/**<p>The name of the file being compared, including its extension and subdirectory, if any.</p>\n@param filePath The name of the file being compared, including its extension and subdirectory, if any.*/",
        "setterMethodName" : "setFilePath",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "filePath",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the file being compared, including its extension and subdirectory, if any.</p>\n@param filePath The name of the file being compared, including its extension and subdirectory, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "filePath",
          "variableType" : "String",
          "documentation" : "<p>The name of the file being compared, including its extension and subdirectory, if any.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "filePosition",
        "c2jShape" : "Position",
        "deprecated" : false,
        "documentation" : "<p>The position of a change within a compared file, in line number format.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The position of a change within a compared file, in line number format.</p>\n@param filePosition The position of a change within a compared file, in line number format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilePosition",
        "getterDocumentation" : "/**<p>The position of a change within a compared file, in line number format.</p>\n@return The position of a change within a compared file, in line number format.*/",
        "getterMethodName" : "getFilePosition",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "filePosition",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "filePosition",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "FilePosition",
        "setterDocumentation" : "/**<p>The position of a change within a compared file, in line number format.</p>\n@param filePosition The position of a change within a compared file, in line number format.*/",
        "setterMethodName" : "setFilePosition",
        "setterModel" : {
          "variableDeclarationType" : "Long",
          "variableName" : "filePosition",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The position of a change within a compared file, in line number format.</p>\n@param filePosition The position of a change within a compared file, in line number format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Long",
          "variableName" : "filePosition",
          "variableType" : "Long",
          "documentation" : "<p>The position of a change within a compared file, in line number format.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "relativeFileVersion",
        "c2jShape" : "RelativeFileVersionEnum",
        "deprecated" : false,
        "documentation" : "<p>In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.</p>",
        "enumType" : "RelativeFileVersionEnum",
        "fluentSetterDocumentation" : "/**<p>In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.</p>\n@param relativeFileVersion In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RelativeFileVersionEnum*/",
        "fluentSetterMethodName" : "withRelativeFileVersion",
        "getterDocumentation" : "/**<p>In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.</p>\n@return In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.\n@see RelativeFileVersionEnum*/",
        "getterMethodName" : "getRelativeFileVersion",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "relativeFileVersion",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "relativeFileVersion",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RelativeFileVersion",
        "setterDocumentation" : "/**<p>In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.</p>\n@param relativeFileVersion In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.\n@see RelativeFileVersionEnum*/",
        "setterMethodName" : "setRelativeFileVersion",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "relativeFileVersion",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.</p>\n@param relativeFileVersion In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RelativeFileVersionEnum*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "relativeFileVersion",
          "variableType" : "String",
          "documentation" : "<p>In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FilePath" : {
          "c2jName" : "filePath",
          "c2jShape" : "Path",
          "deprecated" : false,
          "documentation" : "<p>The name of the file being compared, including its extension and subdirectory, if any.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the file being compared, including its extension and subdirectory, if any.</p>\n@param filePath The name of the file being compared, including its extension and subdirectory, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilePath",
          "getterDocumentation" : "/**<p>The name of the file being compared, including its extension and subdirectory, if any.</p>\n@return The name of the file being compared, including its extension and subdirectory, if any.*/",
          "getterMethodName" : "getFilePath",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "filePath",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "filePath",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FilePath",
          "setterDocumentation" : "/**<p>The name of the file being compared, including its extension and subdirectory, if any.</p>\n@param filePath The name of the file being compared, including its extension and subdirectory, if any.*/",
          "setterMethodName" : "setFilePath",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "filePath",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the file being compared, including its extension and subdirectory, if any.</p>\n@param filePath The name of the file being compared, including its extension and subdirectory, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "filePath",
            "variableType" : "String",
            "documentation" : "<p>The name of the file being compared, including its extension and subdirectory, if any.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FilePosition" : {
          "c2jName" : "filePosition",
          "c2jShape" : "Position",
          "deprecated" : false,
          "documentation" : "<p>The position of a change within a compared file, in line number format.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The position of a change within a compared file, in line number format.</p>\n@param filePosition The position of a change within a compared file, in line number format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilePosition",
          "getterDocumentation" : "/**<p>The position of a change within a compared file, in line number format.</p>\n@return The position of a change within a compared file, in line number format.*/",
          "getterMethodName" : "getFilePosition",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "filePosition",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "filePosition",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "FilePosition",
          "setterDocumentation" : "/**<p>The position of a change within a compared file, in line number format.</p>\n@param filePosition The position of a change within a compared file, in line number format.*/",
          "setterMethodName" : "setFilePosition",
          "setterModel" : {
            "variableDeclarationType" : "Long",
            "variableName" : "filePosition",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The position of a change within a compared file, in line number format.</p>\n@param filePosition The position of a change within a compared file, in line number format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Long",
            "variableName" : "filePosition",
            "variableType" : "Long",
            "documentation" : "<p>The position of a change within a compared file, in line number format.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "RelativeFileVersion" : {
          "c2jName" : "relativeFileVersion",
          "c2jShape" : "RelativeFileVersionEnum",
          "deprecated" : false,
          "documentation" : "<p>In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.</p>",
          "enumType" : "RelativeFileVersionEnum",
          "fluentSetterDocumentation" : "/**<p>In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.</p>\n@param relativeFileVersion In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RelativeFileVersionEnum*/",
          "fluentSetterMethodName" : "withRelativeFileVersion",
          "getterDocumentation" : "/**<p>In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.</p>\n@return In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.\n@see RelativeFileVersionEnum*/",
          "getterMethodName" : "getRelativeFileVersion",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "relativeFileVersion",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "relativeFileVersion",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RelativeFileVersion",
          "setterDocumentation" : "/**<p>In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.</p>\n@param relativeFileVersion In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.\n@see RelativeFileVersionEnum*/",
          "setterMethodName" : "setRelativeFileVersion",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "relativeFileVersion",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.</p>\n@param relativeFileVersion In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RelativeFileVersionEnum*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "relativeFileVersion",
            "variableType" : "String",
            "documentation" : "<p>In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Location",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Location",
        "variableName" : "location",
        "variableType" : "Location",
        "documentation" : null,
        "simpleType" : "Location",
        "variableSetterType" : "Location"
      },
      "wrapper" : false
    },
    "ManualMergeRequiredException" : {
      "c2jName" : "ManualMergeRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The pull request cannot be merged automatically into the destination branch. You must manually merge the branches and resolve any conflicts.</p>",
      "enums" : null,
      "errorCode" : "ManualMergeRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ManualMergeRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ManualMergeRequiredException",
        "variableName" : "manualMergeRequiredException",
        "variableType" : "ManualMergeRequiredException",
        "documentation" : null,
        "simpleType" : "ManualMergeRequiredException",
        "variableSetterType" : "ManualMergeRequiredException"
      },
      "wrapper" : false
    },
    "MaximumBranchesExceededException" : {
      "c2jName" : "MaximumBranchesExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The number of branches for the trigger was exceeded.</p>",
      "enums" : null,
      "errorCode" : "MaximumBranchesExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MaximumBranchesExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "MaximumBranchesExceededException",
        "variableName" : "maximumBranchesExceededException",
        "variableType" : "MaximumBranchesExceededException",
        "documentation" : null,
        "simpleType" : "MaximumBranchesExceededException",
        "variableSetterType" : "MaximumBranchesExceededException"
      },
      "wrapper" : false
    },
    "MaximumOpenPullRequestsExceededException" : {
      "c2jName" : "MaximumOpenPullRequestsExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>You cannot create the pull request because the repository has too many open pull requests. The maximum number of open pull requests for a repository is 1,000. Close one or more open pull requests, and then try again.</p>",
      "enums" : null,
      "errorCode" : "MaximumOpenPullRequestsExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MaximumOpenPullRequestsExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "MaximumOpenPullRequestsExceededException",
        "variableName" : "maximumOpenPullRequestsExceededException",
        "variableType" : "MaximumOpenPullRequestsExceededException",
        "documentation" : null,
        "simpleType" : "MaximumOpenPullRequestsExceededException",
        "variableSetterType" : "MaximumOpenPullRequestsExceededException"
      },
      "wrapper" : false
    },
    "MaximumRepositoryNamesExceededException" : {
      "c2jName" : "MaximumRepositoryNamesExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The maximum number of allowed repository names was exceeded. Currently, this number is 25.</p>",
      "enums" : null,
      "errorCode" : "MaximumRepositoryNamesExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MaximumRepositoryNamesExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "MaximumRepositoryNamesExceededException",
        "variableName" : "maximumRepositoryNamesExceededException",
        "variableType" : "MaximumRepositoryNamesExceededException",
        "documentation" : null,
        "simpleType" : "MaximumRepositoryNamesExceededException",
        "variableSetterType" : "MaximumRepositoryNamesExceededException"
      },
      "wrapper" : false
    },
    "MaximumRepositoryTriggersExceededException" : {
      "c2jName" : "MaximumRepositoryTriggersExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The number of triggers allowed for the repository was exceeded.</p>",
      "enums" : null,
      "errorCode" : "MaximumRepositoryTriggersExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MaximumRepositoryTriggersExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "MaximumRepositoryTriggersExceededException",
        "variableName" : "maximumRepositoryTriggersExceededException",
        "variableType" : "MaximumRepositoryTriggersExceededException",
        "documentation" : null,
        "simpleType" : "MaximumRepositoryTriggersExceededException",
        "variableSetterType" : "MaximumRepositoryTriggersExceededException"
      },
      "wrapper" : false
    },
    "MergeMetadata" : {
      "c2jName" : "MergeMetadata",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about a merge or potential merge between a source reference and a destination reference in a pull request.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "isMerged",
        "c2jShape" : "IsMerged",
        "deprecated" : false,
        "documentation" : "<p>A Boolean value indicating whether the merge has been made.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A Boolean value indicating whether the merge has been made.</p>\n@param isMerged A Boolean value indicating whether the merge has been made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIsMerged",
        "getterDocumentation" : "/**<p>A Boolean value indicating whether the merge has been made.</p>\n@return A Boolean value indicating whether the merge has been made.*/",
        "getterMethodName" : "getIsMerged",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "isMerged",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "isMerged",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "IsMerged",
        "setterDocumentation" : "/**<p>A Boolean value indicating whether the merge has been made.</p>\n@param isMerged A Boolean value indicating whether the merge has been made.*/",
        "setterMethodName" : "setIsMerged",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "isMerged",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A Boolean value indicating whether the merge has been made.</p>\n@param isMerged A Boolean value indicating whether the merge has been made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "isMerged",
          "variableType" : "Boolean",
          "documentation" : "<p>A Boolean value indicating whether the merge has been made.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "mergedBy",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) of the user who merged the branches.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user who merged the branches.</p>\n@param mergedBy The Amazon Resource Name (ARN) of the user who merged the branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMergedBy",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user who merged the branches.</p>\n@return The Amazon Resource Name (ARN) of the user who merged the branches.*/",
        "getterMethodName" : "getMergedBy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "mergedBy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "mergedBy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "MergedBy",
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user who merged the branches.</p>\n@param mergedBy The Amazon Resource Name (ARN) of the user who merged the branches.*/",
        "setterMethodName" : "setMergedBy",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "mergedBy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user who merged the branches.</p>\n@param mergedBy The Amazon Resource Name (ARN) of the user who merged the branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "mergedBy",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the user who merged the branches.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "IsMerged" : {
          "c2jName" : "isMerged",
          "c2jShape" : "IsMerged",
          "deprecated" : false,
          "documentation" : "<p>A Boolean value indicating whether the merge has been made.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A Boolean value indicating whether the merge has been made.</p>\n@param isMerged A Boolean value indicating whether the merge has been made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIsMerged",
          "getterDocumentation" : "/**<p>A Boolean value indicating whether the merge has been made.</p>\n@return A Boolean value indicating whether the merge has been made.*/",
          "getterMethodName" : "getIsMerged",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "isMerged",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "isMerged",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "IsMerged",
          "setterDocumentation" : "/**<p>A Boolean value indicating whether the merge has been made.</p>\n@param isMerged A Boolean value indicating whether the merge has been made.*/",
          "setterMethodName" : "setIsMerged",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "isMerged",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A Boolean value indicating whether the merge has been made.</p>\n@param isMerged A Boolean value indicating whether the merge has been made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "isMerged",
            "variableType" : "Boolean",
            "documentation" : "<p>A Boolean value indicating whether the merge has been made.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "MergedBy" : {
          "c2jName" : "mergedBy",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the user who merged the branches.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user who merged the branches.</p>\n@param mergedBy The Amazon Resource Name (ARN) of the user who merged the branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMergedBy",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user who merged the branches.</p>\n@return The Amazon Resource Name (ARN) of the user who merged the branches.*/",
          "getterMethodName" : "getMergedBy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "mergedBy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "mergedBy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "MergedBy",
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user who merged the branches.</p>\n@param mergedBy The Amazon Resource Name (ARN) of the user who merged the branches.*/",
          "setterMethodName" : "setMergedBy",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "mergedBy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user who merged the branches.</p>\n@param mergedBy The Amazon Resource Name (ARN) of the user who merged the branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "mergedBy",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the user who merged the branches.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MergeMetadata",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "MergeMetadata",
        "variableName" : "mergeMetadata",
        "variableType" : "MergeMetadata",
        "documentation" : null,
        "simpleType" : "MergeMetadata",
        "variableSetterType" : "MergeMetadata"
      },
      "wrapper" : false
    },
    "MergeOptionRequiredException" : {
      "c2jName" : "MergeOptionRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A merge option or stategy is required, and none was provided.</p>",
      "enums" : null,
      "errorCode" : "MergeOptionRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MergeOptionRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "MergeOptionRequiredException",
        "variableName" : "mergeOptionRequiredException",
        "variableType" : "MergeOptionRequiredException",
        "documentation" : null,
        "simpleType" : "MergeOptionRequiredException",
        "variableSetterType" : "MergeOptionRequiredException"
      },
      "wrapper" : false
    },
    "MergeOptionTypeEnum" : {
      "c2jName" : "MergeOptionTypeEnum",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "FAST_FORWARD_MERGE",
        "value" : "FAST_FORWARD_MERGE"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MergeOptionTypeEnum",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "MergeOptionTypeEnum",
        "variableName" : "mergeOptionTypeEnum",
        "variableType" : "MergeOptionTypeEnum",
        "documentation" : null,
        "simpleType" : "MergeOptionTypeEnum",
        "variableSetterType" : "MergeOptionTypeEnum"
      },
      "wrapper" : false
    },
    "MergePullRequestByFastForwardRequest" : {
      "c2jName" : "MergePullRequestByFastForwardInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "MergePullRequestByFastForward",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.MergePullRequestByFastForward",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "pullRequestId",
        "c2jShape" : "PullRequestId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestId",
        "getterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@return The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
        "getterMethodName" : "getPullRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestId",
        "setterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
        "setterMethodName" : "setPullRequestId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository where the pull request was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@return The name of the repository where the pull request was created.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository where the pull request was created.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sourceCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.</p>\n@param sourceCommitId The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSourceCommitId",
        "getterDocumentation" : "/**<p>The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.</p>\n@return The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.*/",
        "getterMethodName" : "getSourceCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sourceCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sourceCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SourceCommitId",
        "setterDocumentation" : "/**<p>The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.</p>\n@param sourceCommitId The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.*/",
        "setterMethodName" : "setSourceCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.</p>\n@param sourceCommitId The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceCommitId",
          "variableType" : "String",
          "documentation" : "<p>The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PullRequestId" : {
          "c2jName" : "pullRequestId",
          "c2jShape" : "PullRequestId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestId",
          "getterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@return The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
          "getterMethodName" : "getPullRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestId",
          "setterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
          "setterMethodName" : "setPullRequestId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository where the pull request was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@return The name of the repository where the pull request was created.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository where the pull request was created.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SourceCommitId" : {
          "c2jName" : "sourceCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.</p>\n@param sourceCommitId The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSourceCommitId",
          "getterDocumentation" : "/**<p>The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.</p>\n@return The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.*/",
          "getterMethodName" : "getSourceCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sourceCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sourceCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SourceCommitId",
          "setterDocumentation" : "/**<p>The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.</p>\n@param sourceCommitId The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.*/",
          "setterMethodName" : "setSourceCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.</p>\n@param sourceCommitId The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceCommitId",
            "variableType" : "String",
            "documentation" : "<p>The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "pullRequestId", "repositoryName" ],
      "shapeName" : "MergePullRequestByFastForwardRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "MergePullRequestByFastForwardRequest",
        "variableName" : "mergePullRequestByFastForwardRequest",
        "variableType" : "MergePullRequestByFastForwardRequest",
        "documentation" : null,
        "simpleType" : "MergePullRequestByFastForwardRequest",
        "variableSetterType" : "MergePullRequestByFastForwardRequest"
      },
      "wrapper" : false
    },
    "MergePullRequestByFastForwardResult" : {
      "c2jName" : "MergePullRequestByFastForwardOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "pullRequest",
        "c2jShape" : "PullRequest",
        "deprecated" : false,
        "documentation" : "<p>Information about the specified pull request, including information about the merge.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the specified pull request, including information about the merge.</p>\n@param pullRequest Information about the specified pull request, including information about the merge.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequest",
        "getterDocumentation" : "/**<p>Information about the specified pull request, including information about the merge.</p>\n@return Information about the specified pull request, including information about the merge.*/",
        "getterMethodName" : "getPullRequest",
        "getterModel" : {
          "returnType" : "PullRequest",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "PullRequest",
        "setterDocumentation" : "/**<p>Information about the specified pull request, including information about the merge.</p>\n@param pullRequest Information about the specified pull request, including information about the merge.*/",
        "setterMethodName" : "setPullRequest",
        "setterModel" : {
          "variableDeclarationType" : "PullRequest",
          "variableName" : "pullRequest",
          "variableType" : "PullRequest",
          "documentation" : "",
          "simpleType" : "PullRequest",
          "variableSetterType" : "PullRequest"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the specified pull request, including information about the merge.</p>\n@param pullRequest Information about the specified pull request, including information about the merge.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "PullRequest",
          "variableName" : "pullRequest",
          "variableType" : "PullRequest",
          "documentation" : "<p>Information about the specified pull request, including information about the merge.</p>",
          "simpleType" : "PullRequest",
          "variableSetterType" : "PullRequest"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PullRequest" : {
          "c2jName" : "pullRequest",
          "c2jShape" : "PullRequest",
          "deprecated" : false,
          "documentation" : "<p>Information about the specified pull request, including information about the merge.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the specified pull request, including information about the merge.</p>\n@param pullRequest Information about the specified pull request, including information about the merge.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequest",
          "getterDocumentation" : "/**<p>Information about the specified pull request, including information about the merge.</p>\n@return Information about the specified pull request, including information about the merge.*/",
          "getterMethodName" : "getPullRequest",
          "getterModel" : {
            "returnType" : "PullRequest",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "PullRequest",
          "setterDocumentation" : "/**<p>Information about the specified pull request, including information about the merge.</p>\n@param pullRequest Information about the specified pull request, including information about the merge.*/",
          "setterMethodName" : "setPullRequest",
          "setterModel" : {
            "variableDeclarationType" : "PullRequest",
            "variableName" : "pullRequest",
            "variableType" : "PullRequest",
            "documentation" : "",
            "simpleType" : "PullRequest",
            "variableSetterType" : "PullRequest"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the specified pull request, including information about the merge.</p>\n@param pullRequest Information about the specified pull request, including information about the merge.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "PullRequest",
            "variableName" : "pullRequest",
            "variableType" : "PullRequest",
            "documentation" : "<p>Information about the specified pull request, including information about the merge.</p>",
            "simpleType" : "PullRequest",
            "variableSetterType" : "PullRequest"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MergePullRequestByFastForwardResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "MergePullRequestByFastForwardResult",
        "variableName" : "mergePullRequestByFastForwardResult",
        "variableType" : "MergePullRequestByFastForwardResult",
        "documentation" : null,
        "simpleType" : "MergePullRequestByFastForwardResult",
        "variableSetterType" : "MergePullRequestByFastForwardResult"
      },
      "wrapper" : false
    },
    "MultipleRepositoriesInPullRequestException" : {
      "c2jName" : "MultipleRepositoriesInPullRequestException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>You cannot include more than one repository in a pull request. Make sure you have specified only one repository name in your request, and then try again.</p>",
      "enums" : null,
      "errorCode" : "MultipleRepositoriesInPullRequestException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MultipleRepositoriesInPullRequestException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "MultipleRepositoriesInPullRequestException",
        "variableName" : "multipleRepositoriesInPullRequestException",
        "variableType" : "MultipleRepositoriesInPullRequestException",
        "documentation" : null,
        "simpleType" : "MultipleRepositoriesInPullRequestException",
        "variableSetterType" : "MultipleRepositoriesInPullRequestException"
      },
      "wrapper" : false
    },
    "NameLengthExceededException" : {
      "c2jName" : "NameLengthExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The file name is not valid because it has exceeded the character limit for file names. File names, including the path to the file, cannot exceed the character limit. </p>",
      "enums" : null,
      "errorCode" : "NameLengthExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "NameLengthExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "NameLengthExceededException",
        "variableName" : "nameLengthExceededException",
        "variableType" : "NameLengthExceededException",
        "documentation" : null,
        "simpleType" : "NameLengthExceededException",
        "variableSetterType" : "NameLengthExceededException"
      },
      "wrapper" : false
    },
    "OrderEnum" : {
      "c2jName" : "OrderEnum",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "Ascending",
        "value" : "ascending"
      }, {
        "name" : "Descending",
        "value" : "descending"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "OrderEnum",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "OrderEnum",
        "variableName" : "orderEnum",
        "variableType" : "OrderEnum",
        "documentation" : null,
        "simpleType" : "OrderEnum",
        "variableSetterType" : "OrderEnum"
      },
      "wrapper" : false
    },
    "ParentCommitDoesNotExistException" : {
      "c2jName" : "ParentCommitDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The parent commit ID is not valid. The specified parent commit ID does not exist in the specified branch of the repository.</p>",
      "enums" : null,
      "errorCode" : "ParentCommitDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ParentCommitDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ParentCommitDoesNotExistException",
        "variableName" : "parentCommitDoesNotExistException",
        "variableType" : "ParentCommitDoesNotExistException",
        "documentation" : null,
        "simpleType" : "ParentCommitDoesNotExistException",
        "variableSetterType" : "ParentCommitDoesNotExistException"
      },
      "wrapper" : false
    },
    "ParentCommitIdOutdatedException" : {
      "c2jName" : "ParentCommitIdOutdatedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The file could not be added because the provided parent commit ID is not the current tip of the specified branch. To view the full commit ID of the current head of the branch, use <a>GetBranch</a>.</p>",
      "enums" : null,
      "errorCode" : "ParentCommitIdOutdatedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ParentCommitIdOutdatedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ParentCommitIdOutdatedException",
        "variableName" : "parentCommitIdOutdatedException",
        "variableType" : "ParentCommitIdOutdatedException",
        "documentation" : null,
        "simpleType" : "ParentCommitIdOutdatedException",
        "variableSetterType" : "ParentCommitIdOutdatedException"
      },
      "wrapper" : false
    },
    "ParentCommitIdRequiredException" : {
      "c2jName" : "ParentCommitIdRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A parent commit ID is required. To view the full commit ID of a branch in a repository, use <a>GetBranch</a> or a Git command (for example, git pull or git log).</p>",
      "enums" : null,
      "errorCode" : "ParentCommitIdRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ParentCommitIdRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ParentCommitIdRequiredException",
        "variableName" : "parentCommitIdRequiredException",
        "variableType" : "ParentCommitIdRequiredException",
        "documentation" : null,
        "simpleType" : "ParentCommitIdRequiredException",
        "variableSetterType" : "ParentCommitIdRequiredException"
      },
      "wrapper" : false
    },
    "PathDoesNotExistException" : {
      "c2jName" : "PathDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified path does not exist.</p>",
      "enums" : null,
      "errorCode" : "PathDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PathDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PathDoesNotExistException",
        "variableName" : "pathDoesNotExistException",
        "variableType" : "PathDoesNotExistException",
        "documentation" : null,
        "simpleType" : "PathDoesNotExistException",
        "variableSetterType" : "PathDoesNotExistException"
      },
      "wrapper" : false
    },
    "PathRequiredException" : {
      "c2jName" : "PathRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The filePath for a location cannot be empty or null.</p>",
      "enums" : null,
      "errorCode" : "PathRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PathRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PathRequiredException",
        "variableName" : "pathRequiredException",
        "variableType" : "PathRequiredException",
        "documentation" : null,
        "simpleType" : "PathRequiredException",
        "variableSetterType" : "PathRequiredException"
      },
      "wrapper" : false
    },
    "PostCommentForComparedCommitRequest" : {
      "c2jName" : "PostCommentForComparedCommitInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "PostCommentForComparedCommit",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.PostCommentForComparedCommit",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository where you want to post a comment on the comparison between commits.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository where you want to post a comment on the comparison between commits.</p>\n@param repositoryName The name of the repository where you want to post a comment on the comparison between commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository where you want to post a comment on the comparison between commits.</p>\n@return The name of the repository where you want to post a comment on the comparison between commits.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository where you want to post a comment on the comparison between commits.</p>\n@param repositoryName The name of the repository where you want to post a comment on the comparison between commits.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository where you want to post a comment on the comparison between commits.</p>\n@param repositoryName The name of the repository where you want to post a comment on the comparison between commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository where you want to post a comment on the comparison between commits.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforeCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId To establish the directionality of the comparison, the full commit ID of the 'before' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeCommitId",
        "getterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>\n@return To establish the directionality of the comparison, the full commit ID of the 'before' commit.*/",
        "getterMethodName" : "getBeforeCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforeCommitId",
        "setterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId To establish the directionality of the comparison, the full commit ID of the 'before' commit.*/",
        "setterMethodName" : "setBeforeCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId To establish the directionality of the comparison, the full commit ID of the 'before' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>\n@param afterCommitId To establish the directionality of the comparison, the full commit ID of the 'after' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterCommitId",
        "getterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>\n@return To establish the directionality of the comparison, the full commit ID of the 'after' commit.*/",
        "getterMethodName" : "getAfterCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterCommitId",
        "setterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>\n@param afterCommitId To establish the directionality of the comparison, the full commit ID of the 'after' commit.*/",
        "setterMethodName" : "setAfterCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>\n@param afterCommitId To establish the directionality of the comparison, the full commit ID of the 'after' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "location",
        "c2jShape" : "Location",
        "deprecated" : false,
        "documentation" : "<p>The location of the comparison where you want to comment.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The location of the comparison where you want to comment.</p>\n@param location The location of the comparison where you want to comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLocation",
        "getterDocumentation" : "/**<p>The location of the comparison where you want to comment.</p>\n@return The location of the comparison where you want to comment.*/",
        "getterMethodName" : "getLocation",
        "getterModel" : {
          "returnType" : "Location",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "location",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "location",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Location",
        "setterDocumentation" : "/**<p>The location of the comparison where you want to comment.</p>\n@param location The location of the comparison where you want to comment.*/",
        "setterMethodName" : "setLocation",
        "setterModel" : {
          "variableDeclarationType" : "Location",
          "variableName" : "location",
          "variableType" : "Location",
          "documentation" : "",
          "simpleType" : "Location",
          "variableSetterType" : "Location"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The location of the comparison where you want to comment.</p>\n@param location The location of the comparison where you want to comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Location",
          "variableName" : "location",
          "variableType" : "Location",
          "documentation" : "<p>The location of the comparison where you want to comment.</p>",
          "simpleType" : "Location",
          "variableSetterType" : "Location"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "content",
        "c2jShape" : "Content",
        "deprecated" : false,
        "documentation" : "<p>The content of the comment you want to make.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The content of the comment you want to make.</p>\n@param content The content of the comment you want to make.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContent",
        "getterDocumentation" : "/**<p>The content of the comment you want to make.</p>\n@return The content of the comment you want to make.*/",
        "getterMethodName" : "getContent",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "content",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "content",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Content",
        "setterDocumentation" : "/**<p>The content of the comment you want to make.</p>\n@param content The content of the comment you want to make.*/",
        "setterMethodName" : "setContent",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "content",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The content of the comment you want to make.</p>\n@param content The content of the comment you want to make.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "content",
          "variableType" : "String",
          "documentation" : "<p>The content of the comment you want to make.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "clientRequestToken",
        "c2jShape" : "ClientRequestToken",
        "deprecated" : false,
        "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withClientRequestToken",
        "getterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@return A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
        "getterMethodName" : "getClientRequestToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "clientRequestToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "clientRequestToken",
          "uri" : false
        },
        "idempotencyToken" : true,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ClientRequestToken",
        "setterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
        "setterMethodName" : "setClientRequestToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AfterCommitId" : {
          "c2jName" : "afterCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>\n@param afterCommitId To establish the directionality of the comparison, the full commit ID of the 'after' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterCommitId",
          "getterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>\n@return To establish the directionality of the comparison, the full commit ID of the 'after' commit.*/",
          "getterMethodName" : "getAfterCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterCommitId",
          "setterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>\n@param afterCommitId To establish the directionality of the comparison, the full commit ID of the 'after' commit.*/",
          "setterMethodName" : "setAfterCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>\n@param afterCommitId To establish the directionality of the comparison, the full commit ID of the 'after' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "<p>To establish the directionality of the comparison, the full commit ID of the 'after' commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeCommitId" : {
          "c2jName" : "beforeCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId To establish the directionality of the comparison, the full commit ID of the 'before' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeCommitId",
          "getterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>\n@return To establish the directionality of the comparison, the full commit ID of the 'before' commit.*/",
          "getterMethodName" : "getBeforeCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforeCommitId",
          "setterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId To establish the directionality of the comparison, the full commit ID of the 'before' commit.*/",
          "setterMethodName" : "setBeforeCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId To establish the directionality of the comparison, the full commit ID of the 'before' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "<p>To establish the directionality of the comparison, the full commit ID of the 'before' commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ClientRequestToken" : {
          "c2jName" : "clientRequestToken",
          "c2jShape" : "ClientRequestToken",
          "deprecated" : false,
          "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withClientRequestToken",
          "getterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@return A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
          "getterMethodName" : "getClientRequestToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "clientRequestToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "clientRequestToken",
            "uri" : false
          },
          "idempotencyToken" : true,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ClientRequestToken",
          "setterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
          "setterMethodName" : "setClientRequestToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Content" : {
          "c2jName" : "content",
          "c2jShape" : "Content",
          "deprecated" : false,
          "documentation" : "<p>The content of the comment you want to make.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The content of the comment you want to make.</p>\n@param content The content of the comment you want to make.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContent",
          "getterDocumentation" : "/**<p>The content of the comment you want to make.</p>\n@return The content of the comment you want to make.*/",
          "getterMethodName" : "getContent",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "content",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "content",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Content",
          "setterDocumentation" : "/**<p>The content of the comment you want to make.</p>\n@param content The content of the comment you want to make.*/",
          "setterMethodName" : "setContent",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "content",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The content of the comment you want to make.</p>\n@param content The content of the comment you want to make.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "content",
            "variableType" : "String",
            "documentation" : "<p>The content of the comment you want to make.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Location" : {
          "c2jName" : "location",
          "c2jShape" : "Location",
          "deprecated" : false,
          "documentation" : "<p>The location of the comparison where you want to comment.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The location of the comparison where you want to comment.</p>\n@param location The location of the comparison where you want to comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLocation",
          "getterDocumentation" : "/**<p>The location of the comparison where you want to comment.</p>\n@return The location of the comparison where you want to comment.*/",
          "getterMethodName" : "getLocation",
          "getterModel" : {
            "returnType" : "Location",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "location",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "location",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Location",
          "setterDocumentation" : "/**<p>The location of the comparison where you want to comment.</p>\n@param location The location of the comparison where you want to comment.*/",
          "setterMethodName" : "setLocation",
          "setterModel" : {
            "variableDeclarationType" : "Location",
            "variableName" : "location",
            "variableType" : "Location",
            "documentation" : "",
            "simpleType" : "Location",
            "variableSetterType" : "Location"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The location of the comparison where you want to comment.</p>\n@param location The location of the comparison where you want to comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Location",
            "variableName" : "location",
            "variableType" : "Location",
            "documentation" : "<p>The location of the comparison where you want to comment.</p>",
            "simpleType" : "Location",
            "variableSetterType" : "Location"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository where you want to post a comment on the comparison between commits.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository where you want to post a comment on the comparison between commits.</p>\n@param repositoryName The name of the repository where you want to post a comment on the comparison between commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository where you want to post a comment on the comparison between commits.</p>\n@return The name of the repository where you want to post a comment on the comparison between commits.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository where you want to post a comment on the comparison between commits.</p>\n@param repositoryName The name of the repository where you want to post a comment on the comparison between commits.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository where you want to post a comment on the comparison between commits.</p>\n@param repositoryName The name of the repository where you want to post a comment on the comparison between commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository where you want to post a comment on the comparison between commits.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "afterCommitId", "content" ],
      "shapeName" : "PostCommentForComparedCommitRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PostCommentForComparedCommitRequest",
        "variableName" : "postCommentForComparedCommitRequest",
        "variableType" : "PostCommentForComparedCommitRequest",
        "documentation" : null,
        "simpleType" : "PostCommentForComparedCommitRequest",
        "variableSetterType" : "PostCommentForComparedCommitRequest"
      },
      "wrapper" : false
    },
    "PostCommentForComparedCommitResult" : {
      "c2jName" : "PostCommentForComparedCommitOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository where you posted a comment on the comparison between commits.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository where you posted a comment on the comparison between commits.</p>\n@param repositoryName The name of the repository where you posted a comment on the comparison between commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository where you posted a comment on the comparison between commits.</p>\n@return The name of the repository where you posted a comment on the comparison between commits.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository where you posted a comment on the comparison between commits.</p>\n@param repositoryName The name of the repository where you posted a comment on the comparison between commits.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository where you posted a comment on the comparison between commits.</p>\n@param repositoryName The name of the repository where you posted a comment on the comparison between commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository where you posted a comment on the comparison between commits.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforeCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>In the directionality you established, the full commit ID of the 'before' commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>In the directionality you established, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId In the directionality you established, the full commit ID of the 'before' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeCommitId",
        "getterDocumentation" : "/**<p>In the directionality you established, the full commit ID of the 'before' commit.</p>\n@return In the directionality you established, the full commit ID of the 'before' commit.*/",
        "getterMethodName" : "getBeforeCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforeCommitId",
        "setterDocumentation" : "/**<p>In the directionality you established, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId In the directionality you established, the full commit ID of the 'before' commit.*/",
        "setterMethodName" : "setBeforeCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>In the directionality you established, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId In the directionality you established, the full commit ID of the 'before' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "<p>In the directionality you established, the full commit ID of the 'before' commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>In the directionality you established, the full commit ID of the 'after' commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>In the directionality you established, the full commit ID of the 'after' commit.</p>\n@param afterCommitId In the directionality you established, the full commit ID of the 'after' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterCommitId",
        "getterDocumentation" : "/**<p>In the directionality you established, the full commit ID of the 'after' commit.</p>\n@return In the directionality you established, the full commit ID of the 'after' commit.*/",
        "getterMethodName" : "getAfterCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterCommitId",
        "setterDocumentation" : "/**<p>In the directionality you established, the full commit ID of the 'after' commit.</p>\n@param afterCommitId In the directionality you established, the full commit ID of the 'after' commit.*/",
        "setterMethodName" : "setAfterCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>In the directionality you established, the full commit ID of the 'after' commit.</p>\n@param afterCommitId In the directionality you established, the full commit ID of the 'after' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "<p>In the directionality you established, the full commit ID of the 'after' commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforeBlobId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>In the directionality you established, the blob ID of the 'before' blob.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>In the directionality you established, the blob ID of the 'before' blob.</p>\n@param beforeBlobId In the directionality you established, the blob ID of the 'before' blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeBlobId",
        "getterDocumentation" : "/**<p>In the directionality you established, the blob ID of the 'before' blob.</p>\n@return In the directionality you established, the blob ID of the 'before' blob.*/",
        "getterMethodName" : "getBeforeBlobId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeBlobId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeBlobId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforeBlobId",
        "setterDocumentation" : "/**<p>In the directionality you established, the blob ID of the 'before' blob.</p>\n@param beforeBlobId In the directionality you established, the blob ID of the 'before' blob.*/",
        "setterMethodName" : "setBeforeBlobId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeBlobId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>In the directionality you established, the blob ID of the 'before' blob.</p>\n@param beforeBlobId In the directionality you established, the blob ID of the 'before' blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeBlobId",
          "variableType" : "String",
          "documentation" : "<p>In the directionality you established, the blob ID of the 'before' blob.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterBlobId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>In the directionality you established, the blob ID of the 'after' blob.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>In the directionality you established, the blob ID of the 'after' blob.</p>\n@param afterBlobId In the directionality you established, the blob ID of the 'after' blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterBlobId",
        "getterDocumentation" : "/**<p>In the directionality you established, the blob ID of the 'after' blob.</p>\n@return In the directionality you established, the blob ID of the 'after' blob.*/",
        "getterMethodName" : "getAfterBlobId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterBlobId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterBlobId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterBlobId",
        "setterDocumentation" : "/**<p>In the directionality you established, the blob ID of the 'after' blob.</p>\n@param afterBlobId In the directionality you established, the blob ID of the 'after' blob.*/",
        "setterMethodName" : "setAfterBlobId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterBlobId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>In the directionality you established, the blob ID of the 'after' blob.</p>\n@param afterBlobId In the directionality you established, the blob ID of the 'after' blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterBlobId",
          "variableType" : "String",
          "documentation" : "<p>In the directionality you established, the blob ID of the 'after' blob.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "location",
        "c2jShape" : "Location",
        "deprecated" : false,
        "documentation" : "<p>The location of the comment in the comparison between the two commits.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The location of the comment in the comparison between the two commits.</p>\n@param location The location of the comment in the comparison between the two commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLocation",
        "getterDocumentation" : "/**<p>The location of the comment in the comparison between the two commits.</p>\n@return The location of the comment in the comparison between the two commits.*/",
        "getterMethodName" : "getLocation",
        "getterModel" : {
          "returnType" : "Location",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "location",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "location",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Location",
        "setterDocumentation" : "/**<p>The location of the comment in the comparison between the two commits.</p>\n@param location The location of the comment in the comparison between the two commits.*/",
        "setterMethodName" : "setLocation",
        "setterModel" : {
          "variableDeclarationType" : "Location",
          "variableName" : "location",
          "variableType" : "Location",
          "documentation" : "",
          "simpleType" : "Location",
          "variableSetterType" : "Location"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The location of the comment in the comparison between the two commits.</p>\n@param location The location of the comment in the comparison between the two commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Location",
          "variableName" : "location",
          "variableType" : "Location",
          "documentation" : "<p>The location of the comment in the comparison between the two commits.</p>",
          "simpleType" : "Location",
          "variableSetterType" : "Location"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "comment",
        "c2jShape" : "Comment",
        "deprecated" : false,
        "documentation" : "<p>The content of the comment you posted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The content of the comment you posted.</p>\n@param comment The content of the comment you posted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withComment",
        "getterDocumentation" : "/**<p>The content of the comment you posted.</p>\n@return The content of the comment you posted.*/",
        "getterMethodName" : "getComment",
        "getterModel" : {
          "returnType" : "Comment",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "comment",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "comment",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Comment",
        "setterDocumentation" : "/**<p>The content of the comment you posted.</p>\n@param comment The content of the comment you posted.*/",
        "setterMethodName" : "setComment",
        "setterModel" : {
          "variableDeclarationType" : "Comment",
          "variableName" : "comment",
          "variableType" : "Comment",
          "documentation" : "",
          "simpleType" : "Comment",
          "variableSetterType" : "Comment"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The content of the comment you posted.</p>\n@param comment The content of the comment you posted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Comment",
          "variableName" : "comment",
          "variableType" : "Comment",
          "documentation" : "<p>The content of the comment you posted.</p>",
          "simpleType" : "Comment",
          "variableSetterType" : "Comment"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AfterBlobId" : {
          "c2jName" : "afterBlobId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>In the directionality you established, the blob ID of the 'after' blob.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>In the directionality you established, the blob ID of the 'after' blob.</p>\n@param afterBlobId In the directionality you established, the blob ID of the 'after' blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterBlobId",
          "getterDocumentation" : "/**<p>In the directionality you established, the blob ID of the 'after' blob.</p>\n@return In the directionality you established, the blob ID of the 'after' blob.*/",
          "getterMethodName" : "getAfterBlobId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterBlobId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterBlobId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterBlobId",
          "setterDocumentation" : "/**<p>In the directionality you established, the blob ID of the 'after' blob.</p>\n@param afterBlobId In the directionality you established, the blob ID of the 'after' blob.*/",
          "setterMethodName" : "setAfterBlobId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterBlobId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>In the directionality you established, the blob ID of the 'after' blob.</p>\n@param afterBlobId In the directionality you established, the blob ID of the 'after' blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterBlobId",
            "variableType" : "String",
            "documentation" : "<p>In the directionality you established, the blob ID of the 'after' blob.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "AfterCommitId" : {
          "c2jName" : "afterCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>In the directionality you established, the full commit ID of the 'after' commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>In the directionality you established, the full commit ID of the 'after' commit.</p>\n@param afterCommitId In the directionality you established, the full commit ID of the 'after' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterCommitId",
          "getterDocumentation" : "/**<p>In the directionality you established, the full commit ID of the 'after' commit.</p>\n@return In the directionality you established, the full commit ID of the 'after' commit.*/",
          "getterMethodName" : "getAfterCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterCommitId",
          "setterDocumentation" : "/**<p>In the directionality you established, the full commit ID of the 'after' commit.</p>\n@param afterCommitId In the directionality you established, the full commit ID of the 'after' commit.*/",
          "setterMethodName" : "setAfterCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>In the directionality you established, the full commit ID of the 'after' commit.</p>\n@param afterCommitId In the directionality you established, the full commit ID of the 'after' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "<p>In the directionality you established, the full commit ID of the 'after' commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeBlobId" : {
          "c2jName" : "beforeBlobId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>In the directionality you established, the blob ID of the 'before' blob.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>In the directionality you established, the blob ID of the 'before' blob.</p>\n@param beforeBlobId In the directionality you established, the blob ID of the 'before' blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeBlobId",
          "getterDocumentation" : "/**<p>In the directionality you established, the blob ID of the 'before' blob.</p>\n@return In the directionality you established, the blob ID of the 'before' blob.*/",
          "getterMethodName" : "getBeforeBlobId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeBlobId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeBlobId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforeBlobId",
          "setterDocumentation" : "/**<p>In the directionality you established, the blob ID of the 'before' blob.</p>\n@param beforeBlobId In the directionality you established, the blob ID of the 'before' blob.*/",
          "setterMethodName" : "setBeforeBlobId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeBlobId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>In the directionality you established, the blob ID of the 'before' blob.</p>\n@param beforeBlobId In the directionality you established, the blob ID of the 'before' blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeBlobId",
            "variableType" : "String",
            "documentation" : "<p>In the directionality you established, the blob ID of the 'before' blob.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeCommitId" : {
          "c2jName" : "beforeCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>In the directionality you established, the full commit ID of the 'before' commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>In the directionality you established, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId In the directionality you established, the full commit ID of the 'before' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeCommitId",
          "getterDocumentation" : "/**<p>In the directionality you established, the full commit ID of the 'before' commit.</p>\n@return In the directionality you established, the full commit ID of the 'before' commit.*/",
          "getterMethodName" : "getBeforeCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforeCommitId",
          "setterDocumentation" : "/**<p>In the directionality you established, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId In the directionality you established, the full commit ID of the 'before' commit.*/",
          "setterMethodName" : "setBeforeCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>In the directionality you established, the full commit ID of the 'before' commit.</p>\n@param beforeCommitId In the directionality you established, the full commit ID of the 'before' commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "<p>In the directionality you established, the full commit ID of the 'before' commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Comment" : {
          "c2jName" : "comment",
          "c2jShape" : "Comment",
          "deprecated" : false,
          "documentation" : "<p>The content of the comment you posted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The content of the comment you posted.</p>\n@param comment The content of the comment you posted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withComment",
          "getterDocumentation" : "/**<p>The content of the comment you posted.</p>\n@return The content of the comment you posted.*/",
          "getterMethodName" : "getComment",
          "getterModel" : {
            "returnType" : "Comment",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "comment",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "comment",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Comment",
          "setterDocumentation" : "/**<p>The content of the comment you posted.</p>\n@param comment The content of the comment you posted.*/",
          "setterMethodName" : "setComment",
          "setterModel" : {
            "variableDeclarationType" : "Comment",
            "variableName" : "comment",
            "variableType" : "Comment",
            "documentation" : "",
            "simpleType" : "Comment",
            "variableSetterType" : "Comment"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The content of the comment you posted.</p>\n@param comment The content of the comment you posted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Comment",
            "variableName" : "comment",
            "variableType" : "Comment",
            "documentation" : "<p>The content of the comment you posted.</p>",
            "simpleType" : "Comment",
            "variableSetterType" : "Comment"
          },
          "xmlNameSpaceUri" : null
        },
        "Location" : {
          "c2jName" : "location",
          "c2jShape" : "Location",
          "deprecated" : false,
          "documentation" : "<p>The location of the comment in the comparison between the two commits.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The location of the comment in the comparison between the two commits.</p>\n@param location The location of the comment in the comparison between the two commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLocation",
          "getterDocumentation" : "/**<p>The location of the comment in the comparison between the two commits.</p>\n@return The location of the comment in the comparison between the two commits.*/",
          "getterMethodName" : "getLocation",
          "getterModel" : {
            "returnType" : "Location",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "location",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "location",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Location",
          "setterDocumentation" : "/**<p>The location of the comment in the comparison between the two commits.</p>\n@param location The location of the comment in the comparison between the two commits.*/",
          "setterMethodName" : "setLocation",
          "setterModel" : {
            "variableDeclarationType" : "Location",
            "variableName" : "location",
            "variableType" : "Location",
            "documentation" : "",
            "simpleType" : "Location",
            "variableSetterType" : "Location"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The location of the comment in the comparison between the two commits.</p>\n@param location The location of the comment in the comparison between the two commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Location",
            "variableName" : "location",
            "variableType" : "Location",
            "documentation" : "<p>The location of the comment in the comparison between the two commits.</p>",
            "simpleType" : "Location",
            "variableSetterType" : "Location"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository where you posted a comment on the comparison between commits.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository where you posted a comment on the comparison between commits.</p>\n@param repositoryName The name of the repository where you posted a comment on the comparison between commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository where you posted a comment on the comparison between commits.</p>\n@return The name of the repository where you posted a comment on the comparison between commits.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository where you posted a comment on the comparison between commits.</p>\n@param repositoryName The name of the repository where you posted a comment on the comparison between commits.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository where you posted a comment on the comparison between commits.</p>\n@param repositoryName The name of the repository where you posted a comment on the comparison between commits.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository where you posted a comment on the comparison between commits.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PostCommentForComparedCommitResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PostCommentForComparedCommitResult",
        "variableName" : "postCommentForComparedCommitResult",
        "variableType" : "PostCommentForComparedCommitResult",
        "documentation" : null,
        "simpleType" : "PostCommentForComparedCommitResult",
        "variableSetterType" : "PostCommentForComparedCommitResult"
      },
      "wrapper" : false
    },
    "PostCommentForPullRequestRequest" : {
      "c2jName" : "PostCommentForPullRequestInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "PostCommentForPullRequest",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.PostCommentForPullRequest",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "pullRequestId",
        "c2jShape" : "PullRequestId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestId",
        "getterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@return The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
        "getterMethodName" : "getPullRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestId",
        "setterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
        "setterMethodName" : "setPullRequestId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository where you want to post a comment on a pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository where you want to post a comment on a pull request.</p>\n@param repositoryName The name of the repository where you want to post a comment on a pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository where you want to post a comment on a pull request.</p>\n@return The name of the repository where you want to post a comment on a pull request.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository where you want to post a comment on a pull request.</p>\n@param repositoryName The name of the repository where you want to post a comment on a pull request.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository where you want to post a comment on a pull request.</p>\n@param repositoryName The name of the repository where you want to post a comment on a pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository where you want to post a comment on a pull request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforeCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeCommitId",
        "getterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>\n@return The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.*/",
        "getterMethodName" : "getBeforeCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforeCommitId",
        "setterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.*/",
        "setterMethodName" : "setBeforeCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterCommitId",
        "getterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.</p>\n@return The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.*/",
        "getterMethodName" : "getAfterCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterCommitId",
        "setterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.*/",
        "setterMethodName" : "setAfterCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "<p>The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "location",
        "c2jShape" : "Location",
        "deprecated" : false,
        "documentation" : "<p>The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.</p>\n@param location The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLocation",
        "getterDocumentation" : "/**<p>The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.</p>\n@return The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.*/",
        "getterMethodName" : "getLocation",
        "getterModel" : {
          "returnType" : "Location",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "location",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "location",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Location",
        "setterDocumentation" : "/**<p>The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.</p>\n@param location The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.*/",
        "setterMethodName" : "setLocation",
        "setterModel" : {
          "variableDeclarationType" : "Location",
          "variableName" : "location",
          "variableType" : "Location",
          "documentation" : "",
          "simpleType" : "Location",
          "variableSetterType" : "Location"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.</p>\n@param location The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Location",
          "variableName" : "location",
          "variableType" : "Location",
          "documentation" : "<p>The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.</p>",
          "simpleType" : "Location",
          "variableSetterType" : "Location"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "content",
        "c2jShape" : "Content",
        "deprecated" : false,
        "documentation" : "<p>The content of your comment on the change.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The content of your comment on the change.</p>\n@param content The content of your comment on the change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContent",
        "getterDocumentation" : "/**<p>The content of your comment on the change.</p>\n@return The content of your comment on the change.*/",
        "getterMethodName" : "getContent",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "content",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "content",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Content",
        "setterDocumentation" : "/**<p>The content of your comment on the change.</p>\n@param content The content of your comment on the change.*/",
        "setterMethodName" : "setContent",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "content",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The content of your comment on the change.</p>\n@param content The content of your comment on the change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "content",
          "variableType" : "String",
          "documentation" : "<p>The content of your comment on the change.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "clientRequestToken",
        "c2jShape" : "ClientRequestToken",
        "deprecated" : false,
        "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withClientRequestToken",
        "getterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@return A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
        "getterMethodName" : "getClientRequestToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "clientRequestToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "clientRequestToken",
          "uri" : false
        },
        "idempotencyToken" : true,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ClientRequestToken",
        "setterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
        "setterMethodName" : "setClientRequestToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AfterCommitId" : {
          "c2jName" : "afterCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterCommitId",
          "getterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.</p>\n@return The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.*/",
          "getterMethodName" : "getAfterCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterCommitId",
          "setterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.*/",
          "setterMethodName" : "setAfterCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "<p>The full commit ID of the commit in the source branch that is the current tip of the branch for the pull request when you post the comment.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeCommitId" : {
          "c2jName" : "beforeCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeCommitId",
          "getterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>\n@return The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.*/",
          "getterMethodName" : "getBeforeCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforeCommitId",
          "setterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.*/",
          "setterMethodName" : "setBeforeCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ClientRequestToken" : {
          "c2jName" : "clientRequestToken",
          "c2jShape" : "ClientRequestToken",
          "deprecated" : false,
          "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withClientRequestToken",
          "getterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@return A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
          "getterMethodName" : "getClientRequestToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "clientRequestToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "clientRequestToken",
            "uri" : false
          },
          "idempotencyToken" : true,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ClientRequestToken",
          "setterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
          "setterMethodName" : "setClientRequestToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Content" : {
          "c2jName" : "content",
          "c2jShape" : "Content",
          "deprecated" : false,
          "documentation" : "<p>The content of your comment on the change.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The content of your comment on the change.</p>\n@param content The content of your comment on the change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContent",
          "getterDocumentation" : "/**<p>The content of your comment on the change.</p>\n@return The content of your comment on the change.*/",
          "getterMethodName" : "getContent",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "content",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "content",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Content",
          "setterDocumentation" : "/**<p>The content of your comment on the change.</p>\n@param content The content of your comment on the change.*/",
          "setterMethodName" : "setContent",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "content",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The content of your comment on the change.</p>\n@param content The content of your comment on the change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "content",
            "variableType" : "String",
            "documentation" : "<p>The content of your comment on the change.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Location" : {
          "c2jName" : "location",
          "c2jShape" : "Location",
          "deprecated" : false,
          "documentation" : "<p>The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.</p>\n@param location The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLocation",
          "getterDocumentation" : "/**<p>The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.</p>\n@return The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.*/",
          "getterMethodName" : "getLocation",
          "getterModel" : {
            "returnType" : "Location",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "location",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "location",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Location",
          "setterDocumentation" : "/**<p>The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.</p>\n@param location The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.*/",
          "setterMethodName" : "setLocation",
          "setterModel" : {
            "variableDeclarationType" : "Location",
            "variableName" : "location",
            "variableType" : "Location",
            "documentation" : "",
            "simpleType" : "Location",
            "variableSetterType" : "Location"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.</p>\n@param location The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Location",
            "variableName" : "location",
            "variableType" : "Location",
            "documentation" : "<p>The location of the change where you want to post your comment. If no location is provided, the comment will be posted as a general comment on the pull request difference between the before commit ID and the after commit ID.</p>",
            "simpleType" : "Location",
            "variableSetterType" : "Location"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestId" : {
          "c2jName" : "pullRequestId",
          "c2jShape" : "PullRequestId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestId",
          "getterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@return The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
          "getterMethodName" : "getPullRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestId",
          "setterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
          "setterMethodName" : "setPullRequestId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository where you want to post a comment on a pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository where you want to post a comment on a pull request.</p>\n@param repositoryName The name of the repository where you want to post a comment on a pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository where you want to post a comment on a pull request.</p>\n@return The name of the repository where you want to post a comment on a pull request.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository where you want to post a comment on a pull request.</p>\n@param repositoryName The name of the repository where you want to post a comment on a pull request.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository where you want to post a comment on a pull request.</p>\n@param repositoryName The name of the repository where you want to post a comment on a pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository where you want to post a comment on a pull request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "pullRequestId", "repositoryName", "beforeCommitId", "afterCommitId", "content" ],
      "shapeName" : "PostCommentForPullRequestRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PostCommentForPullRequestRequest",
        "variableName" : "postCommentForPullRequestRequest",
        "variableType" : "PostCommentForPullRequestRequest",
        "documentation" : null,
        "simpleType" : "PostCommentForPullRequestRequest",
        "variableSetterType" : "PostCommentForPullRequestRequest"
      },
      "wrapper" : false
    },
    "PostCommentForPullRequestResult" : {
      "c2jName" : "PostCommentForPullRequestOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository where you posted a comment on a pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository where you posted a comment on a pull request.</p>\n@param repositoryName The name of the repository where you posted a comment on a pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository where you posted a comment on a pull request.</p>\n@return The name of the repository where you posted a comment on a pull request.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository where you posted a comment on a pull request.</p>\n@param repositoryName The name of the repository where you posted a comment on a pull request.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository where you posted a comment on a pull request.</p>\n@param repositoryName The name of the repository where you posted a comment on a pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository where you posted a comment on a pull request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "pullRequestId",
        "c2jShape" : "PullRequestId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated ID of the pull request. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. </p>\n@param pullRequestId The system-generated ID of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestId",
        "getterDocumentation" : "/**<p>The system-generated ID of the pull request. </p>\n@return The system-generated ID of the pull request.*/",
        "getterMethodName" : "getPullRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestId",
        "setterDocumentation" : "/**<p>The system-generated ID of the pull request. </p>\n@param pullRequestId The system-generated ID of the pull request.*/",
        "setterMethodName" : "setPullRequestId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. </p>\n@param pullRequestId The system-generated ID of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated ID of the pull request. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforeCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.</p>\n@param beforeCommitId The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeCommitId",
        "getterDocumentation" : "/**<p>The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.</p>\n@return The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.*/",
        "getterMethodName" : "getBeforeCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforeCommitId",
        "setterDocumentation" : "/**<p>The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.</p>\n@param beforeCommitId The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.*/",
        "setterMethodName" : "setBeforeCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.</p>\n@param beforeCommitId The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "<p>The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The full commit ID of the commit in the destination branch where the pull request will be merged.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch where the pull request will be merged.</p>\n@param afterCommitId The full commit ID of the commit in the destination branch where the pull request will be merged.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterCommitId",
        "getterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch where the pull request will be merged.</p>\n@return The full commit ID of the commit in the destination branch where the pull request will be merged.*/",
        "getterMethodName" : "getAfterCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterCommitId",
        "setterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch where the pull request will be merged.</p>\n@param afterCommitId The full commit ID of the commit in the destination branch where the pull request will be merged.*/",
        "setterMethodName" : "setAfterCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch where the pull request will be merged.</p>\n@param afterCommitId The full commit ID of the commit in the destination branch where the pull request will be merged.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "<p>The full commit ID of the commit in the destination branch where the pull request will be merged.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforeBlobId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>In the directionality of the pull request, the blob ID of the 'before' blob.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>In the directionality of the pull request, the blob ID of the 'before' blob.</p>\n@param beforeBlobId In the directionality of the pull request, the blob ID of the 'before' blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeBlobId",
        "getterDocumentation" : "/**<p>In the directionality of the pull request, the blob ID of the 'before' blob.</p>\n@return In the directionality of the pull request, the blob ID of the 'before' blob.*/",
        "getterMethodName" : "getBeforeBlobId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeBlobId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeBlobId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforeBlobId",
        "setterDocumentation" : "/**<p>In the directionality of the pull request, the blob ID of the 'before' blob.</p>\n@param beforeBlobId In the directionality of the pull request, the blob ID of the 'before' blob.*/",
        "setterMethodName" : "setBeforeBlobId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeBlobId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>In the directionality of the pull request, the blob ID of the 'before' blob.</p>\n@param beforeBlobId In the directionality of the pull request, the blob ID of the 'before' blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeBlobId",
          "variableType" : "String",
          "documentation" : "<p>In the directionality of the pull request, the blob ID of the 'before' blob.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterBlobId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>In the directionality of the pull request, the blob ID of the 'after' blob.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>In the directionality of the pull request, the blob ID of the 'after' blob.</p>\n@param afterBlobId In the directionality of the pull request, the blob ID of the 'after' blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterBlobId",
        "getterDocumentation" : "/**<p>In the directionality of the pull request, the blob ID of the 'after' blob.</p>\n@return In the directionality of the pull request, the blob ID of the 'after' blob.*/",
        "getterMethodName" : "getAfterBlobId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterBlobId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterBlobId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterBlobId",
        "setterDocumentation" : "/**<p>In the directionality of the pull request, the blob ID of the 'after' blob.</p>\n@param afterBlobId In the directionality of the pull request, the blob ID of the 'after' blob.*/",
        "setterMethodName" : "setAfterBlobId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterBlobId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>In the directionality of the pull request, the blob ID of the 'after' blob.</p>\n@param afterBlobId In the directionality of the pull request, the blob ID of the 'after' blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterBlobId",
          "variableType" : "String",
          "documentation" : "<p>In the directionality of the pull request, the blob ID of the 'after' blob.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "location",
        "c2jShape" : "Location",
        "deprecated" : false,
        "documentation" : "<p>The location of the change where you posted your comment.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The location of the change where you posted your comment.</p>\n@param location The location of the change where you posted your comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLocation",
        "getterDocumentation" : "/**<p>The location of the change where you posted your comment.</p>\n@return The location of the change where you posted your comment.*/",
        "getterMethodName" : "getLocation",
        "getterModel" : {
          "returnType" : "Location",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "location",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "location",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Location",
        "setterDocumentation" : "/**<p>The location of the change where you posted your comment.</p>\n@param location The location of the change where you posted your comment.*/",
        "setterMethodName" : "setLocation",
        "setterModel" : {
          "variableDeclarationType" : "Location",
          "variableName" : "location",
          "variableType" : "Location",
          "documentation" : "",
          "simpleType" : "Location",
          "variableSetterType" : "Location"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The location of the change where you posted your comment.</p>\n@param location The location of the change where you posted your comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Location",
          "variableName" : "location",
          "variableType" : "Location",
          "documentation" : "<p>The location of the change where you posted your comment.</p>",
          "simpleType" : "Location",
          "variableSetterType" : "Location"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "comment",
        "c2jShape" : "Comment",
        "deprecated" : false,
        "documentation" : "<p>The content of the comment you posted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The content of the comment you posted.</p>\n@param comment The content of the comment you posted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withComment",
        "getterDocumentation" : "/**<p>The content of the comment you posted.</p>\n@return The content of the comment you posted.*/",
        "getterMethodName" : "getComment",
        "getterModel" : {
          "returnType" : "Comment",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "comment",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "comment",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Comment",
        "setterDocumentation" : "/**<p>The content of the comment you posted.</p>\n@param comment The content of the comment you posted.*/",
        "setterMethodName" : "setComment",
        "setterModel" : {
          "variableDeclarationType" : "Comment",
          "variableName" : "comment",
          "variableType" : "Comment",
          "documentation" : "",
          "simpleType" : "Comment",
          "variableSetterType" : "Comment"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The content of the comment you posted.</p>\n@param comment The content of the comment you posted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Comment",
          "variableName" : "comment",
          "variableType" : "Comment",
          "documentation" : "<p>The content of the comment you posted.</p>",
          "simpleType" : "Comment",
          "variableSetterType" : "Comment"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AfterBlobId" : {
          "c2jName" : "afterBlobId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>In the directionality of the pull request, the blob ID of the 'after' blob.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>In the directionality of the pull request, the blob ID of the 'after' blob.</p>\n@param afterBlobId In the directionality of the pull request, the blob ID of the 'after' blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterBlobId",
          "getterDocumentation" : "/**<p>In the directionality of the pull request, the blob ID of the 'after' blob.</p>\n@return In the directionality of the pull request, the blob ID of the 'after' blob.*/",
          "getterMethodName" : "getAfterBlobId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterBlobId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterBlobId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterBlobId",
          "setterDocumentation" : "/**<p>In the directionality of the pull request, the blob ID of the 'after' blob.</p>\n@param afterBlobId In the directionality of the pull request, the blob ID of the 'after' blob.*/",
          "setterMethodName" : "setAfterBlobId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterBlobId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>In the directionality of the pull request, the blob ID of the 'after' blob.</p>\n@param afterBlobId In the directionality of the pull request, the blob ID of the 'after' blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterBlobId",
            "variableType" : "String",
            "documentation" : "<p>In the directionality of the pull request, the blob ID of the 'after' blob.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "AfterCommitId" : {
          "c2jName" : "afterCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The full commit ID of the commit in the destination branch where the pull request will be merged.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch where the pull request will be merged.</p>\n@param afterCommitId The full commit ID of the commit in the destination branch where the pull request will be merged.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterCommitId",
          "getterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch where the pull request will be merged.</p>\n@return The full commit ID of the commit in the destination branch where the pull request will be merged.*/",
          "getterMethodName" : "getAfterCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterCommitId",
          "setterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch where the pull request will be merged.</p>\n@param afterCommitId The full commit ID of the commit in the destination branch where the pull request will be merged.*/",
          "setterMethodName" : "setAfterCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch where the pull request will be merged.</p>\n@param afterCommitId The full commit ID of the commit in the destination branch where the pull request will be merged.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "<p>The full commit ID of the commit in the destination branch where the pull request will be merged.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeBlobId" : {
          "c2jName" : "beforeBlobId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>In the directionality of the pull request, the blob ID of the 'before' blob.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>In the directionality of the pull request, the blob ID of the 'before' blob.</p>\n@param beforeBlobId In the directionality of the pull request, the blob ID of the 'before' blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeBlobId",
          "getterDocumentation" : "/**<p>In the directionality of the pull request, the blob ID of the 'before' blob.</p>\n@return In the directionality of the pull request, the blob ID of the 'before' blob.*/",
          "getterMethodName" : "getBeforeBlobId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeBlobId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeBlobId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforeBlobId",
          "setterDocumentation" : "/**<p>In the directionality of the pull request, the blob ID of the 'before' blob.</p>\n@param beforeBlobId In the directionality of the pull request, the blob ID of the 'before' blob.*/",
          "setterMethodName" : "setBeforeBlobId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeBlobId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>In the directionality of the pull request, the blob ID of the 'before' blob.</p>\n@param beforeBlobId In the directionality of the pull request, the blob ID of the 'before' blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeBlobId",
            "variableType" : "String",
            "documentation" : "<p>In the directionality of the pull request, the blob ID of the 'before' blob.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeCommitId" : {
          "c2jName" : "beforeCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.</p>\n@param beforeCommitId The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeCommitId",
          "getterDocumentation" : "/**<p>The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.</p>\n@return The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.*/",
          "getterMethodName" : "getBeforeCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforeCommitId",
          "setterDocumentation" : "/**<p>The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.</p>\n@param beforeCommitId The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.*/",
          "setterMethodName" : "setBeforeCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.</p>\n@param beforeCommitId The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "<p>The full commit ID of the commit in the source branch used to create the pull request, or in the case of an updated pull request, the full commit ID of the commit used to update the pull request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Comment" : {
          "c2jName" : "comment",
          "c2jShape" : "Comment",
          "deprecated" : false,
          "documentation" : "<p>The content of the comment you posted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The content of the comment you posted.</p>\n@param comment The content of the comment you posted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withComment",
          "getterDocumentation" : "/**<p>The content of the comment you posted.</p>\n@return The content of the comment you posted.*/",
          "getterMethodName" : "getComment",
          "getterModel" : {
            "returnType" : "Comment",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "comment",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "comment",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Comment",
          "setterDocumentation" : "/**<p>The content of the comment you posted.</p>\n@param comment The content of the comment you posted.*/",
          "setterMethodName" : "setComment",
          "setterModel" : {
            "variableDeclarationType" : "Comment",
            "variableName" : "comment",
            "variableType" : "Comment",
            "documentation" : "",
            "simpleType" : "Comment",
            "variableSetterType" : "Comment"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The content of the comment you posted.</p>\n@param comment The content of the comment you posted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Comment",
            "variableName" : "comment",
            "variableType" : "Comment",
            "documentation" : "<p>The content of the comment you posted.</p>",
            "simpleType" : "Comment",
            "variableSetterType" : "Comment"
          },
          "xmlNameSpaceUri" : null
        },
        "Location" : {
          "c2jName" : "location",
          "c2jShape" : "Location",
          "deprecated" : false,
          "documentation" : "<p>The location of the change where you posted your comment.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The location of the change where you posted your comment.</p>\n@param location The location of the change where you posted your comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLocation",
          "getterDocumentation" : "/**<p>The location of the change where you posted your comment.</p>\n@return The location of the change where you posted your comment.*/",
          "getterMethodName" : "getLocation",
          "getterModel" : {
            "returnType" : "Location",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "location",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "location",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Location",
          "setterDocumentation" : "/**<p>The location of the change where you posted your comment.</p>\n@param location The location of the change where you posted your comment.*/",
          "setterMethodName" : "setLocation",
          "setterModel" : {
            "variableDeclarationType" : "Location",
            "variableName" : "location",
            "variableType" : "Location",
            "documentation" : "",
            "simpleType" : "Location",
            "variableSetterType" : "Location"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The location of the change where you posted your comment.</p>\n@param location The location of the change where you posted your comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Location",
            "variableName" : "location",
            "variableType" : "Location",
            "documentation" : "<p>The location of the change where you posted your comment.</p>",
            "simpleType" : "Location",
            "variableSetterType" : "Location"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestId" : {
          "c2jName" : "pullRequestId",
          "c2jShape" : "PullRequestId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated ID of the pull request. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. </p>\n@param pullRequestId The system-generated ID of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestId",
          "getterDocumentation" : "/**<p>The system-generated ID of the pull request. </p>\n@return The system-generated ID of the pull request.*/",
          "getterMethodName" : "getPullRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestId",
          "setterDocumentation" : "/**<p>The system-generated ID of the pull request. </p>\n@param pullRequestId The system-generated ID of the pull request.*/",
          "setterMethodName" : "setPullRequestId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. </p>\n@param pullRequestId The system-generated ID of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated ID of the pull request. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository where you posted a comment on a pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository where you posted a comment on a pull request.</p>\n@param repositoryName The name of the repository where you posted a comment on a pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository where you posted a comment on a pull request.</p>\n@return The name of the repository where you posted a comment on a pull request.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository where you posted a comment on a pull request.</p>\n@param repositoryName The name of the repository where you posted a comment on a pull request.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository where you posted a comment on a pull request.</p>\n@param repositoryName The name of the repository where you posted a comment on a pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository where you posted a comment on a pull request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PostCommentForPullRequestResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PostCommentForPullRequestResult",
        "variableName" : "postCommentForPullRequestResult",
        "variableType" : "PostCommentForPullRequestResult",
        "documentation" : null,
        "simpleType" : "PostCommentForPullRequestResult",
        "variableSetterType" : "PostCommentForPullRequestResult"
      },
      "wrapper" : false
    },
    "PostCommentReplyRequest" : {
      "c2jName" : "PostCommentReplyInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "PostCommentReply",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.PostCommentReply",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "inReplyTo",
        "c2jShape" : "CommentId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param inReplyTo The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withInReplyTo",
        "getterDocumentation" : "/**<p>The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@return The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.*/",
        "getterMethodName" : "getInReplyTo",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "inReplyTo",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "inReplyTo",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "InReplyTo",
        "setterDocumentation" : "/**<p>The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param inReplyTo The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.*/",
        "setterMethodName" : "setInReplyTo",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "inReplyTo",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param inReplyTo The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "inReplyTo",
          "variableType" : "String",
          "documentation" : "<p>The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "clientRequestToken",
        "c2jShape" : "ClientRequestToken",
        "deprecated" : false,
        "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withClientRequestToken",
        "getterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@return A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
        "getterMethodName" : "getClientRequestToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "clientRequestToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "clientRequestToken",
          "uri" : false
        },
        "idempotencyToken" : true,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ClientRequestToken",
        "setterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
        "setterMethodName" : "setClientRequestToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "content",
        "c2jShape" : "Content",
        "deprecated" : false,
        "documentation" : "<p>The contents of your reply to a comment.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The contents of your reply to a comment.</p>\n@param content The contents of your reply to a comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContent",
        "getterDocumentation" : "/**<p>The contents of your reply to a comment.</p>\n@return The contents of your reply to a comment.*/",
        "getterMethodName" : "getContent",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "content",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "content",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Content",
        "setterDocumentation" : "/**<p>The contents of your reply to a comment.</p>\n@param content The contents of your reply to a comment.*/",
        "setterMethodName" : "setContent",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "content",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The contents of your reply to a comment.</p>\n@param content The contents of your reply to a comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "content",
          "variableType" : "String",
          "documentation" : "<p>The contents of your reply to a comment.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ClientRequestToken" : {
          "c2jName" : "clientRequestToken",
          "c2jShape" : "ClientRequestToken",
          "deprecated" : false,
          "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withClientRequestToken",
          "getterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@return A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
          "getterMethodName" : "getClientRequestToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "clientRequestToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "clientRequestToken",
            "uri" : false
          },
          "idempotencyToken" : true,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ClientRequestToken",
          "setterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
          "setterMethodName" : "setClientRequestToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Content" : {
          "c2jName" : "content",
          "c2jShape" : "Content",
          "deprecated" : false,
          "documentation" : "<p>The contents of your reply to a comment.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The contents of your reply to a comment.</p>\n@param content The contents of your reply to a comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContent",
          "getterDocumentation" : "/**<p>The contents of your reply to a comment.</p>\n@return The contents of your reply to a comment.*/",
          "getterMethodName" : "getContent",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "content",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "content",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Content",
          "setterDocumentation" : "/**<p>The contents of your reply to a comment.</p>\n@param content The contents of your reply to a comment.*/",
          "setterMethodName" : "setContent",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "content",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The contents of your reply to a comment.</p>\n@param content The contents of your reply to a comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "content",
            "variableType" : "String",
            "documentation" : "<p>The contents of your reply to a comment.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "InReplyTo" : {
          "c2jName" : "inReplyTo",
          "c2jShape" : "CommentId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param inReplyTo The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withInReplyTo",
          "getterDocumentation" : "/**<p>The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@return The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.*/",
          "getterMethodName" : "getInReplyTo",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "inReplyTo",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "inReplyTo",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "InReplyTo",
          "setterDocumentation" : "/**<p>The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param inReplyTo The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.*/",
          "setterMethodName" : "setInReplyTo",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "inReplyTo",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param inReplyTo The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "inReplyTo",
            "variableType" : "String",
            "documentation" : "<p>The system-generated ID of the comment to which you want to reply. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "inReplyTo", "content" ],
      "shapeName" : "PostCommentReplyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PostCommentReplyRequest",
        "variableName" : "postCommentReplyRequest",
        "variableType" : "PostCommentReplyRequest",
        "documentation" : null,
        "simpleType" : "PostCommentReplyRequest",
        "variableSetterType" : "PostCommentReplyRequest"
      },
      "wrapper" : false
    },
    "PostCommentReplyResult" : {
      "c2jName" : "PostCommentReplyOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "comment",
        "c2jShape" : "Comment",
        "deprecated" : false,
        "documentation" : "<p>Information about the reply to a comment.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the reply to a comment.</p>\n@param comment Information about the reply to a comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withComment",
        "getterDocumentation" : "/**<p>Information about the reply to a comment.</p>\n@return Information about the reply to a comment.*/",
        "getterMethodName" : "getComment",
        "getterModel" : {
          "returnType" : "Comment",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "comment",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "comment",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Comment",
        "setterDocumentation" : "/**<p>Information about the reply to a comment.</p>\n@param comment Information about the reply to a comment.*/",
        "setterMethodName" : "setComment",
        "setterModel" : {
          "variableDeclarationType" : "Comment",
          "variableName" : "comment",
          "variableType" : "Comment",
          "documentation" : "",
          "simpleType" : "Comment",
          "variableSetterType" : "Comment"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the reply to a comment.</p>\n@param comment Information about the reply to a comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Comment",
          "variableName" : "comment",
          "variableType" : "Comment",
          "documentation" : "<p>Information about the reply to a comment.</p>",
          "simpleType" : "Comment",
          "variableSetterType" : "Comment"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Comment" : {
          "c2jName" : "comment",
          "c2jShape" : "Comment",
          "deprecated" : false,
          "documentation" : "<p>Information about the reply to a comment.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the reply to a comment.</p>\n@param comment Information about the reply to a comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withComment",
          "getterDocumentation" : "/**<p>Information about the reply to a comment.</p>\n@return Information about the reply to a comment.*/",
          "getterMethodName" : "getComment",
          "getterModel" : {
            "returnType" : "Comment",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "comment",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "comment",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Comment",
          "setterDocumentation" : "/**<p>Information about the reply to a comment.</p>\n@param comment Information about the reply to a comment.*/",
          "setterMethodName" : "setComment",
          "setterModel" : {
            "variableDeclarationType" : "Comment",
            "variableName" : "comment",
            "variableType" : "Comment",
            "documentation" : "",
            "simpleType" : "Comment",
            "variableSetterType" : "Comment"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the reply to a comment.</p>\n@param comment Information about the reply to a comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Comment",
            "variableName" : "comment",
            "variableType" : "Comment",
            "documentation" : "<p>Information about the reply to a comment.</p>",
            "simpleType" : "Comment",
            "variableSetterType" : "Comment"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PostCommentReplyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PostCommentReplyResult",
        "variableName" : "postCommentReplyResult",
        "variableType" : "PostCommentReplyResult",
        "documentation" : null,
        "simpleType" : "PostCommentReplyResult",
        "variableSetterType" : "PostCommentReplyResult"
      },
      "wrapper" : false
    },
    "PullRequest" : {
      "c2jName" : "PullRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about a pull request.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "pullRequestId",
        "c2jShape" : "PullRequestId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated ID of the pull request. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. </p>\n@param pullRequestId The system-generated ID of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestId",
        "getterDocumentation" : "/**<p>The system-generated ID of the pull request. </p>\n@return The system-generated ID of the pull request.*/",
        "getterMethodName" : "getPullRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestId",
        "setterDocumentation" : "/**<p>The system-generated ID of the pull request. </p>\n@param pullRequestId The system-generated ID of the pull request.*/",
        "setterMethodName" : "setPullRequestId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. </p>\n@param pullRequestId The system-generated ID of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated ID of the pull request. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "title",
        "c2jShape" : "Title",
        "deprecated" : false,
        "documentation" : "<p>The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.</p>\n@param title The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTitle",
        "getterDocumentation" : "/**<p>The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.</p>\n@return The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.*/",
        "getterMethodName" : "getTitle",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "title",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "title",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Title",
        "setterDocumentation" : "/**<p>The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.</p>\n@param title The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.*/",
        "setterMethodName" : "setTitle",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "title",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.</p>\n@param title The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "title",
          "variableType" : "String",
          "documentation" : "<p>The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "description",
        "c2jShape" : "Description",
        "deprecated" : false,
        "documentation" : "<p>The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.</p>\n@param description The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDescription",
        "getterDocumentation" : "/**<p>The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.</p>\n@return The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.*/",
        "getterMethodName" : "getDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "description",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "description",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Description",
        "setterDocumentation" : "/**<p>The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.</p>\n@param description The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.*/",
        "setterMethodName" : "setDescription",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.</p>\n@param description The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "<p>The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lastActivityDate",
        "c2jShape" : "LastModifiedDate",
        "deprecated" : false,
        "documentation" : "<p>The day and time of the last user or system activity on the pull request, in timestamp format.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The day and time of the last user or system activity on the pull request, in timestamp format.</p>\n@param lastActivityDate The day and time of the last user or system activity on the pull request, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastActivityDate",
        "getterDocumentation" : "/**<p>The day and time of the last user or system activity on the pull request, in timestamp format.</p>\n@return The day and time of the last user or system activity on the pull request, in timestamp format.*/",
        "getterMethodName" : "getLastActivityDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lastActivityDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lastActivityDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "LastActivityDate",
        "setterDocumentation" : "/**<p>The day and time of the last user or system activity on the pull request, in timestamp format.</p>\n@param lastActivityDate The day and time of the last user or system activity on the pull request, in timestamp format.*/",
        "setterMethodName" : "setLastActivityDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastActivityDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The day and time of the last user or system activity on the pull request, in timestamp format.</p>\n@param lastActivityDate The day and time of the last user or system activity on the pull request, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastActivityDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The day and time of the last user or system activity on the pull request, in timestamp format.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "creationDate",
        "c2jShape" : "CreationDate",
        "deprecated" : false,
        "documentation" : "<p>The date and time the pull request was originally created, in timestamp format.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time the pull request was originally created, in timestamp format.</p>\n@param creationDate The date and time the pull request was originally created, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationDate",
        "getterDocumentation" : "/**<p>The date and time the pull request was originally created, in timestamp format.</p>\n@return The date and time the pull request was originally created, in timestamp format.*/",
        "getterMethodName" : "getCreationDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "creationDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "creationDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreationDate",
        "setterDocumentation" : "/**<p>The date and time the pull request was originally created, in timestamp format.</p>\n@param creationDate The date and time the pull request was originally created, in timestamp format.*/",
        "setterMethodName" : "setCreationDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time the pull request was originally created, in timestamp format.</p>\n@param creationDate The date and time the pull request was originally created, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time the pull request was originally created, in timestamp format.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "pullRequestStatus",
        "c2jShape" : "PullRequestStatusEnum",
        "deprecated" : false,
        "documentation" : "<p>The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.</p>",
        "enumType" : "PullRequestStatusEnum",
        "fluentSetterDocumentation" : "/**<p>The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.</p>\n@param pullRequestStatus The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestStatusEnum*/",
        "fluentSetterMethodName" : "withPullRequestStatus",
        "getterDocumentation" : "/**<p>The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.</p>\n@return The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.\n@see PullRequestStatusEnum*/",
        "getterMethodName" : "getPullRequestStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestStatus",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestStatus",
        "setterDocumentation" : "/**<p>The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.</p>\n@param pullRequestStatus The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.\n@see PullRequestStatusEnum*/",
        "setterMethodName" : "setPullRequestStatus",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.</p>\n@param pullRequestStatus The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestStatusEnum*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestStatus",
          "variableType" : "String",
          "documentation" : "<p>The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "authorArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) of the user who created the pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user who created the pull request.</p>\n@param authorArn The Amazon Resource Name (ARN) of the user who created the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAuthorArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user who created the pull request.</p>\n@return The Amazon Resource Name (ARN) of the user who created the pull request.*/",
        "getterMethodName" : "getAuthorArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "authorArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "authorArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AuthorArn",
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user who created the pull request.</p>\n@param authorArn The Amazon Resource Name (ARN) of the user who created the pull request.*/",
        "setterMethodName" : "setAuthorArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "authorArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user who created the pull request.</p>\n@param authorArn The Amazon Resource Name (ARN) of the user who created the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "authorArn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the user who created the pull request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "pullRequestTargets",
        "c2jShape" : "PullRequestTargetList",
        "deprecated" : false,
        "documentation" : "<p>The targets of the pull request, including the source branch and destination branch for the pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The targets of the pull request, including the source branch and destination branch for the pull request.</p>\n@param pullRequestTargets The targets of the pull request, including the source branch and destination branch for the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestTargets",
        "getterDocumentation" : "/**<p>The targets of the pull request, including the source branch and destination branch for the pull request.</p>\n@return The targets of the pull request, including the source branch and destination branch for the pull request.*/",
        "getterMethodName" : "getPullRequestTargets",
        "getterModel" : {
          "returnType" : "java.util.List<PullRequestTarget>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestTargets",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestTargets",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "PullRequestTarget",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "PullRequestTarget",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "PullRequestTarget",
              "variableName" : "member",
              "variableType" : "PullRequestTarget",
              "documentation" : "",
              "simpleType" : "PullRequestTarget",
              "variableSetterType" : "PullRequestTarget"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "PullRequestTarget",
              "variableName" : "member",
              "variableType" : "PullRequestTarget",
              "documentation" : "",
              "simpleType" : "PullRequestTarget",
              "variableSetterType" : "PullRequestTarget"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "PullRequestTarget",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "PullRequestTarget",
          "templateImplType" : "java.util.ArrayList<PullRequestTarget>",
          "templateType" : "java.util.List<PullRequestTarget>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "PullRequestTargets",
        "setterDocumentation" : "/**<p>The targets of the pull request, including the source branch and destination branch for the pull request.</p>\n@param pullRequestTargets The targets of the pull request, including the source branch and destination branch for the pull request.*/",
        "setterMethodName" : "setPullRequestTargets",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<PullRequestTarget>",
          "variableName" : "pullRequestTargets",
          "variableType" : "java.util.List<PullRequestTarget>",
          "documentation" : "",
          "simpleType" : "List<PullRequestTarget>",
          "variableSetterType" : "java.util.Collection<PullRequestTarget>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The targets of the pull request, including the source branch and destination branch for the pull request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPullRequestTargets(java.util.Collection)} or {@link #withPullRequestTargets(java.util.Collection)} if you want to override the existing values.</p>\n@param pullRequestTargets The targets of the pull request, including the source branch and destination branch for the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<PullRequestTarget>",
          "variableName" : "pullRequestTargets",
          "variableType" : "java.util.List<PullRequestTarget>",
          "documentation" : "<p>The targets of the pull request, including the source branch and destination branch for the pull request.</p>",
          "simpleType" : "List<PullRequestTarget>",
          "variableSetterType" : "java.util.Collection<PullRequestTarget>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "clientRequestToken",
        "c2jShape" : "ClientRequestToken",
        "deprecated" : false,
        "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withClientRequestToken",
        "getterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@return A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
        "getterMethodName" : "getClientRequestToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "clientRequestToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "clientRequestToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ClientRequestToken",
        "setterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
        "setterMethodName" : "setClientRequestToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AuthorArn" : {
          "c2jName" : "authorArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the user who created the pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user who created the pull request.</p>\n@param authorArn The Amazon Resource Name (ARN) of the user who created the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAuthorArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user who created the pull request.</p>\n@return The Amazon Resource Name (ARN) of the user who created the pull request.*/",
          "getterMethodName" : "getAuthorArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "authorArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "authorArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AuthorArn",
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user who created the pull request.</p>\n@param authorArn The Amazon Resource Name (ARN) of the user who created the pull request.*/",
          "setterMethodName" : "setAuthorArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "authorArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user who created the pull request.</p>\n@param authorArn The Amazon Resource Name (ARN) of the user who created the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "authorArn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the user who created the pull request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ClientRequestToken" : {
          "c2jName" : "clientRequestToken",
          "c2jShape" : "ClientRequestToken",
          "deprecated" : false,
          "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withClientRequestToken",
          "getterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@return A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
          "getterMethodName" : "getClientRequestToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "clientRequestToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "clientRequestToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ClientRequestToken",
          "setterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.*/",
          "setterMethodName" : "setClientRequestToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>\n@param clientRequestToken A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "<p>A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreationDate" : {
          "c2jName" : "creationDate",
          "c2jShape" : "CreationDate",
          "deprecated" : false,
          "documentation" : "<p>The date and time the pull request was originally created, in timestamp format.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time the pull request was originally created, in timestamp format.</p>\n@param creationDate The date and time the pull request was originally created, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationDate",
          "getterDocumentation" : "/**<p>The date and time the pull request was originally created, in timestamp format.</p>\n@return The date and time the pull request was originally created, in timestamp format.*/",
          "getterMethodName" : "getCreationDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "creationDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "creationDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreationDate",
          "setterDocumentation" : "/**<p>The date and time the pull request was originally created, in timestamp format.</p>\n@param creationDate The date and time the pull request was originally created, in timestamp format.*/",
          "setterMethodName" : "setCreationDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time the pull request was originally created, in timestamp format.</p>\n@param creationDate The date and time the pull request was originally created, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time the pull request was originally created, in timestamp format.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "Description" : {
          "c2jName" : "description",
          "c2jShape" : "Description",
          "deprecated" : false,
          "documentation" : "<p>The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.</p>\n@param description The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDescription",
          "getterDocumentation" : "/**<p>The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.</p>\n@return The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.*/",
          "getterMethodName" : "getDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "description",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "description",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Description",
          "setterDocumentation" : "/**<p>The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.</p>\n@param description The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.*/",
          "setterMethodName" : "setDescription",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.</p>\n@param description The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "<p>The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LastActivityDate" : {
          "c2jName" : "lastActivityDate",
          "c2jShape" : "LastModifiedDate",
          "deprecated" : false,
          "documentation" : "<p>The day and time of the last user or system activity on the pull request, in timestamp format.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The day and time of the last user or system activity on the pull request, in timestamp format.</p>\n@param lastActivityDate The day and time of the last user or system activity on the pull request, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastActivityDate",
          "getterDocumentation" : "/**<p>The day and time of the last user or system activity on the pull request, in timestamp format.</p>\n@return The day and time of the last user or system activity on the pull request, in timestamp format.*/",
          "getterMethodName" : "getLastActivityDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lastActivityDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lastActivityDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "LastActivityDate",
          "setterDocumentation" : "/**<p>The day and time of the last user or system activity on the pull request, in timestamp format.</p>\n@param lastActivityDate The day and time of the last user or system activity on the pull request, in timestamp format.*/",
          "setterMethodName" : "setLastActivityDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastActivityDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The day and time of the last user or system activity on the pull request, in timestamp format.</p>\n@param lastActivityDate The day and time of the last user or system activity on the pull request, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastActivityDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The day and time of the last user or system activity on the pull request, in timestamp format.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestId" : {
          "c2jName" : "pullRequestId",
          "c2jShape" : "PullRequestId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated ID of the pull request. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. </p>\n@param pullRequestId The system-generated ID of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestId",
          "getterDocumentation" : "/**<p>The system-generated ID of the pull request. </p>\n@return The system-generated ID of the pull request.*/",
          "getterMethodName" : "getPullRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestId",
          "setterDocumentation" : "/**<p>The system-generated ID of the pull request. </p>\n@param pullRequestId The system-generated ID of the pull request.*/",
          "setterMethodName" : "setPullRequestId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. </p>\n@param pullRequestId The system-generated ID of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated ID of the pull request. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestStatus" : {
          "c2jName" : "pullRequestStatus",
          "c2jShape" : "PullRequestStatusEnum",
          "deprecated" : false,
          "documentation" : "<p>The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.</p>",
          "enumType" : "PullRequestStatusEnum",
          "fluentSetterDocumentation" : "/**<p>The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.</p>\n@param pullRequestStatus The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestStatusEnum*/",
          "fluentSetterMethodName" : "withPullRequestStatus",
          "getterDocumentation" : "/**<p>The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.</p>\n@return The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.\n@see PullRequestStatusEnum*/",
          "getterMethodName" : "getPullRequestStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestStatus",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestStatus",
          "setterDocumentation" : "/**<p>The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.</p>\n@param pullRequestStatus The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.\n@see PullRequestStatusEnum*/",
          "setterMethodName" : "setPullRequestStatus",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.</p>\n@param pullRequestStatus The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestStatusEnum*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestStatus",
            "variableType" : "String",
            "documentation" : "<p>The status of the pull request. Pull request status can only change from <code>OPEN</code> to <code>CLOSED</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestTargets" : {
          "c2jName" : "pullRequestTargets",
          "c2jShape" : "PullRequestTargetList",
          "deprecated" : false,
          "documentation" : "<p>The targets of the pull request, including the source branch and destination branch for the pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The targets of the pull request, including the source branch and destination branch for the pull request.</p>\n@param pullRequestTargets The targets of the pull request, including the source branch and destination branch for the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestTargets",
          "getterDocumentation" : "/**<p>The targets of the pull request, including the source branch and destination branch for the pull request.</p>\n@return The targets of the pull request, including the source branch and destination branch for the pull request.*/",
          "getterMethodName" : "getPullRequestTargets",
          "getterModel" : {
            "returnType" : "java.util.List<PullRequestTarget>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestTargets",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestTargets",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "PullRequestTarget",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "PullRequestTarget",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "PullRequestTarget",
                "variableName" : "member",
                "variableType" : "PullRequestTarget",
                "documentation" : "",
                "simpleType" : "PullRequestTarget",
                "variableSetterType" : "PullRequestTarget"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "PullRequestTarget",
                "variableName" : "member",
                "variableType" : "PullRequestTarget",
                "documentation" : "",
                "simpleType" : "PullRequestTarget",
                "variableSetterType" : "PullRequestTarget"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "PullRequestTarget",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "PullRequestTarget",
            "templateImplType" : "java.util.ArrayList<PullRequestTarget>",
            "templateType" : "java.util.List<PullRequestTarget>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "PullRequestTargets",
          "setterDocumentation" : "/**<p>The targets of the pull request, including the source branch and destination branch for the pull request.</p>\n@param pullRequestTargets The targets of the pull request, including the source branch and destination branch for the pull request.*/",
          "setterMethodName" : "setPullRequestTargets",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<PullRequestTarget>",
            "variableName" : "pullRequestTargets",
            "variableType" : "java.util.List<PullRequestTarget>",
            "documentation" : "",
            "simpleType" : "List<PullRequestTarget>",
            "variableSetterType" : "java.util.Collection<PullRequestTarget>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The targets of the pull request, including the source branch and destination branch for the pull request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPullRequestTargets(java.util.Collection)} or {@link #withPullRequestTargets(java.util.Collection)} if you want to override the existing values.</p>\n@param pullRequestTargets The targets of the pull request, including the source branch and destination branch for the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<PullRequestTarget>",
            "variableName" : "pullRequestTargets",
            "variableType" : "java.util.List<PullRequestTarget>",
            "documentation" : "<p>The targets of the pull request, including the source branch and destination branch for the pull request.</p>",
            "simpleType" : "List<PullRequestTarget>",
            "variableSetterType" : "java.util.Collection<PullRequestTarget>"
          },
          "xmlNameSpaceUri" : null
        },
        "Title" : {
          "c2jName" : "title",
          "c2jShape" : "Title",
          "deprecated" : false,
          "documentation" : "<p>The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.</p>\n@param title The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTitle",
          "getterDocumentation" : "/**<p>The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.</p>\n@return The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.*/",
          "getterMethodName" : "getTitle",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "title",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "title",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Title",
          "setterDocumentation" : "/**<p>The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.</p>\n@param title The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.*/",
          "setterMethodName" : "setTitle",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "title",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.</p>\n@param title The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "title",
            "variableType" : "String",
            "documentation" : "<p>The user-defined title of the pull request. This title is displayed in the list of pull requests to other users of the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PullRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PullRequest",
        "variableName" : "pullRequest",
        "variableType" : "PullRequest",
        "documentation" : null,
        "simpleType" : "PullRequest",
        "variableSetterType" : "PullRequest"
      },
      "wrapper" : false
    },
    "PullRequestAlreadyClosedException" : {
      "c2jName" : "PullRequestAlreadyClosedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The pull request status cannot be updated because it is already closed.</p>",
      "enums" : null,
      "errorCode" : "PullRequestAlreadyClosedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PullRequestAlreadyClosedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PullRequestAlreadyClosedException",
        "variableName" : "pullRequestAlreadyClosedException",
        "variableType" : "PullRequestAlreadyClosedException",
        "documentation" : null,
        "simpleType" : "PullRequestAlreadyClosedException",
        "variableSetterType" : "PullRequestAlreadyClosedException"
      },
      "wrapper" : false
    },
    "PullRequestDoesNotExistException" : {
      "c2jName" : "PullRequestDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The pull request ID could not be found. Make sure that you have specified the correct repository name and pull request ID, and then try again.</p>",
      "enums" : null,
      "errorCode" : "PullRequestDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PullRequestDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PullRequestDoesNotExistException",
        "variableName" : "pullRequestDoesNotExistException",
        "variableType" : "PullRequestDoesNotExistException",
        "documentation" : null,
        "simpleType" : "PullRequestDoesNotExistException",
        "variableSetterType" : "PullRequestDoesNotExistException"
      },
      "wrapper" : false
    },
    "PullRequestEvent" : {
      "c2jName" : "PullRequestEvent",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about a pull request event.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "pullRequestId",
        "c2jShape" : "PullRequestId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated ID of the pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request.</p>\n@param pullRequestId The system-generated ID of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestId",
        "getterDocumentation" : "/**<p>The system-generated ID of the pull request.</p>\n@return The system-generated ID of the pull request.*/",
        "getterMethodName" : "getPullRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestId",
        "setterDocumentation" : "/**<p>The system-generated ID of the pull request.</p>\n@param pullRequestId The system-generated ID of the pull request.*/",
        "setterMethodName" : "setPullRequestId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request.</p>\n@param pullRequestId The system-generated ID of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated ID of the pull request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "eventDate",
        "c2jShape" : "EventDate",
        "deprecated" : false,
        "documentation" : "<p>The day and time of the pull request event, in timestamp format.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The day and time of the pull request event, in timestamp format.</p>\n@param eventDate The day and time of the pull request event, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withEventDate",
        "getterDocumentation" : "/**<p>The day and time of the pull request event, in timestamp format.</p>\n@return The day and time of the pull request event, in timestamp format.*/",
        "getterMethodName" : "getEventDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "eventDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "eventDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "EventDate",
        "setterDocumentation" : "/**<p>The day and time of the pull request event, in timestamp format.</p>\n@param eventDate The day and time of the pull request event, in timestamp format.*/",
        "setterMethodName" : "setEventDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "eventDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The day and time of the pull request event, in timestamp format.</p>\n@param eventDate The day and time of the pull request event, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "eventDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The day and time of the pull request event, in timestamp format.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "pullRequestEventType",
        "c2jShape" : "PullRequestEventType",
        "deprecated" : false,
        "documentation" : "<p>The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).</p>",
        "enumType" : "PullRequestEventType",
        "fluentSetterDocumentation" : "/**<p>The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).</p>\n@param pullRequestEventType The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestEventType*/",
        "fluentSetterMethodName" : "withPullRequestEventType",
        "getterDocumentation" : "/**<p>The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).</p>\n@return The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).\n@see PullRequestEventType*/",
        "getterMethodName" : "getPullRequestEventType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestEventType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestEventType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestEventType",
        "setterDocumentation" : "/**<p>The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).</p>\n@param pullRequestEventType The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).\n@see PullRequestEventType*/",
        "setterMethodName" : "setPullRequestEventType",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestEventType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).</p>\n@param pullRequestEventType The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestEventType*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestEventType",
          "variableType" : "String",
          "documentation" : "<p>The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "actorArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>\n@param actorArn The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withActorArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>\n@return The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.*/",
        "getterMethodName" : "getActorArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "actorArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "actorArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ActorArn",
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>\n@param actorArn The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.*/",
        "setterMethodName" : "setActorArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "actorArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>\n@param actorArn The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "actorArn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "pullRequestStatusChangedEventMetadata",
        "c2jShape" : "PullRequestStatusChangedEventMetadata",
        "deprecated" : false,
        "documentation" : "<p>Information about the change in status for the pull request event.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the change in status for the pull request event.</p>\n@param pullRequestStatusChangedEventMetadata Information about the change in status for the pull request event.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestStatusChangedEventMetadata",
        "getterDocumentation" : "/**<p>Information about the change in status for the pull request event.</p>\n@return Information about the change in status for the pull request event.*/",
        "getterMethodName" : "getPullRequestStatusChangedEventMetadata",
        "getterModel" : {
          "returnType" : "PullRequestStatusChangedEventMetadata",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestStatusChangedEventMetadata",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestStatusChangedEventMetadata",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "PullRequestStatusChangedEventMetadata",
        "setterDocumentation" : "/**<p>Information about the change in status for the pull request event.</p>\n@param pullRequestStatusChangedEventMetadata Information about the change in status for the pull request event.*/",
        "setterMethodName" : "setPullRequestStatusChangedEventMetadata",
        "setterModel" : {
          "variableDeclarationType" : "PullRequestStatusChangedEventMetadata",
          "variableName" : "pullRequestStatusChangedEventMetadata",
          "variableType" : "PullRequestStatusChangedEventMetadata",
          "documentation" : "",
          "simpleType" : "PullRequestStatusChangedEventMetadata",
          "variableSetterType" : "PullRequestStatusChangedEventMetadata"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the change in status for the pull request event.</p>\n@param pullRequestStatusChangedEventMetadata Information about the change in status for the pull request event.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "PullRequestStatusChangedEventMetadata",
          "variableName" : "pullRequestStatusChangedEventMetadata",
          "variableType" : "PullRequestStatusChangedEventMetadata",
          "documentation" : "<p>Information about the change in status for the pull request event.</p>",
          "simpleType" : "PullRequestStatusChangedEventMetadata",
          "variableSetterType" : "PullRequestStatusChangedEventMetadata"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "pullRequestSourceReferenceUpdatedEventMetadata",
        "c2jShape" : "PullRequestSourceReferenceUpdatedEventMetadata",
        "deprecated" : false,
        "documentation" : "<p>Information about the updated source branch for the pull request event. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the updated source branch for the pull request event. </p>\n@param pullRequestSourceReferenceUpdatedEventMetadata Information about the updated source branch for the pull request event.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestSourceReferenceUpdatedEventMetadata",
        "getterDocumentation" : "/**<p>Information about the updated source branch for the pull request event. </p>\n@return Information about the updated source branch for the pull request event.*/",
        "getterMethodName" : "getPullRequestSourceReferenceUpdatedEventMetadata",
        "getterModel" : {
          "returnType" : "PullRequestSourceReferenceUpdatedEventMetadata",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestSourceReferenceUpdatedEventMetadata",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestSourceReferenceUpdatedEventMetadata",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "PullRequestSourceReferenceUpdatedEventMetadata",
        "setterDocumentation" : "/**<p>Information about the updated source branch for the pull request event. </p>\n@param pullRequestSourceReferenceUpdatedEventMetadata Information about the updated source branch for the pull request event.*/",
        "setterMethodName" : "setPullRequestSourceReferenceUpdatedEventMetadata",
        "setterModel" : {
          "variableDeclarationType" : "PullRequestSourceReferenceUpdatedEventMetadata",
          "variableName" : "pullRequestSourceReferenceUpdatedEventMetadata",
          "variableType" : "PullRequestSourceReferenceUpdatedEventMetadata",
          "documentation" : "",
          "simpleType" : "PullRequestSourceReferenceUpdatedEventMetadata",
          "variableSetterType" : "PullRequestSourceReferenceUpdatedEventMetadata"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the updated source branch for the pull request event. </p>\n@param pullRequestSourceReferenceUpdatedEventMetadata Information about the updated source branch for the pull request event.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "PullRequestSourceReferenceUpdatedEventMetadata",
          "variableName" : "pullRequestSourceReferenceUpdatedEventMetadata",
          "variableType" : "PullRequestSourceReferenceUpdatedEventMetadata",
          "documentation" : "<p>Information about the updated source branch for the pull request event. </p>",
          "simpleType" : "PullRequestSourceReferenceUpdatedEventMetadata",
          "variableSetterType" : "PullRequestSourceReferenceUpdatedEventMetadata"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "pullRequestMergedStateChangedEventMetadata",
        "c2jShape" : "PullRequestMergedStateChangedEventMetadata",
        "deprecated" : false,
        "documentation" : "<p>Information about the change in mergability state for the pull request event.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the change in mergability state for the pull request event.</p>\n@param pullRequestMergedStateChangedEventMetadata Information about the change in mergability state for the pull request event.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestMergedStateChangedEventMetadata",
        "getterDocumentation" : "/**<p>Information about the change in mergability state for the pull request event.</p>\n@return Information about the change in mergability state for the pull request event.*/",
        "getterMethodName" : "getPullRequestMergedStateChangedEventMetadata",
        "getterModel" : {
          "returnType" : "PullRequestMergedStateChangedEventMetadata",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestMergedStateChangedEventMetadata",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestMergedStateChangedEventMetadata",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "PullRequestMergedStateChangedEventMetadata",
        "setterDocumentation" : "/**<p>Information about the change in mergability state for the pull request event.</p>\n@param pullRequestMergedStateChangedEventMetadata Information about the change in mergability state for the pull request event.*/",
        "setterMethodName" : "setPullRequestMergedStateChangedEventMetadata",
        "setterModel" : {
          "variableDeclarationType" : "PullRequestMergedStateChangedEventMetadata",
          "variableName" : "pullRequestMergedStateChangedEventMetadata",
          "variableType" : "PullRequestMergedStateChangedEventMetadata",
          "documentation" : "",
          "simpleType" : "PullRequestMergedStateChangedEventMetadata",
          "variableSetterType" : "PullRequestMergedStateChangedEventMetadata"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the change in mergability state for the pull request event.</p>\n@param pullRequestMergedStateChangedEventMetadata Information about the change in mergability state for the pull request event.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "PullRequestMergedStateChangedEventMetadata",
          "variableName" : "pullRequestMergedStateChangedEventMetadata",
          "variableType" : "PullRequestMergedStateChangedEventMetadata",
          "documentation" : "<p>Information about the change in mergability state for the pull request event.</p>",
          "simpleType" : "PullRequestMergedStateChangedEventMetadata",
          "variableSetterType" : "PullRequestMergedStateChangedEventMetadata"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ActorArn" : {
          "c2jName" : "actorArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>\n@param actorArn The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withActorArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>\n@return The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.*/",
          "getterMethodName" : "getActorArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "actorArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "actorArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ActorArn",
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>\n@param actorArn The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.*/",
          "setterMethodName" : "setActorArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "actorArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>\n@param actorArn The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "actorArn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples include updating the pull request with additional commits or changing the status of a pull request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "EventDate" : {
          "c2jName" : "eventDate",
          "c2jShape" : "EventDate",
          "deprecated" : false,
          "documentation" : "<p>The day and time of the pull request event, in timestamp format.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The day and time of the pull request event, in timestamp format.</p>\n@param eventDate The day and time of the pull request event, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withEventDate",
          "getterDocumentation" : "/**<p>The day and time of the pull request event, in timestamp format.</p>\n@return The day and time of the pull request event, in timestamp format.*/",
          "getterMethodName" : "getEventDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "eventDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "eventDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "EventDate",
          "setterDocumentation" : "/**<p>The day and time of the pull request event, in timestamp format.</p>\n@param eventDate The day and time of the pull request event, in timestamp format.*/",
          "setterMethodName" : "setEventDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "eventDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The day and time of the pull request event, in timestamp format.</p>\n@param eventDate The day and time of the pull request event, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "eventDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The day and time of the pull request event, in timestamp format.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestEventType" : {
          "c2jName" : "pullRequestEventType",
          "c2jShape" : "PullRequestEventType",
          "deprecated" : false,
          "documentation" : "<p>The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).</p>",
          "enumType" : "PullRequestEventType",
          "fluentSetterDocumentation" : "/**<p>The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).</p>\n@param pullRequestEventType The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestEventType*/",
          "fluentSetterMethodName" : "withPullRequestEventType",
          "getterDocumentation" : "/**<p>The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).</p>\n@return The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).\n@see PullRequestEventType*/",
          "getterMethodName" : "getPullRequestEventType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestEventType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestEventType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestEventType",
          "setterDocumentation" : "/**<p>The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).</p>\n@param pullRequestEventType The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).\n@see PullRequestEventType*/",
          "setterMethodName" : "setPullRequestEventType",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestEventType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).</p>\n@param pullRequestEventType The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestEventType*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestEventType",
            "variableType" : "String",
            "documentation" : "<p>The type of the pull request event, for example a status change event (PULL_REQUEST_STATUS_CHANGED) or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestId" : {
          "c2jName" : "pullRequestId",
          "c2jShape" : "PullRequestId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated ID of the pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request.</p>\n@param pullRequestId The system-generated ID of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestId",
          "getterDocumentation" : "/**<p>The system-generated ID of the pull request.</p>\n@return The system-generated ID of the pull request.*/",
          "getterMethodName" : "getPullRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestId",
          "setterDocumentation" : "/**<p>The system-generated ID of the pull request.</p>\n@param pullRequestId The system-generated ID of the pull request.*/",
          "setterMethodName" : "setPullRequestId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request.</p>\n@param pullRequestId The system-generated ID of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated ID of the pull request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestMergedStateChangedEventMetadata" : {
          "c2jName" : "pullRequestMergedStateChangedEventMetadata",
          "c2jShape" : "PullRequestMergedStateChangedEventMetadata",
          "deprecated" : false,
          "documentation" : "<p>Information about the change in mergability state for the pull request event.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the change in mergability state for the pull request event.</p>\n@param pullRequestMergedStateChangedEventMetadata Information about the change in mergability state for the pull request event.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestMergedStateChangedEventMetadata",
          "getterDocumentation" : "/**<p>Information about the change in mergability state for the pull request event.</p>\n@return Information about the change in mergability state for the pull request event.*/",
          "getterMethodName" : "getPullRequestMergedStateChangedEventMetadata",
          "getterModel" : {
            "returnType" : "PullRequestMergedStateChangedEventMetadata",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestMergedStateChangedEventMetadata",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestMergedStateChangedEventMetadata",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "PullRequestMergedStateChangedEventMetadata",
          "setterDocumentation" : "/**<p>Information about the change in mergability state for the pull request event.</p>\n@param pullRequestMergedStateChangedEventMetadata Information about the change in mergability state for the pull request event.*/",
          "setterMethodName" : "setPullRequestMergedStateChangedEventMetadata",
          "setterModel" : {
            "variableDeclarationType" : "PullRequestMergedStateChangedEventMetadata",
            "variableName" : "pullRequestMergedStateChangedEventMetadata",
            "variableType" : "PullRequestMergedStateChangedEventMetadata",
            "documentation" : "",
            "simpleType" : "PullRequestMergedStateChangedEventMetadata",
            "variableSetterType" : "PullRequestMergedStateChangedEventMetadata"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the change in mergability state for the pull request event.</p>\n@param pullRequestMergedStateChangedEventMetadata Information about the change in mergability state for the pull request event.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "PullRequestMergedStateChangedEventMetadata",
            "variableName" : "pullRequestMergedStateChangedEventMetadata",
            "variableType" : "PullRequestMergedStateChangedEventMetadata",
            "documentation" : "<p>Information about the change in mergability state for the pull request event.</p>",
            "simpleType" : "PullRequestMergedStateChangedEventMetadata",
            "variableSetterType" : "PullRequestMergedStateChangedEventMetadata"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestSourceReferenceUpdatedEventMetadata" : {
          "c2jName" : "pullRequestSourceReferenceUpdatedEventMetadata",
          "c2jShape" : "PullRequestSourceReferenceUpdatedEventMetadata",
          "deprecated" : false,
          "documentation" : "<p>Information about the updated source branch for the pull request event. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the updated source branch for the pull request event. </p>\n@param pullRequestSourceReferenceUpdatedEventMetadata Information about the updated source branch for the pull request event.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestSourceReferenceUpdatedEventMetadata",
          "getterDocumentation" : "/**<p>Information about the updated source branch for the pull request event. </p>\n@return Information about the updated source branch for the pull request event.*/",
          "getterMethodName" : "getPullRequestSourceReferenceUpdatedEventMetadata",
          "getterModel" : {
            "returnType" : "PullRequestSourceReferenceUpdatedEventMetadata",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestSourceReferenceUpdatedEventMetadata",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestSourceReferenceUpdatedEventMetadata",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "PullRequestSourceReferenceUpdatedEventMetadata",
          "setterDocumentation" : "/**<p>Information about the updated source branch for the pull request event. </p>\n@param pullRequestSourceReferenceUpdatedEventMetadata Information about the updated source branch for the pull request event.*/",
          "setterMethodName" : "setPullRequestSourceReferenceUpdatedEventMetadata",
          "setterModel" : {
            "variableDeclarationType" : "PullRequestSourceReferenceUpdatedEventMetadata",
            "variableName" : "pullRequestSourceReferenceUpdatedEventMetadata",
            "variableType" : "PullRequestSourceReferenceUpdatedEventMetadata",
            "documentation" : "",
            "simpleType" : "PullRequestSourceReferenceUpdatedEventMetadata",
            "variableSetterType" : "PullRequestSourceReferenceUpdatedEventMetadata"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the updated source branch for the pull request event. </p>\n@param pullRequestSourceReferenceUpdatedEventMetadata Information about the updated source branch for the pull request event.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "PullRequestSourceReferenceUpdatedEventMetadata",
            "variableName" : "pullRequestSourceReferenceUpdatedEventMetadata",
            "variableType" : "PullRequestSourceReferenceUpdatedEventMetadata",
            "documentation" : "<p>Information about the updated source branch for the pull request event. </p>",
            "simpleType" : "PullRequestSourceReferenceUpdatedEventMetadata",
            "variableSetterType" : "PullRequestSourceReferenceUpdatedEventMetadata"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestStatusChangedEventMetadata" : {
          "c2jName" : "pullRequestStatusChangedEventMetadata",
          "c2jShape" : "PullRequestStatusChangedEventMetadata",
          "deprecated" : false,
          "documentation" : "<p>Information about the change in status for the pull request event.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the change in status for the pull request event.</p>\n@param pullRequestStatusChangedEventMetadata Information about the change in status for the pull request event.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestStatusChangedEventMetadata",
          "getterDocumentation" : "/**<p>Information about the change in status for the pull request event.</p>\n@return Information about the change in status for the pull request event.*/",
          "getterMethodName" : "getPullRequestStatusChangedEventMetadata",
          "getterModel" : {
            "returnType" : "PullRequestStatusChangedEventMetadata",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestStatusChangedEventMetadata",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestStatusChangedEventMetadata",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "PullRequestStatusChangedEventMetadata",
          "setterDocumentation" : "/**<p>Information about the change in status for the pull request event.</p>\n@param pullRequestStatusChangedEventMetadata Information about the change in status for the pull request event.*/",
          "setterMethodName" : "setPullRequestStatusChangedEventMetadata",
          "setterModel" : {
            "variableDeclarationType" : "PullRequestStatusChangedEventMetadata",
            "variableName" : "pullRequestStatusChangedEventMetadata",
            "variableType" : "PullRequestStatusChangedEventMetadata",
            "documentation" : "",
            "simpleType" : "PullRequestStatusChangedEventMetadata",
            "variableSetterType" : "PullRequestStatusChangedEventMetadata"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the change in status for the pull request event.</p>\n@param pullRequestStatusChangedEventMetadata Information about the change in status for the pull request event.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "PullRequestStatusChangedEventMetadata",
            "variableName" : "pullRequestStatusChangedEventMetadata",
            "variableType" : "PullRequestStatusChangedEventMetadata",
            "documentation" : "<p>Information about the change in status for the pull request event.</p>",
            "simpleType" : "PullRequestStatusChangedEventMetadata",
            "variableSetterType" : "PullRequestStatusChangedEventMetadata"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PullRequestEvent",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PullRequestEvent",
        "variableName" : "pullRequestEvent",
        "variableType" : "PullRequestEvent",
        "documentation" : null,
        "simpleType" : "PullRequestEvent",
        "variableSetterType" : "PullRequestEvent"
      },
      "wrapper" : false
    },
    "PullRequestEventType" : {
      "c2jName" : "PullRequestEventType",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "PULL_REQUEST_CREATED",
        "value" : "PULL_REQUEST_CREATED"
      }, {
        "name" : "PULL_REQUEST_STATUS_CHANGED",
        "value" : "PULL_REQUEST_STATUS_CHANGED"
      }, {
        "name" : "PULL_REQUEST_SOURCE_REFERENCE_UPDATED",
        "value" : "PULL_REQUEST_SOURCE_REFERENCE_UPDATED"
      }, {
        "name" : "PULL_REQUEST_MERGE_STATE_CHANGED",
        "value" : "PULL_REQUEST_MERGE_STATE_CHANGED"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PullRequestEventType",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PullRequestEventType",
        "variableName" : "pullRequestEventType",
        "variableType" : "PullRequestEventType",
        "documentation" : null,
        "simpleType" : "PullRequestEventType",
        "variableSetterType" : "PullRequestEventType"
      },
      "wrapper" : false
    },
    "PullRequestIdRequiredException" : {
      "c2jName" : "PullRequestIdRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A pull request ID is required, but none was provided.</p>",
      "enums" : null,
      "errorCode" : "PullRequestIdRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PullRequestIdRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PullRequestIdRequiredException",
        "variableName" : "pullRequestIdRequiredException",
        "variableType" : "PullRequestIdRequiredException",
        "documentation" : null,
        "simpleType" : "PullRequestIdRequiredException",
        "variableSetterType" : "PullRequestIdRequiredException"
      },
      "wrapper" : false
    },
    "PullRequestMergedStateChangedEventMetadata" : {
      "c2jName" : "PullRequestMergedStateChangedEventMetadata",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about the change in the merge state for a pull request event. </p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository where the pull request was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@return The name of the repository where the pull request was created.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository where the pull request was created.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "destinationReference",
        "c2jShape" : "ReferenceName",
        "deprecated" : false,
        "documentation" : "<p>The name of the branch that the pull request will be merged into.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the branch that the pull request will be merged into.</p>\n@param destinationReference The name of the branch that the pull request will be merged into.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDestinationReference",
        "getterDocumentation" : "/**<p>The name of the branch that the pull request will be merged into.</p>\n@return The name of the branch that the pull request will be merged into.*/",
        "getterMethodName" : "getDestinationReference",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "destinationReference",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "destinationReference",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DestinationReference",
        "setterDocumentation" : "/**<p>The name of the branch that the pull request will be merged into.</p>\n@param destinationReference The name of the branch that the pull request will be merged into.*/",
        "setterMethodName" : "setDestinationReference",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "destinationReference",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the branch that the pull request will be merged into.</p>\n@param destinationReference The name of the branch that the pull request will be merged into.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "destinationReference",
          "variableType" : "String",
          "documentation" : "<p>The name of the branch that the pull request will be merged into.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "mergeMetadata",
        "c2jShape" : "MergeMetadata",
        "deprecated" : false,
        "documentation" : "<p>Information about the merge state change event.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the merge state change event.</p>\n@param mergeMetadata Information about the merge state change event.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMergeMetadata",
        "getterDocumentation" : "/**<p>Information about the merge state change event.</p>\n@return Information about the merge state change event.*/",
        "getterMethodName" : "getMergeMetadata",
        "getterModel" : {
          "returnType" : "MergeMetadata",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "mergeMetadata",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "mergeMetadata",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "MergeMetadata",
        "setterDocumentation" : "/**<p>Information about the merge state change event.</p>\n@param mergeMetadata Information about the merge state change event.*/",
        "setterMethodName" : "setMergeMetadata",
        "setterModel" : {
          "variableDeclarationType" : "MergeMetadata",
          "variableName" : "mergeMetadata",
          "variableType" : "MergeMetadata",
          "documentation" : "",
          "simpleType" : "MergeMetadata",
          "variableSetterType" : "MergeMetadata"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the merge state change event.</p>\n@param mergeMetadata Information about the merge state change event.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "MergeMetadata",
          "variableName" : "mergeMetadata",
          "variableType" : "MergeMetadata",
          "documentation" : "<p>Information about the merge state change event.</p>",
          "simpleType" : "MergeMetadata",
          "variableSetterType" : "MergeMetadata"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DestinationReference" : {
          "c2jName" : "destinationReference",
          "c2jShape" : "ReferenceName",
          "deprecated" : false,
          "documentation" : "<p>The name of the branch that the pull request will be merged into.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the branch that the pull request will be merged into.</p>\n@param destinationReference The name of the branch that the pull request will be merged into.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDestinationReference",
          "getterDocumentation" : "/**<p>The name of the branch that the pull request will be merged into.</p>\n@return The name of the branch that the pull request will be merged into.*/",
          "getterMethodName" : "getDestinationReference",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "destinationReference",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "destinationReference",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DestinationReference",
          "setterDocumentation" : "/**<p>The name of the branch that the pull request will be merged into.</p>\n@param destinationReference The name of the branch that the pull request will be merged into.*/",
          "setterMethodName" : "setDestinationReference",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "destinationReference",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the branch that the pull request will be merged into.</p>\n@param destinationReference The name of the branch that the pull request will be merged into.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "destinationReference",
            "variableType" : "String",
            "documentation" : "<p>The name of the branch that the pull request will be merged into.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MergeMetadata" : {
          "c2jName" : "mergeMetadata",
          "c2jShape" : "MergeMetadata",
          "deprecated" : false,
          "documentation" : "<p>Information about the merge state change event.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the merge state change event.</p>\n@param mergeMetadata Information about the merge state change event.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMergeMetadata",
          "getterDocumentation" : "/**<p>Information about the merge state change event.</p>\n@return Information about the merge state change event.*/",
          "getterMethodName" : "getMergeMetadata",
          "getterModel" : {
            "returnType" : "MergeMetadata",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "mergeMetadata",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "mergeMetadata",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "MergeMetadata",
          "setterDocumentation" : "/**<p>Information about the merge state change event.</p>\n@param mergeMetadata Information about the merge state change event.*/",
          "setterMethodName" : "setMergeMetadata",
          "setterModel" : {
            "variableDeclarationType" : "MergeMetadata",
            "variableName" : "mergeMetadata",
            "variableType" : "MergeMetadata",
            "documentation" : "",
            "simpleType" : "MergeMetadata",
            "variableSetterType" : "MergeMetadata"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the merge state change event.</p>\n@param mergeMetadata Information about the merge state change event.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "MergeMetadata",
            "variableName" : "mergeMetadata",
            "variableType" : "MergeMetadata",
            "documentation" : "<p>Information about the merge state change event.</p>",
            "simpleType" : "MergeMetadata",
            "variableSetterType" : "MergeMetadata"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository where the pull request was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@return The name of the repository where the pull request was created.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository where the pull request was created.</p>\n@param repositoryName The name of the repository where the pull request was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository where the pull request was created.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PullRequestMergedStateChangedEventMetadata",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PullRequestMergedStateChangedEventMetadata",
        "variableName" : "pullRequestMergedStateChangedEventMetadata",
        "variableType" : "PullRequestMergedStateChangedEventMetadata",
        "documentation" : null,
        "simpleType" : "PullRequestMergedStateChangedEventMetadata",
        "variableSetterType" : "PullRequestMergedStateChangedEventMetadata"
      },
      "wrapper" : false
    },
    "PullRequestSourceReferenceUpdatedEventMetadata" : {
      "c2jName" : "PullRequestSourceReferenceUpdatedEventMetadata",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Information about an update to the source branch of a pull request.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository where the pull request was updated.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository where the pull request was updated.</p>\n@param repositoryName The name of the repository where the pull request was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository where the pull request was updated.</p>\n@return The name of the repository where the pull request was updated.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository where the pull request was updated.</p>\n@param repositoryName The name of the repository where the pull request was updated.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository where the pull request was updated.</p>\n@param repositoryName The name of the repository where the pull request was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository where the pull request was updated.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforeCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeCommitId",
        "getterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.</p>\n@return The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.*/",
        "getterMethodName" : "getBeforeCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforeCommitId",
        "setterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.*/",
        "setterMethodName" : "setBeforeCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitId",
          "variableType" : "String",
          "documentation" : "<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterCommitId",
        "getterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.</p>\n@return The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.*/",
        "getterMethodName" : "getAfterCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterCommitId",
        "setterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.*/",
        "setterMethodName" : "setAfterCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitId",
          "variableType" : "String",
          "documentation" : "<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AfterCommitId" : {
          "c2jName" : "afterCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterCommitId",
          "getterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.</p>\n@return The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.*/",
          "getterMethodName" : "getAfterCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterCommitId",
          "setterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.*/",
          "setterMethodName" : "setAfterCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.</p>\n@param afterCommitId The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitId",
            "variableType" : "String",
            "documentation" : "<p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the pull request was updated.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeCommitId" : {
          "c2jName" : "beforeCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeCommitId",
          "getterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.</p>\n@return The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.*/",
          "getterMethodName" : "getBeforeCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforeCommitId",
          "setterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.*/",
          "setterMethodName" : "setBeforeCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.</p>\n@param beforeCommitId The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitId",
            "variableType" : "String",
            "documentation" : "<p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was updated.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository where the pull request was updated.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository where the pull request was updated.</p>\n@param repositoryName The name of the repository where the pull request was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository where the pull request was updated.</p>\n@return The name of the repository where the pull request was updated.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository where the pull request was updated.</p>\n@param repositoryName The name of the repository where the pull request was updated.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository where the pull request was updated.</p>\n@param repositoryName The name of the repository where the pull request was updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository where the pull request was updated.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PullRequestSourceReferenceUpdatedEventMetadata",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PullRequestSourceReferenceUpdatedEventMetadata",
        "variableName" : "pullRequestSourceReferenceUpdatedEventMetadata",
        "variableType" : "PullRequestSourceReferenceUpdatedEventMetadata",
        "documentation" : null,
        "simpleType" : "PullRequestSourceReferenceUpdatedEventMetadata",
        "variableSetterType" : "PullRequestSourceReferenceUpdatedEventMetadata"
      },
      "wrapper" : false
    },
    "PullRequestStatusChangedEventMetadata" : {
      "c2jName" : "PullRequestStatusChangedEventMetadata",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Information about a change to the status of a pull request.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "pullRequestStatus",
        "c2jShape" : "PullRequestStatusEnum",
        "deprecated" : false,
        "documentation" : "<p>The changed status of the pull request.</p>",
        "enumType" : "PullRequestStatusEnum",
        "fluentSetterDocumentation" : "/**<p>The changed status of the pull request.</p>\n@param pullRequestStatus The changed status of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestStatusEnum*/",
        "fluentSetterMethodName" : "withPullRequestStatus",
        "getterDocumentation" : "/**<p>The changed status of the pull request.</p>\n@return The changed status of the pull request.\n@see PullRequestStatusEnum*/",
        "getterMethodName" : "getPullRequestStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestStatus",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestStatus",
        "setterDocumentation" : "/**<p>The changed status of the pull request.</p>\n@param pullRequestStatus The changed status of the pull request.\n@see PullRequestStatusEnum*/",
        "setterMethodName" : "setPullRequestStatus",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The changed status of the pull request.</p>\n@param pullRequestStatus The changed status of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestStatusEnum*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestStatus",
          "variableType" : "String",
          "documentation" : "<p>The changed status of the pull request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PullRequestStatus" : {
          "c2jName" : "pullRequestStatus",
          "c2jShape" : "PullRequestStatusEnum",
          "deprecated" : false,
          "documentation" : "<p>The changed status of the pull request.</p>",
          "enumType" : "PullRequestStatusEnum",
          "fluentSetterDocumentation" : "/**<p>The changed status of the pull request.</p>\n@param pullRequestStatus The changed status of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestStatusEnum*/",
          "fluentSetterMethodName" : "withPullRequestStatus",
          "getterDocumentation" : "/**<p>The changed status of the pull request.</p>\n@return The changed status of the pull request.\n@see PullRequestStatusEnum*/",
          "getterMethodName" : "getPullRequestStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestStatus",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestStatus",
          "setterDocumentation" : "/**<p>The changed status of the pull request.</p>\n@param pullRequestStatus The changed status of the pull request.\n@see PullRequestStatusEnum*/",
          "setterMethodName" : "setPullRequestStatus",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The changed status of the pull request.</p>\n@param pullRequestStatus The changed status of the pull request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestStatusEnum*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestStatus",
            "variableType" : "String",
            "documentation" : "<p>The changed status of the pull request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PullRequestStatusChangedEventMetadata",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PullRequestStatusChangedEventMetadata",
        "variableName" : "pullRequestStatusChangedEventMetadata",
        "variableType" : "PullRequestStatusChangedEventMetadata",
        "documentation" : null,
        "simpleType" : "PullRequestStatusChangedEventMetadata",
        "variableSetterType" : "PullRequestStatusChangedEventMetadata"
      },
      "wrapper" : false
    },
    "PullRequestStatusEnum" : {
      "c2jName" : "PullRequestStatusEnum",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "OPEN",
        "value" : "OPEN"
      }, {
        "name" : "CLOSED",
        "value" : "CLOSED"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PullRequestStatusEnum",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PullRequestStatusEnum",
        "variableName" : "pullRequestStatusEnum",
        "variableType" : "PullRequestStatusEnum",
        "documentation" : null,
        "simpleType" : "PullRequestStatusEnum",
        "variableSetterType" : "PullRequestStatusEnum"
      },
      "wrapper" : false
    },
    "PullRequestStatusRequiredException" : {
      "c2jName" : "PullRequestStatusRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A pull request status is required, but none was provided.</p>",
      "enums" : null,
      "errorCode" : "PullRequestStatusRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PullRequestStatusRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PullRequestStatusRequiredException",
        "variableName" : "pullRequestStatusRequiredException",
        "variableType" : "PullRequestStatusRequiredException",
        "documentation" : null,
        "simpleType" : "PullRequestStatusRequiredException",
        "variableSetterType" : "PullRequestStatusRequiredException"
      },
      "wrapper" : false
    },
    "PullRequestTarget" : {
      "c2jName" : "PullRequestTarget",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about a pull request target.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository that contains the pull request source and destination branches.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the pull request source and destination branches.</p>\n@param repositoryName The name of the repository that contains the pull request source and destination branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository that contains the pull request source and destination branches.</p>\n@return The name of the repository that contains the pull request source and destination branches.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository that contains the pull request source and destination branches.</p>\n@param repositoryName The name of the repository that contains the pull request source and destination branches.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository that contains the pull request source and destination branches.</p>\n@param repositoryName The name of the repository that contains the pull request source and destination branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository that contains the pull request source and destination branches.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sourceReference",
        "c2jShape" : "ReferenceName",
        "deprecated" : false,
        "documentation" : "<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>\n@param sourceReference The branch of the repository that contains the changes for the pull request. Also known as the source branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSourceReference",
        "getterDocumentation" : "/**<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>\n@return The branch of the repository that contains the changes for the pull request. Also known as the source branch.*/",
        "getterMethodName" : "getSourceReference",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sourceReference",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sourceReference",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SourceReference",
        "setterDocumentation" : "/**<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>\n@param sourceReference The branch of the repository that contains the changes for the pull request. Also known as the source branch.*/",
        "setterMethodName" : "setSourceReference",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceReference",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>\n@param sourceReference The branch of the repository that contains the changes for the pull request. Also known as the source branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceReference",
          "variableType" : "String",
          "documentation" : "<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "destinationReference",
        "c2jShape" : "ReferenceName",
        "deprecated" : false,
        "documentation" : "<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch. </p>\n@param destinationReference The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDestinationReference",
        "getterDocumentation" : "/**<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch. </p>\n@return The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.*/",
        "getterMethodName" : "getDestinationReference",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "destinationReference",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "destinationReference",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DestinationReference",
        "setterDocumentation" : "/**<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch. </p>\n@param destinationReference The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.*/",
        "setterMethodName" : "setDestinationReference",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "destinationReference",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch. </p>\n@param destinationReference The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "destinationReference",
          "variableType" : "String",
          "documentation" : "<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "destinationCommit",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.</p>\n@param destinationCommit The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDestinationCommit",
        "getterDocumentation" : "/**<p>The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.</p>\n@return The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.*/",
        "getterMethodName" : "getDestinationCommit",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "destinationCommit",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "destinationCommit",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DestinationCommit",
        "setterDocumentation" : "/**<p>The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.</p>\n@param destinationCommit The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.*/",
        "setterMethodName" : "setDestinationCommit",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "destinationCommit",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.</p>\n@param destinationCommit The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "destinationCommit",
          "variableType" : "String",
          "documentation" : "<p>The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sourceCommit",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.</p>\n@param sourceCommit The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSourceCommit",
        "getterDocumentation" : "/**<p>The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.</p>\n@return The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.*/",
        "getterMethodName" : "getSourceCommit",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sourceCommit",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sourceCommit",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SourceCommit",
        "setterDocumentation" : "/**<p>The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.</p>\n@param sourceCommit The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.*/",
        "setterMethodName" : "setSourceCommit",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceCommit",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.</p>\n@param sourceCommit The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceCommit",
          "variableType" : "String",
          "documentation" : "<p>The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "mergeMetadata",
        "c2jShape" : "MergeMetadata",
        "deprecated" : false,
        "documentation" : "<p>Returns metadata about the state of the merge, including whether the merge has been made.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Returns metadata about the state of the merge, including whether the merge has been made.</p>\n@param mergeMetadata Returns metadata about the state of the merge, including whether the merge has been made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMergeMetadata",
        "getterDocumentation" : "/**<p>Returns metadata about the state of the merge, including whether the merge has been made.</p>\n@return Returns metadata about the state of the merge, including whether the merge has been made.*/",
        "getterMethodName" : "getMergeMetadata",
        "getterModel" : {
          "returnType" : "MergeMetadata",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "mergeMetadata",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "mergeMetadata",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "MergeMetadata",
        "setterDocumentation" : "/**<p>Returns metadata about the state of the merge, including whether the merge has been made.</p>\n@param mergeMetadata Returns metadata about the state of the merge, including whether the merge has been made.*/",
        "setterMethodName" : "setMergeMetadata",
        "setterModel" : {
          "variableDeclarationType" : "MergeMetadata",
          "variableName" : "mergeMetadata",
          "variableType" : "MergeMetadata",
          "documentation" : "",
          "simpleType" : "MergeMetadata",
          "variableSetterType" : "MergeMetadata"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Returns metadata about the state of the merge, including whether the merge has been made.</p>\n@param mergeMetadata Returns metadata about the state of the merge, including whether the merge has been made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "MergeMetadata",
          "variableName" : "mergeMetadata",
          "variableType" : "MergeMetadata",
          "documentation" : "<p>Returns metadata about the state of the merge, including whether the merge has been made.</p>",
          "simpleType" : "MergeMetadata",
          "variableSetterType" : "MergeMetadata"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DestinationCommit" : {
          "c2jName" : "destinationCommit",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.</p>\n@param destinationCommit The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDestinationCommit",
          "getterDocumentation" : "/**<p>The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.</p>\n@return The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.*/",
          "getterMethodName" : "getDestinationCommit",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "destinationCommit",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "destinationCommit",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DestinationCommit",
          "setterDocumentation" : "/**<p>The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.</p>\n@param destinationCommit The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.*/",
          "setterMethodName" : "setDestinationCommit",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "destinationCommit",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.</p>\n@param destinationCommit The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "destinationCommit",
            "variableType" : "String",
            "documentation" : "<p>The full commit ID that is the tip of the destination branch. This is the commit where the pull request was or will be merged.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "DestinationReference" : {
          "c2jName" : "destinationReference",
          "c2jShape" : "ReferenceName",
          "deprecated" : false,
          "documentation" : "<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch. </p>\n@param destinationReference The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDestinationReference",
          "getterDocumentation" : "/**<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch. </p>\n@return The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.*/",
          "getterMethodName" : "getDestinationReference",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "destinationReference",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "destinationReference",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DestinationReference",
          "setterDocumentation" : "/**<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch. </p>\n@param destinationReference The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.*/",
          "setterMethodName" : "setDestinationReference",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "destinationReference",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch. </p>\n@param destinationReference The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "destinationReference",
            "variableType" : "String",
            "documentation" : "<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MergeMetadata" : {
          "c2jName" : "mergeMetadata",
          "c2jShape" : "MergeMetadata",
          "deprecated" : false,
          "documentation" : "<p>Returns metadata about the state of the merge, including whether the merge has been made.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Returns metadata about the state of the merge, including whether the merge has been made.</p>\n@param mergeMetadata Returns metadata about the state of the merge, including whether the merge has been made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMergeMetadata",
          "getterDocumentation" : "/**<p>Returns metadata about the state of the merge, including whether the merge has been made.</p>\n@return Returns metadata about the state of the merge, including whether the merge has been made.*/",
          "getterMethodName" : "getMergeMetadata",
          "getterModel" : {
            "returnType" : "MergeMetadata",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "mergeMetadata",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "mergeMetadata",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "MergeMetadata",
          "setterDocumentation" : "/**<p>Returns metadata about the state of the merge, including whether the merge has been made.</p>\n@param mergeMetadata Returns metadata about the state of the merge, including whether the merge has been made.*/",
          "setterMethodName" : "setMergeMetadata",
          "setterModel" : {
            "variableDeclarationType" : "MergeMetadata",
            "variableName" : "mergeMetadata",
            "variableType" : "MergeMetadata",
            "documentation" : "",
            "simpleType" : "MergeMetadata",
            "variableSetterType" : "MergeMetadata"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Returns metadata about the state of the merge, including whether the merge has been made.</p>\n@param mergeMetadata Returns metadata about the state of the merge, including whether the merge has been made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "MergeMetadata",
            "variableName" : "mergeMetadata",
            "variableType" : "MergeMetadata",
            "documentation" : "<p>Returns metadata about the state of the merge, including whether the merge has been made.</p>",
            "simpleType" : "MergeMetadata",
            "variableSetterType" : "MergeMetadata"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that contains the pull request source and destination branches.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the pull request source and destination branches.</p>\n@param repositoryName The name of the repository that contains the pull request source and destination branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository that contains the pull request source and destination branches.</p>\n@return The name of the repository that contains the pull request source and destination branches.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository that contains the pull request source and destination branches.</p>\n@param repositoryName The name of the repository that contains the pull request source and destination branches.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository that contains the pull request source and destination branches.</p>\n@param repositoryName The name of the repository that contains the pull request source and destination branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository that contains the pull request source and destination branches.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SourceCommit" : {
          "c2jName" : "sourceCommit",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.</p>\n@param sourceCommit The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSourceCommit",
          "getterDocumentation" : "/**<p>The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.</p>\n@return The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.*/",
          "getterMethodName" : "getSourceCommit",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sourceCommit",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sourceCommit",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SourceCommit",
          "setterDocumentation" : "/**<p>The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.</p>\n@param sourceCommit The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.*/",
          "setterMethodName" : "setSourceCommit",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceCommit",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.</p>\n@param sourceCommit The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceCommit",
            "variableType" : "String",
            "documentation" : "<p>The full commit ID of the tip of the source branch used to create the pull request. If the pull request branch is updated by a push while the pull request is open, the commit ID will change to reflect the new tip of the branch.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SourceReference" : {
          "c2jName" : "sourceReference",
          "c2jShape" : "ReferenceName",
          "deprecated" : false,
          "documentation" : "<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>\n@param sourceReference The branch of the repository that contains the changes for the pull request. Also known as the source branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSourceReference",
          "getterDocumentation" : "/**<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>\n@return The branch of the repository that contains the changes for the pull request. Also known as the source branch.*/",
          "getterMethodName" : "getSourceReference",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sourceReference",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sourceReference",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SourceReference",
          "setterDocumentation" : "/**<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>\n@param sourceReference The branch of the repository that contains the changes for the pull request. Also known as the source branch.*/",
          "setterMethodName" : "setSourceReference",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceReference",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>\n@param sourceReference The branch of the repository that contains the changes for the pull request. Also known as the source branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceReference",
            "variableType" : "String",
            "documentation" : "<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PullRequestTarget",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PullRequestTarget",
        "variableName" : "pullRequestTarget",
        "variableType" : "PullRequestTarget",
        "documentation" : null,
        "simpleType" : "PullRequestTarget",
        "variableSetterType" : "PullRequestTarget"
      },
      "wrapper" : false
    },
    "PutFileRequest" : {
      "c2jName" : "PutFileInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "PutFile",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.PutFile",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository where you want to add or update the file.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository where you want to add or update the file.</p>\n@param repositoryName The name of the repository where you want to add or update the file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository where you want to add or update the file.</p>\n@return The name of the repository where you want to add or update the file.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository where you want to add or update the file.</p>\n@param repositoryName The name of the repository where you want to add or update the file.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository where you want to add or update the file.</p>\n@param repositoryName The name of the repository where you want to add or update the file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository where you want to add or update the file.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "branchName",
        "c2jShape" : "BranchName",
        "deprecated" : false,
        "documentation" : "<p>The name of the branch where you want to add or update the file.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the branch where you want to add or update the file.</p>\n@param branchName The name of the branch where you want to add or update the file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBranchName",
        "getterDocumentation" : "/**<p>The name of the branch where you want to add or update the file.</p>\n@return The name of the branch where you want to add or update the file.*/",
        "getterMethodName" : "getBranchName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "branchName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "branchName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BranchName",
        "setterDocumentation" : "/**<p>The name of the branch where you want to add or update the file.</p>\n@param branchName The name of the branch where you want to add or update the file.*/",
        "setterMethodName" : "setBranchName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "branchName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the branch where you want to add or update the file.</p>\n@param branchName The name of the branch where you want to add or update the file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "branchName",
          "variableType" : "String",
          "documentation" : "<p>The name of the branch where you want to add or update the file.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "fileContent",
        "c2jShape" : "FileContent",
        "deprecated" : false,
        "documentation" : "<p>The content of the file, in binary object format. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The content of the file, in binary object format. </p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param fileContent The content of the file, in binary object format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFileContent",
        "getterDocumentation" : "/**<p>The content of the file, in binary object format. </p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The content of the file, in binary object format.*/",
        "getterMethodName" : "getFileContent",
        "getterModel" : {
          "returnType" : "java.nio.ByteBuffer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "fileContent",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "fileContent",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.nio.ByteBuffer",
        "marshallingType" : "BYTE_BUFFER",
        "name" : "FileContent",
        "setterDocumentation" : "/**<p>The content of the file, in binary object format. </p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param fileContent The content of the file, in binary object format.*/",
        "setterMethodName" : "setFileContent",
        "setterModel" : {
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "variableName" : "fileContent",
          "variableType" : "java.nio.ByteBuffer",
          "documentation" : "",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The content of the file, in binary object format. </p>\n@param fileContent The content of the file, in binary object format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "variableName" : "fileContent",
          "variableType" : "java.nio.ByteBuffer",
          "documentation" : "<p>The content of the file, in binary object format. </p>",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "filePath",
        "c2jShape" : "Path",
        "deprecated" : false,
        "documentation" : "<p>The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p> </note>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p> </note>\n@param filePath The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilePath",
        "getterDocumentation" : "/**<p>The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p> </note>\n@return The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p>*/",
        "getterMethodName" : "getFilePath",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "filePath",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "filePath",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FilePath",
        "setterDocumentation" : "/**<p>The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p> </note>\n@param filePath The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p>*/",
        "setterMethodName" : "setFilePath",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "filePath",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p> </note>\n@param filePath The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "filePath",
          "variableType" : "String",
          "documentation" : "<p>The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "fileMode",
        "c2jShape" : "FileModeTypeEnum",
        "deprecated" : false,
        "documentation" : "<p>The file mode permissions of the blob. Valid file mode permissions are listed below.</p>",
        "enumType" : "FileModeTypeEnum",
        "fluentSetterDocumentation" : "/**<p>The file mode permissions of the blob. Valid file mode permissions are listed below.</p>\n@param fileMode The file mode permissions of the blob. Valid file mode permissions are listed below.\n@return Returns a reference to this object so that method calls can be chained together.\n@see FileModeTypeEnum*/",
        "fluentSetterMethodName" : "withFileMode",
        "getterDocumentation" : "/**<p>The file mode permissions of the blob. Valid file mode permissions are listed below.</p>\n@return The file mode permissions of the blob. Valid file mode permissions are listed below.\n@see FileModeTypeEnum*/",
        "getterMethodName" : "getFileMode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "fileMode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "fileMode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FileMode",
        "setterDocumentation" : "/**<p>The file mode permissions of the blob. Valid file mode permissions are listed below.</p>\n@param fileMode The file mode permissions of the blob. Valid file mode permissions are listed below.\n@see FileModeTypeEnum*/",
        "setterMethodName" : "setFileMode",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "fileMode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The file mode permissions of the blob. Valid file mode permissions are listed below.</p>\n@param fileMode The file mode permissions of the blob. Valid file mode permissions are listed below.\n@return Returns a reference to this object so that method calls can be chained together.\n@see FileModeTypeEnum*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "fileMode",
          "variableType" : "String",
          "documentation" : "<p>The file mode permissions of the blob. Valid file mode permissions are listed below.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "parentCommitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.</p>\n@param parentCommitId The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withParentCommitId",
        "getterDocumentation" : "/**<p>The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.</p>\n@return The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.*/",
        "getterMethodName" : "getParentCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "parentCommitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "parentCommitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ParentCommitId",
        "setterDocumentation" : "/**<p>The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.</p>\n@param parentCommitId The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.*/",
        "setterMethodName" : "setParentCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "parentCommitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.</p>\n@param parentCommitId The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "parentCommitId",
          "variableType" : "String",
          "documentation" : "<p>The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "commitMessage",
        "c2jShape" : "Message",
        "deprecated" : false,
        "documentation" : "<p>A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.</p>\n@param commitMessage A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommitMessage",
        "getterDocumentation" : "/**<p>A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.</p>\n@return A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.*/",
        "getterMethodName" : "getCommitMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commitMessage",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commitMessage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CommitMessage",
        "setterDocumentation" : "/**<p>A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.</p>\n@param commitMessage A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.*/",
        "setterMethodName" : "setCommitMessage",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitMessage",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.</p>\n@param commitMessage A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitMessage",
          "variableType" : "String",
          "documentation" : "<p>A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.</p>\n@param name The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.</p>\n@return The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "setterDocumentation" : "/**<p>The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.</p>\n@param name The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.</p>\n@param name The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "email",
        "c2jShape" : "Email",
        "deprecated" : false,
        "documentation" : "<p>An email address for the person adding or updating the file.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An email address for the person adding or updating the file.</p>\n@param email An email address for the person adding or updating the file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withEmail",
        "getterDocumentation" : "/**<p>An email address for the person adding or updating the file.</p>\n@return An email address for the person adding or updating the file.*/",
        "getterMethodName" : "getEmail",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "email",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "email",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Email",
        "setterDocumentation" : "/**<p>An email address for the person adding or updating the file.</p>\n@param email An email address for the person adding or updating the file.*/",
        "setterMethodName" : "setEmail",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "email",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An email address for the person adding or updating the file.</p>\n@param email An email address for the person adding or updating the file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "email",
          "variableType" : "String",
          "documentation" : "<p>An email address for the person adding or updating the file.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BranchName" : {
          "c2jName" : "branchName",
          "c2jShape" : "BranchName",
          "deprecated" : false,
          "documentation" : "<p>The name of the branch where you want to add or update the file.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the branch where you want to add or update the file.</p>\n@param branchName The name of the branch where you want to add or update the file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBranchName",
          "getterDocumentation" : "/**<p>The name of the branch where you want to add or update the file.</p>\n@return The name of the branch where you want to add or update the file.*/",
          "getterMethodName" : "getBranchName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "branchName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "branchName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BranchName",
          "setterDocumentation" : "/**<p>The name of the branch where you want to add or update the file.</p>\n@param branchName The name of the branch where you want to add or update the file.*/",
          "setterMethodName" : "setBranchName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "branchName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the branch where you want to add or update the file.</p>\n@param branchName The name of the branch where you want to add or update the file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "branchName",
            "variableType" : "String",
            "documentation" : "<p>The name of the branch where you want to add or update the file.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CommitMessage" : {
          "c2jName" : "commitMessage",
          "c2jShape" : "Message",
          "deprecated" : false,
          "documentation" : "<p>A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.</p>\n@param commitMessage A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommitMessage",
          "getterDocumentation" : "/**<p>A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.</p>\n@return A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.*/",
          "getterMethodName" : "getCommitMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commitMessage",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commitMessage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CommitMessage",
          "setterDocumentation" : "/**<p>A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.</p>\n@param commitMessage A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.*/",
          "setterMethodName" : "setCommitMessage",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitMessage",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.</p>\n@param commitMessage A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitMessage",
            "variableType" : "String",
            "documentation" : "<p>A message about why this file was added or updated. While optional, adding a message is strongly encouraged in order to provide a more useful commit history for your repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Email" : {
          "c2jName" : "email",
          "c2jShape" : "Email",
          "deprecated" : false,
          "documentation" : "<p>An email address for the person adding or updating the file.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An email address for the person adding or updating the file.</p>\n@param email An email address for the person adding or updating the file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withEmail",
          "getterDocumentation" : "/**<p>An email address for the person adding or updating the file.</p>\n@return An email address for the person adding or updating the file.*/",
          "getterMethodName" : "getEmail",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "email",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "email",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Email",
          "setterDocumentation" : "/**<p>An email address for the person adding or updating the file.</p>\n@param email An email address for the person adding or updating the file.*/",
          "setterMethodName" : "setEmail",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "email",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An email address for the person adding or updating the file.</p>\n@param email An email address for the person adding or updating the file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "email",
            "variableType" : "String",
            "documentation" : "<p>An email address for the person adding or updating the file.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FileContent" : {
          "c2jName" : "fileContent",
          "c2jShape" : "FileContent",
          "deprecated" : false,
          "documentation" : "<p>The content of the file, in binary object format. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The content of the file, in binary object format. </p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param fileContent The content of the file, in binary object format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFileContent",
          "getterDocumentation" : "/**<p>The content of the file, in binary object format. </p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The content of the file, in binary object format.*/",
          "getterMethodName" : "getFileContent",
          "getterModel" : {
            "returnType" : "java.nio.ByteBuffer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "fileContent",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "fileContent",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.nio.ByteBuffer",
          "marshallingType" : "BYTE_BUFFER",
          "name" : "FileContent",
          "setterDocumentation" : "/**<p>The content of the file, in binary object format. </p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param fileContent The content of the file, in binary object format.*/",
          "setterMethodName" : "setFileContent",
          "setterModel" : {
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "variableName" : "fileContent",
            "variableType" : "java.nio.ByteBuffer",
            "documentation" : "",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The content of the file, in binary object format. </p>\n@param fileContent The content of the file, in binary object format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "variableName" : "fileContent",
            "variableType" : "java.nio.ByteBuffer",
            "documentation" : "<p>The content of the file, in binary object format. </p>",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "xmlNameSpaceUri" : null
        },
        "FileMode" : {
          "c2jName" : "fileMode",
          "c2jShape" : "FileModeTypeEnum",
          "deprecated" : false,
          "documentation" : "<p>The file mode permissions of the blob. Valid file mode permissions are listed below.</p>",
          "enumType" : "FileModeTypeEnum",
          "fluentSetterDocumentation" : "/**<p>The file mode permissions of the blob. Valid file mode permissions are listed below.</p>\n@param fileMode The file mode permissions of the blob. Valid file mode permissions are listed below.\n@return Returns a reference to this object so that method calls can be chained together.\n@see FileModeTypeEnum*/",
          "fluentSetterMethodName" : "withFileMode",
          "getterDocumentation" : "/**<p>The file mode permissions of the blob. Valid file mode permissions are listed below.</p>\n@return The file mode permissions of the blob. Valid file mode permissions are listed below.\n@see FileModeTypeEnum*/",
          "getterMethodName" : "getFileMode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "fileMode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "fileMode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FileMode",
          "setterDocumentation" : "/**<p>The file mode permissions of the blob. Valid file mode permissions are listed below.</p>\n@param fileMode The file mode permissions of the blob. Valid file mode permissions are listed below.\n@see FileModeTypeEnum*/",
          "setterMethodName" : "setFileMode",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "fileMode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The file mode permissions of the blob. Valid file mode permissions are listed below.</p>\n@param fileMode The file mode permissions of the blob. Valid file mode permissions are listed below.\n@return Returns a reference to this object so that method calls can be chained together.\n@see FileModeTypeEnum*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "fileMode",
            "variableType" : "String",
            "documentation" : "<p>The file mode permissions of the blob. Valid file mode permissions are listed below.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FilePath" : {
          "c2jName" : "filePath",
          "c2jShape" : "Path",
          "deprecated" : false,
          "documentation" : "<p>The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p> </note>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p> </note>\n@param filePath The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilePath",
          "getterDocumentation" : "/**<p>The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p> </note>\n@return The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p>*/",
          "getterMethodName" : "getFilePath",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "filePath",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "filePath",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FilePath",
          "setterDocumentation" : "/**<p>The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p> </note>\n@param filePath The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p>*/",
          "setterMethodName" : "setFilePath",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "filePath",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p> </note>\n@param filePath The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "filePath",
            "variableType" : "String",
            "documentation" : "<p>The name of the file you want to add or update, including the relative path to the file in the repository.</p> <note> <p>If the path does not currently exist in the repository, the path will be created as part of adding the file.</p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.</p>\n@param name The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.</p>\n@return The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "setterDocumentation" : "/**<p>The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.</p>\n@param name The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.</p>\n@param name The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the person adding or updating the file. While optional, adding a name is strongly encouraged in order to provide a more useful commit history for your repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ParentCommitId" : {
          "c2jName" : "parentCommitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.</p>\n@param parentCommitId The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withParentCommitId",
          "getterDocumentation" : "/**<p>The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.</p>\n@return The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.*/",
          "getterMethodName" : "getParentCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "parentCommitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "parentCommitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ParentCommitId",
          "setterDocumentation" : "/**<p>The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.</p>\n@param parentCommitId The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.*/",
          "setterMethodName" : "setParentCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "parentCommitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.</p>\n@param parentCommitId The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "parentCommitId",
            "variableType" : "String",
            "documentation" : "<p>The full commit ID of the head commit in the branch where you want to add or update the file. If the commit ID does not match the ID of the head commit at the time of the operation, an error will occur, and the file will not be added or updated.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository where you want to add or update the file.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository where you want to add or update the file.</p>\n@param repositoryName The name of the repository where you want to add or update the file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository where you want to add or update the file.</p>\n@return The name of the repository where you want to add or update the file.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository where you want to add or update the file.</p>\n@param repositoryName The name of the repository where you want to add or update the file.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository where you want to add or update the file.</p>\n@param repositoryName The name of the repository where you want to add or update the file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository where you want to add or update the file.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "branchName", "fileContent", "filePath" ],
      "shapeName" : "PutFileRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PutFileRequest",
        "variableName" : "putFileRequest",
        "variableType" : "PutFileRequest",
        "documentation" : null,
        "simpleType" : "PutFileRequest",
        "variableSetterType" : "PutFileRequest"
      },
      "wrapper" : false
    },
    "PutFileResult" : {
      "c2jName" : "PutFileOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "commitId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>The full SHA of the commit that contains this file change.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full SHA of the commit that contains this file change.</p>\n@param commitId The full SHA of the commit that contains this file change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommitId",
        "getterDocumentation" : "/**<p>The full SHA of the commit that contains this file change.</p>\n@return The full SHA of the commit that contains this file change.*/",
        "getterMethodName" : "getCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CommitId",
        "setterDocumentation" : "/**<p>The full SHA of the commit that contains this file change.</p>\n@param commitId The full SHA of the commit that contains this file change.*/",
        "setterMethodName" : "setCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full SHA of the commit that contains this file change.</p>\n@param commitId The full SHA of the commit that contains this file change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitId",
          "variableType" : "String",
          "documentation" : "<p>The full SHA of the commit that contains this file change.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "blobId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the blob, which is its SHA-1 pointer.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBlobId",
        "getterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@return The ID of the blob, which is its SHA-1 pointer.*/",
        "getterMethodName" : "getBlobId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "blobId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "blobId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BlobId",
        "setterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.*/",
        "setterMethodName" : "setBlobId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "blobId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "blobId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the blob, which is its SHA-1 pointer.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "treeId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>Tree information for the commit that contains this file change.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Tree information for the commit that contains this file change.</p>\n@param treeId Tree information for the commit that contains this file change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTreeId",
        "getterDocumentation" : "/**<p>Tree information for the commit that contains this file change.</p>\n@return Tree information for the commit that contains this file change.*/",
        "getterMethodName" : "getTreeId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "treeId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "treeId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TreeId",
        "setterDocumentation" : "/**<p>Tree information for the commit that contains this file change.</p>\n@param treeId Tree information for the commit that contains this file change.*/",
        "setterMethodName" : "setTreeId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "treeId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Tree information for the commit that contains this file change.</p>\n@param treeId Tree information for the commit that contains this file change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "treeId",
          "variableType" : "String",
          "documentation" : "<p>Tree information for the commit that contains this file change.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BlobId" : {
          "c2jName" : "blobId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the blob, which is its SHA-1 pointer.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBlobId",
          "getterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@return The ID of the blob, which is its SHA-1 pointer.*/",
          "getterMethodName" : "getBlobId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "blobId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "blobId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BlobId",
          "setterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.*/",
          "setterMethodName" : "setBlobId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "blobId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "blobId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the blob, which is its SHA-1 pointer.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CommitId" : {
          "c2jName" : "commitId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>The full SHA of the commit that contains this file change.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full SHA of the commit that contains this file change.</p>\n@param commitId The full SHA of the commit that contains this file change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommitId",
          "getterDocumentation" : "/**<p>The full SHA of the commit that contains this file change.</p>\n@return The full SHA of the commit that contains this file change.*/",
          "getterMethodName" : "getCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CommitId",
          "setterDocumentation" : "/**<p>The full SHA of the commit that contains this file change.</p>\n@param commitId The full SHA of the commit that contains this file change.*/",
          "setterMethodName" : "setCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full SHA of the commit that contains this file change.</p>\n@param commitId The full SHA of the commit that contains this file change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitId",
            "variableType" : "String",
            "documentation" : "<p>The full SHA of the commit that contains this file change.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TreeId" : {
          "c2jName" : "treeId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>Tree information for the commit that contains this file change.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Tree information for the commit that contains this file change.</p>\n@param treeId Tree information for the commit that contains this file change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTreeId",
          "getterDocumentation" : "/**<p>Tree information for the commit that contains this file change.</p>\n@return Tree information for the commit that contains this file change.*/",
          "getterMethodName" : "getTreeId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "treeId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "treeId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TreeId",
          "setterDocumentation" : "/**<p>Tree information for the commit that contains this file change.</p>\n@param treeId Tree information for the commit that contains this file change.*/",
          "setterMethodName" : "setTreeId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "treeId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Tree information for the commit that contains this file change.</p>\n@param treeId Tree information for the commit that contains this file change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "treeId",
            "variableType" : "String",
            "documentation" : "<p>Tree information for the commit that contains this file change.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "commitId", "blobId", "treeId" ],
      "shapeName" : "PutFileResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PutFileResult",
        "variableName" : "putFileResult",
        "variableType" : "PutFileResult",
        "documentation" : null,
        "simpleType" : "PutFileResult",
        "variableSetterType" : "PutFileResult"
      },
      "wrapper" : false
    },
    "PutRepositoryTriggersRequest" : {
      "c2jName" : "PutRepositoryTriggersInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input ofa put repository triggers operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "PutRepositoryTriggers",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.PutRepositoryTriggers",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository where you want to create or update the trigger.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository where you want to create or update the trigger.</p>\n@param repositoryName The name of the repository where you want to create or update the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository where you want to create or update the trigger.</p>\n@return The name of the repository where you want to create or update the trigger.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository where you want to create or update the trigger.</p>\n@param repositoryName The name of the repository where you want to create or update the trigger.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository where you want to create or update the trigger.</p>\n@param repositoryName The name of the repository where you want to create or update the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository where you want to create or update the trigger.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "triggers",
        "c2jShape" : "RepositoryTriggersList",
        "deprecated" : false,
        "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@param triggers The JSON block of configuration information for each trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTriggers",
        "getterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@return The JSON block of configuration information for each trigger.*/",
        "getterMethodName" : "getTriggers",
        "getterModel" : {
          "returnType" : "java.util.List<RepositoryTrigger>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "triggers",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "triggers",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryTrigger",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "RepositoryTrigger",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "RepositoryTrigger",
              "variableName" : "member",
              "variableType" : "RepositoryTrigger",
              "documentation" : "",
              "simpleType" : "RepositoryTrigger",
              "variableSetterType" : "RepositoryTrigger"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "RepositoryTrigger",
              "variableName" : "member",
              "variableType" : "RepositoryTrigger",
              "documentation" : "",
              "simpleType" : "RepositoryTrigger",
              "variableSetterType" : "RepositoryTrigger"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "RepositoryTrigger",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "RepositoryTrigger",
          "templateImplType" : "java.util.ArrayList<RepositoryTrigger>",
          "templateType" : "java.util.List<RepositoryTrigger>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Triggers",
        "setterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@param triggers The JSON block of configuration information for each trigger.*/",
        "setterMethodName" : "setTriggers",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
          "variableName" : "triggers",
          "variableType" : "java.util.List<RepositoryTrigger>",
          "documentation" : "",
          "simpleType" : "List<RepositoryTrigger>",
          "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTriggers(java.util.Collection)} or {@link #withTriggers(java.util.Collection)} if you want to override the existing values.</p>\n@param triggers The JSON block of configuration information for each trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
          "variableName" : "triggers",
          "variableType" : "java.util.List<RepositoryTrigger>",
          "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
          "simpleType" : "List<RepositoryTrigger>",
          "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository where you want to create or update the trigger.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository where you want to create or update the trigger.</p>\n@param repositoryName The name of the repository where you want to create or update the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository where you want to create or update the trigger.</p>\n@return The name of the repository where you want to create or update the trigger.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository where you want to create or update the trigger.</p>\n@param repositoryName The name of the repository where you want to create or update the trigger.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository where you want to create or update the trigger.</p>\n@param repositoryName The name of the repository where you want to create or update the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository where you want to create or update the trigger.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Triggers" : {
          "c2jName" : "triggers",
          "c2jShape" : "RepositoryTriggersList",
          "deprecated" : false,
          "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@param triggers The JSON block of configuration information for each trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTriggers",
          "getterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@return The JSON block of configuration information for each trigger.*/",
          "getterMethodName" : "getTriggers",
          "getterModel" : {
            "returnType" : "java.util.List<RepositoryTrigger>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "triggers",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "triggers",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryTrigger",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "RepositoryTrigger",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "RepositoryTrigger",
                "variableName" : "member",
                "variableType" : "RepositoryTrigger",
                "documentation" : "",
                "simpleType" : "RepositoryTrigger",
                "variableSetterType" : "RepositoryTrigger"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "RepositoryTrigger",
                "variableName" : "member",
                "variableType" : "RepositoryTrigger",
                "documentation" : "",
                "simpleType" : "RepositoryTrigger",
                "variableSetterType" : "RepositoryTrigger"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "RepositoryTrigger",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "RepositoryTrigger",
            "templateImplType" : "java.util.ArrayList<RepositoryTrigger>",
            "templateType" : "java.util.List<RepositoryTrigger>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Triggers",
          "setterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@param triggers The JSON block of configuration information for each trigger.*/",
          "setterMethodName" : "setTriggers",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
            "variableName" : "triggers",
            "variableType" : "java.util.List<RepositoryTrigger>",
            "documentation" : "",
            "simpleType" : "List<RepositoryTrigger>",
            "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTriggers(java.util.Collection)} or {@link #withTriggers(java.util.Collection)} if you want to override the existing values.</p>\n@param triggers The JSON block of configuration information for each trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
            "variableName" : "triggers",
            "variableType" : "java.util.List<RepositoryTrigger>",
            "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
            "simpleType" : "List<RepositoryTrigger>",
            "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "triggers" ],
      "shapeName" : "PutRepositoryTriggersRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PutRepositoryTriggersRequest",
        "variableName" : "putRepositoryTriggersRequest",
        "variableType" : "PutRepositoryTriggersRequest",
        "documentation" : null,
        "simpleType" : "PutRepositoryTriggersRequest",
        "variableSetterType" : "PutRepositoryTriggersRequest"
      },
      "wrapper" : false
    },
    "PutRepositoryTriggersResult" : {
      "c2jName" : "PutRepositoryTriggersOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a put repository triggers operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "configurationId",
        "c2jShape" : "RepositoryTriggersConfigurationId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated unique ID for the create or update operation.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated unique ID for the create or update operation.</p>\n@param configurationId The system-generated unique ID for the create or update operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfigurationId",
        "getterDocumentation" : "/**<p>The system-generated unique ID for the create or update operation.</p>\n@return The system-generated unique ID for the create or update operation.*/",
        "getterMethodName" : "getConfigurationId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "configurationId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "configurationId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ConfigurationId",
        "setterDocumentation" : "/**<p>The system-generated unique ID for the create or update operation.</p>\n@param configurationId The system-generated unique ID for the create or update operation.*/",
        "setterMethodName" : "setConfigurationId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "configurationId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated unique ID for the create or update operation.</p>\n@param configurationId The system-generated unique ID for the create or update operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "configurationId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated unique ID for the create or update operation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ConfigurationId" : {
          "c2jName" : "configurationId",
          "c2jShape" : "RepositoryTriggersConfigurationId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated unique ID for the create or update operation.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated unique ID for the create or update operation.</p>\n@param configurationId The system-generated unique ID for the create or update operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfigurationId",
          "getterDocumentation" : "/**<p>The system-generated unique ID for the create or update operation.</p>\n@return The system-generated unique ID for the create or update operation.*/",
          "getterMethodName" : "getConfigurationId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "configurationId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "configurationId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ConfigurationId",
          "setterDocumentation" : "/**<p>The system-generated unique ID for the create or update operation.</p>\n@param configurationId The system-generated unique ID for the create or update operation.*/",
          "setterMethodName" : "setConfigurationId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "configurationId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated unique ID for the create or update operation.</p>\n@param configurationId The system-generated unique ID for the create or update operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "configurationId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated unique ID for the create or update operation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PutRepositoryTriggersResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PutRepositoryTriggersResult",
        "variableName" : "putRepositoryTriggersResult",
        "variableType" : "PutRepositoryTriggersResult",
        "documentation" : null,
        "simpleType" : "PutRepositoryTriggersResult",
        "variableSetterType" : "PutRepositoryTriggersResult"
      },
      "wrapper" : false
    },
    "ReferenceDoesNotExistException" : {
      "c2jName" : "ReferenceDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified reference does not exist. You must provide a full commit ID.</p>",
      "enums" : null,
      "errorCode" : "ReferenceDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ReferenceDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ReferenceDoesNotExistException",
        "variableName" : "referenceDoesNotExistException",
        "variableType" : "ReferenceDoesNotExistException",
        "documentation" : null,
        "simpleType" : "ReferenceDoesNotExistException",
        "variableSetterType" : "ReferenceDoesNotExistException"
      },
      "wrapper" : false
    },
    "ReferenceNameRequiredException" : {
      "c2jName" : "ReferenceNameRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A reference name is required, but none was provided.</p>",
      "enums" : null,
      "errorCode" : "ReferenceNameRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ReferenceNameRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ReferenceNameRequiredException",
        "variableName" : "referenceNameRequiredException",
        "variableType" : "ReferenceNameRequiredException",
        "documentation" : null,
        "simpleType" : "ReferenceNameRequiredException",
        "variableSetterType" : "ReferenceNameRequiredException"
      },
      "wrapper" : false
    },
    "ReferenceTypeNotSupportedException" : {
      "c2jName" : "ReferenceTypeNotSupportedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified reference is not a supported type. </p>",
      "enums" : null,
      "errorCode" : "ReferenceTypeNotSupportedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ReferenceTypeNotSupportedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ReferenceTypeNotSupportedException",
        "variableName" : "referenceTypeNotSupportedException",
        "variableType" : "ReferenceTypeNotSupportedException",
        "documentation" : null,
        "simpleType" : "ReferenceTypeNotSupportedException",
        "variableSetterType" : "ReferenceTypeNotSupportedException"
      },
      "wrapper" : false
    },
    "RelativeFileVersionEnum" : {
      "c2jName" : "RelativeFileVersionEnum",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "BEFORE",
        "value" : "BEFORE"
      }, {
        "name" : "AFTER",
        "value" : "AFTER"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RelativeFileVersionEnum",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "RelativeFileVersionEnum",
        "variableName" : "relativeFileVersionEnum",
        "variableType" : "RelativeFileVersionEnum",
        "documentation" : null,
        "simpleType" : "RelativeFileVersionEnum",
        "variableSetterType" : "RelativeFileVersionEnum"
      },
      "wrapper" : false
    },
    "RepositoryDoesNotExistException" : {
      "c2jName" : "RepositoryDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified repository does not exist.</p>",
      "enums" : null,
      "errorCode" : "RepositoryDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryDoesNotExistException",
        "variableName" : "repositoryDoesNotExistException",
        "variableType" : "RepositoryDoesNotExistException",
        "documentation" : null,
        "simpleType" : "RepositoryDoesNotExistException",
        "variableSetterType" : "RepositoryDoesNotExistException"
      },
      "wrapper" : false
    },
    "RepositoryLimitExceededException" : {
      "c2jName" : "RepositoryLimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A repository resource limit was exceeded.</p>",
      "enums" : null,
      "errorCode" : "RepositoryLimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryLimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryLimitExceededException",
        "variableName" : "repositoryLimitExceededException",
        "variableType" : "RepositoryLimitExceededException",
        "documentation" : null,
        "simpleType" : "RepositoryLimitExceededException",
        "variableSetterType" : "RepositoryLimitExceededException"
      },
      "wrapper" : false
    },
    "RepositoryMetadata" : {
      "c2jName" : "RepositoryMetadata",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Information about a repository.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "accountId",
        "c2jShape" : "AccountId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the AWS account associated with the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the AWS account associated with the repository.</p>\n@param accountId The ID of the AWS account associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAccountId",
        "getterDocumentation" : "/**<p>The ID of the AWS account associated with the repository.</p>\n@return The ID of the AWS account associated with the repository.*/",
        "getterMethodName" : "getAccountId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "accountId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "accountId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AccountId",
        "setterDocumentation" : "/**<p>The ID of the AWS account associated with the repository.</p>\n@param accountId The ID of the AWS account associated with the repository.*/",
        "setterMethodName" : "setAccountId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "accountId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the AWS account associated with the repository.</p>\n@param accountId The ID of the AWS account associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "accountId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the AWS account associated with the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryId",
        "c2jShape" : "RepositoryId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the repository.</p>\n@param repositoryId The ID of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryId",
        "getterDocumentation" : "/**<p>The ID of the repository.</p>\n@return The ID of the repository.*/",
        "getterMethodName" : "getRepositoryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryId",
        "setterDocumentation" : "/**<p>The ID of the repository.</p>\n@param repositoryId The ID of the repository.*/",
        "setterMethodName" : "setRepositoryId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the repository.</p>\n@param repositoryId The ID of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The repository's name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository's name.</p>\n@param repositoryName The repository's name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The repository's name.</p>\n@return The repository's name.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The repository's name.</p>\n@param repositoryName The repository's name.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository's name.</p>\n@param repositoryName The repository's name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The repository's name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryDescription",
        "c2jShape" : "RepositoryDescription",
        "deprecated" : false,
        "documentation" : "<p>A comment or description about the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A comment or description about the repository.</p>\n@param repositoryDescription A comment or description about the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryDescription",
        "getterDocumentation" : "/**<p>A comment or description about the repository.</p>\n@return A comment or description about the repository.*/",
        "getterMethodName" : "getRepositoryDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryDescription",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryDescription",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryDescription",
        "setterDocumentation" : "/**<p>A comment or description about the repository.</p>\n@param repositoryDescription A comment or description about the repository.*/",
        "setterMethodName" : "setRepositoryDescription",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryDescription",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A comment or description about the repository.</p>\n@param repositoryDescription A comment or description about the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryDescription",
          "variableType" : "String",
          "documentation" : "<p>A comment or description about the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "defaultBranch",
        "c2jShape" : "BranchName",
        "deprecated" : false,
        "documentation" : "<p>The repository's default branch name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository's default branch name.</p>\n@param defaultBranch The repository's default branch name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDefaultBranch",
        "getterDocumentation" : "/**<p>The repository's default branch name.</p>\n@return The repository's default branch name.*/",
        "getterMethodName" : "getDefaultBranch",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "defaultBranch",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "defaultBranch",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DefaultBranch",
        "setterDocumentation" : "/**<p>The repository's default branch name.</p>\n@param defaultBranch The repository's default branch name.*/",
        "setterMethodName" : "setDefaultBranch",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "defaultBranch",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository's default branch name.</p>\n@param defaultBranch The repository's default branch name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "defaultBranch",
          "variableType" : "String",
          "documentation" : "<p>The repository's default branch name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lastModifiedDate",
        "c2jShape" : "LastModifiedDate",
        "deprecated" : false,
        "documentation" : "<p>The date and time the repository was last modified, in timestamp format.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time the repository was last modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the repository was last modified, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastModifiedDate",
        "getterDocumentation" : "/**<p>The date and time the repository was last modified, in timestamp format.</p>\n@return The date and time the repository was last modified, in timestamp format.*/",
        "getterMethodName" : "getLastModifiedDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lastModifiedDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lastModifiedDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "LastModifiedDate",
        "setterDocumentation" : "/**<p>The date and time the repository was last modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the repository was last modified, in timestamp format.*/",
        "setterMethodName" : "setLastModifiedDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModifiedDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time the repository was last modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the repository was last modified, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModifiedDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time the repository was last modified, in timestamp format.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "creationDate",
        "c2jShape" : "CreationDate",
        "deprecated" : false,
        "documentation" : "<p>The date and time the repository was created, in timestamp format.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time the repository was created, in timestamp format.</p>\n@param creationDate The date and time the repository was created, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationDate",
        "getterDocumentation" : "/**<p>The date and time the repository was created, in timestamp format.</p>\n@return The date and time the repository was created, in timestamp format.*/",
        "getterMethodName" : "getCreationDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "creationDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "creationDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreationDate",
        "setterDocumentation" : "/**<p>The date and time the repository was created, in timestamp format.</p>\n@param creationDate The date and time the repository was created, in timestamp format.*/",
        "setterMethodName" : "setCreationDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time the repository was created, in timestamp format.</p>\n@param creationDate The date and time the repository was created, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time the repository was created, in timestamp format.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "cloneUrlHttp",
        "c2jShape" : "CloneUrlHttp",
        "deprecated" : false,
        "documentation" : "<p>The URL to use for cloning the repository over HTTPS.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The URL to use for cloning the repository over HTTPS.</p>\n@param cloneUrlHttp The URL to use for cloning the repository over HTTPS.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCloneUrlHttp",
        "getterDocumentation" : "/**<p>The URL to use for cloning the repository over HTTPS.</p>\n@return The URL to use for cloning the repository over HTTPS.*/",
        "getterMethodName" : "getCloneUrlHttp",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "cloneUrlHttp",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "cloneUrlHttp",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CloneUrlHttp",
        "setterDocumentation" : "/**<p>The URL to use for cloning the repository over HTTPS.</p>\n@param cloneUrlHttp The URL to use for cloning the repository over HTTPS.*/",
        "setterMethodName" : "setCloneUrlHttp",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "cloneUrlHttp",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The URL to use for cloning the repository over HTTPS.</p>\n@param cloneUrlHttp The URL to use for cloning the repository over HTTPS.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "cloneUrlHttp",
          "variableType" : "String",
          "documentation" : "<p>The URL to use for cloning the repository over HTTPS.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "cloneUrlSsh",
        "c2jShape" : "CloneUrlSsh",
        "deprecated" : false,
        "documentation" : "<p>The URL to use for cloning the repository over SSH.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The URL to use for cloning the repository over SSH.</p>\n@param cloneUrlSsh The URL to use for cloning the repository over SSH.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCloneUrlSsh",
        "getterDocumentation" : "/**<p>The URL to use for cloning the repository over SSH.</p>\n@return The URL to use for cloning the repository over SSH.*/",
        "getterMethodName" : "getCloneUrlSsh",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "cloneUrlSsh",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "cloneUrlSsh",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CloneUrlSsh",
        "setterDocumentation" : "/**<p>The URL to use for cloning the repository over SSH.</p>\n@param cloneUrlSsh The URL to use for cloning the repository over SSH.*/",
        "setterMethodName" : "setCloneUrlSsh",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "cloneUrlSsh",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The URL to use for cloning the repository over SSH.</p>\n@param cloneUrlSsh The URL to use for cloning the repository over SSH.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "cloneUrlSsh",
          "variableType" : "String",
          "documentation" : "<p>The URL to use for cloning the repository over SSH.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) of the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the repository.</p>\n@param arn The Amazon Resource Name (ARN) of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the repository.</p>\n@return The Amazon Resource Name (ARN) of the repository.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the repository.</p>\n@param arn The Amazon Resource Name (ARN) of the repository.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the repository.</p>\n@param arn The Amazon Resource Name (ARN) of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AccountId" : {
          "c2jName" : "accountId",
          "c2jShape" : "AccountId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the AWS account associated with the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the AWS account associated with the repository.</p>\n@param accountId The ID of the AWS account associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAccountId",
          "getterDocumentation" : "/**<p>The ID of the AWS account associated with the repository.</p>\n@return The ID of the AWS account associated with the repository.*/",
          "getterMethodName" : "getAccountId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "accountId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "accountId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AccountId",
          "setterDocumentation" : "/**<p>The ID of the AWS account associated with the repository.</p>\n@param accountId The ID of the AWS account associated with the repository.*/",
          "setterMethodName" : "setAccountId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "accountId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the AWS account associated with the repository.</p>\n@param accountId The ID of the AWS account associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "accountId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the AWS account associated with the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the repository.</p>\n@param arn The Amazon Resource Name (ARN) of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the repository.</p>\n@return The Amazon Resource Name (ARN) of the repository.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the repository.</p>\n@param arn The Amazon Resource Name (ARN) of the repository.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the repository.</p>\n@param arn The Amazon Resource Name (ARN) of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CloneUrlHttp" : {
          "c2jName" : "cloneUrlHttp",
          "c2jShape" : "CloneUrlHttp",
          "deprecated" : false,
          "documentation" : "<p>The URL to use for cloning the repository over HTTPS.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The URL to use for cloning the repository over HTTPS.</p>\n@param cloneUrlHttp The URL to use for cloning the repository over HTTPS.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCloneUrlHttp",
          "getterDocumentation" : "/**<p>The URL to use for cloning the repository over HTTPS.</p>\n@return The URL to use for cloning the repository over HTTPS.*/",
          "getterMethodName" : "getCloneUrlHttp",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "cloneUrlHttp",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "cloneUrlHttp",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CloneUrlHttp",
          "setterDocumentation" : "/**<p>The URL to use for cloning the repository over HTTPS.</p>\n@param cloneUrlHttp The URL to use for cloning the repository over HTTPS.*/",
          "setterMethodName" : "setCloneUrlHttp",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "cloneUrlHttp",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The URL to use for cloning the repository over HTTPS.</p>\n@param cloneUrlHttp The URL to use for cloning the repository over HTTPS.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "cloneUrlHttp",
            "variableType" : "String",
            "documentation" : "<p>The URL to use for cloning the repository over HTTPS.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CloneUrlSsh" : {
          "c2jName" : "cloneUrlSsh",
          "c2jShape" : "CloneUrlSsh",
          "deprecated" : false,
          "documentation" : "<p>The URL to use for cloning the repository over SSH.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The URL to use for cloning the repository over SSH.</p>\n@param cloneUrlSsh The URL to use for cloning the repository over SSH.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCloneUrlSsh",
          "getterDocumentation" : "/**<p>The URL to use for cloning the repository over SSH.</p>\n@return The URL to use for cloning the repository over SSH.*/",
          "getterMethodName" : "getCloneUrlSsh",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "cloneUrlSsh",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "cloneUrlSsh",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CloneUrlSsh",
          "setterDocumentation" : "/**<p>The URL to use for cloning the repository over SSH.</p>\n@param cloneUrlSsh The URL to use for cloning the repository over SSH.*/",
          "setterMethodName" : "setCloneUrlSsh",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "cloneUrlSsh",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The URL to use for cloning the repository over SSH.</p>\n@param cloneUrlSsh The URL to use for cloning the repository over SSH.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "cloneUrlSsh",
            "variableType" : "String",
            "documentation" : "<p>The URL to use for cloning the repository over SSH.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreationDate" : {
          "c2jName" : "creationDate",
          "c2jShape" : "CreationDate",
          "deprecated" : false,
          "documentation" : "<p>The date and time the repository was created, in timestamp format.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time the repository was created, in timestamp format.</p>\n@param creationDate The date and time the repository was created, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationDate",
          "getterDocumentation" : "/**<p>The date and time the repository was created, in timestamp format.</p>\n@return The date and time the repository was created, in timestamp format.*/",
          "getterMethodName" : "getCreationDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "creationDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "creationDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreationDate",
          "setterDocumentation" : "/**<p>The date and time the repository was created, in timestamp format.</p>\n@param creationDate The date and time the repository was created, in timestamp format.*/",
          "setterMethodName" : "setCreationDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time the repository was created, in timestamp format.</p>\n@param creationDate The date and time the repository was created, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time the repository was created, in timestamp format.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "DefaultBranch" : {
          "c2jName" : "defaultBranch",
          "c2jShape" : "BranchName",
          "deprecated" : false,
          "documentation" : "<p>The repository's default branch name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository's default branch name.</p>\n@param defaultBranch The repository's default branch name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDefaultBranch",
          "getterDocumentation" : "/**<p>The repository's default branch name.</p>\n@return The repository's default branch name.*/",
          "getterMethodName" : "getDefaultBranch",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "defaultBranch",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "defaultBranch",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DefaultBranch",
          "setterDocumentation" : "/**<p>The repository's default branch name.</p>\n@param defaultBranch The repository's default branch name.*/",
          "setterMethodName" : "setDefaultBranch",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "defaultBranch",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository's default branch name.</p>\n@param defaultBranch The repository's default branch name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "defaultBranch",
            "variableType" : "String",
            "documentation" : "<p>The repository's default branch name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LastModifiedDate" : {
          "c2jName" : "lastModifiedDate",
          "c2jShape" : "LastModifiedDate",
          "deprecated" : false,
          "documentation" : "<p>The date and time the repository was last modified, in timestamp format.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time the repository was last modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the repository was last modified, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastModifiedDate",
          "getterDocumentation" : "/**<p>The date and time the repository was last modified, in timestamp format.</p>\n@return The date and time the repository was last modified, in timestamp format.*/",
          "getterMethodName" : "getLastModifiedDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lastModifiedDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lastModifiedDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "LastModifiedDate",
          "setterDocumentation" : "/**<p>The date and time the repository was last modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the repository was last modified, in timestamp format.*/",
          "setterMethodName" : "setLastModifiedDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModifiedDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time the repository was last modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the repository was last modified, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModifiedDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time the repository was last modified, in timestamp format.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryDescription" : {
          "c2jName" : "repositoryDescription",
          "c2jShape" : "RepositoryDescription",
          "deprecated" : false,
          "documentation" : "<p>A comment or description about the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A comment or description about the repository.</p>\n@param repositoryDescription A comment or description about the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryDescription",
          "getterDocumentation" : "/**<p>A comment or description about the repository.</p>\n@return A comment or description about the repository.*/",
          "getterMethodName" : "getRepositoryDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryDescription",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryDescription",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryDescription",
          "setterDocumentation" : "/**<p>A comment or description about the repository.</p>\n@param repositoryDescription A comment or description about the repository.*/",
          "setterMethodName" : "setRepositoryDescription",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryDescription",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A comment or description about the repository.</p>\n@param repositoryDescription A comment or description about the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryDescription",
            "variableType" : "String",
            "documentation" : "<p>A comment or description about the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryId" : {
          "c2jName" : "repositoryId",
          "c2jShape" : "RepositoryId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the repository.</p>\n@param repositoryId The ID of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryId",
          "getterDocumentation" : "/**<p>The ID of the repository.</p>\n@return The ID of the repository.*/",
          "getterMethodName" : "getRepositoryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryId",
          "setterDocumentation" : "/**<p>The ID of the repository.</p>\n@param repositoryId The ID of the repository.*/",
          "setterMethodName" : "setRepositoryId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the repository.</p>\n@param repositoryId The ID of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The repository's name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository's name.</p>\n@param repositoryName The repository's name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The repository's name.</p>\n@return The repository's name.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The repository's name.</p>\n@param repositoryName The repository's name.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository's name.</p>\n@param repositoryName The repository's name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The repository's name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryMetadata",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "RepositoryMetadata",
        "variableName" : "repositoryMetadata",
        "variableType" : "RepositoryMetadata",
        "documentation" : null,
        "simpleType" : "RepositoryMetadata",
        "variableSetterType" : "RepositoryMetadata"
      },
      "wrapper" : false
    },
    "RepositoryNameExistsException" : {
      "c2jName" : "RepositoryNameExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified repository name already exists.</p>",
      "enums" : null,
      "errorCode" : "RepositoryNameExistsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryNameExistsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryNameExistsException",
        "variableName" : "repositoryNameExistsException",
        "variableType" : "RepositoryNameExistsException",
        "documentation" : null,
        "simpleType" : "RepositoryNameExistsException",
        "variableSetterType" : "RepositoryNameExistsException"
      },
      "wrapper" : false
    },
    "RepositoryNameIdPair" : {
      "c2jName" : "RepositoryNameIdPair",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Information about a repository name and ID.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name associated with the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name associated with the repository.</p>\n@param repositoryName The name associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name associated with the repository.</p>\n@return The name associated with the repository.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name associated with the repository.</p>\n@param repositoryName The name associated with the repository.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name associated with the repository.</p>\n@param repositoryName The name associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name associated with the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryId",
        "c2jShape" : "RepositoryId",
        "deprecated" : false,
        "documentation" : "<p>The ID associated with the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID associated with the repository.</p>\n@param repositoryId The ID associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryId",
        "getterDocumentation" : "/**<p>The ID associated with the repository.</p>\n@return The ID associated with the repository.*/",
        "getterMethodName" : "getRepositoryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryId",
        "setterDocumentation" : "/**<p>The ID associated with the repository.</p>\n@param repositoryId The ID associated with the repository.*/",
        "setterMethodName" : "setRepositoryId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID associated with the repository.</p>\n@param repositoryId The ID associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryId",
          "variableType" : "String",
          "documentation" : "<p>The ID associated with the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryId" : {
          "c2jName" : "repositoryId",
          "c2jShape" : "RepositoryId",
          "deprecated" : false,
          "documentation" : "<p>The ID associated with the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID associated with the repository.</p>\n@param repositoryId The ID associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryId",
          "getterDocumentation" : "/**<p>The ID associated with the repository.</p>\n@return The ID associated with the repository.*/",
          "getterMethodName" : "getRepositoryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryId",
          "setterDocumentation" : "/**<p>The ID associated with the repository.</p>\n@param repositoryId The ID associated with the repository.*/",
          "setterMethodName" : "setRepositoryId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID associated with the repository.</p>\n@param repositoryId The ID associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryId",
            "variableType" : "String",
            "documentation" : "<p>The ID associated with the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name associated with the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name associated with the repository.</p>\n@param repositoryName The name associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name associated with the repository.</p>\n@return The name associated with the repository.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name associated with the repository.</p>\n@param repositoryName The name associated with the repository.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name associated with the repository.</p>\n@param repositoryName The name associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name associated with the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryNameIdPair",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "RepositoryNameIdPair",
        "variableName" : "repositoryNameIdPair",
        "variableType" : "RepositoryNameIdPair",
        "documentation" : null,
        "simpleType" : "RepositoryNameIdPair",
        "variableSetterType" : "RepositoryNameIdPair"
      },
      "wrapper" : false
    },
    "RepositoryNameRequiredException" : {
      "c2jName" : "RepositoryNameRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A repository name is required but was not specified.</p>",
      "enums" : null,
      "errorCode" : "RepositoryNameRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryNameRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryNameRequiredException",
        "variableName" : "repositoryNameRequiredException",
        "variableType" : "RepositoryNameRequiredException",
        "documentation" : null,
        "simpleType" : "RepositoryNameRequiredException",
        "variableSetterType" : "RepositoryNameRequiredException"
      },
      "wrapper" : false
    },
    "RepositoryNamesRequiredException" : {
      "c2jName" : "RepositoryNamesRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A repository names object is required but was not specified.</p>",
      "enums" : null,
      "errorCode" : "RepositoryNamesRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryNamesRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryNamesRequiredException",
        "variableName" : "repositoryNamesRequiredException",
        "variableType" : "RepositoryNamesRequiredException",
        "documentation" : null,
        "simpleType" : "RepositoryNamesRequiredException",
        "variableSetterType" : "RepositoryNamesRequiredException"
      },
      "wrapper" : false
    },
    "RepositoryNotAssociatedWithPullRequestException" : {
      "c2jName" : "RepositoryNotAssociatedWithPullRequestException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The repository does not contain any pull requests with that pull request ID. Check to make sure you have provided the correct repository name for the pull request.</p>",
      "enums" : null,
      "errorCode" : "RepositoryNotAssociatedWithPullRequestException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryNotAssociatedWithPullRequestException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryNotAssociatedWithPullRequestException",
        "variableName" : "repositoryNotAssociatedWithPullRequestException",
        "variableType" : "RepositoryNotAssociatedWithPullRequestException",
        "documentation" : null,
        "simpleType" : "RepositoryNotAssociatedWithPullRequestException",
        "variableSetterType" : "RepositoryNotAssociatedWithPullRequestException"
      },
      "wrapper" : false
    },
    "RepositoryTrigger" : {
      "c2jName" : "RepositoryTrigger",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Information about a trigger for a repository.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "name",
        "c2jShape" : "RepositoryTriggerName",
        "deprecated" : false,
        "documentation" : "<p>The name of the trigger.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the trigger.</p>\n@param name The name of the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the trigger.</p>\n@return The name of the trigger.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "setterDocumentation" : "/**<p>The name of the trigger.</p>\n@param name The name of the trigger.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the trigger.</p>\n@param name The name of the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the trigger.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "destinationArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>\n@param destinationArn The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDestinationArn",
        "getterDocumentation" : "/**<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>\n@return The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).*/",
        "getterMethodName" : "getDestinationArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "destinationArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "destinationArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DestinationArn",
        "setterDocumentation" : "/**<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>\n@param destinationArn The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).*/",
        "setterMethodName" : "setDestinationArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "destinationArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>\n@param destinationArn The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "destinationArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "customData",
        "c2jShape" : "RepositoryTriggerCustomData",
        "deprecated" : false,
        "documentation" : "<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>\n@param customData Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCustomData",
        "getterDocumentation" : "/**<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>\n@return Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.*/",
        "getterMethodName" : "getCustomData",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "customData",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "customData",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CustomData",
        "setterDocumentation" : "/**<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>\n@param customData Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.*/",
        "setterMethodName" : "setCustomData",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "customData",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>\n@param customData Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "customData",
          "variableType" : "String",
          "documentation" : "<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "branches",
        "c2jShape" : "BranchNameList",
        "deprecated" : false,
        "documentation" : "<p>The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p> </note>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p> </note>\n@param branches The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBranches",
        "getterDocumentation" : "/**<p>The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p> </note>\n@return The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p>*/",
        "getterMethodName" : "getBranches",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "branches",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "branches",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "BranchName",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Branches",
        "setterDocumentation" : "/**<p>The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p> </note>\n@param branches The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p>*/",
        "setterMethodName" : "setBranches",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "branches",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setBranches(java.util.Collection)} or {@link #withBranches(java.util.Collection)} if you want to override the existing values.</p>\n@param branches The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "branches",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p> </note>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "events",
        "c2jShape" : "RepositoryTriggerEventList",
        "deprecated" : false,
        "documentation" : "<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>",
        "enumType" : "RepositoryTriggerEventEnum",
        "fluentSetterDocumentation" : "/**<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>\n@param events The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see RepositoryTriggerEventEnum*/",
        "fluentSetterMethodName" : "withEvents",
        "getterDocumentation" : "/**<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>\n@return The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p>\n@see RepositoryTriggerEventEnum*/",
        "getterMethodName" : "getEvents",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "events",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "events",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryTriggerEventEnum",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : "RepositoryTriggerEventEnum",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see RepositoryTriggerEventEnum*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return \n@see RepositoryTriggerEventEnum*/",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member \n@see RepositoryTriggerEventEnum*/",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see RepositoryTriggerEventEnum*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Events",
        "setterDocumentation" : "/**<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>\n@param events The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p>\n@see RepositoryTriggerEventEnum*/",
        "setterMethodName" : "setEvents",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "events",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setEvents(java.util.Collection)} or {@link #withEvents(java.util.Collection)} if you want to override the existing values.</p>\n@param events The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see RepositoryTriggerEventEnum*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "events",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Branches" : {
          "c2jName" : "branches",
          "c2jShape" : "BranchNameList",
          "deprecated" : false,
          "documentation" : "<p>The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p> </note>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p> </note>\n@param branches The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBranches",
          "getterDocumentation" : "/**<p>The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p> </note>\n@return The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p>*/",
          "getterMethodName" : "getBranches",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "branches",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "branches",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "BranchName",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Branches",
          "setterDocumentation" : "/**<p>The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p> </note>\n@param branches The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p>*/",
          "setterMethodName" : "setBranches",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "branches",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setBranches(java.util.Collection)} or {@link #withBranches(java.util.Collection)} if you want to override the existing values.</p>\n@param branches The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "branches",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The branches that will be included in the trigger configuration. If you specify an empty array, the trigger will apply to all branches.</p> <note> <p>While no content is required in the array, you must include the array itself.</p> </note>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "CustomData" : {
          "c2jName" : "customData",
          "c2jShape" : "RepositoryTriggerCustomData",
          "deprecated" : false,
          "documentation" : "<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>\n@param customData Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCustomData",
          "getterDocumentation" : "/**<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>\n@return Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.*/",
          "getterMethodName" : "getCustomData",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "customData",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "customData",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CustomData",
          "setterDocumentation" : "/**<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>\n@param customData Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.*/",
          "setterMethodName" : "setCustomData",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "customData",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>\n@param customData Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "customData",
            "variableType" : "String",
            "documentation" : "<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "DestinationArn" : {
          "c2jName" : "destinationArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>\n@param destinationArn The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDestinationArn",
          "getterDocumentation" : "/**<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>\n@return The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).*/",
          "getterMethodName" : "getDestinationArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "destinationArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "destinationArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DestinationArn",
          "setterDocumentation" : "/**<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>\n@param destinationArn The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).*/",
          "setterMethodName" : "setDestinationArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "destinationArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>\n@param destinationArn The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "destinationArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Events" : {
          "c2jName" : "events",
          "c2jShape" : "RepositoryTriggerEventList",
          "deprecated" : false,
          "documentation" : "<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>",
          "enumType" : "RepositoryTriggerEventEnum",
          "fluentSetterDocumentation" : "/**<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>\n@param events The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see RepositoryTriggerEventEnum*/",
          "fluentSetterMethodName" : "withEvents",
          "getterDocumentation" : "/**<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>\n@return The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p>\n@see RepositoryTriggerEventEnum*/",
          "getterMethodName" : "getEvents",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "events",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "events",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryTriggerEventEnum",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : "RepositoryTriggerEventEnum",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see RepositoryTriggerEventEnum*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return \n@see RepositoryTriggerEventEnum*/",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member \n@see RepositoryTriggerEventEnum*/",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see RepositoryTriggerEventEnum*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Events",
          "setterDocumentation" : "/**<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>\n@param events The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p>\n@see RepositoryTriggerEventEnum*/",
          "setterMethodName" : "setEvents",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "events",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setEvents(java.util.Collection)} or {@link #withEvents(java.util.Collection)} if you want to override the existing values.</p>\n@param events The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see RepositoryTriggerEventEnum*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "events",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "name",
          "c2jShape" : "RepositoryTriggerName",
          "deprecated" : false,
          "documentation" : "<p>The name of the trigger.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the trigger.</p>\n@param name The name of the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the trigger.</p>\n@return The name of the trigger.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "setterDocumentation" : "/**<p>The name of the trigger.</p>\n@param name The name of the trigger.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the trigger.</p>\n@param name The name of the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the trigger.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "name", "destinationArn", "events" ],
      "shapeName" : "RepositoryTrigger",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "RepositoryTrigger",
        "variableName" : "repositoryTrigger",
        "variableType" : "RepositoryTrigger",
        "documentation" : null,
        "simpleType" : "RepositoryTrigger",
        "variableSetterType" : "RepositoryTrigger"
      },
      "wrapper" : false
    },
    "RepositoryTriggerBranchNameListRequiredException" : {
      "c2jName" : "RepositoryTriggerBranchNameListRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>At least one branch name is required but was not specified in the trigger configuration.</p>",
      "enums" : null,
      "errorCode" : "RepositoryTriggerBranchNameListRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryTriggerBranchNameListRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryTriggerBranchNameListRequiredException",
        "variableName" : "repositoryTriggerBranchNameListRequiredException",
        "variableType" : "RepositoryTriggerBranchNameListRequiredException",
        "documentation" : null,
        "simpleType" : "RepositoryTriggerBranchNameListRequiredException",
        "variableSetterType" : "RepositoryTriggerBranchNameListRequiredException"
      },
      "wrapper" : false
    },
    "RepositoryTriggerDestinationArnRequiredException" : {
      "c2jName" : "RepositoryTriggerDestinationArnRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A destination ARN for the target service for the trigger is required but was not specified.</p>",
      "enums" : null,
      "errorCode" : "RepositoryTriggerDestinationArnRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryTriggerDestinationArnRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryTriggerDestinationArnRequiredException",
        "variableName" : "repositoryTriggerDestinationArnRequiredException",
        "variableType" : "RepositoryTriggerDestinationArnRequiredException",
        "documentation" : null,
        "simpleType" : "RepositoryTriggerDestinationArnRequiredException",
        "variableSetterType" : "RepositoryTriggerDestinationArnRequiredException"
      },
      "wrapper" : false
    },
    "RepositoryTriggerEventEnum" : {
      "c2jName" : "RepositoryTriggerEventEnum",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "All",
        "value" : "all"
      }, {
        "name" : "UpdateReference",
        "value" : "updateReference"
      }, {
        "name" : "CreateReference",
        "value" : "createReference"
      }, {
        "name" : "DeleteReference",
        "value" : "deleteReference"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryTriggerEventEnum",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "RepositoryTriggerEventEnum",
        "variableName" : "repositoryTriggerEventEnum",
        "variableType" : "RepositoryTriggerEventEnum",
        "documentation" : null,
        "simpleType" : "RepositoryTriggerEventEnum",
        "variableSetterType" : "RepositoryTriggerEventEnum"
      },
      "wrapper" : false
    },
    "RepositoryTriggerEventsListRequiredException" : {
      "c2jName" : "RepositoryTriggerEventsListRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>At least one event for the trigger is required but was not specified.</p>",
      "enums" : null,
      "errorCode" : "RepositoryTriggerEventsListRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryTriggerEventsListRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryTriggerEventsListRequiredException",
        "variableName" : "repositoryTriggerEventsListRequiredException",
        "variableType" : "RepositoryTriggerEventsListRequiredException",
        "documentation" : null,
        "simpleType" : "RepositoryTriggerEventsListRequiredException",
        "variableSetterType" : "RepositoryTriggerEventsListRequiredException"
      },
      "wrapper" : false
    },
    "RepositoryTriggerExecutionFailure" : {
      "c2jName" : "RepositoryTriggerExecutionFailure",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A trigger failed to run.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "trigger",
        "c2jShape" : "RepositoryTriggerName",
        "deprecated" : false,
        "documentation" : "<p>The name of the trigger that did not run.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the trigger that did not run.</p>\n@param trigger The name of the trigger that did not run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTrigger",
        "getterDocumentation" : "/**<p>The name of the trigger that did not run.</p>\n@return The name of the trigger that did not run.*/",
        "getterMethodName" : "getTrigger",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "trigger",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "trigger",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Trigger",
        "setterDocumentation" : "/**<p>The name of the trigger that did not run.</p>\n@param trigger The name of the trigger that did not run.*/",
        "setterMethodName" : "setTrigger",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "trigger",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the trigger that did not run.</p>\n@param trigger The name of the trigger that did not run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "trigger",
          "variableType" : "String",
          "documentation" : "<p>The name of the trigger that did not run.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "failureMessage",
        "c2jShape" : "RepositoryTriggerExecutionFailureMessage",
        "deprecated" : false,
        "documentation" : "<p>Additional message information about the trigger that did not run.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Additional message information about the trigger that did not run.</p>\n@param failureMessage Additional message information about the trigger that did not run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailureMessage",
        "getterDocumentation" : "/**<p>Additional message information about the trigger that did not run.</p>\n@return Additional message information about the trigger that did not run.*/",
        "getterMethodName" : "getFailureMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "failureMessage",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "failureMessage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FailureMessage",
        "setterDocumentation" : "/**<p>Additional message information about the trigger that did not run.</p>\n@param failureMessage Additional message information about the trigger that did not run.*/",
        "setterMethodName" : "setFailureMessage",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "failureMessage",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Additional message information about the trigger that did not run.</p>\n@param failureMessage Additional message information about the trigger that did not run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "failureMessage",
          "variableType" : "String",
          "documentation" : "<p>Additional message information about the trigger that did not run.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FailureMessage" : {
          "c2jName" : "failureMessage",
          "c2jShape" : "RepositoryTriggerExecutionFailureMessage",
          "deprecated" : false,
          "documentation" : "<p>Additional message information about the trigger that did not run.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Additional message information about the trigger that did not run.</p>\n@param failureMessage Additional message information about the trigger that did not run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailureMessage",
          "getterDocumentation" : "/**<p>Additional message information about the trigger that did not run.</p>\n@return Additional message information about the trigger that did not run.*/",
          "getterMethodName" : "getFailureMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "failureMessage",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "failureMessage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FailureMessage",
          "setterDocumentation" : "/**<p>Additional message information about the trigger that did not run.</p>\n@param failureMessage Additional message information about the trigger that did not run.*/",
          "setterMethodName" : "setFailureMessage",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "failureMessage",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Additional message information about the trigger that did not run.</p>\n@param failureMessage Additional message information about the trigger that did not run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "failureMessage",
            "variableType" : "String",
            "documentation" : "<p>Additional message information about the trigger that did not run.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Trigger" : {
          "c2jName" : "trigger",
          "c2jShape" : "RepositoryTriggerName",
          "deprecated" : false,
          "documentation" : "<p>The name of the trigger that did not run.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the trigger that did not run.</p>\n@param trigger The name of the trigger that did not run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTrigger",
          "getterDocumentation" : "/**<p>The name of the trigger that did not run.</p>\n@return The name of the trigger that did not run.*/",
          "getterMethodName" : "getTrigger",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "trigger",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "trigger",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Trigger",
          "setterDocumentation" : "/**<p>The name of the trigger that did not run.</p>\n@param trigger The name of the trigger that did not run.*/",
          "setterMethodName" : "setTrigger",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "trigger",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the trigger that did not run.</p>\n@param trigger The name of the trigger that did not run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "trigger",
            "variableType" : "String",
            "documentation" : "<p>The name of the trigger that did not run.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryTriggerExecutionFailure",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "RepositoryTriggerExecutionFailure",
        "variableName" : "repositoryTriggerExecutionFailure",
        "variableType" : "RepositoryTriggerExecutionFailure",
        "documentation" : null,
        "simpleType" : "RepositoryTriggerExecutionFailure",
        "variableSetterType" : "RepositoryTriggerExecutionFailure"
      },
      "wrapper" : false
    },
    "RepositoryTriggerNameRequiredException" : {
      "c2jName" : "RepositoryTriggerNameRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A name for the trigger is required but was not specified.</p>",
      "enums" : null,
      "errorCode" : "RepositoryTriggerNameRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryTriggerNameRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryTriggerNameRequiredException",
        "variableName" : "repositoryTriggerNameRequiredException",
        "variableType" : "RepositoryTriggerNameRequiredException",
        "documentation" : null,
        "simpleType" : "RepositoryTriggerNameRequiredException",
        "variableSetterType" : "RepositoryTriggerNameRequiredException"
      },
      "wrapper" : false
    },
    "RepositoryTriggersListRequiredException" : {
      "c2jName" : "RepositoryTriggersListRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The list of triggers for the repository is required but was not specified.</p>",
      "enums" : null,
      "errorCode" : "RepositoryTriggersListRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryTriggersListRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryTriggersListRequiredException",
        "variableName" : "repositoryTriggersListRequiredException",
        "variableType" : "RepositoryTriggersListRequiredException",
        "documentation" : null,
        "simpleType" : "RepositoryTriggersListRequiredException",
        "variableSetterType" : "RepositoryTriggersListRequiredException"
      },
      "wrapper" : false
    },
    "SameFileContentException" : {
      "c2jName" : "SameFileContentException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The file was not added or updated because the content of the file is exactly the same as the content of that file in the repository and branch that you specified.</p>",
      "enums" : null,
      "errorCode" : "SameFileContentException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SameFileContentException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "SameFileContentException",
        "variableName" : "sameFileContentException",
        "variableType" : "SameFileContentException",
        "documentation" : null,
        "simpleType" : "SameFileContentException",
        "variableSetterType" : "SameFileContentException"
      },
      "wrapper" : false
    },
    "SortByEnum" : {
      "c2jName" : "SortByEnum",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "RepositoryName",
        "value" : "repositoryName"
      }, {
        "name" : "LastModifiedDate",
        "value" : "lastModifiedDate"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SortByEnum",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "SortByEnum",
        "variableName" : "sortByEnum",
        "variableType" : "SortByEnum",
        "documentation" : null,
        "simpleType" : "SortByEnum",
        "variableSetterType" : "SortByEnum"
      },
      "wrapper" : false
    },
    "SourceAndDestinationAreSameException" : {
      "c2jName" : "SourceAndDestinationAreSameException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The source branch and the destination branch for the pull request are the same. You must specify different branches for the source and destination.</p>",
      "enums" : null,
      "errorCode" : "SourceAndDestinationAreSameException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SourceAndDestinationAreSameException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "SourceAndDestinationAreSameException",
        "variableName" : "sourceAndDestinationAreSameException",
        "variableType" : "SourceAndDestinationAreSameException",
        "documentation" : null,
        "simpleType" : "SourceAndDestinationAreSameException",
        "variableSetterType" : "SourceAndDestinationAreSameException"
      },
      "wrapper" : false
    },
    "Target" : {
      "c2jName" : "Target",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about a target for a pull request.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository that contains the pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@return The name of the repository that contains the pull request.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository that contains the pull request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sourceReference",
        "c2jShape" : "ReferenceName",
        "deprecated" : false,
        "documentation" : "<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>\n@param sourceReference The branch of the repository that contains the changes for the pull request. Also known as the source branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSourceReference",
        "getterDocumentation" : "/**<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>\n@return The branch of the repository that contains the changes for the pull request. Also known as the source branch.*/",
        "getterMethodName" : "getSourceReference",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sourceReference",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sourceReference",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SourceReference",
        "setterDocumentation" : "/**<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>\n@param sourceReference The branch of the repository that contains the changes for the pull request. Also known as the source branch.*/",
        "setterMethodName" : "setSourceReference",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceReference",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>\n@param sourceReference The branch of the repository that contains the changes for the pull request. Also known as the source branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceReference",
          "variableType" : "String",
          "documentation" : "<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "destinationReference",
        "c2jShape" : "ReferenceName",
        "deprecated" : false,
        "documentation" : "<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.</p>\n@param destinationReference The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDestinationReference",
        "getterDocumentation" : "/**<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.</p>\n@return The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.*/",
        "getterMethodName" : "getDestinationReference",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "destinationReference",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "destinationReference",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DestinationReference",
        "setterDocumentation" : "/**<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.</p>\n@param destinationReference The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.*/",
        "setterMethodName" : "setDestinationReference",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "destinationReference",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.</p>\n@param destinationReference The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "destinationReference",
          "variableType" : "String",
          "documentation" : "<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DestinationReference" : {
          "c2jName" : "destinationReference",
          "c2jShape" : "ReferenceName",
          "deprecated" : false,
          "documentation" : "<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.</p>\n@param destinationReference The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDestinationReference",
          "getterDocumentation" : "/**<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.</p>\n@return The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.*/",
          "getterMethodName" : "getDestinationReference",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "destinationReference",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "destinationReference",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DestinationReference",
          "setterDocumentation" : "/**<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.</p>\n@param destinationReference The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.*/",
          "setterMethodName" : "setDestinationReference",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "destinationReference",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.</p>\n@param destinationReference The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "destinationReference",
            "variableType" : "String",
            "documentation" : "<p>The branch of the repository where the pull request changes will be merged into. Also known as the destination branch.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that contains the pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@return The name of the repository that contains the pull request.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository that contains the pull request.</p>\n@param repositoryName The name of the repository that contains the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository that contains the pull request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SourceReference" : {
          "c2jName" : "sourceReference",
          "c2jShape" : "ReferenceName",
          "deprecated" : false,
          "documentation" : "<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>\n@param sourceReference The branch of the repository that contains the changes for the pull request. Also known as the source branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSourceReference",
          "getterDocumentation" : "/**<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>\n@return The branch of the repository that contains the changes for the pull request. Also known as the source branch.*/",
          "getterMethodName" : "getSourceReference",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sourceReference",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sourceReference",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SourceReference",
          "setterDocumentation" : "/**<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>\n@param sourceReference The branch of the repository that contains the changes for the pull request. Also known as the source branch.*/",
          "setterMethodName" : "setSourceReference",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceReference",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>\n@param sourceReference The branch of the repository that contains the changes for the pull request. Also known as the source branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceReference",
            "variableType" : "String",
            "documentation" : "<p>The branch of the repository that contains the changes for the pull request. Also known as the source branch.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "sourceReference" ],
      "shapeName" : "Target",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Target",
        "variableName" : "target",
        "variableType" : "Target",
        "documentation" : null,
        "simpleType" : "Target",
        "variableSetterType" : "Target"
      },
      "wrapper" : false
    },
    "TargetRequiredException" : {
      "c2jName" : "TargetRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A pull request target is required. It cannot be empty or null. A pull request target must contain the full values for the repository name, source branch, and destination branch for the pull request.</p>",
      "enums" : null,
      "errorCode" : "TargetRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TargetRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "TargetRequiredException",
        "variableName" : "targetRequiredException",
        "variableType" : "TargetRequiredException",
        "documentation" : null,
        "simpleType" : "TargetRequiredException",
        "variableSetterType" : "TargetRequiredException"
      },
      "wrapper" : false
    },
    "TargetsRequiredException" : {
      "c2jName" : "TargetsRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An array of target objects is required. It cannot be empty or null.</p>",
      "enums" : null,
      "errorCode" : "TargetsRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TargetsRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "TargetsRequiredException",
        "variableName" : "targetsRequiredException",
        "variableType" : "TargetsRequiredException",
        "documentation" : null,
        "simpleType" : "TargetsRequiredException",
        "variableSetterType" : "TargetsRequiredException"
      },
      "wrapper" : false
    },
    "TestRepositoryTriggersRequest" : {
      "c2jName" : "TestRepositoryTriggersInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a test repository triggers operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "TestRepositoryTriggers",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.TestRepositoryTriggers",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository in which to test the triggers.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository in which to test the triggers.</p>\n@param repositoryName The name of the repository in which to test the triggers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository in which to test the triggers.</p>\n@return The name of the repository in which to test the triggers.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository in which to test the triggers.</p>\n@param repositoryName The name of the repository in which to test the triggers.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository in which to test the triggers.</p>\n@param repositoryName The name of the repository in which to test the triggers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository in which to test the triggers.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "triggers",
        "c2jShape" : "RepositoryTriggersList",
        "deprecated" : false,
        "documentation" : "<p>The list of triggers to test.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The list of triggers to test.</p>\n@param triggers The list of triggers to test.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTriggers",
        "getterDocumentation" : "/**<p>The list of triggers to test.</p>\n@return The list of triggers to test.*/",
        "getterMethodName" : "getTriggers",
        "getterModel" : {
          "returnType" : "java.util.List<RepositoryTrigger>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "triggers",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "triggers",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryTrigger",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "RepositoryTrigger",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "RepositoryTrigger",
              "variableName" : "member",
              "variableType" : "RepositoryTrigger",
              "documentation" : "",
              "simpleType" : "RepositoryTrigger",
              "variableSetterType" : "RepositoryTrigger"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "RepositoryTrigger",
              "variableName" : "member",
              "variableType" : "RepositoryTrigger",
              "documentation" : "",
              "simpleType" : "RepositoryTrigger",
              "variableSetterType" : "RepositoryTrigger"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "RepositoryTrigger",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "RepositoryTrigger",
          "templateImplType" : "java.util.ArrayList<RepositoryTrigger>",
          "templateType" : "java.util.List<RepositoryTrigger>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Triggers",
        "setterDocumentation" : "/**<p>The list of triggers to test.</p>\n@param triggers The list of triggers to test.*/",
        "setterMethodName" : "setTriggers",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
          "variableName" : "triggers",
          "variableType" : "java.util.List<RepositoryTrigger>",
          "documentation" : "",
          "simpleType" : "List<RepositoryTrigger>",
          "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The list of triggers to test.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTriggers(java.util.Collection)} or {@link #withTriggers(java.util.Collection)} if you want to override the existing values.</p>\n@param triggers The list of triggers to test.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
          "variableName" : "triggers",
          "variableType" : "java.util.List<RepositoryTrigger>",
          "documentation" : "<p>The list of triggers to test.</p>",
          "simpleType" : "List<RepositoryTrigger>",
          "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository in which to test the triggers.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository in which to test the triggers.</p>\n@param repositoryName The name of the repository in which to test the triggers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository in which to test the triggers.</p>\n@return The name of the repository in which to test the triggers.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository in which to test the triggers.</p>\n@param repositoryName The name of the repository in which to test the triggers.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository in which to test the triggers.</p>\n@param repositoryName The name of the repository in which to test the triggers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository in which to test the triggers.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Triggers" : {
          "c2jName" : "triggers",
          "c2jShape" : "RepositoryTriggersList",
          "deprecated" : false,
          "documentation" : "<p>The list of triggers to test.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The list of triggers to test.</p>\n@param triggers The list of triggers to test.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTriggers",
          "getterDocumentation" : "/**<p>The list of triggers to test.</p>\n@return The list of triggers to test.*/",
          "getterMethodName" : "getTriggers",
          "getterModel" : {
            "returnType" : "java.util.List<RepositoryTrigger>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "triggers",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "triggers",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryTrigger",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "RepositoryTrigger",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "RepositoryTrigger",
                "variableName" : "member",
                "variableType" : "RepositoryTrigger",
                "documentation" : "",
                "simpleType" : "RepositoryTrigger",
                "variableSetterType" : "RepositoryTrigger"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "RepositoryTrigger",
                "variableName" : "member",
                "variableType" : "RepositoryTrigger",
                "documentation" : "",
                "simpleType" : "RepositoryTrigger",
                "variableSetterType" : "RepositoryTrigger"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "RepositoryTrigger",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "RepositoryTrigger",
            "templateImplType" : "java.util.ArrayList<RepositoryTrigger>",
            "templateType" : "java.util.List<RepositoryTrigger>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Triggers",
          "setterDocumentation" : "/**<p>The list of triggers to test.</p>\n@param triggers The list of triggers to test.*/",
          "setterMethodName" : "setTriggers",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
            "variableName" : "triggers",
            "variableType" : "java.util.List<RepositoryTrigger>",
            "documentation" : "",
            "simpleType" : "List<RepositoryTrigger>",
            "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The list of triggers to test.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTriggers(java.util.Collection)} or {@link #withTriggers(java.util.Collection)} if you want to override the existing values.</p>\n@param triggers The list of triggers to test.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
            "variableName" : "triggers",
            "variableType" : "java.util.List<RepositoryTrigger>",
            "documentation" : "<p>The list of triggers to test.</p>",
            "simpleType" : "List<RepositoryTrigger>",
            "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "triggers" ],
      "shapeName" : "TestRepositoryTriggersRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "TestRepositoryTriggersRequest",
        "variableName" : "testRepositoryTriggersRequest",
        "variableType" : "TestRepositoryTriggersRequest",
        "documentation" : null,
        "simpleType" : "TestRepositoryTriggersRequest",
        "variableSetterType" : "TestRepositoryTriggersRequest"
      },
      "wrapper" : false
    },
    "TestRepositoryTriggersResult" : {
      "c2jName" : "TestRepositoryTriggersOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a test repository triggers operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "successfulExecutions",
        "c2jShape" : "RepositoryTriggerNameList",
        "deprecated" : false,
        "documentation" : "<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>\n@param successfulExecutions The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSuccessfulExecutions",
        "getterDocumentation" : "/**<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>\n@return The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.*/",
        "getterMethodName" : "getSuccessfulExecutions",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "successfulExecutions",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "successfulExecutions",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryTriggerName",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "SuccessfulExecutions",
        "setterDocumentation" : "/**<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>\n@param successfulExecutions The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.*/",
        "setterMethodName" : "setSuccessfulExecutions",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "successfulExecutions",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSuccessfulExecutions(java.util.Collection)} or {@link #withSuccessfulExecutions(java.util.Collection)} if you want to override the existing values.</p>\n@param successfulExecutions The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "successfulExecutions",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "failedExecutions",
        "c2jShape" : "RepositoryTriggerExecutionFailureList",
        "deprecated" : false,
        "documentation" : "<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>\n@param failedExecutions The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailedExecutions",
        "getterDocumentation" : "/**<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>\n@return The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.*/",
        "getterMethodName" : "getFailedExecutions",
        "getterModel" : {
          "returnType" : "java.util.List<RepositoryTriggerExecutionFailure>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "failedExecutions",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "failedExecutions",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryTriggerExecutionFailure",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "RepositoryTriggerExecutionFailure",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "RepositoryTriggerExecutionFailure",
              "variableName" : "member",
              "variableType" : "RepositoryTriggerExecutionFailure",
              "documentation" : "",
              "simpleType" : "RepositoryTriggerExecutionFailure",
              "variableSetterType" : "RepositoryTriggerExecutionFailure"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "RepositoryTriggerExecutionFailure",
              "variableName" : "member",
              "variableType" : "RepositoryTriggerExecutionFailure",
              "documentation" : "",
              "simpleType" : "RepositoryTriggerExecutionFailure",
              "variableSetterType" : "RepositoryTriggerExecutionFailure"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "RepositoryTriggerExecutionFailure",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "RepositoryTriggerExecutionFailure",
          "templateImplType" : "java.util.ArrayList<RepositoryTriggerExecutionFailure>",
          "templateType" : "java.util.List<RepositoryTriggerExecutionFailure>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "FailedExecutions",
        "setterDocumentation" : "/**<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>\n@param failedExecutions The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.*/",
        "setterMethodName" : "setFailedExecutions",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<RepositoryTriggerExecutionFailure>",
          "variableName" : "failedExecutions",
          "variableType" : "java.util.List<RepositoryTriggerExecutionFailure>",
          "documentation" : "",
          "simpleType" : "List<RepositoryTriggerExecutionFailure>",
          "variableSetterType" : "java.util.Collection<RepositoryTriggerExecutionFailure>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailedExecutions(java.util.Collection)} or {@link #withFailedExecutions(java.util.Collection)} if you want to override the existing values.</p>\n@param failedExecutions The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<RepositoryTriggerExecutionFailure>",
          "variableName" : "failedExecutions",
          "variableType" : "java.util.List<RepositoryTriggerExecutionFailure>",
          "documentation" : "<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>",
          "simpleType" : "List<RepositoryTriggerExecutionFailure>",
          "variableSetterType" : "java.util.Collection<RepositoryTriggerExecutionFailure>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FailedExecutions" : {
          "c2jName" : "failedExecutions",
          "c2jShape" : "RepositoryTriggerExecutionFailureList",
          "deprecated" : false,
          "documentation" : "<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>\n@param failedExecutions The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailedExecutions",
          "getterDocumentation" : "/**<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>\n@return The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.*/",
          "getterMethodName" : "getFailedExecutions",
          "getterModel" : {
            "returnType" : "java.util.List<RepositoryTriggerExecutionFailure>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "failedExecutions",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "failedExecutions",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryTriggerExecutionFailure",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "RepositoryTriggerExecutionFailure",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "RepositoryTriggerExecutionFailure",
                "variableName" : "member",
                "variableType" : "RepositoryTriggerExecutionFailure",
                "documentation" : "",
                "simpleType" : "RepositoryTriggerExecutionFailure",
                "variableSetterType" : "RepositoryTriggerExecutionFailure"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "RepositoryTriggerExecutionFailure",
                "variableName" : "member",
                "variableType" : "RepositoryTriggerExecutionFailure",
                "documentation" : "",
                "simpleType" : "RepositoryTriggerExecutionFailure",
                "variableSetterType" : "RepositoryTriggerExecutionFailure"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "RepositoryTriggerExecutionFailure",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "RepositoryTriggerExecutionFailure",
            "templateImplType" : "java.util.ArrayList<RepositoryTriggerExecutionFailure>",
            "templateType" : "java.util.List<RepositoryTriggerExecutionFailure>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "FailedExecutions",
          "setterDocumentation" : "/**<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>\n@param failedExecutions The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.*/",
          "setterMethodName" : "setFailedExecutions",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<RepositoryTriggerExecutionFailure>",
            "variableName" : "failedExecutions",
            "variableType" : "java.util.List<RepositoryTriggerExecutionFailure>",
            "documentation" : "",
            "simpleType" : "List<RepositoryTriggerExecutionFailure>",
            "variableSetterType" : "java.util.Collection<RepositoryTriggerExecutionFailure>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailedExecutions(java.util.Collection)} or {@link #withFailedExecutions(java.util.Collection)} if you want to override the existing values.</p>\n@param failedExecutions The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<RepositoryTriggerExecutionFailure>",
            "variableName" : "failedExecutions",
            "variableType" : "java.util.List<RepositoryTriggerExecutionFailure>",
            "documentation" : "<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>",
            "simpleType" : "List<RepositoryTriggerExecutionFailure>",
            "variableSetterType" : "java.util.Collection<RepositoryTriggerExecutionFailure>"
          },
          "xmlNameSpaceUri" : null
        },
        "SuccessfulExecutions" : {
          "c2jName" : "successfulExecutions",
          "c2jShape" : "RepositoryTriggerNameList",
          "deprecated" : false,
          "documentation" : "<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>\n@param successfulExecutions The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSuccessfulExecutions",
          "getterDocumentation" : "/**<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>\n@return The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.*/",
          "getterMethodName" : "getSuccessfulExecutions",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "successfulExecutions",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "successfulExecutions",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryTriggerName",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "SuccessfulExecutions",
          "setterDocumentation" : "/**<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>\n@param successfulExecutions The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.*/",
          "setterMethodName" : "setSuccessfulExecutions",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "successfulExecutions",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSuccessfulExecutions(java.util.Collection)} or {@link #withSuccessfulExecutions(java.util.Collection)} if you want to override the existing values.</p>\n@param successfulExecutions The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "successfulExecutions",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TestRepositoryTriggersResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "TestRepositoryTriggersResult",
        "variableName" : "testRepositoryTriggersResult",
        "variableType" : "TestRepositoryTriggersResult",
        "documentation" : null,
        "simpleType" : "TestRepositoryTriggersResult",
        "variableSetterType" : "TestRepositoryTriggersResult"
      },
      "wrapper" : false
    },
    "TipOfSourceReferenceIsDifferentException" : {
      "c2jName" : "TipOfSourceReferenceIsDifferentException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The tip of the source branch in the destination repository does not match the tip of the source branch specified in your request. The pull request might have been updated. Make sure that you have the latest changes.</p>",
      "enums" : null,
      "errorCode" : "TipOfSourceReferenceIsDifferentException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TipOfSourceReferenceIsDifferentException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "TipOfSourceReferenceIsDifferentException",
        "variableName" : "tipOfSourceReferenceIsDifferentException",
        "variableType" : "TipOfSourceReferenceIsDifferentException",
        "documentation" : null,
        "simpleType" : "TipOfSourceReferenceIsDifferentException",
        "variableSetterType" : "TipOfSourceReferenceIsDifferentException"
      },
      "wrapper" : false
    },
    "TipsDivergenceExceededException" : {
      "c2jName" : "TipsDivergenceExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The divergence between the tips of the provided commit specifiers is too great to determine whether there might be any merge conflicts. Locally compare the specifiers using <code>git diff</code> or a diff tool.</p>",
      "enums" : null,
      "errorCode" : "TipsDivergenceExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TipsDivergenceExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "TipsDivergenceExceededException",
        "variableName" : "tipsDivergenceExceededException",
        "variableType" : "TipsDivergenceExceededException",
        "documentation" : null,
        "simpleType" : "TipsDivergenceExceededException",
        "variableSetterType" : "TipsDivergenceExceededException"
      },
      "wrapper" : false
    },
    "TitleRequiredException" : {
      "c2jName" : "TitleRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A pull request title is required. It cannot be empty or null.</p>",
      "enums" : null,
      "errorCode" : "TitleRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TitleRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "TitleRequiredException",
        "variableName" : "titleRequiredException",
        "variableType" : "TitleRequiredException",
        "documentation" : null,
        "simpleType" : "TitleRequiredException",
        "variableSetterType" : "TitleRequiredException"
      },
      "wrapper" : false
    },
    "UpdateCommentRequest" : {
      "c2jName" : "UpdateCommentInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateComment",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.UpdateComment",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "commentId",
        "c2jShape" : "CommentId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommentId",
        "getterDocumentation" : "/**<p>The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@return The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.*/",
        "getterMethodName" : "getCommentId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commentId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commentId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CommentId",
        "setterDocumentation" : "/**<p>The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.*/",
        "setterMethodName" : "setCommentId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "commentId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "commentId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "content",
        "c2jShape" : "Content",
        "deprecated" : false,
        "documentation" : "<p>The updated content with which you want to replace the existing content of the comment.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The updated content with which you want to replace the existing content of the comment.</p>\n@param content The updated content with which you want to replace the existing content of the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContent",
        "getterDocumentation" : "/**<p>The updated content with which you want to replace the existing content of the comment.</p>\n@return The updated content with which you want to replace the existing content of the comment.*/",
        "getterMethodName" : "getContent",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "content",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "content",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Content",
        "setterDocumentation" : "/**<p>The updated content with which you want to replace the existing content of the comment.</p>\n@param content The updated content with which you want to replace the existing content of the comment.*/",
        "setterMethodName" : "setContent",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "content",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The updated content with which you want to replace the existing content of the comment.</p>\n@param content The updated content with which you want to replace the existing content of the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "content",
          "variableType" : "String",
          "documentation" : "<p>The updated content with which you want to replace the existing content of the comment.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CommentId" : {
          "c2jName" : "commentId",
          "c2jShape" : "CommentId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommentId",
          "getterDocumentation" : "/**<p>The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@return The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.*/",
          "getterMethodName" : "getCommentId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commentId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commentId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CommentId",
          "setterDocumentation" : "/**<p>The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.*/",
          "setterMethodName" : "setCommentId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "commentId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>\n@param commentId The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "commentId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Content" : {
          "c2jName" : "content",
          "c2jShape" : "Content",
          "deprecated" : false,
          "documentation" : "<p>The updated content with which you want to replace the existing content of the comment.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The updated content with which you want to replace the existing content of the comment.</p>\n@param content The updated content with which you want to replace the existing content of the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContent",
          "getterDocumentation" : "/**<p>The updated content with which you want to replace the existing content of the comment.</p>\n@return The updated content with which you want to replace the existing content of the comment.*/",
          "getterMethodName" : "getContent",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "content",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "content",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Content",
          "setterDocumentation" : "/**<p>The updated content with which you want to replace the existing content of the comment.</p>\n@param content The updated content with which you want to replace the existing content of the comment.*/",
          "setterMethodName" : "setContent",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "content",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The updated content with which you want to replace the existing content of the comment.</p>\n@param content The updated content with which you want to replace the existing content of the comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "content",
            "variableType" : "String",
            "documentation" : "<p>The updated content with which you want to replace the existing content of the comment.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "commentId", "content" ],
      "shapeName" : "UpdateCommentRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "UpdateCommentRequest",
        "variableName" : "updateCommentRequest",
        "variableType" : "UpdateCommentRequest",
        "documentation" : null,
        "simpleType" : "UpdateCommentRequest",
        "variableSetterType" : "UpdateCommentRequest"
      },
      "wrapper" : false
    },
    "UpdateCommentResult" : {
      "c2jName" : "UpdateCommentOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "comment",
        "c2jShape" : "Comment",
        "deprecated" : false,
        "documentation" : "<p>Information about the updated comment.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the updated comment.</p>\n@param comment Information about the updated comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withComment",
        "getterDocumentation" : "/**<p>Information about the updated comment.</p>\n@return Information about the updated comment.*/",
        "getterMethodName" : "getComment",
        "getterModel" : {
          "returnType" : "Comment",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "comment",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "comment",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Comment",
        "setterDocumentation" : "/**<p>Information about the updated comment.</p>\n@param comment Information about the updated comment.*/",
        "setterMethodName" : "setComment",
        "setterModel" : {
          "variableDeclarationType" : "Comment",
          "variableName" : "comment",
          "variableType" : "Comment",
          "documentation" : "",
          "simpleType" : "Comment",
          "variableSetterType" : "Comment"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the updated comment.</p>\n@param comment Information about the updated comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Comment",
          "variableName" : "comment",
          "variableType" : "Comment",
          "documentation" : "<p>Information about the updated comment.</p>",
          "simpleType" : "Comment",
          "variableSetterType" : "Comment"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Comment" : {
          "c2jName" : "comment",
          "c2jShape" : "Comment",
          "deprecated" : false,
          "documentation" : "<p>Information about the updated comment.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the updated comment.</p>\n@param comment Information about the updated comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withComment",
          "getterDocumentation" : "/**<p>Information about the updated comment.</p>\n@return Information about the updated comment.*/",
          "getterMethodName" : "getComment",
          "getterModel" : {
            "returnType" : "Comment",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "comment",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "comment",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Comment",
          "setterDocumentation" : "/**<p>Information about the updated comment.</p>\n@param comment Information about the updated comment.*/",
          "setterMethodName" : "setComment",
          "setterModel" : {
            "variableDeclarationType" : "Comment",
            "variableName" : "comment",
            "variableType" : "Comment",
            "documentation" : "",
            "simpleType" : "Comment",
            "variableSetterType" : "Comment"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the updated comment.</p>\n@param comment Information about the updated comment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Comment",
            "variableName" : "comment",
            "variableType" : "Comment",
            "documentation" : "<p>Information about the updated comment.</p>",
            "simpleType" : "Comment",
            "variableSetterType" : "Comment"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateCommentResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "UpdateCommentResult",
        "variableName" : "updateCommentResult",
        "variableType" : "UpdateCommentResult",
        "documentation" : null,
        "simpleType" : "UpdateCommentResult",
        "variableSetterType" : "UpdateCommentResult"
      },
      "wrapper" : false
    },
    "UpdateDefaultBranchRequest" : {
      "c2jName" : "UpdateDefaultBranchInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of an update default branch operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateDefaultBranch",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.UpdateDefaultBranch",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to set or change the default branch for.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to set or change the default branch for.</p>\n@param repositoryName The name of the repository to set or change the default branch for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to set or change the default branch for.</p>\n@return The name of the repository to set or change the default branch for.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository to set or change the default branch for.</p>\n@param repositoryName The name of the repository to set or change the default branch for.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to set or change the default branch for.</p>\n@param repositoryName The name of the repository to set or change the default branch for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to set or change the default branch for.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "defaultBranchName",
        "c2jShape" : "BranchName",
        "deprecated" : false,
        "documentation" : "<p>The name of the branch to set as the default.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the branch to set as the default.</p>\n@param defaultBranchName The name of the branch to set as the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDefaultBranchName",
        "getterDocumentation" : "/**<p>The name of the branch to set as the default.</p>\n@return The name of the branch to set as the default.*/",
        "getterMethodName" : "getDefaultBranchName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "defaultBranchName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "defaultBranchName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DefaultBranchName",
        "setterDocumentation" : "/**<p>The name of the branch to set as the default.</p>\n@param defaultBranchName The name of the branch to set as the default.*/",
        "setterMethodName" : "setDefaultBranchName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "defaultBranchName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the branch to set as the default.</p>\n@param defaultBranchName The name of the branch to set as the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "defaultBranchName",
          "variableType" : "String",
          "documentation" : "<p>The name of the branch to set as the default.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DefaultBranchName" : {
          "c2jName" : "defaultBranchName",
          "c2jShape" : "BranchName",
          "deprecated" : false,
          "documentation" : "<p>The name of the branch to set as the default.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the branch to set as the default.</p>\n@param defaultBranchName The name of the branch to set as the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDefaultBranchName",
          "getterDocumentation" : "/**<p>The name of the branch to set as the default.</p>\n@return The name of the branch to set as the default.*/",
          "getterMethodName" : "getDefaultBranchName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "defaultBranchName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "defaultBranchName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DefaultBranchName",
          "setterDocumentation" : "/**<p>The name of the branch to set as the default.</p>\n@param defaultBranchName The name of the branch to set as the default.*/",
          "setterMethodName" : "setDefaultBranchName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "defaultBranchName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the branch to set as the default.</p>\n@param defaultBranchName The name of the branch to set as the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "defaultBranchName",
            "variableType" : "String",
            "documentation" : "<p>The name of the branch to set as the default.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to set or change the default branch for.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to set or change the default branch for.</p>\n@param repositoryName The name of the repository to set or change the default branch for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to set or change the default branch for.</p>\n@return The name of the repository to set or change the default branch for.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository to set or change the default branch for.</p>\n@param repositoryName The name of the repository to set or change the default branch for.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to set or change the default branch for.</p>\n@param repositoryName The name of the repository to set or change the default branch for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to set or change the default branch for.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "defaultBranchName" ],
      "shapeName" : "UpdateDefaultBranchRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "UpdateDefaultBranchRequest",
        "variableName" : "updateDefaultBranchRequest",
        "variableType" : "UpdateDefaultBranchRequest",
        "documentation" : null,
        "simpleType" : "UpdateDefaultBranchRequest",
        "variableSetterType" : "UpdateDefaultBranchRequest"
      },
      "wrapper" : false
    },
    "UpdateDefaultBranchResult" : {
      "c2jName" : "UpdateDefaultBranchResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateDefaultBranchResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "UpdateDefaultBranchResult",
        "variableName" : "updateDefaultBranchResult",
        "variableType" : "UpdateDefaultBranchResult",
        "documentation" : null,
        "simpleType" : "UpdateDefaultBranchResult",
        "variableSetterType" : "UpdateDefaultBranchResult"
      },
      "wrapper" : false
    },
    "UpdatePullRequestDescriptionRequest" : {
      "c2jName" : "UpdatePullRequestDescriptionInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdatePullRequestDescription",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.UpdatePullRequestDescription",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "pullRequestId",
        "c2jShape" : "PullRequestId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestId",
        "getterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@return The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
        "getterMethodName" : "getPullRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestId",
        "setterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
        "setterMethodName" : "setPullRequestId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "description",
        "c2jShape" : "Description",
        "deprecated" : false,
        "documentation" : "<p>The updated content of the description for the pull request. This content will replace the existing description.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The updated content of the description for the pull request. This content will replace the existing description.</p>\n@param description The updated content of the description for the pull request. This content will replace the existing description.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDescription",
        "getterDocumentation" : "/**<p>The updated content of the description for the pull request. This content will replace the existing description.</p>\n@return The updated content of the description for the pull request. This content will replace the existing description.*/",
        "getterMethodName" : "getDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "description",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "description",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Description",
        "setterDocumentation" : "/**<p>The updated content of the description for the pull request. This content will replace the existing description.</p>\n@param description The updated content of the description for the pull request. This content will replace the existing description.*/",
        "setterMethodName" : "setDescription",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The updated content of the description for the pull request. This content will replace the existing description.</p>\n@param description The updated content of the description for the pull request. This content will replace the existing description.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "<p>The updated content of the description for the pull request. This content will replace the existing description.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Description" : {
          "c2jName" : "description",
          "c2jShape" : "Description",
          "deprecated" : false,
          "documentation" : "<p>The updated content of the description for the pull request. This content will replace the existing description.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The updated content of the description for the pull request. This content will replace the existing description.</p>\n@param description The updated content of the description for the pull request. This content will replace the existing description.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDescription",
          "getterDocumentation" : "/**<p>The updated content of the description for the pull request. This content will replace the existing description.</p>\n@return The updated content of the description for the pull request. This content will replace the existing description.*/",
          "getterMethodName" : "getDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "description",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "description",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Description",
          "setterDocumentation" : "/**<p>The updated content of the description for the pull request. This content will replace the existing description.</p>\n@param description The updated content of the description for the pull request. This content will replace the existing description.*/",
          "setterMethodName" : "setDescription",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The updated content of the description for the pull request. This content will replace the existing description.</p>\n@param description The updated content of the description for the pull request. This content will replace the existing description.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "<p>The updated content of the description for the pull request. This content will replace the existing description.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestId" : {
          "c2jName" : "pullRequestId",
          "c2jShape" : "PullRequestId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestId",
          "getterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@return The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
          "getterMethodName" : "getPullRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestId",
          "setterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
          "setterMethodName" : "setPullRequestId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "pullRequestId", "description" ],
      "shapeName" : "UpdatePullRequestDescriptionRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "UpdatePullRequestDescriptionRequest",
        "variableName" : "updatePullRequestDescriptionRequest",
        "variableType" : "UpdatePullRequestDescriptionRequest",
        "documentation" : null,
        "simpleType" : "UpdatePullRequestDescriptionRequest",
        "variableSetterType" : "UpdatePullRequestDescriptionRequest"
      },
      "wrapper" : false
    },
    "UpdatePullRequestDescriptionResult" : {
      "c2jName" : "UpdatePullRequestDescriptionOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "pullRequest",
        "c2jShape" : "PullRequest",
        "deprecated" : false,
        "documentation" : "<p>Information about the updated pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the updated pull request.</p>\n@param pullRequest Information about the updated pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequest",
        "getterDocumentation" : "/**<p>Information about the updated pull request.</p>\n@return Information about the updated pull request.*/",
        "getterMethodName" : "getPullRequest",
        "getterModel" : {
          "returnType" : "PullRequest",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "PullRequest",
        "setterDocumentation" : "/**<p>Information about the updated pull request.</p>\n@param pullRequest Information about the updated pull request.*/",
        "setterMethodName" : "setPullRequest",
        "setterModel" : {
          "variableDeclarationType" : "PullRequest",
          "variableName" : "pullRequest",
          "variableType" : "PullRequest",
          "documentation" : "",
          "simpleType" : "PullRequest",
          "variableSetterType" : "PullRequest"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the updated pull request.</p>\n@param pullRequest Information about the updated pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "PullRequest",
          "variableName" : "pullRequest",
          "variableType" : "PullRequest",
          "documentation" : "<p>Information about the updated pull request.</p>",
          "simpleType" : "PullRequest",
          "variableSetterType" : "PullRequest"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PullRequest" : {
          "c2jName" : "pullRequest",
          "c2jShape" : "PullRequest",
          "deprecated" : false,
          "documentation" : "<p>Information about the updated pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the updated pull request.</p>\n@param pullRequest Information about the updated pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequest",
          "getterDocumentation" : "/**<p>Information about the updated pull request.</p>\n@return Information about the updated pull request.*/",
          "getterMethodName" : "getPullRequest",
          "getterModel" : {
            "returnType" : "PullRequest",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "PullRequest",
          "setterDocumentation" : "/**<p>Information about the updated pull request.</p>\n@param pullRequest Information about the updated pull request.*/",
          "setterMethodName" : "setPullRequest",
          "setterModel" : {
            "variableDeclarationType" : "PullRequest",
            "variableName" : "pullRequest",
            "variableType" : "PullRequest",
            "documentation" : "",
            "simpleType" : "PullRequest",
            "variableSetterType" : "PullRequest"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the updated pull request.</p>\n@param pullRequest Information about the updated pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "PullRequest",
            "variableName" : "pullRequest",
            "variableType" : "PullRequest",
            "documentation" : "<p>Information about the updated pull request.</p>",
            "simpleType" : "PullRequest",
            "variableSetterType" : "PullRequest"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "pullRequest" ],
      "shapeName" : "UpdatePullRequestDescriptionResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "UpdatePullRequestDescriptionResult",
        "variableName" : "updatePullRequestDescriptionResult",
        "variableType" : "UpdatePullRequestDescriptionResult",
        "documentation" : null,
        "simpleType" : "UpdatePullRequestDescriptionResult",
        "variableSetterType" : "UpdatePullRequestDescriptionResult"
      },
      "wrapper" : false
    },
    "UpdatePullRequestStatusRequest" : {
      "c2jName" : "UpdatePullRequestStatusInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdatePullRequestStatus",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.UpdatePullRequestStatus",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "pullRequestId",
        "c2jShape" : "PullRequestId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestId",
        "getterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@return The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
        "getterMethodName" : "getPullRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestId",
        "setterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
        "setterMethodName" : "setPullRequestId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "pullRequestStatus",
        "c2jShape" : "PullRequestStatusEnum",
        "deprecated" : false,
        "documentation" : "<p>The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.</p>",
        "enumType" : "PullRequestStatusEnum",
        "fluentSetterDocumentation" : "/**<p>The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.</p>\n@param pullRequestStatus The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestStatusEnum*/",
        "fluentSetterMethodName" : "withPullRequestStatus",
        "getterDocumentation" : "/**<p>The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.</p>\n@return The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.\n@see PullRequestStatusEnum*/",
        "getterMethodName" : "getPullRequestStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestStatus",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestStatus",
        "setterDocumentation" : "/**<p>The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.</p>\n@param pullRequestStatus The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.\n@see PullRequestStatusEnum*/",
        "setterMethodName" : "setPullRequestStatus",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.</p>\n@param pullRequestStatus The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestStatusEnum*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestStatus",
          "variableType" : "String",
          "documentation" : "<p>The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PullRequestId" : {
          "c2jName" : "pullRequestId",
          "c2jShape" : "PullRequestId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestId",
          "getterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@return The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
          "getterMethodName" : "getPullRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestId",
          "setterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
          "setterMethodName" : "setPullRequestId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PullRequestStatus" : {
          "c2jName" : "pullRequestStatus",
          "c2jShape" : "PullRequestStatusEnum",
          "deprecated" : false,
          "documentation" : "<p>The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.</p>",
          "enumType" : "PullRequestStatusEnum",
          "fluentSetterDocumentation" : "/**<p>The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.</p>\n@param pullRequestStatus The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestStatusEnum*/",
          "fluentSetterMethodName" : "withPullRequestStatus",
          "getterDocumentation" : "/**<p>The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.</p>\n@return The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.\n@see PullRequestStatusEnum*/",
          "getterMethodName" : "getPullRequestStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestStatus",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestStatus",
          "setterDocumentation" : "/**<p>The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.</p>\n@param pullRequestStatus The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.\n@see PullRequestStatusEnum*/",
          "setterMethodName" : "setPullRequestStatus",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.</p>\n@param pullRequestStatus The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see PullRequestStatusEnum*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestStatus",
            "variableType" : "String",
            "documentation" : "<p>The status of the pull request. The only valid operations are to update the status from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code> or from from <code>CLOSED</code> to <code>CLOSED</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "pullRequestId", "pullRequestStatus" ],
      "shapeName" : "UpdatePullRequestStatusRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "UpdatePullRequestStatusRequest",
        "variableName" : "updatePullRequestStatusRequest",
        "variableType" : "UpdatePullRequestStatusRequest",
        "documentation" : null,
        "simpleType" : "UpdatePullRequestStatusRequest",
        "variableSetterType" : "UpdatePullRequestStatusRequest"
      },
      "wrapper" : false
    },
    "UpdatePullRequestStatusResult" : {
      "c2jName" : "UpdatePullRequestStatusOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "pullRequest",
        "c2jShape" : "PullRequest",
        "deprecated" : false,
        "documentation" : "<p>Information about the pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the pull request.</p>\n@param pullRequest Information about the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequest",
        "getterDocumentation" : "/**<p>Information about the pull request.</p>\n@return Information about the pull request.*/",
        "getterMethodName" : "getPullRequest",
        "getterModel" : {
          "returnType" : "PullRequest",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "PullRequest",
        "setterDocumentation" : "/**<p>Information about the pull request.</p>\n@param pullRequest Information about the pull request.*/",
        "setterMethodName" : "setPullRequest",
        "setterModel" : {
          "variableDeclarationType" : "PullRequest",
          "variableName" : "pullRequest",
          "variableType" : "PullRequest",
          "documentation" : "",
          "simpleType" : "PullRequest",
          "variableSetterType" : "PullRequest"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the pull request.</p>\n@param pullRequest Information about the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "PullRequest",
          "variableName" : "pullRequest",
          "variableType" : "PullRequest",
          "documentation" : "<p>Information about the pull request.</p>",
          "simpleType" : "PullRequest",
          "variableSetterType" : "PullRequest"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PullRequest" : {
          "c2jName" : "pullRequest",
          "c2jShape" : "PullRequest",
          "deprecated" : false,
          "documentation" : "<p>Information about the pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the pull request.</p>\n@param pullRequest Information about the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequest",
          "getterDocumentation" : "/**<p>Information about the pull request.</p>\n@return Information about the pull request.*/",
          "getterMethodName" : "getPullRequest",
          "getterModel" : {
            "returnType" : "PullRequest",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "PullRequest",
          "setterDocumentation" : "/**<p>Information about the pull request.</p>\n@param pullRequest Information about the pull request.*/",
          "setterMethodName" : "setPullRequest",
          "setterModel" : {
            "variableDeclarationType" : "PullRequest",
            "variableName" : "pullRequest",
            "variableType" : "PullRequest",
            "documentation" : "",
            "simpleType" : "PullRequest",
            "variableSetterType" : "PullRequest"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the pull request.</p>\n@param pullRequest Information about the pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "PullRequest",
            "variableName" : "pullRequest",
            "variableType" : "PullRequest",
            "documentation" : "<p>Information about the pull request.</p>",
            "simpleType" : "PullRequest",
            "variableSetterType" : "PullRequest"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "pullRequest" ],
      "shapeName" : "UpdatePullRequestStatusResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "UpdatePullRequestStatusResult",
        "variableName" : "updatePullRequestStatusResult",
        "variableType" : "UpdatePullRequestStatusResult",
        "documentation" : null,
        "simpleType" : "UpdatePullRequestStatusResult",
        "variableSetterType" : "UpdatePullRequestStatusResult"
      },
      "wrapper" : false
    },
    "UpdatePullRequestTitleRequest" : {
      "c2jName" : "UpdatePullRequestTitleInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdatePullRequestTitle",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.UpdatePullRequestTitle",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "pullRequestId",
        "c2jShape" : "PullRequestId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequestId",
        "getterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@return The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
        "getterMethodName" : "getPullRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequestId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PullRequestId",
        "setterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
        "setterMethodName" : "setPullRequestId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "pullRequestId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "title",
        "c2jShape" : "Title",
        "deprecated" : false,
        "documentation" : "<p>The updated title of the pull request. This will replace the existing title.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The updated title of the pull request. This will replace the existing title.</p>\n@param title The updated title of the pull request. This will replace the existing title.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTitle",
        "getterDocumentation" : "/**<p>The updated title of the pull request. This will replace the existing title.</p>\n@return The updated title of the pull request. This will replace the existing title.*/",
        "getterMethodName" : "getTitle",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "title",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "title",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Title",
        "setterDocumentation" : "/**<p>The updated title of the pull request. This will replace the existing title.</p>\n@param title The updated title of the pull request. This will replace the existing title.*/",
        "setterMethodName" : "setTitle",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "title",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The updated title of the pull request. This will replace the existing title.</p>\n@param title The updated title of the pull request. This will replace the existing title.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "title",
          "variableType" : "String",
          "documentation" : "<p>The updated title of the pull request. This will replace the existing title.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PullRequestId" : {
          "c2jName" : "pullRequestId",
          "c2jShape" : "PullRequestId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequestId",
          "getterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@return The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
          "getterMethodName" : "getPullRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequestId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PullRequestId",
          "setterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.*/",
          "setterMethodName" : "setPullRequestId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>\n@param pullRequestId The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "pullRequestId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Title" : {
          "c2jName" : "title",
          "c2jShape" : "Title",
          "deprecated" : false,
          "documentation" : "<p>The updated title of the pull request. This will replace the existing title.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The updated title of the pull request. This will replace the existing title.</p>\n@param title The updated title of the pull request. This will replace the existing title.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTitle",
          "getterDocumentation" : "/**<p>The updated title of the pull request. This will replace the existing title.</p>\n@return The updated title of the pull request. This will replace the existing title.*/",
          "getterMethodName" : "getTitle",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "title",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "title",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Title",
          "setterDocumentation" : "/**<p>The updated title of the pull request. This will replace the existing title.</p>\n@param title The updated title of the pull request. This will replace the existing title.*/",
          "setterMethodName" : "setTitle",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "title",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The updated title of the pull request. This will replace the existing title.</p>\n@param title The updated title of the pull request. This will replace the existing title.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "title",
            "variableType" : "String",
            "documentation" : "<p>The updated title of the pull request. This will replace the existing title.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "pullRequestId", "title" ],
      "shapeName" : "UpdatePullRequestTitleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "UpdatePullRequestTitleRequest",
        "variableName" : "updatePullRequestTitleRequest",
        "variableType" : "UpdatePullRequestTitleRequest",
        "documentation" : null,
        "simpleType" : "UpdatePullRequestTitleRequest",
        "variableSetterType" : "UpdatePullRequestTitleRequest"
      },
      "wrapper" : false
    },
    "UpdatePullRequestTitleResult" : {
      "c2jName" : "UpdatePullRequestTitleOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "pullRequest",
        "c2jShape" : "PullRequest",
        "deprecated" : false,
        "documentation" : "<p>Information about the updated pull request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the updated pull request.</p>\n@param pullRequest Information about the updated pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPullRequest",
        "getterDocumentation" : "/**<p>Information about the updated pull request.</p>\n@return Information about the updated pull request.*/",
        "getterMethodName" : "getPullRequest",
        "getterModel" : {
          "returnType" : "PullRequest",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "pullRequest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "pullRequest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "PullRequest",
        "setterDocumentation" : "/**<p>Information about the updated pull request.</p>\n@param pullRequest Information about the updated pull request.*/",
        "setterMethodName" : "setPullRequest",
        "setterModel" : {
          "variableDeclarationType" : "PullRequest",
          "variableName" : "pullRequest",
          "variableType" : "PullRequest",
          "documentation" : "",
          "simpleType" : "PullRequest",
          "variableSetterType" : "PullRequest"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the updated pull request.</p>\n@param pullRequest Information about the updated pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "PullRequest",
          "variableName" : "pullRequest",
          "variableType" : "PullRequest",
          "documentation" : "<p>Information about the updated pull request.</p>",
          "simpleType" : "PullRequest",
          "variableSetterType" : "PullRequest"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PullRequest" : {
          "c2jName" : "pullRequest",
          "c2jShape" : "PullRequest",
          "deprecated" : false,
          "documentation" : "<p>Information about the updated pull request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the updated pull request.</p>\n@param pullRequest Information about the updated pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPullRequest",
          "getterDocumentation" : "/**<p>Information about the updated pull request.</p>\n@return Information about the updated pull request.*/",
          "getterMethodName" : "getPullRequest",
          "getterModel" : {
            "returnType" : "PullRequest",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "pullRequest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "pullRequest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "PullRequest",
          "setterDocumentation" : "/**<p>Information about the updated pull request.</p>\n@param pullRequest Information about the updated pull request.*/",
          "setterMethodName" : "setPullRequest",
          "setterModel" : {
            "variableDeclarationType" : "PullRequest",
            "variableName" : "pullRequest",
            "variableType" : "PullRequest",
            "documentation" : "",
            "simpleType" : "PullRequest",
            "variableSetterType" : "PullRequest"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the updated pull request.</p>\n@param pullRequest Information about the updated pull request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "PullRequest",
            "variableName" : "pullRequest",
            "variableType" : "PullRequest",
            "documentation" : "<p>Information about the updated pull request.</p>",
            "simpleType" : "PullRequest",
            "variableSetterType" : "PullRequest"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "pullRequest" ],
      "shapeName" : "UpdatePullRequestTitleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "UpdatePullRequestTitleResult",
        "variableName" : "updatePullRequestTitleResult",
        "variableType" : "UpdatePullRequestTitleResult",
        "documentation" : null,
        "simpleType" : "UpdatePullRequestTitleResult",
        "variableSetterType" : "UpdatePullRequestTitleResult"
      },
      "wrapper" : false
    },
    "UpdateRepositoryDescriptionRequest" : {
      "c2jName" : "UpdateRepositoryDescriptionInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of an update repository description operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateRepositoryDescription",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.UpdateRepositoryDescription",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to set or change the comment or description for.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to set or change the comment or description for.</p>\n@param repositoryName The name of the repository to set or change the comment or description for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to set or change the comment or description for.</p>\n@return The name of the repository to set or change the comment or description for.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository to set or change the comment or description for.</p>\n@param repositoryName The name of the repository to set or change the comment or description for.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to set or change the comment or description for.</p>\n@param repositoryName The name of the repository to set or change the comment or description for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to set or change the comment or description for.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryDescription",
        "c2jShape" : "RepositoryDescription",
        "deprecated" : false,
        "documentation" : "<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>\n@param repositoryDescription The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryDescription",
        "getterDocumentation" : "/**<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>\n@return The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.*/",
        "getterMethodName" : "getRepositoryDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryDescription",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryDescription",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryDescription",
        "setterDocumentation" : "/**<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>\n@param repositoryDescription The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.*/",
        "setterMethodName" : "setRepositoryDescription",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryDescription",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>\n@param repositoryDescription The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryDescription",
          "variableType" : "String",
          "documentation" : "<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryDescription" : {
          "c2jName" : "repositoryDescription",
          "c2jShape" : "RepositoryDescription",
          "deprecated" : false,
          "documentation" : "<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>\n@param repositoryDescription The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryDescription",
          "getterDocumentation" : "/**<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>\n@return The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.*/",
          "getterMethodName" : "getRepositoryDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryDescription",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryDescription",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryDescription",
          "setterDocumentation" : "/**<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>\n@param repositoryDescription The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.*/",
          "setterMethodName" : "setRepositoryDescription",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryDescription",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>\n@param repositoryDescription The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryDescription",
            "variableType" : "String",
            "documentation" : "<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to set or change the comment or description for.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to set or change the comment or description for.</p>\n@param repositoryName The name of the repository to set or change the comment or description for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to set or change the comment or description for.</p>\n@return The name of the repository to set or change the comment or description for.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository to set or change the comment or description for.</p>\n@param repositoryName The name of the repository to set or change the comment or description for.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to set or change the comment or description for.</p>\n@param repositoryName The name of the repository to set or change the comment or description for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to set or change the comment or description for.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "UpdateRepositoryDescriptionRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "UpdateRepositoryDescriptionRequest",
        "variableName" : "updateRepositoryDescriptionRequest",
        "variableType" : "UpdateRepositoryDescriptionRequest",
        "documentation" : null,
        "simpleType" : "UpdateRepositoryDescriptionRequest",
        "variableSetterType" : "UpdateRepositoryDescriptionRequest"
      },
      "wrapper" : false
    },
    "UpdateRepositoryDescriptionResult" : {
      "c2jName" : "UpdateRepositoryDescriptionResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateRepositoryDescriptionResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "UpdateRepositoryDescriptionResult",
        "variableName" : "updateRepositoryDescriptionResult",
        "variableType" : "UpdateRepositoryDescriptionResult",
        "documentation" : null,
        "simpleType" : "UpdateRepositoryDescriptionResult",
        "variableSetterType" : "UpdateRepositoryDescriptionResult"
      },
      "wrapper" : false
    },
    "UpdateRepositoryNameRequest" : {
      "c2jName" : "UpdateRepositoryNameInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of an update repository description operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateRepositoryName",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.UpdateRepositoryName",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "oldName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The existing name of the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The existing name of the repository.</p>\n@param oldName The existing name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOldName",
        "getterDocumentation" : "/**<p>The existing name of the repository.</p>\n@return The existing name of the repository.*/",
        "getterMethodName" : "getOldName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "oldName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "oldName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OldName",
        "setterDocumentation" : "/**<p>The existing name of the repository.</p>\n@param oldName The existing name of the repository.*/",
        "setterMethodName" : "setOldName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "oldName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The existing name of the repository.</p>\n@param oldName The existing name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "oldName",
          "variableType" : "String",
          "documentation" : "<p>The existing name of the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "newName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The new name for the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The new name for the repository.</p>\n@param newName The new name for the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNewName",
        "getterDocumentation" : "/**<p>The new name for the repository.</p>\n@return The new name for the repository.*/",
        "getterMethodName" : "getNewName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "newName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "newName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NewName",
        "setterDocumentation" : "/**<p>The new name for the repository.</p>\n@param newName The new name for the repository.*/",
        "setterMethodName" : "setNewName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "newName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The new name for the repository.</p>\n@param newName The new name for the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "newName",
          "variableType" : "String",
          "documentation" : "<p>The new name for the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NewName" : {
          "c2jName" : "newName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The new name for the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The new name for the repository.</p>\n@param newName The new name for the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNewName",
          "getterDocumentation" : "/**<p>The new name for the repository.</p>\n@return The new name for the repository.*/",
          "getterMethodName" : "getNewName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "newName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "newName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NewName",
          "setterDocumentation" : "/**<p>The new name for the repository.</p>\n@param newName The new name for the repository.*/",
          "setterMethodName" : "setNewName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "newName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The new name for the repository.</p>\n@param newName The new name for the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "newName",
            "variableType" : "String",
            "documentation" : "<p>The new name for the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "OldName" : {
          "c2jName" : "oldName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The existing name of the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The existing name of the repository.</p>\n@param oldName The existing name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOldName",
          "getterDocumentation" : "/**<p>The existing name of the repository.</p>\n@return The existing name of the repository.*/",
          "getterMethodName" : "getOldName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "oldName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "oldName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OldName",
          "setterDocumentation" : "/**<p>The existing name of the repository.</p>\n@param oldName The existing name of the repository.*/",
          "setterMethodName" : "setOldName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "oldName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The existing name of the repository.</p>\n@param oldName The existing name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "oldName",
            "variableType" : "String",
            "documentation" : "<p>The existing name of the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "oldName", "newName" ],
      "shapeName" : "UpdateRepositoryNameRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "UpdateRepositoryNameRequest",
        "variableName" : "updateRepositoryNameRequest",
        "variableType" : "UpdateRepositoryNameRequest",
        "documentation" : null,
        "simpleType" : "UpdateRepositoryNameRequest",
        "variableSetterType" : "UpdateRepositoryNameRequest"
      },
      "wrapper" : false
    },
    "UpdateRepositoryNameResult" : {
      "c2jName" : "UpdateRepositoryNameResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateRepositoryNameResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "UpdateRepositoryNameResult",
        "variableName" : "updateRepositoryNameResult",
        "variableType" : "UpdateRepositoryNameResult",
        "documentation" : null,
        "simpleType" : "UpdateRepositoryNameResult",
        "variableSetterType" : "UpdateRepositoryNameResult"
      },
      "wrapper" : false
    },
    "UserInfo" : {
      "c2jName" : "UserInfo",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Information about the user who made a specified commit.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>The name of the user who made the specified commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the user who made the specified commit.</p>\n@param name The name of the user who made the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the user who made the specified commit.</p>\n@return The name of the user who made the specified commit.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "setterDocumentation" : "/**<p>The name of the user who made the specified commit.</p>\n@param name The name of the user who made the specified commit.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the user who made the specified commit.</p>\n@param name The name of the user who made the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the user who made the specified commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "email",
        "c2jShape" : "Email",
        "deprecated" : false,
        "documentation" : "<p>The email address associated with the user who made the commit, if any.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The email address associated with the user who made the commit, if any.</p>\n@param email The email address associated with the user who made the commit, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withEmail",
        "getterDocumentation" : "/**<p>The email address associated with the user who made the commit, if any.</p>\n@return The email address associated with the user who made the commit, if any.*/",
        "getterMethodName" : "getEmail",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "email",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "email",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Email",
        "setterDocumentation" : "/**<p>The email address associated with the user who made the commit, if any.</p>\n@param email The email address associated with the user who made the commit, if any.*/",
        "setterMethodName" : "setEmail",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "email",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The email address associated with the user who made the commit, if any.</p>\n@param email The email address associated with the user who made the commit, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "email",
          "variableType" : "String",
          "documentation" : "<p>The email address associated with the user who made the commit, if any.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "date",
        "c2jShape" : "Date",
        "deprecated" : false,
        "documentation" : "<p>The date when the specified commit was commited, in timestamp format with GMT offset.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date when the specified commit was commited, in timestamp format with GMT offset.</p>\n@param date The date when the specified commit was commited, in timestamp format with GMT offset.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDate",
        "getterDocumentation" : "/**<p>The date when the specified commit was commited, in timestamp format with GMT offset.</p>\n@return The date when the specified commit was commited, in timestamp format with GMT offset.*/",
        "getterMethodName" : "getDate",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "date",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "date",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Date",
        "setterDocumentation" : "/**<p>The date when the specified commit was commited, in timestamp format with GMT offset.</p>\n@param date The date when the specified commit was commited, in timestamp format with GMT offset.*/",
        "setterMethodName" : "setDate",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "date",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date when the specified commit was commited, in timestamp format with GMT offset.</p>\n@param date The date when the specified commit was commited, in timestamp format with GMT offset.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "date",
          "variableType" : "String",
          "documentation" : "<p>The date when the specified commit was commited, in timestamp format with GMT offset.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Date" : {
          "c2jName" : "date",
          "c2jShape" : "Date",
          "deprecated" : false,
          "documentation" : "<p>The date when the specified commit was commited, in timestamp format with GMT offset.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date when the specified commit was commited, in timestamp format with GMT offset.</p>\n@param date The date when the specified commit was commited, in timestamp format with GMT offset.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDate",
          "getterDocumentation" : "/**<p>The date when the specified commit was commited, in timestamp format with GMT offset.</p>\n@return The date when the specified commit was commited, in timestamp format with GMT offset.*/",
          "getterMethodName" : "getDate",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "date",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "date",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Date",
          "setterDocumentation" : "/**<p>The date when the specified commit was commited, in timestamp format with GMT offset.</p>\n@param date The date when the specified commit was commited, in timestamp format with GMT offset.*/",
          "setterMethodName" : "setDate",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "date",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date when the specified commit was commited, in timestamp format with GMT offset.</p>\n@param date The date when the specified commit was commited, in timestamp format with GMT offset.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "date",
            "variableType" : "String",
            "documentation" : "<p>The date when the specified commit was commited, in timestamp format with GMT offset.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Email" : {
          "c2jName" : "email",
          "c2jShape" : "Email",
          "deprecated" : false,
          "documentation" : "<p>The email address associated with the user who made the commit, if any.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The email address associated with the user who made the commit, if any.</p>\n@param email The email address associated with the user who made the commit, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withEmail",
          "getterDocumentation" : "/**<p>The email address associated with the user who made the commit, if any.</p>\n@return The email address associated with the user who made the commit, if any.*/",
          "getterMethodName" : "getEmail",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "email",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "email",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Email",
          "setterDocumentation" : "/**<p>The email address associated with the user who made the commit, if any.</p>\n@param email The email address associated with the user who made the commit, if any.*/",
          "setterMethodName" : "setEmail",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "email",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The email address associated with the user who made the commit, if any.</p>\n@param email The email address associated with the user who made the commit, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "email",
            "variableType" : "String",
            "documentation" : "<p>The email address associated with the user who made the commit, if any.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>The name of the user who made the specified commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the user who made the specified commit.</p>\n@param name The name of the user who made the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the user who made the specified commit.</p>\n@return The name of the user who made the specified commit.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "setterDocumentation" : "/**<p>The name of the user who made the specified commit.</p>\n@param name The name of the user who made the specified commit.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the user who made the specified commit.</p>\n@param name The name of the user who made the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the user who made the specified commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UserInfo",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "UserInfo",
        "variableName" : "userInfo",
        "variableType" : "UserInfo",
        "documentation" : null,
        "simpleType" : "UserInfo",
        "variableSetterType" : "UserInfo"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "customAuthorizers" : { },
  "examples" : {
    "examples" : { },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2013-2018 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AWSCodeCommitException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.codecommit.model.AWSCodeCommitException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.codecommit.model.transform"
}