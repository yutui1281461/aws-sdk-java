{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "contentTypeOverride" : null,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : {
      "acceptorClass" : {
        "childTemplates" : null,
        "mainTemplate" : "/templates/waiter/Acceptor.ftl"
      },
      "apiGatewayGradleBuildTemplate" : {
        "childTemplates" : null,
        "mainTemplate" : "/templates/api-gateway/gradle/build.gradle.ftl"
      },
      "apiGatewayGradleSettingsTemplate" : {
        "childTemplates" : null,
        "mainTemplate" : "/templates/api-gateway/gradle/settings.gradle.ftl"
      },
      "apiGatewayPomTemplate" : {
        "childTemplates" : null,
        "mainTemplate" : "/templates/api-gateway/maven/pom.xml.ftl"
      },
      "apiGatewayReadmeTemplate" : {
        "childTemplates" : [ {
          "importAsNamespace" : "README_Dependencies",
          "location" : "/templates/api-gateway/README_Dependencies.ftl"
        } ],
        "mainTemplate" : "/templates/api-gateway/README.md.ftl"
      },
      "asyncAbstractClass" : null,
      "asyncClient" : null,
      "asyncClientBuilder" : {
        "childTemplates" : [ {
          "importAsNamespace" : "AdditionalBuilderMethods",
          "location" : "/macros/builder/AdditionalBuilderMethods.ftl"
        } ],
        "mainTemplate" : null
      },
      "asyncInterface" : null,
      "baseExceptionClass" : null,
      "commonChildTemplates" : null,
      "cucumberModuleInjector" : {
        "childTemplates" : null,
        "mainTemplate" : "/templates/cucumber/ModuleInjector.ftl"
      },
      "cucumberPropertiesFile" : {
        "childTemplates" : null,
        "mainTemplate" : "/templates/cucumber/cucumberProperties.ftl"
      },
      "cucumberTest" : {
        "childTemplates" : null,
        "mainTemplate" : "/templates/cucumber/RunCucumberTest.ftl"
      },
      "customRequestSignerClass" : null,
      "endpointDiscoveryCache" : {
        "childTemplates" : null,
        "mainTemplate" : "/templates/endpoint-discovery/Cache.ftl"
      },
      "endpointDiscoveryCacheLoader" : {
        "childTemplates" : null,
        "mainTemplate" : "/templates/endpoint-discovery/CacheLoader.ftl"
      },
      "exceptionClass" : null,
      "exceptionUnmarshaller" : null,
      "modelClass" : null,
      "modelEnum" : null,
      "modelMarshaller" : null,
      "modelUnmarshaller" : null,
      "packageInfo" : null,
      "policyActionClass" : null,
      "requestClass" : null,
      "requestMarshaller" : null,
      "responseClass" : null,
      "sdkFunctionClass" : {
        "childTemplates" : null,
        "mainTemplate" : "/templates/waiter/SdkFunction.ftl"
      },
      "syncAbstractClass" : null,
      "syncClient" : null,
      "syncClientBuilder" : {
        "childTemplates" : [ {
          "importAsNamespace" : "AdditionalBuilderMethods",
          "location" : "/macros/builder/AdditionalBuilderMethods.ftl"
        } ],
        "mainTemplate" : null
      },
      "syncInterface" : null,
      "waiterClass" : {
        "childTemplates" : null,
        "mainTemplate" : "/templates/waiter/Waiter.ftl"
      }
    },
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseHandlerFqcn" : "com.amazonaws.services.s3control.internal.S3ControlStaxResponseHandler",
    "customResponseMetadataClassName" : "com.amazonaws.services.s3control.S3ControlResponseMetadata",
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "ClientConstructors", "ClientMutationMethods", "EnumSetterOverload" ],
    "emitLegacyEnumSetterFor" : null,
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "sdkModeledExceptionBaseClassName" : "AWSS3ControlException",
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipClientMethodForOperations" : [ ],
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : true,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false,
    "useUidAsFilePrefix" : false
  },
  "metadata" : {
    "apiVersion" : "2018-08-20",
    "asyncClient" : "AWSS3ControlAsyncClient",
    "asyncClientBuilderClassName" : "AWSS3ControlAsyncClientBuilder",
    "asyncInterface" : "AWSS3ControlAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : null,
    "cucumberModuleInjectorClassName" : "AWSS3ControlModuleInjector",
    "defaultEndpoint" : "s3-control.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "s3-control.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<p> AWS S3 Control provides access to Amazon S3 control plane operations. </p>",
    "endpointPrefix" : "s3-control",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : false,
    "jsonVersion" : null,
    "packageName" : "com.amazonaws.services.s3control",
    "packagePath" : "com/amazonaws/services/s3control",
    "protocol" : "rest-xml",
    "protocolDefaultExceptionUmarshallerImpl" : "StandardErrorUnmarshaller",
    "protocolFactory" : null,
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : null,
    "serviceFullName" : "AWS S3 Control",
    "serviceId" : "S3 Control",
    "serviceName" : "AWS S3 Control",
    "signingName" : "s3",
    "smokeTestsPackageName" : "com.amazonaws.services.s3control.smoketests",
    "syncClient" : "AWSS3ControlClient",
    "syncClientBuilderClassName" : "AWSS3ControlClientBuilder",
    "syncInterface" : "AWSS3Control",
    "uid" : "s3control-2018-08-20",
    "unmarshallerClassSuffix" : "StaxUnmarshaller",
    "unmarshallerContextClassName" : "StaxUnmarshallerContext",
    "xmlProtocol" : true
  },
  "operations" : {
    "DeletePublicAccessBlock" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeletePublicAccessBlockResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeletePublicAccessBlockResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeletePublicAccessBlockRequest, DeletePublicAccessBlockResult>",
      "asyncReturnType" : "DeletePublicAccessBlockResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Removes the Public Access Block configuration for an Amazon Web Services account.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : null,
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeletePublicAccessBlockRequest",
        "variableName" : "deletePublicAccessBlockRequest",
        "variableType" : "DeletePublicAccessBlockRequest",
        "documentation" : "",
        "simpleType" : "DeletePublicAccessBlockRequest",
        "variableSetterType" : "DeletePublicAccessBlockRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deletePublicAccessBlock",
      "operationName" : "DeletePublicAccessBlock",
      "returnType" : {
        "returnType" : "DeletePublicAccessBlockResult",
        "documentation" : null
      },
      "syncReturnType" : "DeletePublicAccessBlockResult"
    },
    "GetPublicAccessBlock" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetPublicAccessBlockResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetPublicAccessBlockResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetPublicAccessBlockRequest, GetPublicAccessBlockResult>",
      "asyncReturnType" : "GetPublicAccessBlockResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Retrieves the Public Access Block configuration for an Amazon Web Services account.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "NoSuchPublicAccessBlockConfigurationException",
        "documentation" : "<p>This exception is thrown if a <code>GetPublicAccessBlock</code> request is made against an account that does not have a PublicAccessBlockConfiguration set.</p>",
        "httpStatusCode" : 404
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetPublicAccessBlockRequest",
        "variableName" : "getPublicAccessBlockRequest",
        "variableType" : "GetPublicAccessBlockRequest",
        "documentation" : "",
        "simpleType" : "GetPublicAccessBlockRequest",
        "variableSetterType" : "GetPublicAccessBlockRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getPublicAccessBlock",
      "operationName" : "GetPublicAccessBlock",
      "returnType" : {
        "returnType" : "GetPublicAccessBlockResult",
        "documentation" : null
      },
      "syncReturnType" : "GetPublicAccessBlockResult"
    },
    "PutPublicAccessBlock" : {
      "asyncCallableType" : "java.util.concurrent.Callable<PutPublicAccessBlockResult>",
      "asyncFutureType" : "java.util.concurrent.Future<PutPublicAccessBlockResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutPublicAccessBlockRequest, PutPublicAccessBlockResult>",
      "asyncReturnType" : "PutPublicAccessBlockResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates or modifies the Public Access Block configuration for an Amazon Web Services account.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : null,
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutPublicAccessBlockRequest",
        "variableName" : "putPublicAccessBlockRequest",
        "variableType" : "PutPublicAccessBlockRequest",
        "documentation" : "",
        "simpleType" : "PutPublicAccessBlockRequest",
        "variableSetterType" : "PutPublicAccessBlockRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "putPublicAccessBlock",
      "operationName" : "PutPublicAccessBlock",
      "returnType" : {
        "returnType" : "PutPublicAccessBlockResult",
        "documentation" : null
      },
      "syncReturnType" : "PutPublicAccessBlockResult"
    }
  },
  "shapes" : {
    "DeletePublicAccessBlockRequest" : {
      "c2jName" : "DeletePublicAccessBlockRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : true,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeletePublicAccessBlock",
        "locationName" : null,
        "requestUri" : "/v20180820/configuration/publicAccessBlock",
        "target" : null,
        "verb" : "DELETE",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "AccountId",
        "c2jShape" : "AccountId",
        "deprecated" : false,
        "documentation" : "<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAccountId",
        "getterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.</p>\n@return The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.*/",
        "getterMethodName" : "getAccountId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-account-id",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-account-id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AccountId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.*/",
        "setterMethodName" : "setAccountId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "accountId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "accountId",
          "variableType" : "String",
          "documentation" : "<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AccountId" : {
          "c2jName" : "AccountId",
          "c2jShape" : "AccountId",
          "deprecated" : false,
          "documentation" : "<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAccountId",
          "getterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.</p>\n@return The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.*/",
          "getterMethodName" : "getAccountId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-account-id",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-account-id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AccountId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.*/",
          "setterMethodName" : "setAccountId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "accountId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "accountId",
            "variableType" : "String",
            "documentation" : "<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to remove.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "AccountId" ],
      "shapeName" : "DeletePublicAccessBlockRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeletePublicAccessBlockRequest",
        "variableName" : "deletePublicAccessBlockRequest",
        "variableType" : "DeletePublicAccessBlockRequest",
        "documentation" : null,
        "simpleType" : "DeletePublicAccessBlockRequest",
        "variableSetterType" : "DeletePublicAccessBlockRequest"
      },
      "wrapper" : false
    },
    "DeletePublicAccessBlockResult" : {
      "c2jName" : "DeletePublicAccessBlockResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeletePublicAccessBlockResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeletePublicAccessBlockResult",
        "variableName" : "deletePublicAccessBlockResult",
        "variableType" : "DeletePublicAccessBlockResult",
        "documentation" : null,
        "simpleType" : "DeletePublicAccessBlockResult",
        "variableSetterType" : "DeletePublicAccessBlockResult"
      },
      "wrapper" : false
    },
    "GetPublicAccessBlockRequest" : {
      "c2jName" : "GetPublicAccessBlockRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : true,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetPublicAccessBlock",
        "locationName" : null,
        "requestUri" : "/v20180820/configuration/publicAccessBlock",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "AccountId",
        "c2jShape" : "AccountId",
        "deprecated" : false,
        "documentation" : "<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAccountId",
        "getterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.</p>\n@return The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.*/",
        "getterMethodName" : "getAccountId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-account-id",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-account-id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AccountId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.*/",
        "setterMethodName" : "setAccountId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "accountId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "accountId",
          "variableType" : "String",
          "documentation" : "<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AccountId" : {
          "c2jName" : "AccountId",
          "c2jShape" : "AccountId",
          "deprecated" : false,
          "documentation" : "<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAccountId",
          "getterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.</p>\n@return The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.*/",
          "getterMethodName" : "getAccountId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-account-id",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-account-id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AccountId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.*/",
          "setterMethodName" : "setAccountId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "accountId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "accountId",
            "variableType" : "String",
            "documentation" : "<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to retrieve.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "AccountId" ],
      "shapeName" : "GetPublicAccessBlockRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetPublicAccessBlockRequest",
        "variableName" : "getPublicAccessBlockRequest",
        "variableType" : "GetPublicAccessBlockRequest",
        "documentation" : null,
        "simpleType" : "GetPublicAccessBlockRequest",
        "variableSetterType" : "GetPublicAccessBlockRequest"
      },
      "wrapper" : false
    },
    "GetPublicAccessBlockResult" : {
      "c2jName" : "GetPublicAccessBlockOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : true,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "PublicAccessBlockConfiguration",
        "c2jShape" : "PublicAccessBlockConfiguration",
        "deprecated" : false,
        "documentation" : "<p>The Public Access Block configuration currently in effect for this Amazon Web Services account.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Public Access Block configuration currently in effect for this Amazon Web Services account.</p>\n@param publicAccessBlockConfiguration The Public Access Block configuration currently in effect for this Amazon Web Services account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPublicAccessBlockConfiguration",
        "getterDocumentation" : "/**<p>The Public Access Block configuration currently in effect for this Amazon Web Services account.</p>\n@return The Public Access Block configuration currently in effect for this Amazon Web Services account.*/",
        "getterMethodName" : "getPublicAccessBlockConfiguration",
        "getterModel" : {
          "returnType" : "PublicAccessBlockConfiguration",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : true,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "PublicAccessBlockConfiguration",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "PublicAccessBlockConfiguration",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "PublicAccessBlockConfiguration",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Public Access Block configuration currently in effect for this Amazon Web Services account.</p>\n@param publicAccessBlockConfiguration The Public Access Block configuration currently in effect for this Amazon Web Services account.*/",
        "setterMethodName" : "setPublicAccessBlockConfiguration",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "PublicAccessBlockConfiguration",
          "variableName" : "publicAccessBlockConfiguration",
          "variableType" : "PublicAccessBlockConfiguration",
          "documentation" : "",
          "simpleType" : "PublicAccessBlockConfiguration",
          "variableSetterType" : "PublicAccessBlockConfiguration"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Public Access Block configuration currently in effect for this Amazon Web Services account.</p>\n@param publicAccessBlockConfiguration The Public Access Block configuration currently in effect for this Amazon Web Services account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "PublicAccessBlockConfiguration",
          "variableName" : "publicAccessBlockConfiguration",
          "variableType" : "PublicAccessBlockConfiguration",
          "documentation" : "<p>The Public Access Block configuration currently in effect for this Amazon Web Services account.</p>",
          "simpleType" : "PublicAccessBlockConfiguration",
          "variableSetterType" : "PublicAccessBlockConfiguration"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PublicAccessBlockConfiguration" : {
          "c2jName" : "PublicAccessBlockConfiguration",
          "c2jShape" : "PublicAccessBlockConfiguration",
          "deprecated" : false,
          "documentation" : "<p>The Public Access Block configuration currently in effect for this Amazon Web Services account.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Public Access Block configuration currently in effect for this Amazon Web Services account.</p>\n@param publicAccessBlockConfiguration The Public Access Block configuration currently in effect for this Amazon Web Services account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPublicAccessBlockConfiguration",
          "getterDocumentation" : "/**<p>The Public Access Block configuration currently in effect for this Amazon Web Services account.</p>\n@return The Public Access Block configuration currently in effect for this Amazon Web Services account.*/",
          "getterMethodName" : "getPublicAccessBlockConfiguration",
          "getterModel" : {
            "returnType" : "PublicAccessBlockConfiguration",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : true,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "PublicAccessBlockConfiguration",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "PublicAccessBlockConfiguration",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "PublicAccessBlockConfiguration",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Public Access Block configuration currently in effect for this Amazon Web Services account.</p>\n@param publicAccessBlockConfiguration The Public Access Block configuration currently in effect for this Amazon Web Services account.*/",
          "setterMethodName" : "setPublicAccessBlockConfiguration",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "PublicAccessBlockConfiguration",
            "variableName" : "publicAccessBlockConfiguration",
            "variableType" : "PublicAccessBlockConfiguration",
            "documentation" : "",
            "simpleType" : "PublicAccessBlockConfiguration",
            "variableSetterType" : "PublicAccessBlockConfiguration"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Public Access Block configuration currently in effect for this Amazon Web Services account.</p>\n@param publicAccessBlockConfiguration The Public Access Block configuration currently in effect for this Amazon Web Services account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "PublicAccessBlockConfiguration",
            "variableName" : "publicAccessBlockConfiguration",
            "variableType" : "PublicAccessBlockConfiguration",
            "documentation" : "<p>The Public Access Block configuration currently in effect for this Amazon Web Services account.</p>",
            "simpleType" : "PublicAccessBlockConfiguration",
            "variableSetterType" : "PublicAccessBlockConfiguration"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetPublicAccessBlockResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetPublicAccessBlockResult",
        "variableName" : "getPublicAccessBlockResult",
        "variableType" : "GetPublicAccessBlockResult",
        "documentation" : null,
        "simpleType" : "GetPublicAccessBlockResult",
        "variableSetterType" : "GetPublicAccessBlockResult"
      },
      "wrapper" : false
    },
    "NoSuchPublicAccessBlockConfigurationException" : {
      "c2jName" : "NoSuchPublicAccessBlockConfiguration",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>This exception is thrown if a <code>GetPublicAccessBlock</code> request is made against an account that does not have a PublicAccessBlockConfiguration set.</p>",
      "enums" : null,
      "errorCode" : "NoSuchPublicAccessBlockConfiguration",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "NoSuchPublicAccessBlockConfigurationException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "NoSuchPublicAccessBlockConfigurationException",
        "variableName" : "noSuchPublicAccessBlockConfigurationException",
        "variableType" : "NoSuchPublicAccessBlockConfigurationException",
        "documentation" : null,
        "simpleType" : "NoSuchPublicAccessBlockConfigurationException",
        "variableSetterType" : "NoSuchPublicAccessBlockConfigurationException"
      },
      "wrapper" : false
    },
    "PublicAccessBlockConfiguration" : {
      "c2jName" : "PublicAccessBlockConfiguration",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The container element for all Public Access Block configuration options. You can enable the configuration options in any combination.</p> <p>Amazon S3 considers a bucket policy public unless at least one of the following conditions is true:</p> <ol> <li> <p>The policy limits access to a set of CIDRs using <code>aws:SourceIp</code>. For more information on CIDR, see <a href=\"http://www.rfc-editor.org/rfc/rfc4632.txt\">http://www.rfc-editor.org/rfc/rfc4632.txt</a> </p> </li> <li> <p>The policy grants permissions, not including any \"bad actions,\" to one of the following:</p> <ul> <li> <p>A fixed AWS principal, user, role, or service principal</p> </li> <li> <p>A fixed <code>aws:SourceArn</code> </p> </li> <li> <p>A fixed <code>aws:SourceVpc</code> </p> </li> <li> <p>A fixed <code>aws:SourceVpce</code> </p> </li> <li> <p>A fixed <code>aws:SourceOwner</code> </p> </li> <li> <p>A fixed <code>aws:SourceAccount</code> </p> </li> <li> <p>A fixed value of <code>s3:x-amz-server-side-encryption-aws-kms-key-id</code> </p> </li> <li> <p>A fixed value of <code>aws:userid</code> outside the pattern \"<code>AROLEID:*</code>\"</p> </li> </ul> </li> </ol> <p>\"Bad actions\" are those that could expose the data inside a bucket to reads or writes by the public. These actions are <code>s3:Get*</code>, <code>s3:List*</code>, <code>s3:AbortMultipartUpload</code>, <code>s3:Delete*</code>, <code>s3:Put*</code>, and <code>s3:RestoreObject</code>.</p> <p>The star notation for bad actions indicates that all matching operations are considered bad actions. For example, because <code>s3:Get*</code> is a bad action, <code>s3:GetObject</code>, <code>s3:GetObjectVersion</code>, and <code>s3:GetObjectAcl</code> are all bad actions.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "BlockPublicAcls",
        "c2jShape" : "Setting",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.</p>\n@param blockPublicAcls Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBlockPublicAcls",
        "getterDocumentation" : "/**<p>Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.</p>\n@return Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.*/",
        "getterMethodName" : "getBlockPublicAcls",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "BlockPublicAcls",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "BlockPublicAcls",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "BlockPublicAcls",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.</p>\n@param blockPublicAcls Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.*/",
        "setterMethodName" : "setBlockPublicAcls",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "blockPublicAcls",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.</p>\n@param blockPublicAcls Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "blockPublicAcls",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "IgnorePublicAcls",
        "c2jShape" : "Setting",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>\n@param ignorePublicAcls Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIgnorePublicAcls",
        "getterDocumentation" : "/**<p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>\n@return Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.*/",
        "getterMethodName" : "getIgnorePublicAcls",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IgnorePublicAcls",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IgnorePublicAcls",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "IgnorePublicAcls",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>\n@param ignorePublicAcls Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.*/",
        "setterMethodName" : "setIgnorePublicAcls",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "ignorePublicAcls",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>\n@param ignorePublicAcls Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "ignorePublicAcls",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "BlockPublicPolicy",
        "c2jShape" : "Setting",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.</p>\n@param blockPublicPolicy Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBlockPublicPolicy",
        "getterDocumentation" : "/**<p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.</p>\n@return Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.*/",
        "getterMethodName" : "getBlockPublicPolicy",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "BlockPublicPolicy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "BlockPublicPolicy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "BlockPublicPolicy",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.</p>\n@param blockPublicPolicy Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.*/",
        "setterMethodName" : "setBlockPublicPolicy",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "blockPublicPolicy",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.</p>\n@param blockPublicPolicy Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "blockPublicPolicy",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "RestrictPublicBuckets",
        "c2jShape" : "Setting",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. </p>\n@param restrictPublicBuckets Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRestrictPublicBuckets",
        "getterDocumentation" : "/**<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. </p>\n@return Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.*/",
        "getterMethodName" : "getRestrictPublicBuckets",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "RestrictPublicBuckets",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "RestrictPublicBuckets",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "RestrictPublicBuckets",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. </p>\n@param restrictPublicBuckets Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.*/",
        "setterMethodName" : "setRestrictPublicBuckets",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "restrictPublicBuckets",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. </p>\n@param restrictPublicBuckets Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "restrictPublicBuckets",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. </p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BlockPublicAcls" : {
          "c2jName" : "BlockPublicAcls",
          "c2jShape" : "Setting",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.</p>\n@param blockPublicAcls Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBlockPublicAcls",
          "getterDocumentation" : "/**<p>Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.</p>\n@return Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.*/",
          "getterMethodName" : "getBlockPublicAcls",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "BlockPublicAcls",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "BlockPublicAcls",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "BlockPublicAcls",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.</p>\n@param blockPublicAcls Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.*/",
          "setterMethodName" : "setBlockPublicAcls",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "blockPublicAcls",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.</p>\n@param blockPublicAcls Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "blockPublicAcls",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn't affect existing policies or ACLs.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "BlockPublicPolicy" : {
          "c2jName" : "BlockPublicPolicy",
          "c2jShape" : "Setting",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.</p>\n@param blockPublicPolicy Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBlockPublicPolicy",
          "getterDocumentation" : "/**<p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.</p>\n@return Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.*/",
          "getterMethodName" : "getBlockPublicPolicy",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "BlockPublicPolicy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "BlockPublicPolicy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "BlockPublicPolicy",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.</p>\n@param blockPublicPolicy Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.*/",
          "setterMethodName" : "setBlockPublicPolicy",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "blockPublicPolicy",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.</p>\n@param blockPublicPolicy Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "blockPublicPolicy",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "IgnorePublicAcls" : {
          "c2jName" : "IgnorePublicAcls",
          "c2jShape" : "Setting",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>\n@param ignorePublicAcls Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIgnorePublicAcls",
          "getterDocumentation" : "/**<p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>\n@return Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.*/",
          "getterMethodName" : "getIgnorePublicAcls",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IgnorePublicAcls",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IgnorePublicAcls",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "IgnorePublicAcls",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>\n@param ignorePublicAcls Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.*/",
          "setterMethodName" : "setIgnorePublicAcls",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "ignorePublicAcls",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>\n@param ignorePublicAcls Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "ignorePublicAcls",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "RestrictPublicBuckets" : {
          "c2jName" : "RestrictPublicBuckets",
          "c2jShape" : "Setting",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. </p>\n@param restrictPublicBuckets Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRestrictPublicBuckets",
          "getterDocumentation" : "/**<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. </p>\n@return Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.*/",
          "getterMethodName" : "getRestrictPublicBuckets",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "RestrictPublicBuckets",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "RestrictPublicBuckets",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "RestrictPublicBuckets",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. </p>\n@param restrictPublicBuckets Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.*/",
          "setterMethodName" : "setRestrictPublicBuckets",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "restrictPublicBuckets",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. </p>\n@param restrictPublicBuckets Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "restrictPublicBuckets",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. </p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PublicAccessBlockConfiguration",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PublicAccessBlockConfiguration",
        "variableName" : "publicAccessBlockConfiguration",
        "variableType" : "PublicAccessBlockConfiguration",
        "documentation" : null,
        "simpleType" : "PublicAccessBlockConfiguration",
        "variableSetterType" : "PublicAccessBlockConfiguration"
      },
      "wrapper" : false
    },
    "PutPublicAccessBlockRequest" : {
      "c2jName" : "PutPublicAccessBlockRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : true,
      "hasPayloadMember" : true,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "PutPublicAccessBlock",
        "locationName" : null,
        "requestUri" : "/v20180820/configuration/publicAccessBlock",
        "target" : null,
        "verb" : "PUT",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "PublicAccessBlockConfiguration",
        "c2jShape" : "PublicAccessBlockConfiguration",
        "deprecated" : false,
        "documentation" : "<p>The Public Access Block configuration that you want to apply to this Amazon Web Services account.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Public Access Block configuration that you want to apply to this Amazon Web Services account.</p>\n@param publicAccessBlockConfiguration The Public Access Block configuration that you want to apply to this Amazon Web Services account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPublicAccessBlockConfiguration",
        "getterDocumentation" : "/**<p>The Public Access Block configuration that you want to apply to this Amazon Web Services account.</p>\n@return The Public Access Block configuration that you want to apply to this Amazon Web Services account.*/",
        "getterMethodName" : "getPublicAccessBlockConfiguration",
        "getterModel" : {
          "returnType" : "PublicAccessBlockConfiguration",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : true,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "PublicAccessBlockConfiguration",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "PublicAccessBlockConfiguration",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "PublicAccessBlockConfiguration",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Public Access Block configuration that you want to apply to this Amazon Web Services account.</p>\n@param publicAccessBlockConfiguration The Public Access Block configuration that you want to apply to this Amazon Web Services account.*/",
        "setterMethodName" : "setPublicAccessBlockConfiguration",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "PublicAccessBlockConfiguration",
          "variableName" : "publicAccessBlockConfiguration",
          "variableType" : "PublicAccessBlockConfiguration",
          "documentation" : "",
          "simpleType" : "PublicAccessBlockConfiguration",
          "variableSetterType" : "PublicAccessBlockConfiguration"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Public Access Block configuration that you want to apply to this Amazon Web Services account.</p>\n@param publicAccessBlockConfiguration The Public Access Block configuration that you want to apply to this Amazon Web Services account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "PublicAccessBlockConfiguration",
          "variableName" : "publicAccessBlockConfiguration",
          "variableType" : "PublicAccessBlockConfiguration",
          "documentation" : "<p>The Public Access Block configuration that you want to apply to this Amazon Web Services account.</p>",
          "simpleType" : "PublicAccessBlockConfiguration",
          "variableSetterType" : "PublicAccessBlockConfiguration"
        },
        "xmlNameSpaceUri" : "http://awss3control.amazonaws.com/doc/2018-08-20/"
      }, {
        "c2jName" : "AccountId",
        "c2jShape" : "AccountId",
        "deprecated" : false,
        "documentation" : "<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAccountId",
        "getterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.</p>\n@return The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.*/",
        "getterMethodName" : "getAccountId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-account-id",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-account-id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AccountId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.*/",
        "setterMethodName" : "setAccountId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "accountId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "accountId",
          "variableType" : "String",
          "documentation" : "<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AccountId" : {
          "c2jName" : "AccountId",
          "c2jShape" : "AccountId",
          "deprecated" : false,
          "documentation" : "<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAccountId",
          "getterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.</p>\n@return The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.*/",
          "getterMethodName" : "getAccountId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-account-id",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-account-id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AccountId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.*/",
          "setterMethodName" : "setAccountId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "accountId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.</p>\n@param accountId The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "accountId",
            "variableType" : "String",
            "documentation" : "<p>The Account ID for the Amazon Web Services account whose Public Access Block configuration you want to set.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PublicAccessBlockConfiguration" : {
          "c2jName" : "PublicAccessBlockConfiguration",
          "c2jShape" : "PublicAccessBlockConfiguration",
          "deprecated" : false,
          "documentation" : "<p>The Public Access Block configuration that you want to apply to this Amazon Web Services account.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Public Access Block configuration that you want to apply to this Amazon Web Services account.</p>\n@param publicAccessBlockConfiguration The Public Access Block configuration that you want to apply to this Amazon Web Services account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPublicAccessBlockConfiguration",
          "getterDocumentation" : "/**<p>The Public Access Block configuration that you want to apply to this Amazon Web Services account.</p>\n@return The Public Access Block configuration that you want to apply to this Amazon Web Services account.*/",
          "getterMethodName" : "getPublicAccessBlockConfiguration",
          "getterModel" : {
            "returnType" : "PublicAccessBlockConfiguration",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : true,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "PublicAccessBlockConfiguration",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "PublicAccessBlockConfiguration",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "PublicAccessBlockConfiguration",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Public Access Block configuration that you want to apply to this Amazon Web Services account.</p>\n@param publicAccessBlockConfiguration The Public Access Block configuration that you want to apply to this Amazon Web Services account.*/",
          "setterMethodName" : "setPublicAccessBlockConfiguration",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "PublicAccessBlockConfiguration",
            "variableName" : "publicAccessBlockConfiguration",
            "variableType" : "PublicAccessBlockConfiguration",
            "documentation" : "",
            "simpleType" : "PublicAccessBlockConfiguration",
            "variableSetterType" : "PublicAccessBlockConfiguration"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Public Access Block configuration that you want to apply to this Amazon Web Services account.</p>\n@param publicAccessBlockConfiguration The Public Access Block configuration that you want to apply to this Amazon Web Services account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "PublicAccessBlockConfiguration",
            "variableName" : "publicAccessBlockConfiguration",
            "variableType" : "PublicAccessBlockConfiguration",
            "documentation" : "<p>The Public Access Block configuration that you want to apply to this Amazon Web Services account.</p>",
            "simpleType" : "PublicAccessBlockConfiguration",
            "variableSetterType" : "PublicAccessBlockConfiguration"
          },
          "xmlNameSpaceUri" : "http://awss3control.amazonaws.com/doc/2018-08-20/"
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "PublicAccessBlockConfiguration", "AccountId" ],
      "shapeName" : "PutPublicAccessBlockRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutPublicAccessBlockRequest",
        "variableName" : "putPublicAccessBlockRequest",
        "variableType" : "PutPublicAccessBlockRequest",
        "documentation" : null,
        "simpleType" : "PutPublicAccessBlockRequest",
        "variableSetterType" : "PutPublicAccessBlockRequest"
      },
      "wrapper" : false
    },
    "PutPublicAccessBlockResult" : {
      "c2jName" : "PutPublicAccessBlockResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PutPublicAccessBlockResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutPublicAccessBlockResult",
        "variableName" : "putPublicAccessBlockResult",
        "variableType" : "PutPublicAccessBlockResult",
        "documentation" : null,
        "simpleType" : "PutPublicAccessBlockResult",
        "variableSetterType" : "PutPublicAccessBlockResult"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "examples" : {
    "examples" : { },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : "StandardErrorUnmarshaller",
  "fileHeader" : "/*\n * Copyright 2014-2019 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.services.s3control.S3ControlResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AWSS3ControlException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.s3control.model.AWSS3ControlException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.s3control.model.transform"
}