{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "contentTypeOverride" : null,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseHandlerFqcn" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "ClientMutationMethods", "ClientConstructors", "EnumSetterOverload" ],
    "emitLegacyEnumSetterFor" : null,
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipClientMethodForOperations" : [ ],
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : true,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false,
    "useUidAsFilePrefix" : false
  },
  "metadata" : {
    "apiVersion" : "2018-04-01",
    "asyncClient" : "AmazonRoute53ResolverAsyncClient",
    "asyncClientBuilderClassName" : "AmazonRoute53ResolverAsyncClientBuilder",
    "asyncInterface" : "AmazonRoute53ResolverAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : null,
    "cucumberModuleInjectorClassName" : "AmazonRoute53ResolverModuleInjector",
    "defaultEndpoint" : "route53resolver.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "route53resolver.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<p>Here's how you set up to query an Amazon Route 53 private hosted zone from your network:</p> <ol> <li> <p>Connect your network to a VPC using AWS Direct Connect or a VPN.</p> </li> <li> <p>Run the following AWS CLI command to create a Resolver endpoint:</p> <p> <code>create-resolver-endpoint --name [endpoint_name] --direction INBOUND --creator-request-id [unique_string] --security-group-ids [security_group_with_inbound_rules] --ip-addresses SubnetId=[subnet_id] SubnetId=[subnet_id_in_different_AZ]</code> </p> <p>Note the resolver endpoint ID that appears in the response. You'll use it in step 3.</p> </li> <li> <p>Get the IP addresses for the Resolver endpoints:</p> <p> <code>get-resolver-endpoint --resolver-endpoint-id [resolver_endpoint_id]</code> </p> </li> <li> <p>In your network configuration, define the IP addresses that you got in step 3 as DNS servers.</p> <p>You can now query instance names in your VPCs and the names of records in your private hosted zone.</p> </li> </ol> <p>You can also perform the following operations using the AWS CLI:</p> <ul> <li> <p> <code>list-resolver-endpoints</code>: List all endpoints. The syntax includes options for pagination and filtering.</p> </li> <li> <p> <code>update-resolver-endpoints</code>: Add IP addresses to an endpoint or remove IP addresses from an endpoint. </p> </li> </ul> <p>To delete an endpoint, use the following AWS CLI command:</p> <p> <code>delete-resolver-endpoint --resolver-endpoint-id [resolver_endpoint_id]</code> </p>",
    "endpointPrefix" : "route53resolver",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.route53resolver",
    "packagePath" : "com/amazonaws/services/route53resolver",
    "protocol" : "json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : "Route53Resolver",
    "serviceFullName" : "Amazon Route 53 Resolver",
    "serviceId" : "Route53Resolver",
    "serviceName" : "Route53Resolver",
    "signingName" : "route53resolver",
    "smokeTestsPackageName" : "com.amazonaws.services.route53resolver.smoketests",
    "syncClient" : "AmazonRoute53ResolverClient",
    "syncClientBuilderClassName" : "AmazonRoute53ResolverClientBuilder",
    "syncInterface" : "AmazonRoute53Resolver",
    "uid" : "route53resolver-2018-04-01",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "AssociateResolverEndpointIpAddress" : {
      "asyncCallableType" : "java.util.concurrent.Callable<AssociateResolverEndpointIpAddressResult>",
      "asyncFutureType" : "java.util.concurrent.Future<AssociateResolverEndpointIpAddressResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<AssociateResolverEndpointIpAddressRequest, AssociateResolverEndpointIpAddressResult>",
      "asyncReturnType" : "AssociateResolverEndpointIpAddressResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Adds IP addresses to an inbound or an outbound resolver endpoint. If you want to adding more than one IP address, submit one <code>AssociateResolverEndpointIpAddress</code> request for each IP address.</p> <p>To remove an IP address from an endpoint, see <a>DisassociateResolverEndpointIpAddress</a>.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceExistsException",
        "documentation" : "<p>The resource that you tried to create already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The request caused one or more limits to be exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AssociateResolverEndpointIpAddressRequest",
        "variableName" : "associateResolverEndpointIpAddressRequest",
        "variableType" : "AssociateResolverEndpointIpAddressRequest",
        "documentation" : "",
        "simpleType" : "AssociateResolverEndpointIpAddressRequest",
        "variableSetterType" : "AssociateResolverEndpointIpAddressRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "associateResolverEndpointIpAddress",
      "operationName" : "AssociateResolverEndpointIpAddress",
      "returnType" : {
        "returnType" : "AssociateResolverEndpointIpAddressResult",
        "documentation" : null
      },
      "syncReturnType" : "AssociateResolverEndpointIpAddressResult"
    },
    "AssociateResolverRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<AssociateResolverRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<AssociateResolverRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<AssociateResolverRuleRequest, AssociateResolverRuleResult>",
      "asyncReturnType" : "AssociateResolverRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Associates a resolver rule with a VPC. When you associate a rule with a VPC, Resolver forwards all DNS queries for the domain name that is specified in the rule and that originate in the VPC. The queries are forwarded to the IP addresses for the DNS resolvers that are specified in the rule. For more information about rules, see <a>CreateResolverRule</a>. </p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceUnavailableException",
        "documentation" : "<p>The specified resource isn't available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceExistsException",
        "documentation" : "<p>The resource that you tried to create already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AssociateResolverRuleRequest",
        "variableName" : "associateResolverRuleRequest",
        "variableType" : "AssociateResolverRuleRequest",
        "documentation" : "",
        "simpleType" : "AssociateResolverRuleRequest",
        "variableSetterType" : "AssociateResolverRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "associateResolverRule",
      "operationName" : "AssociateResolverRule",
      "returnType" : {
        "returnType" : "AssociateResolverRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "AssociateResolverRuleResult"
    },
    "CreateResolverEndpoint" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateResolverEndpointResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateResolverEndpointResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateResolverEndpointRequest, CreateResolverEndpointResult>",
      "asyncReturnType" : "CreateResolverEndpointResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a resolver endpoint. There are two types of resolver endpoints, inbound and outbound:</p> <ul> <li> <p>An <i>inbound resolver endpoint</i> forwards DNS queries to the DNS service for a VPC from your network or another VPC.</p> </li> <li> <p>An <i>outbound resolver endpoint</i> forwards DNS queries from the DNS service for a VPC to your network or another VPC.</p> </li> </ul>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceExistsException",
        "documentation" : "<p>The resource that you tried to create already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The request caused one or more limits to be exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateResolverEndpointRequest",
        "variableName" : "createResolverEndpointRequest",
        "variableType" : "CreateResolverEndpointRequest",
        "documentation" : "",
        "simpleType" : "CreateResolverEndpointRequest",
        "variableSetterType" : "CreateResolverEndpointRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createResolverEndpoint",
      "operationName" : "CreateResolverEndpoint",
      "returnType" : {
        "returnType" : "CreateResolverEndpointResult",
        "documentation" : null
      },
      "syncReturnType" : "CreateResolverEndpointResult"
    },
    "CreateResolverRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateResolverRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateResolverRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateResolverRuleRequest, CreateResolverRuleResult>",
      "asyncReturnType" : "CreateResolverRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>For DNS queries that originate in your VPCs, specifies which resolver endpoint the queries pass through, one domain name that you want to forward to your network, and the IP addresses of the DNS resolvers in your network.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The request caused one or more limits to be exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceExistsException",
        "documentation" : "<p>The resource that you tried to create already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceUnavailableException",
        "documentation" : "<p>The specified resource isn't available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateResolverRuleRequest",
        "variableName" : "createResolverRuleRequest",
        "variableType" : "CreateResolverRuleRequest",
        "documentation" : "",
        "simpleType" : "CreateResolverRuleRequest",
        "variableSetterType" : "CreateResolverRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createResolverRule",
      "operationName" : "CreateResolverRule",
      "returnType" : {
        "returnType" : "CreateResolverRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "CreateResolverRuleResult"
    },
    "DeleteResolverEndpoint" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteResolverEndpointResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteResolverEndpointResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteResolverEndpointRequest, DeleteResolverEndpointResult>",
      "asyncReturnType" : "DeleteResolverEndpointResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes a resolver endpoint. The effect of deleting a resolver endpoint depends on whether it's an inbound or an outbound resolver endpoint:</p> <ul> <li> <p> <b>Inbound</b>: DNS queries from your network or another VPC are no longer routed to the DNS service for the specified VPC.</p> </li> <li> <p> <b>Outbound</b>: DNS queries from a VPC are no longer routed to your network or to another VPC.</p> </li> </ul>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteResolverEndpointRequest",
        "variableName" : "deleteResolverEndpointRequest",
        "variableType" : "DeleteResolverEndpointRequest",
        "documentation" : "",
        "simpleType" : "DeleteResolverEndpointRequest",
        "variableSetterType" : "DeleteResolverEndpointRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteResolverEndpoint",
      "operationName" : "DeleteResolverEndpoint",
      "returnType" : {
        "returnType" : "DeleteResolverEndpointResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteResolverEndpointResult"
    },
    "DeleteResolverRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteResolverRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteResolverRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteResolverRuleRequest, DeleteResolverRuleResult>",
      "asyncReturnType" : "DeleteResolverRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes a resolver rule. Before you can delete a resolver rule, you must disassociate it from all the VPCs that you associated the resolver rule with. For more infomation, see <a>DisassociateResolverRule</a>.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceInUseException",
        "documentation" : "<p>The resource that you tried to update or delete is currently in use.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteResolverRuleRequest",
        "variableName" : "deleteResolverRuleRequest",
        "variableType" : "DeleteResolverRuleRequest",
        "documentation" : "",
        "simpleType" : "DeleteResolverRuleRequest",
        "variableSetterType" : "DeleteResolverRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteResolverRule",
      "operationName" : "DeleteResolverRule",
      "returnType" : {
        "returnType" : "DeleteResolverRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteResolverRuleResult"
    },
    "DisassociateResolverEndpointIpAddress" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DisassociateResolverEndpointIpAddressResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DisassociateResolverEndpointIpAddressResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DisassociateResolverEndpointIpAddressRequest, DisassociateResolverEndpointIpAddressResult>",
      "asyncReturnType" : "DisassociateResolverEndpointIpAddressResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Removes IP addresses from an inbound or an outbound resolver endpoint. If you want to remove more than one IP address, submit one <code>DisassociateResolverEndpointIpAddress</code> request for each IP address.</p> <p>To add an IP address to an endpoint, see <a>AssociateResolverEndpointIpAddress</a>.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceExistsException",
        "documentation" : "<p>The resource that you tried to create already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DisassociateResolverEndpointIpAddressRequest",
        "variableName" : "disassociateResolverEndpointIpAddressRequest",
        "variableType" : "DisassociateResolverEndpointIpAddressRequest",
        "documentation" : "",
        "simpleType" : "DisassociateResolverEndpointIpAddressRequest",
        "variableSetterType" : "DisassociateResolverEndpointIpAddressRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "disassociateResolverEndpointIpAddress",
      "operationName" : "DisassociateResolverEndpointIpAddress",
      "returnType" : {
        "returnType" : "DisassociateResolverEndpointIpAddressResult",
        "documentation" : null
      },
      "syncReturnType" : "DisassociateResolverEndpointIpAddressResult"
    },
    "DisassociateResolverRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DisassociateResolverRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DisassociateResolverRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DisassociateResolverRuleRequest, DisassociateResolverRuleResult>",
      "asyncReturnType" : "DisassociateResolverRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Removes the association between a specified resolver rule and a specified VPC.</p> <important> <p>If you disassociate a resolver rule from a VPC, Resolver stops forwarding DNS queries for the domain name that you specified in the resolver rule. </p> </important>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DisassociateResolverRuleRequest",
        "variableName" : "disassociateResolverRuleRequest",
        "variableType" : "DisassociateResolverRuleRequest",
        "documentation" : "",
        "simpleType" : "DisassociateResolverRuleRequest",
        "variableSetterType" : "DisassociateResolverRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "disassociateResolverRule",
      "operationName" : "DisassociateResolverRule",
      "returnType" : {
        "returnType" : "DisassociateResolverRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "DisassociateResolverRuleResult"
    },
    "GetResolverEndpoint" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetResolverEndpointResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetResolverEndpointResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetResolverEndpointRequest, GetResolverEndpointResult>",
      "asyncReturnType" : "GetResolverEndpointResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about a specified resolver endpoint, such as whether it's an inbound or an outbound resolver endpoint, and the current status of the endpoint.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverEndpointRequest",
        "variableName" : "getResolverEndpointRequest",
        "variableType" : "GetResolverEndpointRequest",
        "documentation" : "",
        "simpleType" : "GetResolverEndpointRequest",
        "variableSetterType" : "GetResolverEndpointRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getResolverEndpoint",
      "operationName" : "GetResolverEndpoint",
      "returnType" : {
        "returnType" : "GetResolverEndpointResult",
        "documentation" : null
      },
      "syncReturnType" : "GetResolverEndpointResult"
    },
    "GetResolverRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetResolverRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetResolverRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetResolverRuleRequest, GetResolverRuleResult>",
      "asyncReturnType" : "GetResolverRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about a specified resolver rule, such as the domain name that the rule forwards DNS queries for and the ID of the outbound resolver endpoint that the rule is associated with.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRuleRequest",
        "variableName" : "getResolverRuleRequest",
        "variableType" : "GetResolverRuleRequest",
        "documentation" : "",
        "simpleType" : "GetResolverRuleRequest",
        "variableSetterType" : "GetResolverRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getResolverRule",
      "operationName" : "GetResolverRule",
      "returnType" : {
        "returnType" : "GetResolverRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "GetResolverRuleResult"
    },
    "GetResolverRuleAssociation" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetResolverRuleAssociationResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetResolverRuleAssociationResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetResolverRuleAssociationRequest, GetResolverRuleAssociationResult>",
      "asyncReturnType" : "GetResolverRuleAssociationResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about an association between a specified resolver rule and a VPC. You associate a resolver rule and a VPC using <a>AssociateResolverRule</a>. </p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRuleAssociationRequest",
        "variableName" : "getResolverRuleAssociationRequest",
        "variableType" : "GetResolverRuleAssociationRequest",
        "documentation" : "",
        "simpleType" : "GetResolverRuleAssociationRequest",
        "variableSetterType" : "GetResolverRuleAssociationRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getResolverRuleAssociation",
      "operationName" : "GetResolverRuleAssociation",
      "returnType" : {
        "returnType" : "GetResolverRuleAssociationResult",
        "documentation" : null
      },
      "syncReturnType" : "GetResolverRuleAssociationResult"
    },
    "GetResolverRulePolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetResolverRulePolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetResolverRulePolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetResolverRulePolicyRequest, GetResolverRulePolicyResult>",
      "asyncReturnType" : "GetResolverRulePolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about a resolver rule policy. A resolver rule policy specifies the Resolver operations and resources that you want to allow another AWS account to be able to use. </p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "UnknownResourceException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRulePolicyRequest",
        "variableName" : "getResolverRulePolicyRequest",
        "variableType" : "GetResolverRulePolicyRequest",
        "documentation" : "",
        "simpleType" : "GetResolverRulePolicyRequest",
        "variableSetterType" : "GetResolverRulePolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getResolverRulePolicy",
      "operationName" : "GetResolverRulePolicy",
      "returnType" : {
        "returnType" : "GetResolverRulePolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "GetResolverRulePolicyResult"
    },
    "ListResolverEndpointIpAddresses" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListResolverEndpointIpAddressesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListResolverEndpointIpAddressesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListResolverEndpointIpAddressesRequest, ListResolverEndpointIpAddressesResult>",
      "asyncReturnType" : "ListResolverEndpointIpAddressesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets the IP addresses for a specified resolver endpoint.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverEndpointIpAddressesRequest",
        "variableName" : "listResolverEndpointIpAddressesRequest",
        "variableType" : "ListResolverEndpointIpAddressesRequest",
        "documentation" : "",
        "simpleType" : "ListResolverEndpointIpAddressesRequest",
        "variableSetterType" : "ListResolverEndpointIpAddressesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listResolverEndpointIpAddresses",
      "operationName" : "ListResolverEndpointIpAddresses",
      "returnType" : {
        "returnType" : "ListResolverEndpointIpAddressesResult",
        "documentation" : null
      },
      "syncReturnType" : "ListResolverEndpointIpAddressesResult"
    },
    "ListResolverEndpoints" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListResolverEndpointsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListResolverEndpointsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListResolverEndpointsRequest, ListResolverEndpointsResult>",
      "asyncReturnType" : "ListResolverEndpointsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists all the resolver endpoints that were created using the current AWS account.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverEndpointsRequest",
        "variableName" : "listResolverEndpointsRequest",
        "variableType" : "ListResolverEndpointsRequest",
        "documentation" : "",
        "simpleType" : "ListResolverEndpointsRequest",
        "variableSetterType" : "ListResolverEndpointsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listResolverEndpoints",
      "operationName" : "ListResolverEndpoints",
      "returnType" : {
        "returnType" : "ListResolverEndpointsResult",
        "documentation" : null
      },
      "syncReturnType" : "ListResolverEndpointsResult"
    },
    "ListResolverRuleAssociations" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListResolverRuleAssociationsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListResolverRuleAssociationsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListResolverRuleAssociationsRequest, ListResolverRuleAssociationsResult>",
      "asyncReturnType" : "ListResolverRuleAssociationsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the associations that were created between resolver rules and VPCs using the current AWS account.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverRuleAssociationsRequest",
        "variableName" : "listResolverRuleAssociationsRequest",
        "variableType" : "ListResolverRuleAssociationsRequest",
        "documentation" : "",
        "simpleType" : "ListResolverRuleAssociationsRequest",
        "variableSetterType" : "ListResolverRuleAssociationsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listResolverRuleAssociations",
      "operationName" : "ListResolverRuleAssociations",
      "returnType" : {
        "returnType" : "ListResolverRuleAssociationsResult",
        "documentation" : null
      },
      "syncReturnType" : "ListResolverRuleAssociationsResult"
    },
    "ListResolverRules" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListResolverRulesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListResolverRulesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListResolverRulesRequest, ListResolverRulesResult>",
      "asyncReturnType" : "ListResolverRulesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the resolver rules that were created using the current AWS account.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverRulesRequest",
        "variableName" : "listResolverRulesRequest",
        "variableType" : "ListResolverRulesRequest",
        "documentation" : "",
        "simpleType" : "ListResolverRulesRequest",
        "variableSetterType" : "ListResolverRulesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listResolverRules",
      "operationName" : "ListResolverRules",
      "returnType" : {
        "returnType" : "ListResolverRulesResult",
        "documentation" : null
      },
      "syncReturnType" : "ListResolverRulesResult"
    },
    "ListTagsForResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListTagsForResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListTagsForResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListTagsForResourceRequest, ListTagsForResourceResult>",
      "asyncReturnType" : "ListTagsForResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the tags that you associated with the specified resource.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTagsForResourceRequest",
        "variableName" : "listTagsForResourceRequest",
        "variableType" : "ListTagsForResourceRequest",
        "documentation" : "",
        "simpleType" : "ListTagsForResourceRequest",
        "variableSetterType" : "ListTagsForResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listTagsForResource",
      "operationName" : "ListTagsForResource",
      "returnType" : {
        "returnType" : "ListTagsForResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "ListTagsForResourceResult"
    },
    "PutResolverRulePolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<PutResolverRulePolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<PutResolverRulePolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutResolverRulePolicyRequest, PutResolverRulePolicyResult>",
      "asyncReturnType" : "PutResolverRulePolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Specifies the Resolver operations and resources that you want to allow another AWS account to be able to use.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidPolicyDocumentException",
        "documentation" : "<p>The specified resolver rule policy is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "UnknownResourceException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutResolverRulePolicyRequest",
        "variableName" : "putResolverRulePolicyRequest",
        "variableType" : "PutResolverRulePolicyRequest",
        "documentation" : "",
        "simpleType" : "PutResolverRulePolicyRequest",
        "variableSetterType" : "PutResolverRulePolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "putResolverRulePolicy",
      "operationName" : "PutResolverRulePolicy",
      "returnType" : {
        "returnType" : "PutResolverRulePolicyResult",
        "documentation" : "<p>The response to a <code>PutResolverRulePolicy</code> request.</p>"
      },
      "syncReturnType" : "PutResolverRulePolicyResult"
    },
    "TagResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<TagResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<TagResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<TagResourceRequest, TagResourceResult>",
      "asyncReturnType" : "TagResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Adds one or more tags to a specified resource.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The request caused one or more limits to be exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidTagException",
        "documentation" : "<p>The specified tag is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TagResourceRequest",
        "variableName" : "tagResourceRequest",
        "variableType" : "TagResourceRequest",
        "documentation" : "",
        "simpleType" : "TagResourceRequest",
        "variableSetterType" : "TagResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "tagResource",
      "operationName" : "TagResource",
      "returnType" : {
        "returnType" : "TagResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "TagResourceResult"
    },
    "UntagResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UntagResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UntagResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UntagResourceRequest, UntagResourceResult>",
      "asyncReturnType" : "UntagResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Removes one or more tags from a specified resource.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UntagResourceRequest",
        "variableName" : "untagResourceRequest",
        "variableType" : "UntagResourceRequest",
        "documentation" : "",
        "simpleType" : "UntagResourceRequest",
        "variableSetterType" : "UntagResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "untagResource",
      "operationName" : "UntagResource",
      "returnType" : {
        "returnType" : "UntagResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "UntagResourceResult"
    },
    "UpdateResolverEndpoint" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateResolverEndpointResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateResolverEndpointResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateResolverEndpointRequest, UpdateResolverEndpointResult>",
      "asyncReturnType" : "UpdateResolverEndpointResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Updates the name of an inbound or an outbound resolver endpoint. </p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateResolverEndpointRequest",
        "variableName" : "updateResolverEndpointRequest",
        "variableType" : "UpdateResolverEndpointRequest",
        "documentation" : "",
        "simpleType" : "UpdateResolverEndpointRequest",
        "variableSetterType" : "UpdateResolverEndpointRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateResolverEndpoint",
      "operationName" : "UpdateResolverEndpoint",
      "returnType" : {
        "returnType" : "UpdateResolverEndpointResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateResolverEndpointResult"
    },
    "UpdateResolverRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateResolverRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateResolverRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateResolverRuleRequest, UpdateResolverRuleResult>",
      "asyncReturnType" : "UpdateResolverRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Updates settings for a specified resolver rule. <code>ResolverRuleId</code> is required, and all other parameters are optional. If you don't specify a parameter, it retains its current value.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>One or more parameters in this request are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource doesn't exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceUnavailableException",
        "documentation" : "<p>The specified resource isn't available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The request caused one or more limits to be exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateResolverRuleRequest",
        "variableName" : "updateResolverRuleRequest",
        "variableType" : "UpdateResolverRuleRequest",
        "documentation" : "",
        "simpleType" : "UpdateResolverRuleRequest",
        "variableSetterType" : "UpdateResolverRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateResolverRule",
      "operationName" : "UpdateResolverRule",
      "returnType" : {
        "returnType" : "UpdateResolverRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateResolverRuleResult"
    }
  },
  "shapes" : {
    "AssociateResolverEndpointIpAddressRequest" : {
      "c2jName" : "AssociateResolverEndpointIpAddressRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "AssociateResolverEndpointIpAddress",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.AssociateResolverEndpointIpAddress",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the resolver endpoint that you want to associate IP addresses with.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to associate IP addresses with.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to associate IP addresses with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to associate IP addresses with.</p>\n@return The ID of the resolver endpoint that you want to associate IP addresses with.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to associate IP addresses with.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to associate IP addresses with.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to associate IP addresses with.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to associate IP addresses with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the resolver endpoint that you want to associate IP addresses with.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "IpAddress",
        "c2jShape" : "IpAddressUpdate",
        "deprecated" : false,
        "documentation" : "<p>Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n@param ipAddress Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIpAddress",
        "getterDocumentation" : "/**<p>Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n@return Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.*/",
        "getterMethodName" : "getIpAddress",
        "getterModel" : {
          "returnType" : "IpAddressUpdate",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IpAddress",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IpAddress",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "IpAddress",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n@param ipAddress Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.*/",
        "setterMethodName" : "setIpAddress",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "IpAddressUpdate",
          "variableName" : "ipAddress",
          "variableType" : "IpAddressUpdate",
          "documentation" : "",
          "simpleType" : "IpAddressUpdate",
          "variableSetterType" : "IpAddressUpdate"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n@param ipAddress Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "IpAddressUpdate",
          "variableName" : "ipAddress",
          "variableType" : "IpAddressUpdate",
          "documentation" : "<p>Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>",
          "simpleType" : "IpAddressUpdate",
          "variableSetterType" : "IpAddressUpdate"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "IpAddress" : {
          "c2jName" : "IpAddress",
          "c2jShape" : "IpAddressUpdate",
          "deprecated" : false,
          "documentation" : "<p>Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n@param ipAddress Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIpAddress",
          "getterDocumentation" : "/**<p>Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n@return Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.*/",
          "getterMethodName" : "getIpAddress",
          "getterModel" : {
            "returnType" : "IpAddressUpdate",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IpAddress",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IpAddress",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "IpAddress",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n@param ipAddress Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.*/",
          "setterMethodName" : "setIpAddress",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "IpAddressUpdate",
            "variableName" : "ipAddress",
            "variableType" : "IpAddressUpdate",
            "documentation" : "",
            "simpleType" : "IpAddressUpdate",
            "variableSetterType" : "IpAddressUpdate"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n@param ipAddress Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "IpAddressUpdate",
            "variableName" : "ipAddress",
            "variableType" : "IpAddressUpdate",
            "documentation" : "<p>Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>",
            "simpleType" : "IpAddressUpdate",
            "variableSetterType" : "IpAddressUpdate"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the resolver endpoint that you want to associate IP addresses with.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to associate IP addresses with.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to associate IP addresses with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to associate IP addresses with.</p>\n@return The ID of the resolver endpoint that you want to associate IP addresses with.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to associate IP addresses with.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to associate IP addresses with.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to associate IP addresses with.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to associate IP addresses with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the resolver endpoint that you want to associate IP addresses with.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverEndpointId", "IpAddress" ],
      "shapeName" : "AssociateResolverEndpointIpAddressRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AssociateResolverEndpointIpAddressRequest",
        "variableName" : "associateResolverEndpointIpAddressRequest",
        "variableType" : "AssociateResolverEndpointIpAddressRequest",
        "documentation" : null,
        "simpleType" : "AssociateResolverEndpointIpAddressRequest",
        "variableSetterType" : "AssociateResolverEndpointIpAddressRequest"
      },
      "wrapper" : false
    },
    "AssociateResolverEndpointIpAddressResult" : {
      "c2jName" : "AssociateResolverEndpointIpAddressResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverEndpoint",
        "c2jShape" : "ResolverEndpoint",
        "deprecated" : false,
        "documentation" : "<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>AssociateResolverEndpointIpAddress</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpoint",
        "getterDocumentation" : "/**<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n@return The response to an <code>AssociateResolverEndpointIpAddress</code> request.*/",
        "getterMethodName" : "getResolverEndpoint",
        "getterModel" : {
          "returnType" : "ResolverEndpoint",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpoint",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpoint",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverEndpoint",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>AssociateResolverEndpointIpAddress</code> request.*/",
        "setterMethodName" : "setResolverEndpoint",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>AssociateResolverEndpointIpAddress</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverEndpoint" : {
          "c2jName" : "ResolverEndpoint",
          "c2jShape" : "ResolverEndpoint",
          "deprecated" : false,
          "documentation" : "<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>AssociateResolverEndpointIpAddress</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpoint",
          "getterDocumentation" : "/**<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n@return The response to an <code>AssociateResolverEndpointIpAddress</code> request.*/",
          "getterMethodName" : "getResolverEndpoint",
          "getterModel" : {
            "returnType" : "ResolverEndpoint",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpoint",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpoint",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverEndpoint",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>AssociateResolverEndpointIpAddress</code> request.*/",
          "setterMethodName" : "setResolverEndpoint",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>AssociateResolverEndpointIpAddress</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "<p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AssociateResolverEndpointIpAddressResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AssociateResolverEndpointIpAddressResult",
        "variableName" : "associateResolverEndpointIpAddressResult",
        "variableType" : "AssociateResolverEndpointIpAddressResult",
        "documentation" : null,
        "simpleType" : "AssociateResolverEndpointIpAddressResult",
        "variableSetterType" : "AssociateResolverEndpointIpAddressResult"
      },
      "wrapper" : false
    },
    "AssociateResolverRuleRequest" : {
      "c2jName" : "AssociateResolverRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "AssociateResolverRule",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.AssociateResolverRule",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverRuleId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.</p>\n@param resolverRuleId The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleId",
        "getterDocumentation" : "/**<p>The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.</p>\n@return The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.*/",
        "getterMethodName" : "getResolverRuleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRuleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.</p>\n@param resolverRuleId The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.*/",
        "setterMethodName" : "setResolverRuleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.</p>\n@param resolverRuleId The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>A name for the association that you're creating between a resolver rule and a VPC.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A name for the association that you're creating between a resolver rule and a VPC.</p>\n@param name A name for the association that you're creating between a resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>A name for the association that you're creating between a resolver rule and a VPC.</p>\n@return A name for the association that you're creating between a resolver rule and a VPC.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A name for the association that you're creating between a resolver rule and a VPC.</p>\n@param name A name for the association that you're creating between a resolver rule and a VPC.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A name for the association that you're creating between a resolver rule and a VPC.</p>\n@param name A name for the association that you're creating between a resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>A name for the association that you're creating between a resolver rule and a VPC.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "VPCId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the VPC that you want to associate the resolver rule with.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the VPC that you want to associate the resolver rule with.</p>\n@param vPCId The ID of the VPC that you want to associate the resolver rule with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVPCId",
        "getterDocumentation" : "/**<p>The ID of the VPC that you want to associate the resolver rule with.</p>\n@return The ID of the VPC that you want to associate the resolver rule with.*/",
        "getterMethodName" : "getVPCId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VPCId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VPCId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VPCId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the VPC that you want to associate the resolver rule with.</p>\n@param vPCId The ID of the VPC that you want to associate the resolver rule with.*/",
        "setterMethodName" : "setVPCId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vPCId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the VPC that you want to associate the resolver rule with.</p>\n@param vPCId The ID of the VPC that you want to associate the resolver rule with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vPCId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the VPC that you want to associate the resolver rule with.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>A name for the association that you're creating between a resolver rule and a VPC.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A name for the association that you're creating between a resolver rule and a VPC.</p>\n@param name A name for the association that you're creating between a resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>A name for the association that you're creating between a resolver rule and a VPC.</p>\n@return A name for the association that you're creating between a resolver rule and a VPC.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A name for the association that you're creating between a resolver rule and a VPC.</p>\n@param name A name for the association that you're creating between a resolver rule and a VPC.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A name for the association that you're creating between a resolver rule and a VPC.</p>\n@param name A name for the association that you're creating between a resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>A name for the association that you're creating between a resolver rule and a VPC.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverRuleId" : {
          "c2jName" : "ResolverRuleId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.</p>\n@param resolverRuleId The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleId",
          "getterDocumentation" : "/**<p>The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.</p>\n@return The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.*/",
          "getterMethodName" : "getResolverRuleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRuleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.</p>\n@param resolverRuleId The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.*/",
          "setterMethodName" : "setResolverRuleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.</p>\n@param resolverRuleId The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use <a>ListResolverRules</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "VPCId" : {
          "c2jName" : "VPCId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the VPC that you want to associate the resolver rule with.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the VPC that you want to associate the resolver rule with.</p>\n@param vPCId The ID of the VPC that you want to associate the resolver rule with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVPCId",
          "getterDocumentation" : "/**<p>The ID of the VPC that you want to associate the resolver rule with.</p>\n@return The ID of the VPC that you want to associate the resolver rule with.*/",
          "getterMethodName" : "getVPCId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VPCId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VPCId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VPCId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the VPC that you want to associate the resolver rule with.</p>\n@param vPCId The ID of the VPC that you want to associate the resolver rule with.*/",
          "setterMethodName" : "setVPCId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vPCId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the VPC that you want to associate the resolver rule with.</p>\n@param vPCId The ID of the VPC that you want to associate the resolver rule with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vPCId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the VPC that you want to associate the resolver rule with.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverRuleId", "VPCId" ],
      "shapeName" : "AssociateResolverRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AssociateResolverRuleRequest",
        "variableName" : "associateResolverRuleRequest",
        "variableType" : "AssociateResolverRuleRequest",
        "documentation" : null,
        "simpleType" : "AssociateResolverRuleRequest",
        "variableSetterType" : "AssociateResolverRuleRequest"
      },
      "wrapper" : false
    },
    "AssociateResolverRuleResult" : {
      "c2jName" : "AssociateResolverRuleResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverRuleAssociation",
        "c2jShape" : "ResolverRuleAssociation",
        "deprecated" : false,
        "documentation" : "<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>AssociateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleAssociation",
        "getterDocumentation" : "/**<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n@return Information about the <code>AssociateResolverRule</code> request, including the status of the request.*/",
        "getterMethodName" : "getResolverRuleAssociation",
        "getterModel" : {
          "returnType" : "ResolverRuleAssociation",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleAssociation",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleAssociation",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverRuleAssociation",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>AssociateResolverRule</code> request, including the status of the request.*/",
        "setterMethodName" : "setResolverRuleAssociation",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRuleAssociation",
          "variableName" : "resolverRuleAssociation",
          "variableType" : "ResolverRuleAssociation",
          "documentation" : "",
          "simpleType" : "ResolverRuleAssociation",
          "variableSetterType" : "ResolverRuleAssociation"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>AssociateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRuleAssociation",
          "variableName" : "resolverRuleAssociation",
          "variableType" : "ResolverRuleAssociation",
          "documentation" : "<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>",
          "simpleType" : "ResolverRuleAssociation",
          "variableSetterType" : "ResolverRuleAssociation"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRuleAssociation" : {
          "c2jName" : "ResolverRuleAssociation",
          "c2jShape" : "ResolverRuleAssociation",
          "deprecated" : false,
          "documentation" : "<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>AssociateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleAssociation",
          "getterDocumentation" : "/**<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n@return Information about the <code>AssociateResolverRule</code> request, including the status of the request.*/",
          "getterMethodName" : "getResolverRuleAssociation",
          "getterModel" : {
            "returnType" : "ResolverRuleAssociation",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleAssociation",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleAssociation",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverRuleAssociation",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>AssociateResolverRule</code> request, including the status of the request.*/",
          "setterMethodName" : "setResolverRuleAssociation",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRuleAssociation",
            "variableName" : "resolverRuleAssociation",
            "variableType" : "ResolverRuleAssociation",
            "documentation" : "",
            "simpleType" : "ResolverRuleAssociation",
            "variableSetterType" : "ResolverRuleAssociation"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>AssociateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRuleAssociation",
            "variableName" : "resolverRuleAssociation",
            "variableType" : "ResolverRuleAssociation",
            "documentation" : "<p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>",
            "simpleType" : "ResolverRuleAssociation",
            "variableSetterType" : "ResolverRuleAssociation"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AssociateResolverRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AssociateResolverRuleResult",
        "variableName" : "associateResolverRuleResult",
        "variableType" : "AssociateResolverRuleResult",
        "documentation" : null,
        "simpleType" : "AssociateResolverRuleResult",
        "variableSetterType" : "AssociateResolverRuleResult"
      },
      "wrapper" : false
    },
    "CreateResolverEndpointRequest" : {
      "c2jName" : "CreateResolverEndpointRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateResolverEndpoint",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.CreateResolverEndpoint",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CreatorRequestId",
        "c2jShape" : "CreatorRequestId",
        "deprecated" : false,
        "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreatorRequestId",
        "getterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@return A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
        "getterMethodName" : "getCreatorRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreatorRequestId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreatorRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreatorRequestId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
        "setterMethodName" : "setCreatorRequestId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n@return A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SecurityGroupIds",
        "c2jShape" : "SecurityGroupIds",
        "deprecated" : false,
        "documentation" : "<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).</p>\n@param securityGroupIds The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSecurityGroupIds",
        "getterDocumentation" : "/**<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).</p>\n@return The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).*/",
        "getterMethodName" : "getSecurityGroupIds",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SecurityGroupIds",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SecurityGroupIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResourceId",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "SecurityGroupIds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).</p>\n@param securityGroupIds The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).*/",
        "setterMethodName" : "setSecurityGroupIds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "securityGroupIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSecurityGroupIds(java.util.Collection)} or {@link #withSecurityGroupIds(java.util.Collection)} if you want to override the existing values.</p>\n@param securityGroupIds The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "securityGroupIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Direction",
        "c2jShape" : "ResolverEndpointDirection",
        "deprecated" : false,
        "documentation" : "<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li> </ul>",
        "enumType" : "ResolverEndpointDirection",
        "fluentSetterDocumentation" : "/**<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li> </ul>\n@param direction Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointDirection*/",
        "fluentSetterMethodName" : "withDirection",
        "getterDocumentation" : "/**<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li> </ul>\n@return Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li>\n@see ResolverEndpointDirection*/",
        "getterMethodName" : "getDirection",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Direction",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Direction",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Direction",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li> </ul>\n@param direction Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li>\n@see ResolverEndpointDirection*/",
        "setterMethodName" : "setDirection",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "direction",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li> </ul>\n@param direction Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointDirection*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "direction",
          "variableType" : "String",
          "documentation" : "<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "IpAddresses",
        "c2jShape" : "IpAddressesRequest",
        "deprecated" : false,
        "documentation" : "<p>The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints). </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints). </p>\n@param ipAddresses The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIpAddresses",
        "getterDocumentation" : "/**<p>The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints). </p>\n@return The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints).*/",
        "getterMethodName" : "getIpAddresses",
        "getterModel" : {
          "returnType" : "java.util.List<IpAddressRequest>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IpAddresses",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IpAddresses",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "IpAddressRequest",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "IpAddressRequest",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "IpAddressRequest",
              "variableName" : "member",
              "variableType" : "IpAddressRequest",
              "documentation" : "",
              "simpleType" : "IpAddressRequest",
              "variableSetterType" : "IpAddressRequest"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "IpAddressRequest",
              "variableName" : "member",
              "variableType" : "IpAddressRequest",
              "documentation" : "",
              "simpleType" : "IpAddressRequest",
              "variableSetterType" : "IpAddressRequest"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "IpAddressRequest",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "IpAddressRequest",
          "templateImplType" : "java.util.ArrayList<IpAddressRequest>",
          "templateType" : "java.util.List<IpAddressRequest>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "IpAddresses",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints). </p>\n@param ipAddresses The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints).*/",
        "setterMethodName" : "setIpAddresses",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<IpAddressRequest>",
          "variableName" : "ipAddresses",
          "variableType" : "java.util.List<IpAddressRequest>",
          "documentation" : "",
          "simpleType" : "List<IpAddressRequest>",
          "variableSetterType" : "java.util.Collection<IpAddressRequest>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints). </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setIpAddresses(java.util.Collection)} or {@link #withIpAddresses(java.util.Collection)} if you want to override the existing values.</p>\n@param ipAddresses The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<IpAddressRequest>",
          "variableName" : "ipAddresses",
          "variableType" : "java.util.List<IpAddressRequest>",
          "documentation" : "<p>The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints). </p>",
          "simpleType" : "List<IpAddressRequest>",
          "variableSetterType" : "java.util.Collection<IpAddressRequest>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Tags",
        "c2jShape" : "TagList",
        "deprecated" : false,
        "documentation" : "<p>A list of the tag keys and values that you want to associate with the endpoint.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@return A list of the tag keys and values that you want to associate with the endpoint.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>A list of the tag keys and values that you want to associate with the endpoint.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CreatorRequestId" : {
          "c2jName" : "CreatorRequestId",
          "c2jShape" : "CreatorRequestId",
          "deprecated" : false,
          "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreatorRequestId",
          "getterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@return A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
          "getterMethodName" : "getCreatorRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreatorRequestId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreatorRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreatorRequestId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
          "setterMethodName" : "setCreatorRequestId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Direction" : {
          "c2jName" : "Direction",
          "c2jShape" : "ResolverEndpointDirection",
          "deprecated" : false,
          "documentation" : "<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li> </ul>",
          "enumType" : "ResolverEndpointDirection",
          "fluentSetterDocumentation" : "/**<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li> </ul>\n@param direction Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointDirection*/",
          "fluentSetterMethodName" : "withDirection",
          "getterDocumentation" : "/**<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li> </ul>\n@return Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li>\n@see ResolverEndpointDirection*/",
          "getterMethodName" : "getDirection",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Direction",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Direction",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Direction",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li> </ul>\n@param direction Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li>\n@see ResolverEndpointDirection*/",
          "setterMethodName" : "setDirection",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "direction",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li> </ul>\n@param direction Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointDirection*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "direction",
            "variableType" : "String",
            "documentation" : "<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "IpAddresses" : {
          "c2jName" : "IpAddresses",
          "c2jShape" : "IpAddressesRequest",
          "deprecated" : false,
          "documentation" : "<p>The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints). </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints). </p>\n@param ipAddresses The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIpAddresses",
          "getterDocumentation" : "/**<p>The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints). </p>\n@return The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints).*/",
          "getterMethodName" : "getIpAddresses",
          "getterModel" : {
            "returnType" : "java.util.List<IpAddressRequest>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IpAddresses",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IpAddresses",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "IpAddressRequest",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "IpAddressRequest",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "IpAddressRequest",
                "variableName" : "member",
                "variableType" : "IpAddressRequest",
                "documentation" : "",
                "simpleType" : "IpAddressRequest",
                "variableSetterType" : "IpAddressRequest"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "IpAddressRequest",
                "variableName" : "member",
                "variableType" : "IpAddressRequest",
                "documentation" : "",
                "simpleType" : "IpAddressRequest",
                "variableSetterType" : "IpAddressRequest"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "IpAddressRequest",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "IpAddressRequest",
            "templateImplType" : "java.util.ArrayList<IpAddressRequest>",
            "templateType" : "java.util.List<IpAddressRequest>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "IpAddresses",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints). </p>\n@param ipAddresses The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints).*/",
          "setterMethodName" : "setIpAddresses",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<IpAddressRequest>",
            "variableName" : "ipAddresses",
            "variableType" : "java.util.List<IpAddressRequest>",
            "documentation" : "",
            "simpleType" : "List<IpAddressRequest>",
            "variableSetterType" : "java.util.Collection<IpAddressRequest>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints). </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setIpAddresses(java.util.Collection)} or {@link #withIpAddresses(java.util.Collection)} if you want to override the existing values.</p>\n@param ipAddresses The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<IpAddressRequest>",
            "variableName" : "ipAddresses",
            "variableType" : "java.util.List<IpAddressRequest>",
            "documentation" : "<p>The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network (for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints). </p>",
            "simpleType" : "List<IpAddressRequest>",
            "variableSetterType" : "java.util.Collection<IpAddressRequest>"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n@return A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SecurityGroupIds" : {
          "c2jName" : "SecurityGroupIds",
          "c2jShape" : "SecurityGroupIds",
          "deprecated" : false,
          "documentation" : "<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).</p>\n@param securityGroupIds The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSecurityGroupIds",
          "getterDocumentation" : "/**<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).</p>\n@return The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).*/",
          "getterMethodName" : "getSecurityGroupIds",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SecurityGroupIds",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SecurityGroupIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResourceId",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "SecurityGroupIds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).</p>\n@param securityGroupIds The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).*/",
          "setterMethodName" : "setSecurityGroupIds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "securityGroupIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSecurityGroupIds(java.util.Collection)} or {@link #withSecurityGroupIds(java.util.Collection)} if you want to override the existing values.</p>\n@param securityGroupIds The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "securityGroupIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "TagList",
          "deprecated" : false,
          "documentation" : "<p>A list of the tag keys and values that you want to associate with the endpoint.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@return A list of the tag keys and values that you want to associate with the endpoint.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>A list of the tag keys and values that you want to associate with the endpoint.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "CreatorRequestId", "SecurityGroupIds", "Direction", "IpAddresses" ],
      "shapeName" : "CreateResolverEndpointRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateResolverEndpointRequest",
        "variableName" : "createResolverEndpointRequest",
        "variableType" : "CreateResolverEndpointRequest",
        "documentation" : null,
        "simpleType" : "CreateResolverEndpointRequest",
        "variableSetterType" : "CreateResolverEndpointRequest"
      },
      "wrapper" : false
    },
    "CreateResolverEndpointResult" : {
      "c2jName" : "CreateResolverEndpointResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverEndpoint",
        "c2jShape" : "ResolverEndpoint",
        "deprecated" : false,
        "documentation" : "<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpoint",
        "getterDocumentation" : "/**<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n@return Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.*/",
        "getterMethodName" : "getResolverEndpoint",
        "getterModel" : {
          "returnType" : "ResolverEndpoint",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpoint",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpoint",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverEndpoint",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.*/",
        "setterMethodName" : "setResolverEndpoint",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverEndpoint" : {
          "c2jName" : "ResolverEndpoint",
          "c2jShape" : "ResolverEndpoint",
          "deprecated" : false,
          "documentation" : "<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpoint",
          "getterDocumentation" : "/**<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n@return Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.*/",
          "getterMethodName" : "getResolverEndpoint",
          "getterModel" : {
            "returnType" : "ResolverEndpoint",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpoint",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpoint",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverEndpoint",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.*/",
          "setterMethodName" : "setResolverEndpoint",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "<p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateResolverEndpointResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateResolverEndpointResult",
        "variableName" : "createResolverEndpointResult",
        "variableType" : "CreateResolverEndpointResult",
        "documentation" : null,
        "simpleType" : "CreateResolverEndpointResult",
        "variableSetterType" : "CreateResolverEndpointResult"
      },
      "wrapper" : false
    },
    "CreateResolverRuleRequest" : {
      "c2jName" : "CreateResolverRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateResolverRule",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.CreateResolverRule",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CreatorRequestId",
        "c2jShape" : "CreatorRequestId",
        "deprecated" : false,
        "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreatorRequestId",
        "getterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@return A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
        "getterMethodName" : "getCreatorRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreatorRequestId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreatorRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreatorRequestId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
        "setterMethodName" : "setCreatorRequestId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n@return A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "RuleType",
        "c2jShape" : "RuleTypeOption",
        "deprecated" : false,
        "documentation" : "<p>Specify <code>FORWARD</code>. Other resolver rule types aren't supported.</p>",
        "enumType" : "RuleTypeOption",
        "fluentSetterDocumentation" : "/**<p>Specify <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n@param ruleType Specify <code>FORWARD</code>. Other resolver rule types aren't supported.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RuleTypeOption*/",
        "fluentSetterMethodName" : "withRuleType",
        "getterDocumentation" : "/**<p>Specify <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n@return Specify <code>FORWARD</code>. Other resolver rule types aren't supported.\n@see RuleTypeOption*/",
        "getterMethodName" : "getRuleType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "RuleType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "RuleType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RuleType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Specify <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n@param ruleType Specify <code>FORWARD</code>. Other resolver rule types aren't supported.\n@see RuleTypeOption*/",
        "setterMethodName" : "setRuleType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ruleType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specify <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n@param ruleType Specify <code>FORWARD</code>. Other resolver rule types aren't supported.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RuleTypeOption*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ruleType",
          "variableType" : "String",
          "documentation" : "<p>Specify <code>FORWARD</code>. Other resolver rule types aren't supported.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "DomainName",
        "c2jShape" : "DomainName",
        "deprecated" : false,
        "documentation" : "<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDomainName",
        "getterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).</p>\n@return DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).*/",
        "getterMethodName" : "getDomainName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "DomainName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "DomainName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DomainName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).*/",
        "setterMethodName" : "setDomainName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "domainName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "domainName",
          "variableType" : "String",
          "documentation" : "<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TargetIps",
        "c2jShape" : "TargetList",
        "deprecated" : false,
        "documentation" : "<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p>\n@param targetIps The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargetIps",
        "getterDocumentation" : "/**<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p>\n@return The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.*/",
        "getterMethodName" : "getTargetIps",
        "getterModel" : {
          "returnType" : "java.util.List<TargetAddress>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TargetIps",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TargetIps",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "TargetAddress",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "TargetAddress",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TargetAddress",
              "variableName" : "member",
              "variableType" : "TargetAddress",
              "documentation" : "",
              "simpleType" : "TargetAddress",
              "variableSetterType" : "TargetAddress"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TargetAddress",
              "variableName" : "member",
              "variableType" : "TargetAddress",
              "documentation" : "",
              "simpleType" : "TargetAddress",
              "variableSetterType" : "TargetAddress"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "TargetAddress",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "TargetAddress",
          "templateImplType" : "java.util.ArrayList<TargetAddress>",
          "templateType" : "java.util.List<TargetAddress>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "TargetIps",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p>\n@param targetIps The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.*/",
        "setterMethodName" : "setTargetIps",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TargetAddress>",
          "variableName" : "targetIps",
          "variableType" : "java.util.List<TargetAddress>",
          "documentation" : "",
          "simpleType" : "List<TargetAddress>",
          "variableSetterType" : "java.util.Collection<TargetAddress>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTargetIps(java.util.Collection)} or {@link #withTargetIps(java.util.Collection)} if you want to override the existing values.</p>\n@param targetIps The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TargetAddress>",
          "variableName" : "targetIps",
          "variableType" : "java.util.List<TargetAddress>",
          "documentation" : "<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p>",
          "simpleType" : "List<TargetAddress>",
          "variableSetterType" : "java.util.Collection<TargetAddress>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@return The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Tags",
        "c2jShape" : "TagList",
        "deprecated" : false,
        "documentation" : "<p>A list of the tag keys and values that you want to associate with the endpoint.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@return A list of the tag keys and values that you want to associate with the endpoint.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>A list of the tag keys and values that you want to associate with the endpoint.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CreatorRequestId" : {
          "c2jName" : "CreatorRequestId",
          "c2jShape" : "CreatorRequestId",
          "deprecated" : false,
          "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreatorRequestId",
          "getterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@return A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
          "getterMethodName" : "getCreatorRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreatorRequestId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreatorRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreatorRequestId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.*/",
          "setterMethodName" : "setCreatorRequestId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n@param creatorRequestId A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "DomainName" : {
          "c2jName" : "DomainName",
          "c2jShape" : "DomainName",
          "deprecated" : false,
          "documentation" : "<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDomainName",
          "getterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).</p>\n@return DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).*/",
          "getterMethodName" : "getDomainName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "DomainName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "DomainName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DomainName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).*/",
          "setterMethodName" : "setDomainName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "domainName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "domainName",
            "variableType" : "String",
            "documentation" : "<p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains the most specific domain name (www.example.com).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n@return A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n@param name A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@return The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RuleType" : {
          "c2jName" : "RuleType",
          "c2jShape" : "RuleTypeOption",
          "deprecated" : false,
          "documentation" : "<p>Specify <code>FORWARD</code>. Other resolver rule types aren't supported.</p>",
          "enumType" : "RuleTypeOption",
          "fluentSetterDocumentation" : "/**<p>Specify <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n@param ruleType Specify <code>FORWARD</code>. Other resolver rule types aren't supported.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RuleTypeOption*/",
          "fluentSetterMethodName" : "withRuleType",
          "getterDocumentation" : "/**<p>Specify <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n@return Specify <code>FORWARD</code>. Other resolver rule types aren't supported.\n@see RuleTypeOption*/",
          "getterMethodName" : "getRuleType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "RuleType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "RuleType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RuleType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Specify <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n@param ruleType Specify <code>FORWARD</code>. Other resolver rule types aren't supported.\n@see RuleTypeOption*/",
          "setterMethodName" : "setRuleType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ruleType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specify <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n@param ruleType Specify <code>FORWARD</code>. Other resolver rule types aren't supported.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RuleTypeOption*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ruleType",
            "variableType" : "String",
            "documentation" : "<p>Specify <code>FORWARD</code>. Other resolver rule types aren't supported.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "TagList",
          "deprecated" : false,
          "documentation" : "<p>A list of the tag keys and values that you want to associate with the endpoint.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@return A list of the tag keys and values that you want to associate with the endpoint.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags A list of the tag keys and values that you want to associate with the endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>A list of the tag keys and values that you want to associate with the endpoint.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetIps" : {
          "c2jName" : "TargetIps",
          "c2jShape" : "TargetList",
          "deprecated" : false,
          "documentation" : "<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p>\n@param targetIps The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargetIps",
          "getterDocumentation" : "/**<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p>\n@return The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.*/",
          "getterMethodName" : "getTargetIps",
          "getterModel" : {
            "returnType" : "java.util.List<TargetAddress>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TargetIps",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TargetIps",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "TargetAddress",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "TargetAddress",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TargetAddress",
                "variableName" : "member",
                "variableType" : "TargetAddress",
                "documentation" : "",
                "simpleType" : "TargetAddress",
                "variableSetterType" : "TargetAddress"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TargetAddress",
                "variableName" : "member",
                "variableType" : "TargetAddress",
                "documentation" : "",
                "simpleType" : "TargetAddress",
                "variableSetterType" : "TargetAddress"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "TargetAddress",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "TargetAddress",
            "templateImplType" : "java.util.ArrayList<TargetAddress>",
            "templateType" : "java.util.List<TargetAddress>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "TargetIps",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p>\n@param targetIps The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.*/",
          "setterMethodName" : "setTargetIps",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TargetAddress>",
            "variableName" : "targetIps",
            "variableType" : "java.util.List<TargetAddress>",
            "documentation" : "",
            "simpleType" : "List<TargetAddress>",
            "variableSetterType" : "java.util.Collection<TargetAddress>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTargetIps(java.util.Collection)} or {@link #withTargetIps(java.util.Collection)} if you want to override the existing values.</p>\n@param targetIps The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TargetAddress>",
            "variableName" : "targetIps",
            "variableType" : "java.util.List<TargetAddress>",
            "documentation" : "<p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p>",
            "simpleType" : "List<TargetAddress>",
            "variableSetterType" : "java.util.Collection<TargetAddress>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "CreatorRequestId", "RuleType", "DomainName" ],
      "shapeName" : "CreateResolverRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateResolverRuleRequest",
        "variableName" : "createResolverRuleRequest",
        "variableType" : "CreateResolverRuleRequest",
        "documentation" : null,
        "simpleType" : "CreateResolverRuleRequest",
        "variableSetterType" : "CreateResolverRuleRequest"
      },
      "wrapper" : false
    },
    "CreateResolverRuleResult" : {
      "c2jName" : "CreateResolverRuleResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverRule",
        "c2jShape" : "ResolverRule",
        "deprecated" : false,
        "documentation" : "<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>CreateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRule",
        "getterDocumentation" : "/**<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n@return Information about the <code>CreateResolverRule</code> request, including the status of the request.*/",
        "getterMethodName" : "getResolverRule",
        "getterModel" : {
          "returnType" : "ResolverRule",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRule",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRule",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverRule",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>CreateResolverRule</code> request, including the status of the request.*/",
        "setterMethodName" : "setResolverRule",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRule",
          "variableName" : "resolverRule",
          "variableType" : "ResolverRule",
          "documentation" : "",
          "simpleType" : "ResolverRule",
          "variableSetterType" : "ResolverRule"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>CreateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRule",
          "variableName" : "resolverRule",
          "variableType" : "ResolverRule",
          "documentation" : "<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>",
          "simpleType" : "ResolverRule",
          "variableSetterType" : "ResolverRule"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRule" : {
          "c2jName" : "ResolverRule",
          "c2jShape" : "ResolverRule",
          "deprecated" : false,
          "documentation" : "<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>CreateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRule",
          "getterDocumentation" : "/**<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n@return Information about the <code>CreateResolverRule</code> request, including the status of the request.*/",
          "getterMethodName" : "getResolverRule",
          "getterModel" : {
            "returnType" : "ResolverRule",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRule",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRule",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverRule",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>CreateResolverRule</code> request, including the status of the request.*/",
          "setterMethodName" : "setResolverRule",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRule",
            "variableName" : "resolverRule",
            "variableType" : "ResolverRule",
            "documentation" : "",
            "simpleType" : "ResolverRule",
            "variableSetterType" : "ResolverRule"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>CreateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRule",
            "variableName" : "resolverRule",
            "variableType" : "ResolverRule",
            "documentation" : "<p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>",
            "simpleType" : "ResolverRule",
            "variableSetterType" : "ResolverRule"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateResolverRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateResolverRuleResult",
        "variableName" : "createResolverRuleResult",
        "variableType" : "CreateResolverRuleResult",
        "documentation" : null,
        "simpleType" : "CreateResolverRuleResult",
        "variableSetterType" : "CreateResolverRuleResult"
      },
      "wrapper" : false
    },
    "DeleteResolverEndpointRequest" : {
      "c2jName" : "DeleteResolverEndpointRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteResolverEndpoint",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.DeleteResolverEndpoint",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the resolver endpoint that you want to delete.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to delete.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to delete.</p>\n@return The ID of the resolver endpoint that you want to delete.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to delete.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to delete.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to delete.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the resolver endpoint that you want to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the resolver endpoint that you want to delete.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to delete.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to delete.</p>\n@return The ID of the resolver endpoint that you want to delete.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to delete.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to delete.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to delete.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the resolver endpoint that you want to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverEndpointId" ],
      "shapeName" : "DeleteResolverEndpointRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteResolverEndpointRequest",
        "variableName" : "deleteResolverEndpointRequest",
        "variableType" : "DeleteResolverEndpointRequest",
        "documentation" : null,
        "simpleType" : "DeleteResolverEndpointRequest",
        "variableSetterType" : "DeleteResolverEndpointRequest"
      },
      "wrapper" : false
    },
    "DeleteResolverEndpointResult" : {
      "c2jName" : "DeleteResolverEndpointResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverEndpoint",
        "c2jShape" : "ResolverEndpoint",
        "deprecated" : false,
        "documentation" : "<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpoint",
        "getterDocumentation" : "/**<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n@return Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.*/",
        "getterMethodName" : "getResolverEndpoint",
        "getterModel" : {
          "returnType" : "ResolverEndpoint",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpoint",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpoint",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverEndpoint",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.*/",
        "setterMethodName" : "setResolverEndpoint",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverEndpoint" : {
          "c2jName" : "ResolverEndpoint",
          "c2jShape" : "ResolverEndpoint",
          "deprecated" : false,
          "documentation" : "<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpoint",
          "getterDocumentation" : "/**<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n@return Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.*/",
          "getterMethodName" : "getResolverEndpoint",
          "getterModel" : {
            "returnType" : "ResolverEndpoint",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpoint",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpoint",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverEndpoint",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.*/",
          "setterMethodName" : "setResolverEndpoint",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n@param resolverEndpoint Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "<p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteResolverEndpointResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteResolverEndpointResult",
        "variableName" : "deleteResolverEndpointResult",
        "variableType" : "DeleteResolverEndpointResult",
        "documentation" : null,
        "simpleType" : "DeleteResolverEndpointResult",
        "variableSetterType" : "DeleteResolverEndpointResult"
      },
      "wrapper" : false
    },
    "DeleteResolverRuleRequest" : {
      "c2jName" : "DeleteResolverRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteResolverRule",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.DeleteResolverRule",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverRuleId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the resolver rule that you want to delete.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to delete.</p>\n@param resolverRuleId The ID of the resolver rule that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleId",
        "getterDocumentation" : "/**<p>The ID of the resolver rule that you want to delete.</p>\n@return The ID of the resolver rule that you want to delete.*/",
        "getterMethodName" : "getResolverRuleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRuleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the resolver rule that you want to delete.</p>\n@param resolverRuleId The ID of the resolver rule that you want to delete.*/",
        "setterMethodName" : "setResolverRuleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to delete.</p>\n@param resolverRuleId The ID of the resolver rule that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the resolver rule that you want to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRuleId" : {
          "c2jName" : "ResolverRuleId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the resolver rule that you want to delete.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to delete.</p>\n@param resolverRuleId The ID of the resolver rule that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleId",
          "getterDocumentation" : "/**<p>The ID of the resolver rule that you want to delete.</p>\n@return The ID of the resolver rule that you want to delete.*/",
          "getterMethodName" : "getResolverRuleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRuleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the resolver rule that you want to delete.</p>\n@param resolverRuleId The ID of the resolver rule that you want to delete.*/",
          "setterMethodName" : "setResolverRuleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to delete.</p>\n@param resolverRuleId The ID of the resolver rule that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the resolver rule that you want to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverRuleId" ],
      "shapeName" : "DeleteResolverRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteResolverRuleRequest",
        "variableName" : "deleteResolverRuleRequest",
        "variableType" : "DeleteResolverRuleRequest",
        "documentation" : null,
        "simpleType" : "DeleteResolverRuleRequest",
        "variableSetterType" : "DeleteResolverRuleRequest"
      },
      "wrapper" : false
    },
    "DeleteResolverRuleResult" : {
      "c2jName" : "DeleteResolverRuleResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverRule",
        "c2jShape" : "ResolverRule",
        "deprecated" : false,
        "documentation" : "<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>DeleteResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRule",
        "getterDocumentation" : "/**<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n@return Information about the <code>DeleteResolverRule</code> request, including the status of the request.*/",
        "getterMethodName" : "getResolverRule",
        "getterModel" : {
          "returnType" : "ResolverRule",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRule",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRule",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverRule",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>DeleteResolverRule</code> request, including the status of the request.*/",
        "setterMethodName" : "setResolverRule",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRule",
          "variableName" : "resolverRule",
          "variableType" : "ResolverRule",
          "documentation" : "",
          "simpleType" : "ResolverRule",
          "variableSetterType" : "ResolverRule"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>DeleteResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRule",
          "variableName" : "resolverRule",
          "variableType" : "ResolverRule",
          "documentation" : "<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>",
          "simpleType" : "ResolverRule",
          "variableSetterType" : "ResolverRule"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRule" : {
          "c2jName" : "ResolverRule",
          "c2jShape" : "ResolverRule",
          "deprecated" : false,
          "documentation" : "<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>DeleteResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRule",
          "getterDocumentation" : "/**<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n@return Information about the <code>DeleteResolverRule</code> request, including the status of the request.*/",
          "getterMethodName" : "getResolverRule",
          "getterModel" : {
            "returnType" : "ResolverRule",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRule",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRule",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverRule",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>DeleteResolverRule</code> request, including the status of the request.*/",
          "setterMethodName" : "setResolverRule",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRule",
            "variableName" : "resolverRule",
            "variableType" : "ResolverRule",
            "documentation" : "",
            "simpleType" : "ResolverRule",
            "variableSetterType" : "ResolverRule"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n@param resolverRule Information about the <code>DeleteResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRule",
            "variableName" : "resolverRule",
            "variableType" : "ResolverRule",
            "documentation" : "<p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>",
            "simpleType" : "ResolverRule",
            "variableSetterType" : "ResolverRule"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteResolverRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteResolverRuleResult",
        "variableName" : "deleteResolverRuleResult",
        "variableType" : "DeleteResolverRuleResult",
        "documentation" : null,
        "simpleType" : "DeleteResolverRuleResult",
        "variableSetterType" : "DeleteResolverRuleResult"
      },
      "wrapper" : false
    },
    "DisassociateResolverEndpointIpAddressRequest" : {
      "c2jName" : "DisassociateResolverEndpointIpAddressRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DisassociateResolverEndpointIpAddress",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.DisassociateResolverEndpointIpAddress",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the resolver endpoint that you want to disassociate an IP address from.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to disassociate an IP address from.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to disassociate an IP address from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to disassociate an IP address from.</p>\n@return The ID of the resolver endpoint that you want to disassociate an IP address from.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to disassociate an IP address from.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to disassociate an IP address from.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to disassociate an IP address from.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to disassociate an IP address from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the resolver endpoint that you want to disassociate an IP address from.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "IpAddress",
        "c2jShape" : "IpAddressUpdate",
        "deprecated" : false,
        "documentation" : "<p>The IPv4 address that you want to remove from a resolver endpoint.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The IPv4 address that you want to remove from a resolver endpoint.</p>\n@param ipAddress The IPv4 address that you want to remove from a resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIpAddress",
        "getterDocumentation" : "/**<p>The IPv4 address that you want to remove from a resolver endpoint.</p>\n@return The IPv4 address that you want to remove from a resolver endpoint.*/",
        "getterMethodName" : "getIpAddress",
        "getterModel" : {
          "returnType" : "IpAddressUpdate",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IpAddress",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IpAddress",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "IpAddress",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The IPv4 address that you want to remove from a resolver endpoint.</p>\n@param ipAddress The IPv4 address that you want to remove from a resolver endpoint.*/",
        "setterMethodName" : "setIpAddress",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "IpAddressUpdate",
          "variableName" : "ipAddress",
          "variableType" : "IpAddressUpdate",
          "documentation" : "",
          "simpleType" : "IpAddressUpdate",
          "variableSetterType" : "IpAddressUpdate"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The IPv4 address that you want to remove from a resolver endpoint.</p>\n@param ipAddress The IPv4 address that you want to remove from a resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "IpAddressUpdate",
          "variableName" : "ipAddress",
          "variableType" : "IpAddressUpdate",
          "documentation" : "<p>The IPv4 address that you want to remove from a resolver endpoint.</p>",
          "simpleType" : "IpAddressUpdate",
          "variableSetterType" : "IpAddressUpdate"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "IpAddress" : {
          "c2jName" : "IpAddress",
          "c2jShape" : "IpAddressUpdate",
          "deprecated" : false,
          "documentation" : "<p>The IPv4 address that you want to remove from a resolver endpoint.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The IPv4 address that you want to remove from a resolver endpoint.</p>\n@param ipAddress The IPv4 address that you want to remove from a resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIpAddress",
          "getterDocumentation" : "/**<p>The IPv4 address that you want to remove from a resolver endpoint.</p>\n@return The IPv4 address that you want to remove from a resolver endpoint.*/",
          "getterMethodName" : "getIpAddress",
          "getterModel" : {
            "returnType" : "IpAddressUpdate",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IpAddress",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IpAddress",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "IpAddress",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The IPv4 address that you want to remove from a resolver endpoint.</p>\n@param ipAddress The IPv4 address that you want to remove from a resolver endpoint.*/",
          "setterMethodName" : "setIpAddress",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "IpAddressUpdate",
            "variableName" : "ipAddress",
            "variableType" : "IpAddressUpdate",
            "documentation" : "",
            "simpleType" : "IpAddressUpdate",
            "variableSetterType" : "IpAddressUpdate"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The IPv4 address that you want to remove from a resolver endpoint.</p>\n@param ipAddress The IPv4 address that you want to remove from a resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "IpAddressUpdate",
            "variableName" : "ipAddress",
            "variableType" : "IpAddressUpdate",
            "documentation" : "<p>The IPv4 address that you want to remove from a resolver endpoint.</p>",
            "simpleType" : "IpAddressUpdate",
            "variableSetterType" : "IpAddressUpdate"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the resolver endpoint that you want to disassociate an IP address from.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to disassociate an IP address from.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to disassociate an IP address from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to disassociate an IP address from.</p>\n@return The ID of the resolver endpoint that you want to disassociate an IP address from.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to disassociate an IP address from.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to disassociate an IP address from.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to disassociate an IP address from.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to disassociate an IP address from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the resolver endpoint that you want to disassociate an IP address from.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverEndpointId", "IpAddress" ],
      "shapeName" : "DisassociateResolverEndpointIpAddressRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DisassociateResolverEndpointIpAddressRequest",
        "variableName" : "disassociateResolverEndpointIpAddressRequest",
        "variableType" : "DisassociateResolverEndpointIpAddressRequest",
        "documentation" : null,
        "simpleType" : "DisassociateResolverEndpointIpAddressRequest",
        "variableSetterType" : "DisassociateResolverEndpointIpAddressRequest"
      },
      "wrapper" : false
    },
    "DisassociateResolverEndpointIpAddressResult" : {
      "c2jName" : "DisassociateResolverEndpointIpAddressResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverEndpoint",
        "c2jShape" : "ResolverEndpoint",
        "deprecated" : false,
        "documentation" : "<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>DisassociateResolverEndpointIpAddress</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpoint",
        "getterDocumentation" : "/**<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n@return The response to an <code>DisassociateResolverEndpointIpAddress</code> request.*/",
        "getterMethodName" : "getResolverEndpoint",
        "getterModel" : {
          "returnType" : "ResolverEndpoint",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpoint",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpoint",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverEndpoint",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>DisassociateResolverEndpointIpAddress</code> request.*/",
        "setterMethodName" : "setResolverEndpoint",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>DisassociateResolverEndpointIpAddress</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverEndpoint" : {
          "c2jName" : "ResolverEndpoint",
          "c2jShape" : "ResolverEndpoint",
          "deprecated" : false,
          "documentation" : "<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>DisassociateResolverEndpointIpAddress</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpoint",
          "getterDocumentation" : "/**<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n@return The response to an <code>DisassociateResolverEndpointIpAddress</code> request.*/",
          "getterMethodName" : "getResolverEndpoint",
          "getterModel" : {
            "returnType" : "ResolverEndpoint",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpoint",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpoint",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverEndpoint",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>DisassociateResolverEndpointIpAddress</code> request.*/",
          "setterMethodName" : "setResolverEndpoint",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n@param resolverEndpoint The response to an <code>DisassociateResolverEndpointIpAddress</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "<p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DisassociateResolverEndpointIpAddressResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DisassociateResolverEndpointIpAddressResult",
        "variableName" : "disassociateResolverEndpointIpAddressResult",
        "variableType" : "DisassociateResolverEndpointIpAddressResult",
        "documentation" : null,
        "simpleType" : "DisassociateResolverEndpointIpAddressResult",
        "variableSetterType" : "DisassociateResolverEndpointIpAddressResult"
      },
      "wrapper" : false
    },
    "DisassociateResolverRuleRequest" : {
      "c2jName" : "DisassociateResolverRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DisassociateResolverRule",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.DisassociateResolverRule",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "VPCId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the VPC that you want to disassociate the resolver rule from.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the VPC that you want to disassociate the resolver rule from.</p>\n@param vPCId The ID of the VPC that you want to disassociate the resolver rule from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVPCId",
        "getterDocumentation" : "/**<p>The ID of the VPC that you want to disassociate the resolver rule from.</p>\n@return The ID of the VPC that you want to disassociate the resolver rule from.*/",
        "getterMethodName" : "getVPCId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VPCId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VPCId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VPCId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the VPC that you want to disassociate the resolver rule from.</p>\n@param vPCId The ID of the VPC that you want to disassociate the resolver rule from.*/",
        "setterMethodName" : "setVPCId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vPCId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the VPC that you want to disassociate the resolver rule from.</p>\n@param vPCId The ID of the VPC that you want to disassociate the resolver rule from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vPCId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the VPC that you want to disassociate the resolver rule from.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverRuleId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the resolver rule that you want to disassociate from the specified VPC.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to disassociate from the specified VPC.</p>\n@param resolverRuleId The ID of the resolver rule that you want to disassociate from the specified VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleId",
        "getterDocumentation" : "/**<p>The ID of the resolver rule that you want to disassociate from the specified VPC.</p>\n@return The ID of the resolver rule that you want to disassociate from the specified VPC.*/",
        "getterMethodName" : "getResolverRuleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRuleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the resolver rule that you want to disassociate from the specified VPC.</p>\n@param resolverRuleId The ID of the resolver rule that you want to disassociate from the specified VPC.*/",
        "setterMethodName" : "setResolverRuleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to disassociate from the specified VPC.</p>\n@param resolverRuleId The ID of the resolver rule that you want to disassociate from the specified VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the resolver rule that you want to disassociate from the specified VPC.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRuleId" : {
          "c2jName" : "ResolverRuleId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the resolver rule that you want to disassociate from the specified VPC.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to disassociate from the specified VPC.</p>\n@param resolverRuleId The ID of the resolver rule that you want to disassociate from the specified VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleId",
          "getterDocumentation" : "/**<p>The ID of the resolver rule that you want to disassociate from the specified VPC.</p>\n@return The ID of the resolver rule that you want to disassociate from the specified VPC.*/",
          "getterMethodName" : "getResolverRuleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRuleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the resolver rule that you want to disassociate from the specified VPC.</p>\n@param resolverRuleId The ID of the resolver rule that you want to disassociate from the specified VPC.*/",
          "setterMethodName" : "setResolverRuleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to disassociate from the specified VPC.</p>\n@param resolverRuleId The ID of the resolver rule that you want to disassociate from the specified VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the resolver rule that you want to disassociate from the specified VPC.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "VPCId" : {
          "c2jName" : "VPCId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the VPC that you want to disassociate the resolver rule from.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the VPC that you want to disassociate the resolver rule from.</p>\n@param vPCId The ID of the VPC that you want to disassociate the resolver rule from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVPCId",
          "getterDocumentation" : "/**<p>The ID of the VPC that you want to disassociate the resolver rule from.</p>\n@return The ID of the VPC that you want to disassociate the resolver rule from.*/",
          "getterMethodName" : "getVPCId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VPCId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VPCId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VPCId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the VPC that you want to disassociate the resolver rule from.</p>\n@param vPCId The ID of the VPC that you want to disassociate the resolver rule from.*/",
          "setterMethodName" : "setVPCId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vPCId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the VPC that you want to disassociate the resolver rule from.</p>\n@param vPCId The ID of the VPC that you want to disassociate the resolver rule from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vPCId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the VPC that you want to disassociate the resolver rule from.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "VPCId", "ResolverRuleId" ],
      "shapeName" : "DisassociateResolverRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DisassociateResolverRuleRequest",
        "variableName" : "disassociateResolverRuleRequest",
        "variableType" : "DisassociateResolverRuleRequest",
        "documentation" : null,
        "simpleType" : "DisassociateResolverRuleRequest",
        "variableSetterType" : "DisassociateResolverRuleRequest"
      },
      "wrapper" : false
    },
    "DisassociateResolverRuleResult" : {
      "c2jName" : "DisassociateResolverRuleResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverRuleAssociation",
        "c2jShape" : "ResolverRuleAssociation",
        "deprecated" : false,
        "documentation" : "<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>DisassociateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleAssociation",
        "getterDocumentation" : "/**<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n@return Information about the <code>DisassociateResolverRule</code> request, including the status of the request.*/",
        "getterMethodName" : "getResolverRuleAssociation",
        "getterModel" : {
          "returnType" : "ResolverRuleAssociation",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleAssociation",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleAssociation",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverRuleAssociation",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>DisassociateResolverRule</code> request, including the status of the request.*/",
        "setterMethodName" : "setResolverRuleAssociation",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRuleAssociation",
          "variableName" : "resolverRuleAssociation",
          "variableType" : "ResolverRuleAssociation",
          "documentation" : "",
          "simpleType" : "ResolverRuleAssociation",
          "variableSetterType" : "ResolverRuleAssociation"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>DisassociateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRuleAssociation",
          "variableName" : "resolverRuleAssociation",
          "variableType" : "ResolverRuleAssociation",
          "documentation" : "<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>",
          "simpleType" : "ResolverRuleAssociation",
          "variableSetterType" : "ResolverRuleAssociation"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRuleAssociation" : {
          "c2jName" : "ResolverRuleAssociation",
          "c2jShape" : "ResolverRuleAssociation",
          "deprecated" : false,
          "documentation" : "<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>DisassociateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleAssociation",
          "getterDocumentation" : "/**<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n@return Information about the <code>DisassociateResolverRule</code> request, including the status of the request.*/",
          "getterMethodName" : "getResolverRuleAssociation",
          "getterModel" : {
            "returnType" : "ResolverRuleAssociation",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleAssociation",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleAssociation",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverRuleAssociation",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>DisassociateResolverRule</code> request, including the status of the request.*/",
          "setterMethodName" : "setResolverRuleAssociation",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRuleAssociation",
            "variableName" : "resolverRuleAssociation",
            "variableType" : "ResolverRuleAssociation",
            "documentation" : "",
            "simpleType" : "ResolverRuleAssociation",
            "variableSetterType" : "ResolverRuleAssociation"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n@param resolverRuleAssociation Information about the <code>DisassociateResolverRule</code> request, including the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRuleAssociation",
            "variableName" : "resolverRuleAssociation",
            "variableType" : "ResolverRuleAssociation",
            "documentation" : "<p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>",
            "simpleType" : "ResolverRuleAssociation",
            "variableSetterType" : "ResolverRuleAssociation"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DisassociateResolverRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DisassociateResolverRuleResult",
        "variableName" : "disassociateResolverRuleResult",
        "variableType" : "DisassociateResolverRuleResult",
        "documentation" : null,
        "simpleType" : "DisassociateResolverRuleResult",
        "variableSetterType" : "DisassociateResolverRuleResult"
      },
      "wrapper" : false
    },
    "Filter" : {
      "c2jName" : "Filter",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>For <code>List</code> operations, an optional specification to return a subset of objects, such as resolver endpoints or resolver rules.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Name",
        "c2jShape" : "FilterName",
        "deprecated" : false,
        "documentation" : "<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.</p>\n@param name When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.</p>\n@return When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.</p>\n@param name When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.</p>\n@param name When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Values",
        "c2jShape" : "FilterValues",
        "deprecated" : false,
        "documentation" : "<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.</p>\n@param values When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValues",
        "getterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.</p>\n@return When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.*/",
        "getterMethodName" : "getValues",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Values",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Values",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FilterValue",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Values",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.</p>\n@param values When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.*/",
        "setterMethodName" : "setValues",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "values",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setValues(java.util.Collection)} or {@link #withValues(java.util.Collection)} if you want to override the existing values.</p>\n@param values When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "values",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "FilterName",
          "deprecated" : false,
          "documentation" : "<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.</p>\n@param name When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.</p>\n@return When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.</p>\n@param name When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.</p>\n@param name When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>Direction</code> for the value of <code>Name</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Values" : {
          "c2jName" : "Values",
          "c2jShape" : "FilterValues",
          "deprecated" : false,
          "documentation" : "<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.</p>\n@param values When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValues",
          "getterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.</p>\n@return When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.*/",
          "getterMethodName" : "getValues",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Values",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Values",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FilterValue",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Values",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.</p>\n@param values When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.*/",
          "setterMethodName" : "setValues",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "values",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setValues(java.util.Collection)} or {@link #withValues(java.util.Collection)} if you want to override the existing values.</p>\n@param values When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "values",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify <code>INBOUND</code> for the value of <code>Values</code>.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Filter",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Filter",
        "variableName" : "filter",
        "variableType" : "Filter",
        "documentation" : null,
        "simpleType" : "Filter",
        "variableSetterType" : "Filter"
      },
      "wrapper" : false
    },
    "GetResolverEndpointRequest" : {
      "c2jName" : "GetResolverEndpointRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetResolverEndpoint",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.GetResolverEndpoint",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the resolver endpoint that you want to get information about.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to get information about.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to get information about.</p>\n@return The ID of the resolver endpoint that you want to get information about.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to get information about.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to get information about.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to get information about.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the resolver endpoint that you want to get information about.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the resolver endpoint that you want to get information about.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to get information about.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to get information about.</p>\n@return The ID of the resolver endpoint that you want to get information about.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to get information about.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to get information about.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to get information about.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the resolver endpoint that you want to get information about.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverEndpointId" ],
      "shapeName" : "GetResolverEndpointRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverEndpointRequest",
        "variableName" : "getResolverEndpointRequest",
        "variableType" : "GetResolverEndpointRequest",
        "documentation" : null,
        "simpleType" : "GetResolverEndpointRequest",
        "variableSetterType" : "GetResolverEndpointRequest"
      },
      "wrapper" : false
    },
    "GetResolverEndpointResult" : {
      "c2jName" : "GetResolverEndpointResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverEndpoint",
        "c2jShape" : "ResolverEndpoint",
        "deprecated" : false,
        "documentation" : "<p>Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n@param resolverEndpoint Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpoint",
        "getterDocumentation" : "/**<p>Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n@return Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.*/",
        "getterMethodName" : "getResolverEndpoint",
        "getterModel" : {
          "returnType" : "ResolverEndpoint",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpoint",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpoint",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverEndpoint",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n@param resolverEndpoint Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.*/",
        "setterMethodName" : "setResolverEndpoint",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n@param resolverEndpoint Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "<p>Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverEndpoint" : {
          "c2jName" : "ResolverEndpoint",
          "c2jShape" : "ResolverEndpoint",
          "deprecated" : false,
          "documentation" : "<p>Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n@param resolverEndpoint Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpoint",
          "getterDocumentation" : "/**<p>Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n@return Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.*/",
          "getterMethodName" : "getResolverEndpoint",
          "getterModel" : {
            "returnType" : "ResolverEndpoint",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpoint",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpoint",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverEndpoint",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n@param resolverEndpoint Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.*/",
          "setterMethodName" : "setResolverEndpoint",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n@param resolverEndpoint Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "<p>Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetResolverEndpointResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverEndpointResult",
        "variableName" : "getResolverEndpointResult",
        "variableType" : "GetResolverEndpointResult",
        "documentation" : null,
        "simpleType" : "GetResolverEndpointResult",
        "variableSetterType" : "GetResolverEndpointResult"
      },
      "wrapper" : false
    },
    "GetResolverRuleAssociationRequest" : {
      "c2jName" : "GetResolverRuleAssociationRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetResolverRuleAssociation",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.GetResolverRuleAssociation",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverRuleAssociationId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the resolver rule association that you want to get information about.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the resolver rule association that you want to get information about.</p>\n@param resolverRuleAssociationId The ID of the resolver rule association that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleAssociationId",
        "getterDocumentation" : "/**<p>The ID of the resolver rule association that you want to get information about.</p>\n@return The ID of the resolver rule association that you want to get information about.*/",
        "getterMethodName" : "getResolverRuleAssociationId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleAssociationId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleAssociationId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRuleAssociationId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the resolver rule association that you want to get information about.</p>\n@param resolverRuleAssociationId The ID of the resolver rule association that you want to get information about.*/",
        "setterMethodName" : "setResolverRuleAssociationId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleAssociationId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the resolver rule association that you want to get information about.</p>\n@param resolverRuleAssociationId The ID of the resolver rule association that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleAssociationId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the resolver rule association that you want to get information about.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRuleAssociationId" : {
          "c2jName" : "ResolverRuleAssociationId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the resolver rule association that you want to get information about.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the resolver rule association that you want to get information about.</p>\n@param resolverRuleAssociationId The ID of the resolver rule association that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleAssociationId",
          "getterDocumentation" : "/**<p>The ID of the resolver rule association that you want to get information about.</p>\n@return The ID of the resolver rule association that you want to get information about.*/",
          "getterMethodName" : "getResolverRuleAssociationId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleAssociationId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleAssociationId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRuleAssociationId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the resolver rule association that you want to get information about.</p>\n@param resolverRuleAssociationId The ID of the resolver rule association that you want to get information about.*/",
          "setterMethodName" : "setResolverRuleAssociationId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleAssociationId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the resolver rule association that you want to get information about.</p>\n@param resolverRuleAssociationId The ID of the resolver rule association that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleAssociationId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the resolver rule association that you want to get information about.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverRuleAssociationId" ],
      "shapeName" : "GetResolverRuleAssociationRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRuleAssociationRequest",
        "variableName" : "getResolverRuleAssociationRequest",
        "variableType" : "GetResolverRuleAssociationRequest",
        "documentation" : null,
        "simpleType" : "GetResolverRuleAssociationRequest",
        "variableSetterType" : "GetResolverRuleAssociationRequest"
      },
      "wrapper" : false
    },
    "GetResolverRuleAssociationResult" : {
      "c2jName" : "GetResolverRuleAssociationResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverRuleAssociation",
        "c2jShape" : "ResolverRuleAssociation",
        "deprecated" : false,
        "documentation" : "<p>Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n@param resolverRuleAssociation Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleAssociation",
        "getterDocumentation" : "/**<p>Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n@return Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.*/",
        "getterMethodName" : "getResolverRuleAssociation",
        "getterModel" : {
          "returnType" : "ResolverRuleAssociation",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleAssociation",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleAssociation",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverRuleAssociation",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n@param resolverRuleAssociation Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.*/",
        "setterMethodName" : "setResolverRuleAssociation",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRuleAssociation",
          "variableName" : "resolverRuleAssociation",
          "variableType" : "ResolverRuleAssociation",
          "documentation" : "",
          "simpleType" : "ResolverRuleAssociation",
          "variableSetterType" : "ResolverRuleAssociation"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n@param resolverRuleAssociation Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRuleAssociation",
          "variableName" : "resolverRuleAssociation",
          "variableType" : "ResolverRuleAssociation",
          "documentation" : "<p>Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>",
          "simpleType" : "ResolverRuleAssociation",
          "variableSetterType" : "ResolverRuleAssociation"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRuleAssociation" : {
          "c2jName" : "ResolverRuleAssociation",
          "c2jShape" : "ResolverRuleAssociation",
          "deprecated" : false,
          "documentation" : "<p>Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n@param resolverRuleAssociation Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleAssociation",
          "getterDocumentation" : "/**<p>Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n@return Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.*/",
          "getterMethodName" : "getResolverRuleAssociation",
          "getterModel" : {
            "returnType" : "ResolverRuleAssociation",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleAssociation",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleAssociation",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverRuleAssociation",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n@param resolverRuleAssociation Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.*/",
          "setterMethodName" : "setResolverRuleAssociation",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRuleAssociation",
            "variableName" : "resolverRuleAssociation",
            "variableType" : "ResolverRuleAssociation",
            "documentation" : "",
            "simpleType" : "ResolverRuleAssociation",
            "variableSetterType" : "ResolverRuleAssociation"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n@param resolverRuleAssociation Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRuleAssociation",
            "variableName" : "resolverRuleAssociation",
            "variableType" : "ResolverRuleAssociation",
            "documentation" : "<p>Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>",
            "simpleType" : "ResolverRuleAssociation",
            "variableSetterType" : "ResolverRuleAssociation"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetResolverRuleAssociationResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRuleAssociationResult",
        "variableName" : "getResolverRuleAssociationResult",
        "variableType" : "GetResolverRuleAssociationResult",
        "documentation" : null,
        "simpleType" : "GetResolverRuleAssociationResult",
        "variableSetterType" : "GetResolverRuleAssociationResult"
      },
      "wrapper" : false
    },
    "GetResolverRulePolicyRequest" : {
      "c2jName" : "GetResolverRulePolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetResolverRulePolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.GetResolverRulePolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The ID of the resolver rule policy that you want to get information about.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the resolver rule policy that you want to get information about.</p>\n@param arn The ID of the resolver rule policy that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>The ID of the resolver rule policy that you want to get information about.</p>\n@return The ID of the resolver rule policy that you want to get information about.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the resolver rule policy that you want to get information about.</p>\n@param arn The ID of the resolver rule policy that you want to get information about.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the resolver rule policy that you want to get information about.</p>\n@param arn The ID of the resolver rule policy that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>The ID of the resolver rule policy that you want to get information about.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The ID of the resolver rule policy that you want to get information about.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the resolver rule policy that you want to get information about.</p>\n@param arn The ID of the resolver rule policy that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>The ID of the resolver rule policy that you want to get information about.</p>\n@return The ID of the resolver rule policy that you want to get information about.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the resolver rule policy that you want to get information about.</p>\n@param arn The ID of the resolver rule policy that you want to get information about.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the resolver rule policy that you want to get information about.</p>\n@param arn The ID of the resolver rule policy that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>The ID of the resolver rule policy that you want to get information about.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Arn" ],
      "shapeName" : "GetResolverRulePolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRulePolicyRequest",
        "variableName" : "getResolverRulePolicyRequest",
        "variableType" : "GetResolverRulePolicyRequest",
        "documentation" : null,
        "simpleType" : "GetResolverRulePolicyRequest",
        "variableSetterType" : "GetResolverRulePolicyRequest"
      },
      "wrapper" : false
    },
    "GetResolverRulePolicyResult" : {
      "c2jName" : "GetResolverRulePolicyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverRulePolicy",
        "c2jShape" : "ResolverRulePolicy",
        "deprecated" : false,
        "documentation" : "<p>Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n@param resolverRulePolicy Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRulePolicy",
        "getterDocumentation" : "/**<p>Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n@return Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.*/",
        "getterMethodName" : "getResolverRulePolicy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRulePolicy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRulePolicy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRulePolicy",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n@param resolverRulePolicy Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.*/",
        "setterMethodName" : "setResolverRulePolicy",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRulePolicy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n@param resolverRulePolicy Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRulePolicy",
          "variableType" : "String",
          "documentation" : "<p>Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRulePolicy" : {
          "c2jName" : "ResolverRulePolicy",
          "c2jShape" : "ResolverRulePolicy",
          "deprecated" : false,
          "documentation" : "<p>Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n@param resolverRulePolicy Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRulePolicy",
          "getterDocumentation" : "/**<p>Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n@return Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.*/",
          "getterMethodName" : "getResolverRulePolicy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRulePolicy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRulePolicy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRulePolicy",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n@param resolverRulePolicy Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.*/",
          "setterMethodName" : "setResolverRulePolicy",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRulePolicy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n@param resolverRulePolicy Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRulePolicy",
            "variableType" : "String",
            "documentation" : "<p>Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetResolverRulePolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRulePolicyResult",
        "variableName" : "getResolverRulePolicyResult",
        "variableType" : "GetResolverRulePolicyResult",
        "documentation" : null,
        "simpleType" : "GetResolverRulePolicyResult",
        "variableSetterType" : "GetResolverRulePolicyResult"
      },
      "wrapper" : false
    },
    "GetResolverRuleRequest" : {
      "c2jName" : "GetResolverRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetResolverRule",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.GetResolverRule",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverRuleId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the resolver rule that you want to get information about.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to get information about.</p>\n@param resolverRuleId The ID of the resolver rule that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleId",
        "getterDocumentation" : "/**<p>The ID of the resolver rule that you want to get information about.</p>\n@return The ID of the resolver rule that you want to get information about.*/",
        "getterMethodName" : "getResolverRuleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRuleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the resolver rule that you want to get information about.</p>\n@param resolverRuleId The ID of the resolver rule that you want to get information about.*/",
        "setterMethodName" : "setResolverRuleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to get information about.</p>\n@param resolverRuleId The ID of the resolver rule that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the resolver rule that you want to get information about.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRuleId" : {
          "c2jName" : "ResolverRuleId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the resolver rule that you want to get information about.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to get information about.</p>\n@param resolverRuleId The ID of the resolver rule that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleId",
          "getterDocumentation" : "/**<p>The ID of the resolver rule that you want to get information about.</p>\n@return The ID of the resolver rule that you want to get information about.*/",
          "getterMethodName" : "getResolverRuleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRuleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the resolver rule that you want to get information about.</p>\n@param resolverRuleId The ID of the resolver rule that you want to get information about.*/",
          "setterMethodName" : "setResolverRuleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to get information about.</p>\n@param resolverRuleId The ID of the resolver rule that you want to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the resolver rule that you want to get information about.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverRuleId" ],
      "shapeName" : "GetResolverRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRuleRequest",
        "variableName" : "getResolverRuleRequest",
        "variableType" : "GetResolverRuleRequest",
        "documentation" : null,
        "simpleType" : "GetResolverRuleRequest",
        "variableSetterType" : "GetResolverRuleRequest"
      },
      "wrapper" : false
    },
    "GetResolverRuleResult" : {
      "c2jName" : "GetResolverRuleResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverRule",
        "c2jShape" : "ResolverRule",
        "deprecated" : false,
        "documentation" : "<p>Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n@param resolverRule Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRule",
        "getterDocumentation" : "/**<p>Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n@return Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.*/",
        "getterMethodName" : "getResolverRule",
        "getterModel" : {
          "returnType" : "ResolverRule",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRule",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRule",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverRule",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n@param resolverRule Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.*/",
        "setterMethodName" : "setResolverRule",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRule",
          "variableName" : "resolverRule",
          "variableType" : "ResolverRule",
          "documentation" : "",
          "simpleType" : "ResolverRule",
          "variableSetterType" : "ResolverRule"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n@param resolverRule Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRule",
          "variableName" : "resolverRule",
          "variableType" : "ResolverRule",
          "documentation" : "<p>Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.</p>",
          "simpleType" : "ResolverRule",
          "variableSetterType" : "ResolverRule"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRule" : {
          "c2jName" : "ResolverRule",
          "c2jShape" : "ResolverRule",
          "deprecated" : false,
          "documentation" : "<p>Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n@param resolverRule Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRule",
          "getterDocumentation" : "/**<p>Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n@return Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.*/",
          "getterMethodName" : "getResolverRule",
          "getterModel" : {
            "returnType" : "ResolverRule",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRule",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRule",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverRule",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n@param resolverRule Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.*/",
          "setterMethodName" : "setResolverRule",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRule",
            "variableName" : "resolverRule",
            "variableType" : "ResolverRule",
            "documentation" : "",
            "simpleType" : "ResolverRule",
            "variableSetterType" : "ResolverRule"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n@param resolverRule Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRule",
            "variableName" : "resolverRule",
            "variableType" : "ResolverRule",
            "documentation" : "<p>Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.</p>",
            "simpleType" : "ResolverRule",
            "variableSetterType" : "ResolverRule"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetResolverRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetResolverRuleResult",
        "variableName" : "getResolverRuleResult",
        "variableType" : "GetResolverRuleResult",
        "documentation" : null,
        "simpleType" : "GetResolverRuleResult",
        "variableSetterType" : "GetResolverRuleResult"
      },
      "wrapper" : false
    },
    "InternalServiceErrorException" : {
      "c2jName" : "InternalServiceErrorException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>We encountered an unknown error. Try again in a few minutes.</p>",
      "enums" : null,
      "errorCode" : "InternalServiceErrorException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InternalServiceErrorException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InternalServiceErrorException",
        "variableName" : "internalServiceErrorException",
        "variableType" : "InternalServiceErrorException",
        "documentation" : null,
        "simpleType" : "InternalServiceErrorException",
        "variableSetterType" : "InternalServiceErrorException"
      },
      "wrapper" : false
    },
    "InvalidNextTokenException" : {
      "c2jName" : "InvalidNextTokenException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidNextTokenException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidNextTokenException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidNextTokenException",
        "variableName" : "invalidNextTokenException",
        "variableType" : "InvalidNextTokenException",
        "documentation" : null,
        "simpleType" : "InvalidNextTokenException",
        "variableSetterType" : "InvalidNextTokenException"
      },
      "wrapper" : false
    },
    "InvalidParameterException" : {
      "c2jName" : "InvalidParameterException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>One or more parameters in this request are not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidParameterException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "FieldName",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n@param fieldName For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFieldName",
        "getterDocumentation" : "/**<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n@return For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.*/",
        "getterMethodName" : "getFieldName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FieldName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FieldName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FieldName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n@param fieldName For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.*/",
        "setterMethodName" : "setFieldName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "fieldName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n@param fieldName For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "fieldName",
          "variableType" : "String",
          "documentation" : "<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FieldName" : {
          "c2jName" : "FieldName",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n@param fieldName For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFieldName",
          "getterDocumentation" : "/**<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n@return For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.*/",
          "getterMethodName" : "getFieldName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FieldName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FieldName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FieldName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n@param fieldName For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.*/",
          "setterMethodName" : "setFieldName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "fieldName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n@param fieldName For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "fieldName",
            "variableType" : "String",
            "documentation" : "<p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Message" ],
      "shapeName" : "InvalidParameterException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidParameterException",
        "variableName" : "invalidParameterException",
        "variableType" : "InvalidParameterException",
        "documentation" : null,
        "simpleType" : "InvalidParameterException",
        "variableSetterType" : "InvalidParameterException"
      },
      "wrapper" : false
    },
    "InvalidPolicyDocumentException" : {
      "c2jName" : "InvalidPolicyDocument",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified resolver rule policy is invalid.</p>",
      "enums" : null,
      "errorCode" : "InvalidPolicyDocument",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidPolicyDocumentException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidPolicyDocumentException",
        "variableName" : "invalidPolicyDocumentException",
        "variableType" : "InvalidPolicyDocumentException",
        "documentation" : null,
        "simpleType" : "InvalidPolicyDocumentException",
        "variableSetterType" : "InvalidPolicyDocumentException"
      },
      "wrapper" : false
    },
    "InvalidRequestException" : {
      "c2jName" : "InvalidRequestException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The request is invalid.</p>",
      "enums" : null,
      "errorCode" : "InvalidRequestException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRequestException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidRequestException",
        "variableName" : "invalidRequestException",
        "variableType" : "InvalidRequestException",
        "documentation" : null,
        "simpleType" : "InvalidRequestException",
        "variableSetterType" : "InvalidRequestException"
      },
      "wrapper" : false
    },
    "InvalidTagException" : {
      "c2jName" : "InvalidTagException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified tag is invalid.</p>",
      "enums" : null,
      "errorCode" : "InvalidTagException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidTagException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidTagException",
        "variableName" : "invalidTagException",
        "variableType" : "InvalidTagException",
        "documentation" : null,
        "simpleType" : "InvalidTagException",
        "variableSetterType" : "InvalidTagException"
      },
      "wrapper" : false
    },
    "IpAddressRequest" : {
      "c2jName" : "IpAddressRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>In an <a>CreateResolverEndpoint</a> request, a subnet and IP address that you want to use for DNS queries.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "SubnetId",
        "c2jShape" : "SubnetId",
        "deprecated" : false,
        "documentation" : "<p>The subnet that contains the IP address.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The subnet that contains the IP address.</p>\n@param subnetId The subnet that contains the IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSubnetId",
        "getterDocumentation" : "/**<p>The subnet that contains the IP address.</p>\n@return The subnet that contains the IP address.*/",
        "getterMethodName" : "getSubnetId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SubnetId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SubnetId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SubnetId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The subnet that contains the IP address.</p>\n@param subnetId The subnet that contains the IP address.*/",
        "setterMethodName" : "setSubnetId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "subnetId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The subnet that contains the IP address.</p>\n@param subnetId The subnet that contains the IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "subnetId",
          "variableType" : "String",
          "documentation" : "<p>The subnet that contains the IP address.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Ip",
        "c2jShape" : "Ip",
        "deprecated" : false,
        "documentation" : "<p>The IP address that you want to use for DNS queries.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The IP address that you want to use for DNS queries.</p>\n@param ip The IP address that you want to use for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIp",
        "getterDocumentation" : "/**<p>The IP address that you want to use for DNS queries.</p>\n@return The IP address that you want to use for DNS queries.*/",
        "getterMethodName" : "getIp",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Ip",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Ip",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Ip",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The IP address that you want to use for DNS queries.</p>\n@param ip The IP address that you want to use for DNS queries.*/",
        "setterMethodName" : "setIp",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ip",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The IP address that you want to use for DNS queries.</p>\n@param ip The IP address that you want to use for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ip",
          "variableType" : "String",
          "documentation" : "<p>The IP address that you want to use for DNS queries.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Ip" : {
          "c2jName" : "Ip",
          "c2jShape" : "Ip",
          "deprecated" : false,
          "documentation" : "<p>The IP address that you want to use for DNS queries.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The IP address that you want to use for DNS queries.</p>\n@param ip The IP address that you want to use for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIp",
          "getterDocumentation" : "/**<p>The IP address that you want to use for DNS queries.</p>\n@return The IP address that you want to use for DNS queries.*/",
          "getterMethodName" : "getIp",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Ip",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Ip",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Ip",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The IP address that you want to use for DNS queries.</p>\n@param ip The IP address that you want to use for DNS queries.*/",
          "setterMethodName" : "setIp",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ip",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The IP address that you want to use for DNS queries.</p>\n@param ip The IP address that you want to use for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ip",
            "variableType" : "String",
            "documentation" : "<p>The IP address that you want to use for DNS queries.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SubnetId" : {
          "c2jName" : "SubnetId",
          "c2jShape" : "SubnetId",
          "deprecated" : false,
          "documentation" : "<p>The subnet that contains the IP address.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The subnet that contains the IP address.</p>\n@param subnetId The subnet that contains the IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSubnetId",
          "getterDocumentation" : "/**<p>The subnet that contains the IP address.</p>\n@return The subnet that contains the IP address.*/",
          "getterMethodName" : "getSubnetId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SubnetId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SubnetId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SubnetId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The subnet that contains the IP address.</p>\n@param subnetId The subnet that contains the IP address.*/",
          "setterMethodName" : "setSubnetId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "subnetId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The subnet that contains the IP address.</p>\n@param subnetId The subnet that contains the IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "subnetId",
            "variableType" : "String",
            "documentation" : "<p>The subnet that contains the IP address.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "SubnetId" ],
      "shapeName" : "IpAddressRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "IpAddressRequest",
        "variableName" : "ipAddressRequest",
        "variableType" : "IpAddressRequest",
        "documentation" : null,
        "simpleType" : "IpAddressRequest",
        "variableSetterType" : "IpAddressRequest"
      },
      "wrapper" : false
    },
    "IpAddressResponse" : {
      "c2jName" : "IpAddressResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>In the response to a <a>GetResolverEndpoint</a> request, information about the IP addresses that the resolver endpoint uses for DNS queries.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "IpId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of one IP address.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of one IP address.</p>\n@param ipId The ID of one IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIpId",
        "getterDocumentation" : "/**<p>The ID of one IP address.</p>\n@return The ID of one IP address.*/",
        "getterMethodName" : "getIpId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IpId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IpId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "IpId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of one IP address.</p>\n@param ipId The ID of one IP address.*/",
        "setterMethodName" : "setIpId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ipId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of one IP address.</p>\n@param ipId The ID of one IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ipId",
          "variableType" : "String",
          "documentation" : "<p>The ID of one IP address.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SubnetId",
        "c2jShape" : "SubnetId",
        "deprecated" : false,
        "documentation" : "<p>The ID of one subnet.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of one subnet.</p>\n@param subnetId The ID of one subnet.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSubnetId",
        "getterDocumentation" : "/**<p>The ID of one subnet.</p>\n@return The ID of one subnet.*/",
        "getterMethodName" : "getSubnetId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SubnetId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SubnetId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SubnetId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of one subnet.</p>\n@param subnetId The ID of one subnet.*/",
        "setterMethodName" : "setSubnetId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "subnetId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of one subnet.</p>\n@param subnetId The ID of one subnet.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "subnetId",
          "variableType" : "String",
          "documentation" : "<p>The ID of one subnet.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Ip",
        "c2jShape" : "Ip",
        "deprecated" : false,
        "documentation" : "<p>One IP address that the resolver endpoint uses for DNS queries.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>One IP address that the resolver endpoint uses for DNS queries.</p>\n@param ip One IP address that the resolver endpoint uses for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIp",
        "getterDocumentation" : "/**<p>One IP address that the resolver endpoint uses for DNS queries.</p>\n@return One IP address that the resolver endpoint uses for DNS queries.*/",
        "getterMethodName" : "getIp",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Ip",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Ip",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Ip",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>One IP address that the resolver endpoint uses for DNS queries.</p>\n@param ip One IP address that the resolver endpoint uses for DNS queries.*/",
        "setterMethodName" : "setIp",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ip",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>One IP address that the resolver endpoint uses for DNS queries.</p>\n@param ip One IP address that the resolver endpoint uses for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ip",
          "variableType" : "String",
          "documentation" : "<p>One IP address that the resolver endpoint uses for DNS queries.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Status",
        "c2jShape" : "IpAddressStatus",
        "deprecated" : false,
        "documentation" : "<p>A status code that gives the current status of the request.</p>",
        "enumType" : "IpAddressStatus",
        "fluentSetterDocumentation" : "/**<p>A status code that gives the current status of the request.</p>\n@param status A status code that gives the current status of the request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IpAddressStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>A status code that gives the current status of the request.</p>\n@return A status code that gives the current status of the request.\n@see IpAddressStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A status code that gives the current status of the request.</p>\n@param status A status code that gives the current status of the request.\n@see IpAddressStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A status code that gives the current status of the request.</p>\n@param status A status code that gives the current status of the request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IpAddressStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>A status code that gives the current status of the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "StatusMessage",
        "c2jShape" : "StatusMessage",
        "deprecated" : false,
        "documentation" : "<p>A message that provides additional information about the status of the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A message that provides additional information about the status of the request.</p>\n@param statusMessage A message that provides additional information about the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStatusMessage",
        "getterDocumentation" : "/**<p>A message that provides additional information about the status of the request.</p>\n@return A message that provides additional information about the status of the request.*/",
        "getterMethodName" : "getStatusMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "StatusMessage",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "StatusMessage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "StatusMessage",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A message that provides additional information about the status of the request.</p>\n@param statusMessage A message that provides additional information about the status of the request.*/",
        "setterMethodName" : "setStatusMessage",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "statusMessage",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A message that provides additional information about the status of the request.</p>\n@param statusMessage A message that provides additional information about the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "statusMessage",
          "variableType" : "String",
          "documentation" : "<p>A message that provides additional information about the status of the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreationTime",
        "c2jShape" : "Rfc3339TimeString",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationTime",
        "getterDocumentation" : "/**<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).*/",
        "getterMethodName" : "getCreationTime",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreationTime",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreationTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).*/",
        "setterMethodName" : "setCreationTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creationTime",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creationTime",
          "variableType" : "String",
          "documentation" : "<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ModificationTime",
        "c2jShape" : "Rfc3339TimeString",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withModificationTime",
        "getterDocumentation" : "/**<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).*/",
        "getterMethodName" : "getModificationTime",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ModificationTime",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ModificationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ModificationTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).*/",
        "setterMethodName" : "setModificationTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "modificationTime",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "modificationTime",
          "variableType" : "String",
          "documentation" : "<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CreationTime" : {
          "c2jName" : "CreationTime",
          "c2jShape" : "Rfc3339TimeString",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationTime",
          "getterDocumentation" : "/**<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).*/",
          "getterMethodName" : "getCreationTime",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreationTime",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreationTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).*/",
          "setterMethodName" : "setCreationTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creationTime",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creationTime",
            "variableType" : "String",
            "documentation" : "<p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Ip" : {
          "c2jName" : "Ip",
          "c2jShape" : "Ip",
          "deprecated" : false,
          "documentation" : "<p>One IP address that the resolver endpoint uses for DNS queries.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>One IP address that the resolver endpoint uses for DNS queries.</p>\n@param ip One IP address that the resolver endpoint uses for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIp",
          "getterDocumentation" : "/**<p>One IP address that the resolver endpoint uses for DNS queries.</p>\n@return One IP address that the resolver endpoint uses for DNS queries.*/",
          "getterMethodName" : "getIp",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Ip",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Ip",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Ip",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>One IP address that the resolver endpoint uses for DNS queries.</p>\n@param ip One IP address that the resolver endpoint uses for DNS queries.*/",
          "setterMethodName" : "setIp",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ip",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>One IP address that the resolver endpoint uses for DNS queries.</p>\n@param ip One IP address that the resolver endpoint uses for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ip",
            "variableType" : "String",
            "documentation" : "<p>One IP address that the resolver endpoint uses for DNS queries.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "IpId" : {
          "c2jName" : "IpId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of one IP address.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of one IP address.</p>\n@param ipId The ID of one IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIpId",
          "getterDocumentation" : "/**<p>The ID of one IP address.</p>\n@return The ID of one IP address.*/",
          "getterMethodName" : "getIpId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IpId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IpId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "IpId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of one IP address.</p>\n@param ipId The ID of one IP address.*/",
          "setterMethodName" : "setIpId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ipId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of one IP address.</p>\n@param ipId The ID of one IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ipId",
            "variableType" : "String",
            "documentation" : "<p>The ID of one IP address.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ModificationTime" : {
          "c2jName" : "ModificationTime",
          "c2jShape" : "Rfc3339TimeString",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withModificationTime",
          "getterDocumentation" : "/**<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).*/",
          "getterMethodName" : "getModificationTime",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ModificationTime",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ModificationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ModificationTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).*/",
          "setterMethodName" : "setModificationTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "modificationTime",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "modificationTime",
            "variableType" : "String",
            "documentation" : "<p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "Status",
          "c2jShape" : "IpAddressStatus",
          "deprecated" : false,
          "documentation" : "<p>A status code that gives the current status of the request.</p>",
          "enumType" : "IpAddressStatus",
          "fluentSetterDocumentation" : "/**<p>A status code that gives the current status of the request.</p>\n@param status A status code that gives the current status of the request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IpAddressStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>A status code that gives the current status of the request.</p>\n@return A status code that gives the current status of the request.\n@see IpAddressStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A status code that gives the current status of the request.</p>\n@param status A status code that gives the current status of the request.\n@see IpAddressStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A status code that gives the current status of the request.</p>\n@param status A status code that gives the current status of the request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IpAddressStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>A status code that gives the current status of the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StatusMessage" : {
          "c2jName" : "StatusMessage",
          "c2jShape" : "StatusMessage",
          "deprecated" : false,
          "documentation" : "<p>A message that provides additional information about the status of the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A message that provides additional information about the status of the request.</p>\n@param statusMessage A message that provides additional information about the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStatusMessage",
          "getterDocumentation" : "/**<p>A message that provides additional information about the status of the request.</p>\n@return A message that provides additional information about the status of the request.*/",
          "getterMethodName" : "getStatusMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "StatusMessage",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "StatusMessage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "StatusMessage",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A message that provides additional information about the status of the request.</p>\n@param statusMessage A message that provides additional information about the status of the request.*/",
          "setterMethodName" : "setStatusMessage",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "statusMessage",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A message that provides additional information about the status of the request.</p>\n@param statusMessage A message that provides additional information about the status of the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "statusMessage",
            "variableType" : "String",
            "documentation" : "<p>A message that provides additional information about the status of the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SubnetId" : {
          "c2jName" : "SubnetId",
          "c2jShape" : "SubnetId",
          "deprecated" : false,
          "documentation" : "<p>The ID of one subnet.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of one subnet.</p>\n@param subnetId The ID of one subnet.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSubnetId",
          "getterDocumentation" : "/**<p>The ID of one subnet.</p>\n@return The ID of one subnet.*/",
          "getterMethodName" : "getSubnetId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SubnetId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SubnetId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SubnetId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of one subnet.</p>\n@param subnetId The ID of one subnet.*/",
          "setterMethodName" : "setSubnetId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "subnetId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of one subnet.</p>\n@param subnetId The ID of one subnet.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "subnetId",
            "variableType" : "String",
            "documentation" : "<p>The ID of one subnet.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "IpAddressResponse",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "IpAddressResponse",
        "variableName" : "ipAddressResponse",
        "variableType" : "IpAddressResponse",
        "documentation" : null,
        "simpleType" : "IpAddressResponse",
        "variableSetterType" : "IpAddressResponse"
      },
      "wrapper" : false
    },
    "IpAddressStatus" : {
      "c2jName" : "IpAddressStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "CREATING",
        "value" : "CREATING"
      }, {
        "name" : "FAILED_CREATION",
        "value" : "FAILED_CREATION"
      }, {
        "name" : "ATTACHING",
        "value" : "ATTACHING"
      }, {
        "name" : "ATTACHED",
        "value" : "ATTACHED"
      }, {
        "name" : "REMAP_DETACHING",
        "value" : "REMAP_DETACHING"
      }, {
        "name" : "REMAP_ATTACHING",
        "value" : "REMAP_ATTACHING"
      }, {
        "name" : "DETACHING",
        "value" : "DETACHING"
      }, {
        "name" : "FAILED_RESOURCE_GONE",
        "value" : "FAILED_RESOURCE_GONE"
      }, {
        "name" : "DELETING",
        "value" : "DELETING"
      }, {
        "name" : "DELETE_FAILED_FAS_EXPIRED",
        "value" : "DELETE_FAILED_FAS_EXPIRED"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "IpAddressStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "IpAddressStatus",
        "variableName" : "ipAddressStatus",
        "variableType" : "IpAddressStatus",
        "documentation" : null,
        "simpleType" : "IpAddressStatus",
        "variableSetterType" : "IpAddressStatus"
      },
      "wrapper" : false
    },
    "IpAddressUpdate" : {
      "c2jName" : "IpAddressUpdate",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>In an <a>UpdateResolverEndpoint</a> request, information about an IP address to update.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "IpId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p> <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n@param ipId <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIpId",
        "getterDocumentation" : "/**<p> <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n@return <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.*/",
        "getterMethodName" : "getIpId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IpId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IpId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "IpId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n@param ipId <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.*/",
        "setterMethodName" : "setIpId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ipId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n@param ipId <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ipId",
          "variableType" : "String",
          "documentation" : "<p> <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SubnetId",
        "c2jShape" : "SubnetId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n@param subnetId The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSubnetId",
        "getterDocumentation" : "/**<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n@return The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.*/",
        "getterMethodName" : "getSubnetId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SubnetId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SubnetId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SubnetId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n@param subnetId The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.*/",
        "setterMethodName" : "setSubnetId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "subnetId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n@param subnetId The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "subnetId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Ip",
        "c2jShape" : "Ip",
        "deprecated" : false,
        "documentation" : "<p>The new IP address.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The new IP address.</p>\n@param ip The new IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIp",
        "getterDocumentation" : "/**<p>The new IP address.</p>\n@return The new IP address.*/",
        "getterMethodName" : "getIp",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Ip",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Ip",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Ip",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The new IP address.</p>\n@param ip The new IP address.*/",
        "setterMethodName" : "setIp",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ip",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The new IP address.</p>\n@param ip The new IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ip",
          "variableType" : "String",
          "documentation" : "<p>The new IP address.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Ip" : {
          "c2jName" : "Ip",
          "c2jShape" : "Ip",
          "deprecated" : false,
          "documentation" : "<p>The new IP address.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The new IP address.</p>\n@param ip The new IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIp",
          "getterDocumentation" : "/**<p>The new IP address.</p>\n@return The new IP address.*/",
          "getterMethodName" : "getIp",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Ip",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Ip",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Ip",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The new IP address.</p>\n@param ip The new IP address.*/",
          "setterMethodName" : "setIp",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ip",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The new IP address.</p>\n@param ip The new IP address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ip",
            "variableType" : "String",
            "documentation" : "<p>The new IP address.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "IpId" : {
          "c2jName" : "IpId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p> <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n@param ipId <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIpId",
          "getterDocumentation" : "/**<p> <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n@return <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.*/",
          "getterMethodName" : "getIpId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IpId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IpId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "IpId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n@param ipId <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.*/",
          "setterMethodName" : "setIpId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ipId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n@param ipId <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ipId",
            "variableType" : "String",
            "documentation" : "<p> <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a>GetResolverEndpoint</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SubnetId" : {
          "c2jName" : "SubnetId",
          "c2jShape" : "SubnetId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n@param subnetId The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSubnetId",
          "getterDocumentation" : "/**<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n@return The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.*/",
          "getterMethodName" : "getSubnetId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SubnetId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SubnetId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SubnetId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n@param subnetId The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.*/",
          "setterMethodName" : "setSubnetId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "subnetId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n@param subnetId The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "subnetId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "IpAddressUpdate",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "IpAddressUpdate",
        "variableName" : "ipAddressUpdate",
        "variableType" : "IpAddressUpdate",
        "documentation" : null,
        "simpleType" : "IpAddressUpdate",
        "variableSetterType" : "IpAddressUpdate"
      },
      "wrapper" : false
    },
    "LimitExceededException" : {
      "c2jName" : "LimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The request caused one or more limits to be exceeded.</p>",
      "enums" : null,
      "errorCode" : "LimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResourceType",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n@param resourceType For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n@return For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.*/",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n@param resourceType For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.*/",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n@param resourceType For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n@param resourceType For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n@return For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.*/",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n@param resourceType For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.*/",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n@param resourceType For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "<p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LimitExceededException",
        "variableName" : "limitExceededException",
        "variableType" : "LimitExceededException",
        "documentation" : null,
        "simpleType" : "LimitExceededException",
        "variableSetterType" : "LimitExceededException"
      },
      "wrapper" : false
    },
    "ListResolverEndpointIpAddressesRequest" : {
      "c2jName" : "ListResolverEndpointIpAddressesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListResolverEndpointIpAddresses",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.ListResolverEndpointIpAddresses",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the resolver endpoint that you want to get IP addresses for.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to get IP addresses for.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to get IP addresses for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to get IP addresses for.</p>\n@return The ID of the resolver endpoint that you want to get IP addresses for.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to get IP addresses for.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to get IP addresses for.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to get IP addresses for.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to get IP addresses for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the resolver endpoint that you want to get IP addresses for.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n@param maxResults The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n@return The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n@param maxResults The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n@param maxResults The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n@param maxResults The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n@return The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n@param maxResults The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n@param maxResults The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p> <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the resolver endpoint that you want to get IP addresses for.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to get IP addresses for.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to get IP addresses for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to get IP addresses for.</p>\n@return The ID of the resolver endpoint that you want to get IP addresses for.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to get IP addresses for.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to get IP addresses for.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to get IP addresses for.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to get IP addresses for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the resolver endpoint that you want to get IP addresses for.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverEndpointId" ],
      "shapeName" : "ListResolverEndpointIpAddressesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverEndpointIpAddressesRequest",
        "variableName" : "listResolverEndpointIpAddressesRequest",
        "variableType" : "ListResolverEndpointIpAddressesRequest",
        "documentation" : null,
        "simpleType" : "ListResolverEndpointIpAddressesRequest",
        "variableSetterType" : "ListResolverEndpointIpAddressesRequest"
      },
      "wrapper" : false
    },
    "ListResolverEndpointIpAddressesResult" : {
      "c2jName" : "ListResolverEndpointIpAddressesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@return The value that you specified for <code>MaxResults</code> in the request.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "IpAddresses",
        "c2jShape" : "IpAddressesResponse",
        "deprecated" : false,
        "documentation" : "<p>The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).</p>\n@param ipAddresses The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIpAddresses",
        "getterDocumentation" : "/**<p>The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).</p>\n@return The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).*/",
        "getterMethodName" : "getIpAddresses",
        "getterModel" : {
          "returnType" : "java.util.List<IpAddressResponse>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IpAddresses",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IpAddresses",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "IpAddressResponse",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "IpAddressResponse",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "IpAddressResponse",
              "variableName" : "member",
              "variableType" : "IpAddressResponse",
              "documentation" : "",
              "simpleType" : "IpAddressResponse",
              "variableSetterType" : "IpAddressResponse"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "IpAddressResponse",
              "variableName" : "member",
              "variableType" : "IpAddressResponse",
              "documentation" : "",
              "simpleType" : "IpAddressResponse",
              "variableSetterType" : "IpAddressResponse"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "IpAddressResponse",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "IpAddressResponse",
          "templateImplType" : "java.util.ArrayList<IpAddressResponse>",
          "templateType" : "java.util.List<IpAddressResponse>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "IpAddresses",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).</p>\n@param ipAddresses The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).*/",
        "setterMethodName" : "setIpAddresses",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<IpAddressResponse>",
          "variableName" : "ipAddresses",
          "variableType" : "java.util.List<IpAddressResponse>",
          "documentation" : "",
          "simpleType" : "List<IpAddressResponse>",
          "variableSetterType" : "java.util.Collection<IpAddressResponse>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setIpAddresses(java.util.Collection)} or {@link #withIpAddresses(java.util.Collection)} if you want to override the existing values.</p>\n@param ipAddresses The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<IpAddressResponse>",
          "variableName" : "ipAddresses",
          "variableType" : "java.util.List<IpAddressResponse>",
          "documentation" : "<p>The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).</p>",
          "simpleType" : "List<IpAddressResponse>",
          "variableSetterType" : "java.util.Collection<IpAddressResponse>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "IpAddresses" : {
          "c2jName" : "IpAddresses",
          "c2jShape" : "IpAddressesResponse",
          "deprecated" : false,
          "documentation" : "<p>The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).</p>\n@param ipAddresses The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIpAddresses",
          "getterDocumentation" : "/**<p>The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).</p>\n@return The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).*/",
          "getterMethodName" : "getIpAddresses",
          "getterModel" : {
            "returnType" : "java.util.List<IpAddressResponse>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IpAddresses",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IpAddresses",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "IpAddressResponse",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "IpAddressResponse",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "IpAddressResponse",
                "variableName" : "member",
                "variableType" : "IpAddressResponse",
                "documentation" : "",
                "simpleType" : "IpAddressResponse",
                "variableSetterType" : "IpAddressResponse"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "IpAddressResponse",
                "variableName" : "member",
                "variableType" : "IpAddressResponse",
                "documentation" : "",
                "simpleType" : "IpAddressResponse",
                "variableSetterType" : "IpAddressResponse"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "IpAddressResponse",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "IpAddressResponse",
            "templateImplType" : "java.util.ArrayList<IpAddressResponse>",
            "templateType" : "java.util.List<IpAddressResponse>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "IpAddresses",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).</p>\n@param ipAddresses The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).*/",
          "setterMethodName" : "setIpAddresses",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<IpAddressResponse>",
            "variableName" : "ipAddresses",
            "variableType" : "java.util.List<IpAddressResponse>",
            "documentation" : "",
            "simpleType" : "List<IpAddressResponse>",
            "variableSetterType" : "java.util.Collection<IpAddressResponse>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setIpAddresses(java.util.Collection)} or {@link #withIpAddresses(java.util.Collection)} if you want to override the existing values.</p>\n@param ipAddresses The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<IpAddressResponse>",
            "variableName" : "ipAddresses",
            "variableType" : "java.util.List<IpAddressResponse>",
            "documentation" : "<p>The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to Resolver (inbound endpoint).</p>",
            "simpleType" : "List<IpAddressResponse>",
            "variableSetterType" : "java.util.Collection<IpAddressResponse>"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@return The value that you specified for <code>MaxResults</code> in the request.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverEndpointIpAddressesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverEndpointIpAddressesResult",
        "variableName" : "listResolverEndpointIpAddressesResult",
        "variableType" : "ListResolverEndpointIpAddressesResult",
        "documentation" : null,
        "simpleType" : "ListResolverEndpointIpAddressesResult",
        "variableSetterType" : "ListResolverEndpointIpAddressesResult"
      },
      "wrapper" : false
    },
    "ListResolverEndpointsRequest" : {
      "c2jName" : "ListResolverEndpointsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListResolverEndpoints",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.ListResolverEndpoints",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints. </p>\n@param maxResults The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints. </p>\n@return The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints. </p>\n@param maxResults The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints. </p>\n@param maxResults The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints. </p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Filters",
        "c2jShape" : "Filters",
        "deprecated" : false,
        "documentation" : "<p>An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilters",
        "getterDocumentation" : "/**<p>An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@return An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
        "getterMethodName" : "getFilters",
        "getterModel" : {
          "returnType" : "java.util.List<Filter>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Filters",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Filters",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Filter",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Filter",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Filter",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Filter",
          "templateImplType" : "java.util.ArrayList<Filter>",
          "templateType" : "java.util.List<Filter>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Filters",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
        "setterMethodName" : "setFilters",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "<p>An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Filters" : {
          "c2jName" : "Filters",
          "c2jShape" : "Filters",
          "deprecated" : false,
          "documentation" : "<p>An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilters",
          "getterDocumentation" : "/**<p>An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@return An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
          "getterMethodName" : "getFilters",
          "getterModel" : {
            "returnType" : "java.util.List<Filter>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Filters",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Filters",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Filter",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Filter",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Filter",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Filter",
            "templateImplType" : "java.util.ArrayList<Filter>",
            "templateType" : "java.util.List<Filter>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Filters",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
          "setterMethodName" : "setFilters",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "<p>An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p> <note> <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints. </p>\n@param maxResults The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints. </p>\n@return The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints. </p>\n@param maxResults The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints. </p>\n@param maxResults The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints. </p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request to get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverEndpointsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverEndpointsRequest",
        "variableName" : "listResolverEndpointsRequest",
        "variableType" : "ListResolverEndpointsRequest",
        "documentation" : null,
        "simpleType" : "ListResolverEndpointsRequest",
        "variableSetterType" : "ListResolverEndpointsRequest"
      },
      "wrapper" : false
    },
    "ListResolverEndpointsResult" : {
      "c2jName" : "ListResolverEndpointsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@return The value that you specified for <code>MaxResults</code> in the request.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverEndpoints",
        "c2jShape" : "ResolverEndpoints",
        "deprecated" : false,
        "documentation" : "<p>The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n@param resolverEndpoints The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpoints",
        "getterDocumentation" : "/**<p>The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n@return The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.*/",
        "getterMethodName" : "getResolverEndpoints",
        "getterModel" : {
          "returnType" : "java.util.List<ResolverEndpoint>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpoints",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpoints",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResolverEndpoint",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ResolverEndpoint",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverEndpoint",
              "variableName" : "member",
              "variableType" : "ResolverEndpoint",
              "documentation" : "",
              "simpleType" : "ResolverEndpoint",
              "variableSetterType" : "ResolverEndpoint"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverEndpoint",
              "variableName" : "member",
              "variableType" : "ResolverEndpoint",
              "documentation" : "",
              "simpleType" : "ResolverEndpoint",
              "variableSetterType" : "ResolverEndpoint"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ResolverEndpoint",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ResolverEndpoint",
          "templateImplType" : "java.util.ArrayList<ResolverEndpoint>",
          "templateType" : "java.util.List<ResolverEndpoint>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ResolverEndpoints",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n@param resolverEndpoints The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.*/",
        "setterMethodName" : "setResolverEndpoints",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverEndpoint>",
          "variableName" : "resolverEndpoints",
          "variableType" : "java.util.List<ResolverEndpoint>",
          "documentation" : "",
          "simpleType" : "List<ResolverEndpoint>",
          "variableSetterType" : "java.util.Collection<ResolverEndpoint>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverEndpoints(java.util.Collection)} or {@link #withResolverEndpoints(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverEndpoints The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverEndpoint>",
          "variableName" : "resolverEndpoints",
          "variableType" : "java.util.List<ResolverEndpoint>",
          "documentation" : "<p>The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>",
          "simpleType" : "List<ResolverEndpoint>",
          "variableSetterType" : "java.util.Collection<ResolverEndpoint>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@return The value that you specified for <code>MaxResults</code> in the request.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverEndpoints" : {
          "c2jName" : "ResolverEndpoints",
          "c2jShape" : "ResolverEndpoints",
          "deprecated" : false,
          "documentation" : "<p>The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n@param resolverEndpoints The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpoints",
          "getterDocumentation" : "/**<p>The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n@return The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.*/",
          "getterMethodName" : "getResolverEndpoints",
          "getterModel" : {
            "returnType" : "java.util.List<ResolverEndpoint>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpoints",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpoints",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResolverEndpoint",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ResolverEndpoint",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverEndpoint",
                "variableName" : "member",
                "variableType" : "ResolverEndpoint",
                "documentation" : "",
                "simpleType" : "ResolverEndpoint",
                "variableSetterType" : "ResolverEndpoint"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverEndpoint",
                "variableName" : "member",
                "variableType" : "ResolverEndpoint",
                "documentation" : "",
                "simpleType" : "ResolverEndpoint",
                "variableSetterType" : "ResolverEndpoint"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ResolverEndpoint",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ResolverEndpoint",
            "templateImplType" : "java.util.ArrayList<ResolverEndpoint>",
            "templateType" : "java.util.List<ResolverEndpoint>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ResolverEndpoints",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n@param resolverEndpoints The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.*/",
          "setterMethodName" : "setResolverEndpoints",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverEndpoint>",
            "variableName" : "resolverEndpoints",
            "variableType" : "java.util.List<ResolverEndpoint>",
            "documentation" : "",
            "simpleType" : "List<ResolverEndpoint>",
            "variableSetterType" : "java.util.Collection<ResolverEndpoint>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverEndpoints(java.util.Collection)} or {@link #withResolverEndpoints(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverEndpoints The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverEndpoint>",
            "variableName" : "resolverEndpoints",
            "variableType" : "java.util.List<ResolverEndpoint>",
            "documentation" : "<p>The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>",
            "simpleType" : "List<ResolverEndpoint>",
            "variableSetterType" : "java.util.Collection<ResolverEndpoint>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverEndpointsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverEndpointsResult",
        "variableName" : "listResolverEndpointsResult",
        "variableType" : "ListResolverEndpointsResult",
        "documentation" : null,
        "simpleType" : "ListResolverEndpointsResult",
        "variableSetterType" : "ListResolverEndpointsResult"
      },
      "wrapper" : false
    },
    "ListResolverRuleAssociationsRequest" : {
      "c2jName" : "ListResolverRuleAssociationsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListResolverRuleAssociations",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.ListResolverRuleAssociations",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n@param maxResults The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n@return The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n@param maxResults The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n@param maxResults The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Filters",
        "c2jShape" : "Filters",
        "deprecated" : false,
        "documentation" : "<p>An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilters",
        "getterDocumentation" : "/**<p>An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@return An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
        "getterMethodName" : "getFilters",
        "getterModel" : {
          "returnType" : "java.util.List<Filter>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Filters",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Filters",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Filter",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Filter",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Filter",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Filter",
          "templateImplType" : "java.util.ArrayList<Filter>",
          "templateType" : "java.util.List<Filter>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Filters",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
        "setterMethodName" : "setFilters",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "<p>An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Filters" : {
          "c2jName" : "Filters",
          "c2jShape" : "Filters",
          "deprecated" : false,
          "documentation" : "<p>An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilters",
          "getterDocumentation" : "/**<p>An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@return An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
          "getterMethodName" : "getFilters",
          "getterModel" : {
            "returnType" : "java.util.List<Filter>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Filters",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Filters",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Filter",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Filter",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Filter",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Filter",
            "templateImplType" : "java.util.ArrayList<Filter>",
            "templateType" : "java.util.List<Filter>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Filters",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
          "setterMethodName" : "setFilters",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "<p>An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n@param maxResults The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n@return The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n@param maxResults The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n@param maxResults The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverRuleAssociationsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverRuleAssociationsRequest",
        "variableName" : "listResolverRuleAssociationsRequest",
        "variableType" : "ListResolverRuleAssociationsRequest",
        "documentation" : null,
        "simpleType" : "ListResolverRuleAssociationsRequest",
        "variableSetterType" : "ListResolverRuleAssociationsRequest"
      },
      "wrapper" : false
    },
    "ListResolverRuleAssociationsResult" : {
      "c2jName" : "ListResolverRuleAssociationsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@return The value that you specified for <code>MaxResults</code> in the request.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverRuleAssociations",
        "c2jShape" : "ResolverRuleAssociations",
        "deprecated" : false,
        "documentation" : "<p>The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>\n@param resolverRuleAssociations The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleAssociations",
        "getterDocumentation" : "/**<p>The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>\n@return The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.*/",
        "getterMethodName" : "getResolverRuleAssociations",
        "getterModel" : {
          "returnType" : "java.util.List<ResolverRuleAssociation>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleAssociations",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleAssociations",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResolverRuleAssociation",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ResolverRuleAssociation",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverRuleAssociation",
              "variableName" : "member",
              "variableType" : "ResolverRuleAssociation",
              "documentation" : "",
              "simpleType" : "ResolverRuleAssociation",
              "variableSetterType" : "ResolverRuleAssociation"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverRuleAssociation",
              "variableName" : "member",
              "variableType" : "ResolverRuleAssociation",
              "documentation" : "",
              "simpleType" : "ResolverRuleAssociation",
              "variableSetterType" : "ResolverRuleAssociation"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ResolverRuleAssociation",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ResolverRuleAssociation",
          "templateImplType" : "java.util.ArrayList<ResolverRuleAssociation>",
          "templateType" : "java.util.List<ResolverRuleAssociation>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ResolverRuleAssociations",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>\n@param resolverRuleAssociations The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.*/",
        "setterMethodName" : "setResolverRuleAssociations",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverRuleAssociation>",
          "variableName" : "resolverRuleAssociations",
          "variableType" : "java.util.List<ResolverRuleAssociation>",
          "documentation" : "",
          "simpleType" : "List<ResolverRuleAssociation>",
          "variableSetterType" : "java.util.Collection<ResolverRuleAssociation>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverRuleAssociations(java.util.Collection)} or {@link #withResolverRuleAssociations(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverRuleAssociations The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverRuleAssociation>",
          "variableName" : "resolverRuleAssociations",
          "variableType" : "java.util.List<ResolverRuleAssociation>",
          "documentation" : "<p>The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>",
          "simpleType" : "List<ResolverRuleAssociation>",
          "variableSetterType" : "java.util.Collection<ResolverRuleAssociation>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@return The value that you specified for <code>MaxResults</code> in the request.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another <code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverRuleAssociations" : {
          "c2jName" : "ResolverRuleAssociations",
          "c2jShape" : "ResolverRuleAssociations",
          "deprecated" : false,
          "documentation" : "<p>The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>\n@param resolverRuleAssociations The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleAssociations",
          "getterDocumentation" : "/**<p>The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>\n@return The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.*/",
          "getterMethodName" : "getResolverRuleAssociations",
          "getterModel" : {
            "returnType" : "java.util.List<ResolverRuleAssociation>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleAssociations",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleAssociations",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResolverRuleAssociation",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ResolverRuleAssociation",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverRuleAssociation",
                "variableName" : "member",
                "variableType" : "ResolverRuleAssociation",
                "documentation" : "",
                "simpleType" : "ResolverRuleAssociation",
                "variableSetterType" : "ResolverRuleAssociation"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverRuleAssociation",
                "variableName" : "member",
                "variableType" : "ResolverRuleAssociation",
                "documentation" : "",
                "simpleType" : "ResolverRuleAssociation",
                "variableSetterType" : "ResolverRuleAssociation"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ResolverRuleAssociation",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ResolverRuleAssociation",
            "templateImplType" : "java.util.ArrayList<ResolverRuleAssociation>",
            "templateType" : "java.util.List<ResolverRuleAssociation>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ResolverRuleAssociations",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>\n@param resolverRuleAssociations The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.*/",
          "setterMethodName" : "setResolverRuleAssociations",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverRuleAssociation>",
            "variableName" : "resolverRuleAssociations",
            "variableType" : "java.util.List<ResolverRuleAssociation>",
            "documentation" : "",
            "simpleType" : "List<ResolverRuleAssociation>",
            "variableSetterType" : "java.util.Collection<ResolverRuleAssociation>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverRuleAssociations(java.util.Collection)} or {@link #withResolverRuleAssociations(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverRuleAssociations The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverRuleAssociation>",
            "variableName" : "resolverRuleAssociations",
            "variableType" : "java.util.List<ResolverRuleAssociation>",
            "documentation" : "<p>The associations that were created between resolver rules and VPCs using the current AWS account, and that match the specified filters, if any.</p>",
            "simpleType" : "List<ResolverRuleAssociation>",
            "variableSetterType" : "java.util.Collection<ResolverRuleAssociation>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverRuleAssociationsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverRuleAssociationsResult",
        "variableName" : "listResolverRuleAssociationsResult",
        "variableType" : "ListResolverRuleAssociationsResult",
        "documentation" : null,
        "simpleType" : "ListResolverRuleAssociationsResult",
        "variableSetterType" : "ListResolverRuleAssociationsResult"
      },
      "wrapper" : false
    },
    "ListResolverRulesRequest" : {
      "c2jName" : "ListResolverRulesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListResolverRules",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.ListResolverRules",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.</p>\n@param maxResults The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.</p>\n@return The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.</p>\n@param maxResults The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.</p>\n@param maxResults The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Filters",
        "c2jShape" : "Filters",
        "deprecated" : false,
        "documentation" : "<p>An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilters",
        "getterDocumentation" : "/**<p>An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@return An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
        "getterMethodName" : "getFilters",
        "getterModel" : {
          "returnType" : "java.util.List<Filter>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Filters",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Filters",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Filter",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Filter",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Filter",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Filter",
          "templateImplType" : "java.util.ArrayList<Filter>",
          "templateType" : "java.util.List<Filter>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Filters",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
        "setterMethodName" : "setFilters",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "<p>An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Filters" : {
          "c2jName" : "Filters",
          "c2jShape" : "Filters",
          "deprecated" : false,
          "documentation" : "<p>An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilters",
          "getterDocumentation" : "/**<p>An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@return An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
          "getterMethodName" : "getFilters",
          "getterModel" : {
            "returnType" : "java.util.List<Filter>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Filters",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Filters",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Filter",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Filter",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Filter",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Filter",
            "templateImplType" : "java.util.ArrayList<Filter>",
            "templateType" : "java.util.List<Filter>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Filters",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n@param filters An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>*/",
          "setterMethodName" : "setFilters",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "<p>An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p> </note>",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.</p>\n@param maxResults The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.</p>\n@return The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.</p>\n@param maxResults The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.</p>\n@param maxResults The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>For the first <code>ListResolverRules</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request to get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverRulesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverRulesRequest",
        "variableName" : "listResolverRulesRequest",
        "variableType" : "ListResolverRulesRequest",
        "documentation" : null,
        "simpleType" : "ListResolverRulesRequest",
        "variableSetterType" : "ListResolverRulesRequest"
      },
      "wrapper" : false
    },
    "ListResolverRulesResult" : {
      "c2jName" : "ListResolverRulesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@return The value that you specified for <code>MaxResults</code> in the request.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverRules",
        "c2jShape" : "ResolverRules",
        "deprecated" : false,
        "documentation" : "<p>The resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n@param resolverRules The resolver rules that were created using the current AWS account and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRules",
        "getterDocumentation" : "/**<p>The resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n@return The resolver rules that were created using the current AWS account and that match the specified filters, if any.*/",
        "getterMethodName" : "getResolverRules",
        "getterModel" : {
          "returnType" : "java.util.List<ResolverRule>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRules",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRules",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResolverRule",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ResolverRule",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverRule",
              "variableName" : "member",
              "variableType" : "ResolverRule",
              "documentation" : "",
              "simpleType" : "ResolverRule",
              "variableSetterType" : "ResolverRule"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResolverRule",
              "variableName" : "member",
              "variableType" : "ResolverRule",
              "documentation" : "",
              "simpleType" : "ResolverRule",
              "variableSetterType" : "ResolverRule"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ResolverRule",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ResolverRule",
          "templateImplType" : "java.util.ArrayList<ResolverRule>",
          "templateType" : "java.util.List<ResolverRule>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ResolverRules",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n@param resolverRules The resolver rules that were created using the current AWS account and that match the specified filters, if any.*/",
        "setterMethodName" : "setResolverRules",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverRule>",
          "variableName" : "resolverRules",
          "variableType" : "java.util.List<ResolverRule>",
          "documentation" : "",
          "simpleType" : "List<ResolverRule>",
          "variableSetterType" : "java.util.Collection<ResolverRule>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverRules(java.util.Collection)} or {@link #withResolverRules(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverRules The resolver rules that were created using the current AWS account and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResolverRule>",
          "variableName" : "resolverRules",
          "variableType" : "java.util.List<ResolverRule>",
          "documentation" : "<p>The resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>",
          "simpleType" : "List<ResolverRule>",
          "variableSetterType" : "java.util.Collection<ResolverRule>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@return The value that you specified for <code>MaxResults</code> in the request.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The value that you specified for <code>MaxResults</code> in the request.</p>\n@param maxResults The value that you specified for <code>MaxResults</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The value that you specified for <code>MaxResults</code> in the request.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another <code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverRules" : {
          "c2jName" : "ResolverRules",
          "c2jShape" : "ResolverRules",
          "deprecated" : false,
          "documentation" : "<p>The resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n@param resolverRules The resolver rules that were created using the current AWS account and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRules",
          "getterDocumentation" : "/**<p>The resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n@return The resolver rules that were created using the current AWS account and that match the specified filters, if any.*/",
          "getterMethodName" : "getResolverRules",
          "getterModel" : {
            "returnType" : "java.util.List<ResolverRule>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRules",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRules",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResolverRule",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ResolverRule",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverRule",
                "variableName" : "member",
                "variableType" : "ResolverRule",
                "documentation" : "",
                "simpleType" : "ResolverRule",
                "variableSetterType" : "ResolverRule"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResolverRule",
                "variableName" : "member",
                "variableType" : "ResolverRule",
                "documentation" : "",
                "simpleType" : "ResolverRule",
                "variableSetterType" : "ResolverRule"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ResolverRule",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ResolverRule",
            "templateImplType" : "java.util.ArrayList<ResolverRule>",
            "templateType" : "java.util.List<ResolverRule>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ResolverRules",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n@param resolverRules The resolver rules that were created using the current AWS account and that match the specified filters, if any.*/",
          "setterMethodName" : "setResolverRules",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverRule>",
            "variableName" : "resolverRules",
            "variableType" : "java.util.List<ResolverRule>",
            "documentation" : "",
            "simpleType" : "List<ResolverRule>",
            "variableSetterType" : "java.util.Collection<ResolverRule>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolverRules(java.util.Collection)} or {@link #withResolverRules(java.util.Collection)} if you want to override the existing values.</p>\n@param resolverRules The resolver rules that were created using the current AWS account and that match the specified filters, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResolverRule>",
            "variableName" : "resolverRules",
            "variableType" : "java.util.List<ResolverRule>",
            "documentation" : "<p>The resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>",
            "simpleType" : "List<ResolverRule>",
            "variableSetterType" : "java.util.Collection<ResolverRule>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResolverRulesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResolverRulesResult",
        "variableName" : "listResolverRulesResult",
        "variableType" : "ListResolverRulesResult",
        "documentation" : null,
        "simpleType" : "ListResolverRulesResult",
        "variableSetterType" : "ListResolverRulesResult"
      },
      "wrapper" : false
    },
    "ListTagsForResourceRequest" : {
      "c2jName" : "ListTagsForResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListTagsForResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.ListTagsForResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResourceArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to list tags for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n@return The Amazon Resource Name (ARN) for the resource that you want to list tags for.*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to list tags for.*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to list tags for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n@param maxResults The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n@return The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n@param maxResults The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n@param maxResults The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n@param maxResults The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n@return The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n@param maxResults The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n@param maxResults The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>For the first <code>ListTagsForResource</code> request, omit this value.</p> <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request to get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceArn" : {
          "c2jName" : "ResourceArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to list tags for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n@return The Amazon Resource Name (ARN) for the resource that you want to list tags for.*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to list tags for.*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to list tags for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResourceArn" ],
      "shapeName" : "ListTagsForResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTagsForResourceRequest",
        "variableName" : "listTagsForResourceRequest",
        "variableType" : "ListTagsForResourceRequest",
        "documentation" : null,
        "simpleType" : "ListTagsForResourceRequest",
        "variableSetterType" : "ListTagsForResourceRequest"
      },
      "wrapper" : false
    },
    "ListTagsForResourceResult" : {
      "c2jName" : "ListTagsForResourceResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Tags",
        "c2jShape" : "TagList",
        "deprecated" : false,
        "documentation" : "<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n@param tags The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n@return The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n@param tags The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@return If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n@param nextToken If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another <code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "TagList",
          "deprecated" : false,
          "documentation" : "<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n@param tags The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n@return The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n@param tags The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListTagsForResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTagsForResourceResult",
        "variableName" : "listTagsForResourceResult",
        "variableType" : "ListTagsForResourceResult",
        "documentation" : null,
        "simpleType" : "ListTagsForResourceResult",
        "variableSetterType" : "ListTagsForResourceResult"
      },
      "wrapper" : false
    },
    "PutResolverRulePolicyRequest" : {
      "c2jName" : "PutResolverRulePolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "PutResolverRulePolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.PutResolverRulePolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) of the account that you want to grant permissions to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the account that you want to grant permissions to.</p>\n@param arn The Amazon Resource Name (ARN) of the account that you want to grant permissions to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the account that you want to grant permissions to.</p>\n@return The Amazon Resource Name (ARN) of the account that you want to grant permissions to.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the account that you want to grant permissions to.</p>\n@param arn The Amazon Resource Name (ARN) of the account that you want to grant permissions to.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the account that you want to grant permissions to.</p>\n@param arn The Amazon Resource Name (ARN) of the account that you want to grant permissions to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the account that you want to grant permissions to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverRulePolicy",
        "c2jShape" : "ResolverRulePolicy",
        "deprecated" : false,
        "documentation" : "<p>An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.</p>\n@param resolverRulePolicy An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRulePolicy",
        "getterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.</p>\n@return An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.*/",
        "getterMethodName" : "getResolverRulePolicy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRulePolicy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRulePolicy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRulePolicy",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.</p>\n@param resolverRulePolicy An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.*/",
        "setterMethodName" : "setResolverRulePolicy",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRulePolicy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.</p>\n@param resolverRulePolicy An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRulePolicy",
          "variableType" : "String",
          "documentation" : "<p>An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the account that you want to grant permissions to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the account that you want to grant permissions to.</p>\n@param arn The Amazon Resource Name (ARN) of the account that you want to grant permissions to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the account that you want to grant permissions to.</p>\n@return The Amazon Resource Name (ARN) of the account that you want to grant permissions to.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the account that you want to grant permissions to.</p>\n@param arn The Amazon Resource Name (ARN) of the account that you want to grant permissions to.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the account that you want to grant permissions to.</p>\n@param arn The Amazon Resource Name (ARN) of the account that you want to grant permissions to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the account that you want to grant permissions to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverRulePolicy" : {
          "c2jName" : "ResolverRulePolicy",
          "c2jShape" : "ResolverRulePolicy",
          "deprecated" : false,
          "documentation" : "<p>An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.</p>\n@param resolverRulePolicy An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRulePolicy",
          "getterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.</p>\n@return An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.*/",
          "getterMethodName" : "getResolverRulePolicy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRulePolicy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRulePolicy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRulePolicy",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.</p>\n@param resolverRulePolicy An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.*/",
          "setterMethodName" : "setResolverRulePolicy",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRulePolicy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.</p>\n@param resolverRulePolicy An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRulePolicy",
            "variableType" : "String",
            "documentation" : "<p>An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Arn", "ResolverRulePolicy" ],
      "shapeName" : "PutResolverRulePolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutResolverRulePolicyRequest",
        "variableName" : "putResolverRulePolicyRequest",
        "variableType" : "PutResolverRulePolicyRequest",
        "documentation" : null,
        "simpleType" : "PutResolverRulePolicyRequest",
        "variableSetterType" : "PutResolverRulePolicyRequest"
      },
      "wrapper" : false
    },
    "PutResolverRulePolicyResult" : {
      "c2jName" : "PutResolverRulePolicyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The response to a <code>PutResolverRulePolicy</code> request.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ReturnValue",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverRulePolicy</code> request was successful.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withReturnValue",
        "getterDocumentation" : "/**<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n@return Whether the <code>PutResolverRulePolicy</code> request was successful.*/",
        "getterMethodName" : "getReturnValue",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ReturnValue",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ReturnValue",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "ReturnValue",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverRulePolicy</code> request was successful.*/",
        "setterMethodName" : "setReturnValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "returnValue",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverRulePolicy</code> request was successful.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "returnValue",
          "variableType" : "Boolean",
          "documentation" : "<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ReturnValue" : {
          "c2jName" : "ReturnValue",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverRulePolicy</code> request was successful.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withReturnValue",
          "getterDocumentation" : "/**<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n@return Whether the <code>PutResolverRulePolicy</code> request was successful.*/",
          "getterMethodName" : "getReturnValue",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ReturnValue",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ReturnValue",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "ReturnValue",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverRulePolicy</code> request was successful.*/",
          "setterMethodName" : "setReturnValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "returnValue",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n@param returnValue Whether the <code>PutResolverRulePolicy</code> request was successful.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "returnValue",
            "variableType" : "Boolean",
            "documentation" : "<p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PutResolverRulePolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutResolverRulePolicyResult",
        "variableName" : "putResolverRulePolicyResult",
        "variableType" : "PutResolverRulePolicyResult",
        "documentation" : null,
        "simpleType" : "PutResolverRulePolicyResult",
        "variableSetterType" : "PutResolverRulePolicyResult"
      },
      "wrapper" : false
    },
    "ResolverEndpoint" : {
      "c2jName" : "ResolverEndpoint",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>In the response to a <a>CreateResolverEndpoint</a>, <a>DeleteResolverEndpoint</a>, <a>GetResolverEndpoint</a>, <a>ListResolverEndpoints</a>, or <a>UpdateResolverEndpoint</a> request, a complex type that contains settings for an existing inbound or outbound resolver endpoint.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Id",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the resolver endpoint.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the resolver endpoint.</p>\n@param id The ID of the resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withId",
        "getterDocumentation" : "/**<p>The ID of the resolver endpoint.</p>\n@return The ID of the resolver endpoint.*/",
        "getterMethodName" : "getId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Id",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Id",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the resolver endpoint.</p>\n@param id The ID of the resolver endpoint.*/",
        "setterMethodName" : "setId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the resolver endpoint.</p>\n@param id The ID of the resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "<p>The ID of the resolver endpoint.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreatorRequestId",
        "c2jShape" : "CreatorRequestId",
        "deprecated" : false,
        "documentation" : "<p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreatorRequestId",
        "getterDocumentation" : "/**<p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@return A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.*/",
        "getterMethodName" : "getCreatorRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreatorRequestId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreatorRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreatorRequestId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.*/",
        "setterMethodName" : "setCreatorRequestId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "<p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>\n@param arn The ARN (Amazon Resource Name) for the resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>\n@return The ARN (Amazon Resource Name) for the resolver endpoint.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>\n@param arn The ARN (Amazon Resource Name) for the resolver endpoint.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>\n@param arn The ARN (Amazon Resource Name) for the resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>\n@param name The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>\n@return The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>\n@param name The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>\n@param name The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SecurityGroupIds",
        "c2jShape" : "SecurityGroupIds",
        "deprecated" : false,
        "documentation" : "<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>\n@param securityGroupIds The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSecurityGroupIds",
        "getterDocumentation" : "/**<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>\n@return The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.*/",
        "getterMethodName" : "getSecurityGroupIds",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SecurityGroupIds",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SecurityGroupIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResourceId",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "SecurityGroupIds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>\n@param securityGroupIds The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.*/",
        "setterMethodName" : "setSecurityGroupIds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "securityGroupIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSecurityGroupIds(java.util.Collection)} or {@link #withSecurityGroupIds(java.util.Collection)} if you want to override the existing values.</p>\n@param securityGroupIds The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "securityGroupIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Direction",
        "c2jShape" : "ResolverEndpointDirection",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li> </ul>",
        "enumType" : "ResolverEndpointDirection",
        "fluentSetterDocumentation" : "/**<p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li> </ul>\n@param direction Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointDirection*/",
        "fluentSetterMethodName" : "withDirection",
        "getterDocumentation" : "/**<p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li> </ul>\n@return Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li>\n@see ResolverEndpointDirection*/",
        "getterMethodName" : "getDirection",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Direction",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Direction",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Direction",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li> </ul>\n@param direction Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li>\n@see ResolverEndpointDirection*/",
        "setterMethodName" : "setDirection",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "direction",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li> </ul>\n@param direction Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointDirection*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "direction",
          "variableType" : "String",
          "documentation" : "<p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "IpAddressCount",
        "c2jShape" : "IpAddressCount",
        "deprecated" : false,
        "documentation" : "<p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>\n@param ipAddressCount The number of IP addresses that the resolver endpoint can use for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIpAddressCount",
        "getterDocumentation" : "/**<p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>\n@return The number of IP addresses that the resolver endpoint can use for DNS queries.*/",
        "getterMethodName" : "getIpAddressCount",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IpAddressCount",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IpAddressCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "IpAddressCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>\n@param ipAddressCount The number of IP addresses that the resolver endpoint can use for DNS queries.*/",
        "setterMethodName" : "setIpAddressCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "ipAddressCount",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>\n@param ipAddressCount The number of IP addresses that the resolver endpoint can use for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "ipAddressCount",
          "variableType" : "Integer",
          "documentation" : "<p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "HostVPCId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the VPC that you want to create the resolver endpoint in.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the VPC that you want to create the resolver endpoint in.</p>\n@param hostVPCId The ID of the VPC that you want to create the resolver endpoint in.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withHostVPCId",
        "getterDocumentation" : "/**<p>The ID of the VPC that you want to create the resolver endpoint in.</p>\n@return The ID of the VPC that you want to create the resolver endpoint in.*/",
        "getterMethodName" : "getHostVPCId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "HostVPCId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "HostVPCId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "HostVPCId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the VPC that you want to create the resolver endpoint in.</p>\n@param hostVPCId The ID of the VPC that you want to create the resolver endpoint in.*/",
        "setterMethodName" : "setHostVPCId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "hostVPCId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the VPC that you want to create the resolver endpoint in.</p>\n@param hostVPCId The ID of the VPC that you want to create the resolver endpoint in.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "hostVPCId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the VPC that you want to create the resolver endpoint in.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Status",
        "c2jShape" : "ResolverEndpointStatus",
        "deprecated" : false,
        "documentation" : "<p>A code that specifies the current status of the resolver endpoint.</p>",
        "enumType" : "ResolverEndpointStatus",
        "fluentSetterDocumentation" : "/**<p>A code that specifies the current status of the resolver endpoint.</p>\n@param status A code that specifies the current status of the resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>A code that specifies the current status of the resolver endpoint.</p>\n@return A code that specifies the current status of the resolver endpoint.\n@see ResolverEndpointStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A code that specifies the current status of the resolver endpoint.</p>\n@param status A code that specifies the current status of the resolver endpoint.\n@see ResolverEndpointStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A code that specifies the current status of the resolver endpoint.</p>\n@param status A code that specifies the current status of the resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>A code that specifies the current status of the resolver endpoint.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "StatusMessage",
        "c2jShape" : "StatusMessage",
        "deprecated" : false,
        "documentation" : "<p>A detailed description of the status of the resolver endpoint.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A detailed description of the status of the resolver endpoint.</p>\n@param statusMessage A detailed description of the status of the resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStatusMessage",
        "getterDocumentation" : "/**<p>A detailed description of the status of the resolver endpoint.</p>\n@return A detailed description of the status of the resolver endpoint.*/",
        "getterMethodName" : "getStatusMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "StatusMessage",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "StatusMessage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "StatusMessage",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A detailed description of the status of the resolver endpoint.</p>\n@param statusMessage A detailed description of the status of the resolver endpoint.*/",
        "setterMethodName" : "setStatusMessage",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "statusMessage",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A detailed description of the status of the resolver endpoint.</p>\n@param statusMessage A detailed description of the status of the resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "statusMessage",
          "variableType" : "String",
          "documentation" : "<p>A detailed description of the status of the resolver endpoint.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreationTime",
        "c2jShape" : "Rfc3339TimeString",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationTime",
        "getterDocumentation" : "/**<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).*/",
        "getterMethodName" : "getCreationTime",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreationTime",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreationTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).*/",
        "setterMethodName" : "setCreationTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creationTime",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creationTime",
          "variableType" : "String",
          "documentation" : "<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ModificationTime",
        "c2jShape" : "Rfc3339TimeString",
        "deprecated" : false,
        "documentation" : "<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withModificationTime",
        "getterDocumentation" : "/**<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).*/",
        "getterMethodName" : "getModificationTime",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ModificationTime",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ModificationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ModificationTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).*/",
        "setterMethodName" : "setModificationTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "modificationTime",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "modificationTime",
          "variableType" : "String",
          "documentation" : "<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>\n@param arn The ARN (Amazon Resource Name) for the resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>\n@return The ARN (Amazon Resource Name) for the resolver endpoint.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>\n@param arn The ARN (Amazon Resource Name) for the resolver endpoint.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>\n@param arn The ARN (Amazon Resource Name) for the resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreationTime" : {
          "c2jName" : "CreationTime",
          "c2jShape" : "Rfc3339TimeString",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationTime",
          "getterDocumentation" : "/**<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).*/",
          "getterMethodName" : "getCreationTime",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreationTime",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreationTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).*/",
          "setterMethodName" : "setCreationTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creationTime",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param creationTime The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creationTime",
            "variableType" : "String",
            "documentation" : "<p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreatorRequestId" : {
          "c2jName" : "CreatorRequestId",
          "c2jShape" : "CreatorRequestId",
          "deprecated" : false,
          "documentation" : "<p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreatorRequestId",
          "getterDocumentation" : "/**<p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@return A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.*/",
          "getterMethodName" : "getCreatorRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreatorRequestId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreatorRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreatorRequestId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.*/",
          "setterMethodName" : "setCreatorRequestId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>\n@param creatorRequestId A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "<p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests to be retried without the risk of executing the operation twice.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Direction" : {
          "c2jName" : "Direction",
          "c2jShape" : "ResolverEndpointDirection",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li> </ul>",
          "enumType" : "ResolverEndpointDirection",
          "fluentSetterDocumentation" : "/**<p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li> </ul>\n@param direction Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointDirection*/",
          "fluentSetterMethodName" : "withDirection",
          "getterDocumentation" : "/**<p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li> </ul>\n@return Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li>\n@see ResolverEndpointDirection*/",
          "getterMethodName" : "getDirection",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Direction",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Direction",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Direction",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li> </ul>\n@param direction Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li>\n@see ResolverEndpointDirection*/",
          "setterMethodName" : "setDirection",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "direction",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li> </ul>\n@param direction Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointDirection*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "direction",
            "variableType" : "String",
            "documentation" : "<p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p> </li> <li> <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "HostVPCId" : {
          "c2jName" : "HostVPCId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the VPC that you want to create the resolver endpoint in.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the VPC that you want to create the resolver endpoint in.</p>\n@param hostVPCId The ID of the VPC that you want to create the resolver endpoint in.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withHostVPCId",
          "getterDocumentation" : "/**<p>The ID of the VPC that you want to create the resolver endpoint in.</p>\n@return The ID of the VPC that you want to create the resolver endpoint in.*/",
          "getterMethodName" : "getHostVPCId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "HostVPCId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "HostVPCId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "HostVPCId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the VPC that you want to create the resolver endpoint in.</p>\n@param hostVPCId The ID of the VPC that you want to create the resolver endpoint in.*/",
          "setterMethodName" : "setHostVPCId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "hostVPCId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the VPC that you want to create the resolver endpoint in.</p>\n@param hostVPCId The ID of the VPC that you want to create the resolver endpoint in.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "hostVPCId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the VPC that you want to create the resolver endpoint in.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Id" : {
          "c2jName" : "Id",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the resolver endpoint.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the resolver endpoint.</p>\n@param id The ID of the resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withId",
          "getterDocumentation" : "/**<p>The ID of the resolver endpoint.</p>\n@return The ID of the resolver endpoint.*/",
          "getterMethodName" : "getId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Id",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Id",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the resolver endpoint.</p>\n@param id The ID of the resolver endpoint.*/",
          "setterMethodName" : "setId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the resolver endpoint.</p>\n@param id The ID of the resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "<p>The ID of the resolver endpoint.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "IpAddressCount" : {
          "c2jName" : "IpAddressCount",
          "c2jShape" : "IpAddressCount",
          "deprecated" : false,
          "documentation" : "<p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>\n@param ipAddressCount The number of IP addresses that the resolver endpoint can use for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIpAddressCount",
          "getterDocumentation" : "/**<p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>\n@return The number of IP addresses that the resolver endpoint can use for DNS queries.*/",
          "getterMethodName" : "getIpAddressCount",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IpAddressCount",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IpAddressCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "IpAddressCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>\n@param ipAddressCount The number of IP addresses that the resolver endpoint can use for DNS queries.*/",
          "setterMethodName" : "setIpAddressCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "ipAddressCount",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>\n@param ipAddressCount The number of IP addresses that the resolver endpoint can use for DNS queries.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "ipAddressCount",
            "variableType" : "Integer",
            "documentation" : "<p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "ModificationTime" : {
          "c2jName" : "ModificationTime",
          "c2jShape" : "Rfc3339TimeString",
          "deprecated" : false,
          "documentation" : "<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withModificationTime",
          "getterDocumentation" : "/**<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@return The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).*/",
          "getterMethodName" : "getModificationTime",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ModificationTime",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ModificationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ModificationTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).*/",
          "setterMethodName" : "setModificationTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "modificationTime",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n@param modificationTime The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "modificationTime",
            "variableType" : "String",
            "documentation" : "<p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>\n@param name The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>\n@return The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>\n@param name The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>\n@param name The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SecurityGroupIds" : {
          "c2jName" : "SecurityGroupIds",
          "c2jShape" : "SecurityGroupIds",
          "deprecated" : false,
          "documentation" : "<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>\n@param securityGroupIds The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSecurityGroupIds",
          "getterDocumentation" : "/**<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>\n@return The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.*/",
          "getterMethodName" : "getSecurityGroupIds",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SecurityGroupIds",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SecurityGroupIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResourceId",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "SecurityGroupIds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>\n@param securityGroupIds The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.*/",
          "setterMethodName" : "setSecurityGroupIds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "securityGroupIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSecurityGroupIds(java.util.Collection)} or {@link #withSecurityGroupIds(java.util.Collection)} if you want to override the existing values.</p>\n@param securityGroupIds The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "securityGroupIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "Status",
          "c2jShape" : "ResolverEndpointStatus",
          "deprecated" : false,
          "documentation" : "<p>A code that specifies the current status of the resolver endpoint.</p>",
          "enumType" : "ResolverEndpointStatus",
          "fluentSetterDocumentation" : "/**<p>A code that specifies the current status of the resolver endpoint.</p>\n@param status A code that specifies the current status of the resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>A code that specifies the current status of the resolver endpoint.</p>\n@return A code that specifies the current status of the resolver endpoint.\n@see ResolverEndpointStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A code that specifies the current status of the resolver endpoint.</p>\n@param status A code that specifies the current status of the resolver endpoint.\n@see ResolverEndpointStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A code that specifies the current status of the resolver endpoint.</p>\n@param status A code that specifies the current status of the resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverEndpointStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>A code that specifies the current status of the resolver endpoint.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StatusMessage" : {
          "c2jName" : "StatusMessage",
          "c2jShape" : "StatusMessage",
          "deprecated" : false,
          "documentation" : "<p>A detailed description of the status of the resolver endpoint.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A detailed description of the status of the resolver endpoint.</p>\n@param statusMessage A detailed description of the status of the resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStatusMessage",
          "getterDocumentation" : "/**<p>A detailed description of the status of the resolver endpoint.</p>\n@return A detailed description of the status of the resolver endpoint.*/",
          "getterMethodName" : "getStatusMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "StatusMessage",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "StatusMessage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "StatusMessage",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A detailed description of the status of the resolver endpoint.</p>\n@param statusMessage A detailed description of the status of the resolver endpoint.*/",
          "setterMethodName" : "setStatusMessage",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "statusMessage",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A detailed description of the status of the resolver endpoint.</p>\n@param statusMessage A detailed description of the status of the resolver endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "statusMessage",
            "variableType" : "String",
            "documentation" : "<p>A detailed description of the status of the resolver endpoint.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverEndpoint",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverEndpoint",
        "variableName" : "resolverEndpoint",
        "variableType" : "ResolverEndpoint",
        "documentation" : null,
        "simpleType" : "ResolverEndpoint",
        "variableSetterType" : "ResolverEndpoint"
      },
      "wrapper" : false
    },
    "ResolverEndpointDirection" : {
      "c2jName" : "ResolverEndpointDirection",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "INBOUND",
        "value" : "INBOUND"
      }, {
        "name" : "OUTBOUND",
        "value" : "OUTBOUND"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverEndpointDirection",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverEndpointDirection",
        "variableName" : "resolverEndpointDirection",
        "variableType" : "ResolverEndpointDirection",
        "documentation" : null,
        "simpleType" : "ResolverEndpointDirection",
        "variableSetterType" : "ResolverEndpointDirection"
      },
      "wrapper" : false
    },
    "ResolverEndpointStatus" : {
      "c2jName" : "ResolverEndpointStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "CREATING",
        "value" : "CREATING"
      }, {
        "name" : "OPERATIONAL",
        "value" : "OPERATIONAL"
      }, {
        "name" : "UPDATING",
        "value" : "UPDATING"
      }, {
        "name" : "AUTO_RECOVERING",
        "value" : "AUTO_RECOVERING"
      }, {
        "name" : "ACTION_NEEDED",
        "value" : "ACTION_NEEDED"
      }, {
        "name" : "DELETING",
        "value" : "DELETING"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverEndpointStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverEndpointStatus",
        "variableName" : "resolverEndpointStatus",
        "variableType" : "ResolverEndpointStatus",
        "documentation" : null,
        "simpleType" : "ResolverEndpointStatus",
        "variableSetterType" : "ResolverEndpointStatus"
      },
      "wrapper" : false
    },
    "ResolverRule" : {
      "c2jName" : "ResolverRule",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>For queries that originate in your VPC, detailed information about a resolver rule, which specifies how to route DNS queries out of the VPC. The <code>ResolverRule</code> parameter appears in the response to a <a>CreateResolverRule</a>, <a>DeleteResolverRule</a>, <a>GetResolverRule</a>, <a>ListResolverRules</a>, or <a>UpdateResolverRule</a> request.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Id",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID that Resolver assigned to the resolver rule when you created it.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID that Resolver assigned to the resolver rule when you created it.</p>\n@param id The ID that Resolver assigned to the resolver rule when you created it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withId",
        "getterDocumentation" : "/**<p>The ID that Resolver assigned to the resolver rule when you created it.</p>\n@return The ID that Resolver assigned to the resolver rule when you created it.*/",
        "getterMethodName" : "getId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Id",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Id",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID that Resolver assigned to the resolver rule when you created it.</p>\n@param id The ID that Resolver assigned to the resolver rule when you created it.*/",
        "setterMethodName" : "setId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID that Resolver assigned to the resolver rule when you created it.</p>\n@param id The ID that Resolver assigned to the resolver rule when you created it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "<p>The ID that Resolver assigned to the resolver rule when you created it.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CreatorRequestId",
        "c2jShape" : "CreatorRequestId",
        "deprecated" : false,
        "documentation" : "<p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>\n@param creatorRequestId A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreatorRequestId",
        "getterDocumentation" : "/**<p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>\n@return A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice.*/",
        "getterMethodName" : "getCreatorRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CreatorRequestId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CreatorRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CreatorRequestId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>\n@param creatorRequestId A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice.*/",
        "setterMethodName" : "setCreatorRequestId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>\n@param creatorRequestId A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "creatorRequestId",
          "variableType" : "String",
          "documentation" : "<p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>\n@param arn The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>\n@return The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>\n@param arn The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>\n@param arn The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "DomainName",
        "c2jShape" : "DomainName",
        "deprecated" : false,
        "documentation" : "<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDomainName",
        "getterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).</p>\n@return DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).*/",
        "getterMethodName" : "getDomainName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "DomainName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "DomainName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DomainName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).*/",
        "setterMethodName" : "setDomainName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "domainName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "domainName",
          "variableType" : "String",
          "documentation" : "<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Status",
        "c2jShape" : "ResolverRuleStatus",
        "deprecated" : false,
        "documentation" : "<p>A code that specifies the current status of the resolver rule.</p>",
        "enumType" : "ResolverRuleStatus",
        "fluentSetterDocumentation" : "/**<p>A code that specifies the current status of the resolver rule.</p>\n@param status A code that specifies the current status of the resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverRuleStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>A code that specifies the current status of the resolver rule.</p>\n@return A code that specifies the current status of the resolver rule.\n@see ResolverRuleStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A code that specifies the current status of the resolver rule.</p>\n@param status A code that specifies the current status of the resolver rule.\n@see ResolverRuleStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A code that specifies the current status of the resolver rule.</p>\n@param status A code that specifies the current status of the resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverRuleStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>A code that specifies the current status of the resolver rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "StatusMessage",
        "c2jShape" : "StatusMessage",
        "deprecated" : false,
        "documentation" : "<p>A detailed description of the status of a resolver rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A detailed description of the status of a resolver rule.</p>\n@param statusMessage A detailed description of the status of a resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStatusMessage",
        "getterDocumentation" : "/**<p>A detailed description of the status of a resolver rule.</p>\n@return A detailed description of the status of a resolver rule.*/",
        "getterMethodName" : "getStatusMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "StatusMessage",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "StatusMessage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "StatusMessage",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A detailed description of the status of a resolver rule.</p>\n@param statusMessage A detailed description of the status of a resolver rule.*/",
        "setterMethodName" : "setStatusMessage",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "statusMessage",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A detailed description of the status of a resolver rule.</p>\n@param statusMessage A detailed description of the status of a resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "statusMessage",
          "variableType" : "String",
          "documentation" : "<p>A detailed description of the status of a resolver rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "RuleType",
        "c2jShape" : "RuleTypeOption",
        "deprecated" : false,
        "documentation" : "<p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>",
        "enumType" : "RuleTypeOption",
        "fluentSetterDocumentation" : "/**<p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n@param ruleType This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RuleTypeOption*/",
        "fluentSetterMethodName" : "withRuleType",
        "getterDocumentation" : "/**<p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n@return This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.\n@see RuleTypeOption*/",
        "getterMethodName" : "getRuleType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "RuleType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "RuleType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RuleType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n@param ruleType This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.\n@see RuleTypeOption*/",
        "setterMethodName" : "setRuleType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ruleType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n@param ruleType This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RuleTypeOption*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ruleType",
          "variableType" : "String",
          "documentation" : "<p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>The name for the resolver rule, which you specified when you created the resolver rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name for the resolver rule, which you specified when you created the resolver rule.</p>\n@param name The name for the resolver rule, which you specified when you created the resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name for the resolver rule, which you specified when you created the resolver rule.</p>\n@return The name for the resolver rule, which you specified when you created the resolver rule.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name for the resolver rule, which you specified when you created the resolver rule.</p>\n@param name The name for the resolver rule, which you specified when you created the resolver rule.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name for the resolver rule, which you specified when you created the resolver rule.</p>\n@param name The name for the resolver rule, which you specified when you created the resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name for the resolver rule, which you specified when you created the resolver rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TargetIps",
        "c2jShape" : "TargetList",
        "deprecated" : false,
        "documentation" : "<p>An array that contains the IP addresses and ports that you want to forward </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array that contains the IP addresses and ports that you want to forward </p>\n@param targetIps An array that contains the IP addresses and ports that you want to forward\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargetIps",
        "getterDocumentation" : "/**<p>An array that contains the IP addresses and ports that you want to forward </p>\n@return An array that contains the IP addresses and ports that you want to forward*/",
        "getterMethodName" : "getTargetIps",
        "getterModel" : {
          "returnType" : "java.util.List<TargetAddress>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TargetIps",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TargetIps",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "TargetAddress",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "TargetAddress",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TargetAddress",
              "variableName" : "member",
              "variableType" : "TargetAddress",
              "documentation" : "",
              "simpleType" : "TargetAddress",
              "variableSetterType" : "TargetAddress"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TargetAddress",
              "variableName" : "member",
              "variableType" : "TargetAddress",
              "documentation" : "",
              "simpleType" : "TargetAddress",
              "variableSetterType" : "TargetAddress"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "TargetAddress",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "TargetAddress",
          "templateImplType" : "java.util.ArrayList<TargetAddress>",
          "templateType" : "java.util.List<TargetAddress>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "TargetIps",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An array that contains the IP addresses and ports that you want to forward </p>\n@param targetIps An array that contains the IP addresses and ports that you want to forward*/",
        "setterMethodName" : "setTargetIps",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TargetAddress>",
          "variableName" : "targetIps",
          "variableType" : "java.util.List<TargetAddress>",
          "documentation" : "",
          "simpleType" : "List<TargetAddress>",
          "variableSetterType" : "java.util.Collection<TargetAddress>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array that contains the IP addresses and ports that you want to forward </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTargetIps(java.util.Collection)} or {@link #withTargetIps(java.util.Collection)} if you want to override the existing values.</p>\n@param targetIps An array that contains the IP addresses and ports that you want to forward\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TargetAddress>",
          "variableName" : "targetIps",
          "variableType" : "java.util.List<TargetAddress>",
          "documentation" : "<p>An array that contains the IP addresses and ports that you want to forward </p>",
          "simpleType" : "List<TargetAddress>",
          "variableSetterType" : "java.util.Collection<TargetAddress>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the endpoint that the rule is associated with.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the endpoint that the rule is associated with.</p>\n@param resolverEndpointId The ID of the endpoint that the rule is associated with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the endpoint that the rule is associated with.</p>\n@return The ID of the endpoint that the rule is associated with.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the endpoint that the rule is associated with.</p>\n@param resolverEndpointId The ID of the endpoint that the rule is associated with.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the endpoint that the rule is associated with.</p>\n@param resolverEndpointId The ID of the endpoint that the rule is associated with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the endpoint that the rule is associated with.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OwnerId",
        "c2jShape" : "AccountId",
        "deprecated" : false,
        "documentation" : "<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n@param ownerId When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOwnerId",
        "getterDocumentation" : "/**<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n@return When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.*/",
        "getterMethodName" : "getOwnerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "OwnerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OwnerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OwnerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n@param ownerId When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.*/",
        "setterMethodName" : "setOwnerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ownerId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n@param ownerId When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ownerId",
          "variableType" : "String",
          "documentation" : "<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ShareStatus",
        "c2jShape" : "ShareStatus",
        "deprecated" : false,
        "documentation" : "<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>",
        "enumType" : "ShareStatus",
        "fluentSetterDocumentation" : "/**<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>\n@param shareStatus Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShareStatus*/",
        "fluentSetterMethodName" : "withShareStatus",
        "getterDocumentation" : "/**<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>\n@return Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n@see ShareStatus*/",
        "getterMethodName" : "getShareStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ShareStatus",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ShareStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ShareStatus",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>\n@param shareStatus Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n@see ShareStatus*/",
        "setterMethodName" : "setShareStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "shareStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>\n@param shareStatus Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShareStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "shareStatus",
          "variableType" : "String",
          "documentation" : "<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>\n@param arn The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>\n@return The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>\n@param arn The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>\n@param arn The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreatorRequestId" : {
          "c2jName" : "CreatorRequestId",
          "c2jShape" : "CreatorRequestId",
          "deprecated" : false,
          "documentation" : "<p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>\n@param creatorRequestId A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreatorRequestId",
          "getterDocumentation" : "/**<p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>\n@return A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice.*/",
          "getterMethodName" : "getCreatorRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CreatorRequestId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CreatorRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CreatorRequestId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>\n@param creatorRequestId A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice.*/",
          "setterMethodName" : "setCreatorRequestId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>\n@param creatorRequestId A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "creatorRequestId",
            "variableType" : "String",
            "documentation" : "<p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests to be retried without the risk of executing the operation twice. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "DomainName" : {
          "c2jName" : "DomainName",
          "c2jShape" : "DomainName",
          "deprecated" : false,
          "documentation" : "<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDomainName",
          "getterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).</p>\n@return DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).*/",
          "getterMethodName" : "getDomainName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "DomainName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "DomainName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DomainName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).*/",
          "setterMethodName" : "setDomainName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "domainName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).</p>\n@param domainName DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "domainName",
            "variableType" : "String",
            "documentation" : "<p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Id" : {
          "c2jName" : "Id",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID that Resolver assigned to the resolver rule when you created it.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID that Resolver assigned to the resolver rule when you created it.</p>\n@param id The ID that Resolver assigned to the resolver rule when you created it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withId",
          "getterDocumentation" : "/**<p>The ID that Resolver assigned to the resolver rule when you created it.</p>\n@return The ID that Resolver assigned to the resolver rule when you created it.*/",
          "getterMethodName" : "getId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Id",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Id",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID that Resolver assigned to the resolver rule when you created it.</p>\n@param id The ID that Resolver assigned to the resolver rule when you created it.*/",
          "setterMethodName" : "setId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID that Resolver assigned to the resolver rule when you created it.</p>\n@param id The ID that Resolver assigned to the resolver rule when you created it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "<p>The ID that Resolver assigned to the resolver rule when you created it.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>The name for the resolver rule, which you specified when you created the resolver rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name for the resolver rule, which you specified when you created the resolver rule.</p>\n@param name The name for the resolver rule, which you specified when you created the resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name for the resolver rule, which you specified when you created the resolver rule.</p>\n@return The name for the resolver rule, which you specified when you created the resolver rule.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name for the resolver rule, which you specified when you created the resolver rule.</p>\n@param name The name for the resolver rule, which you specified when you created the resolver rule.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name for the resolver rule, which you specified when you created the resolver rule.</p>\n@param name The name for the resolver rule, which you specified when you created the resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name for the resolver rule, which you specified when you created the resolver rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "OwnerId" : {
          "c2jName" : "OwnerId",
          "c2jShape" : "AccountId",
          "deprecated" : false,
          "documentation" : "<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n@param ownerId When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOwnerId",
          "getterDocumentation" : "/**<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n@return When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.*/",
          "getterMethodName" : "getOwnerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "OwnerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OwnerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OwnerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n@param ownerId When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.*/",
          "setterMethodName" : "setOwnerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ownerId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n@param ownerId When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ownerId",
            "variableType" : "String",
            "documentation" : "<p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the endpoint that the rule is associated with.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the endpoint that the rule is associated with.</p>\n@param resolverEndpointId The ID of the endpoint that the rule is associated with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the endpoint that the rule is associated with.</p>\n@return The ID of the endpoint that the rule is associated with.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the endpoint that the rule is associated with.</p>\n@param resolverEndpointId The ID of the endpoint that the rule is associated with.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the endpoint that the rule is associated with.</p>\n@param resolverEndpointId The ID of the endpoint that the rule is associated with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the endpoint that the rule is associated with.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RuleType" : {
          "c2jName" : "RuleType",
          "c2jShape" : "RuleTypeOption",
          "deprecated" : false,
          "documentation" : "<p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>",
          "enumType" : "RuleTypeOption",
          "fluentSetterDocumentation" : "/**<p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n@param ruleType This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RuleTypeOption*/",
          "fluentSetterMethodName" : "withRuleType",
          "getterDocumentation" : "/**<p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n@return This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.\n@see RuleTypeOption*/",
          "getterMethodName" : "getRuleType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "RuleType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "RuleType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RuleType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n@param ruleType This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.\n@see RuleTypeOption*/",
          "setterMethodName" : "setRuleType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ruleType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n@param ruleType This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.\n@return Returns a reference to this object so that method calls can be chained together.\n@see RuleTypeOption*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ruleType",
            "variableType" : "String",
            "documentation" : "<p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ShareStatus" : {
          "c2jName" : "ShareStatus",
          "c2jShape" : "ShareStatus",
          "deprecated" : false,
          "documentation" : "<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>",
          "enumType" : "ShareStatus",
          "fluentSetterDocumentation" : "/**<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>\n@param shareStatus Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShareStatus*/",
          "fluentSetterMethodName" : "withShareStatus",
          "getterDocumentation" : "/**<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>\n@return Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n@see ShareStatus*/",
          "getterMethodName" : "getShareStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ShareStatus",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ShareStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ShareStatus",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>\n@param shareStatus Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n@see ShareStatus*/",
          "setterMethodName" : "setShareStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "shareStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>\n@param shareStatus Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShareStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "shareStatus",
            "variableType" : "String",
            "documentation" : "<p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "Status",
          "c2jShape" : "ResolverRuleStatus",
          "deprecated" : false,
          "documentation" : "<p>A code that specifies the current status of the resolver rule.</p>",
          "enumType" : "ResolverRuleStatus",
          "fluentSetterDocumentation" : "/**<p>A code that specifies the current status of the resolver rule.</p>\n@param status A code that specifies the current status of the resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverRuleStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>A code that specifies the current status of the resolver rule.</p>\n@return A code that specifies the current status of the resolver rule.\n@see ResolverRuleStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A code that specifies the current status of the resolver rule.</p>\n@param status A code that specifies the current status of the resolver rule.\n@see ResolverRuleStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A code that specifies the current status of the resolver rule.</p>\n@param status A code that specifies the current status of the resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverRuleStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>A code that specifies the current status of the resolver rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StatusMessage" : {
          "c2jName" : "StatusMessage",
          "c2jShape" : "StatusMessage",
          "deprecated" : false,
          "documentation" : "<p>A detailed description of the status of a resolver rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A detailed description of the status of a resolver rule.</p>\n@param statusMessage A detailed description of the status of a resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStatusMessage",
          "getterDocumentation" : "/**<p>A detailed description of the status of a resolver rule.</p>\n@return A detailed description of the status of a resolver rule.*/",
          "getterMethodName" : "getStatusMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "StatusMessage",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "StatusMessage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "StatusMessage",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A detailed description of the status of a resolver rule.</p>\n@param statusMessage A detailed description of the status of a resolver rule.*/",
          "setterMethodName" : "setStatusMessage",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "statusMessage",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A detailed description of the status of a resolver rule.</p>\n@param statusMessage A detailed description of the status of a resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "statusMessage",
            "variableType" : "String",
            "documentation" : "<p>A detailed description of the status of a resolver rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetIps" : {
          "c2jName" : "TargetIps",
          "c2jShape" : "TargetList",
          "deprecated" : false,
          "documentation" : "<p>An array that contains the IP addresses and ports that you want to forward </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array that contains the IP addresses and ports that you want to forward </p>\n@param targetIps An array that contains the IP addresses and ports that you want to forward\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargetIps",
          "getterDocumentation" : "/**<p>An array that contains the IP addresses and ports that you want to forward </p>\n@return An array that contains the IP addresses and ports that you want to forward*/",
          "getterMethodName" : "getTargetIps",
          "getterModel" : {
            "returnType" : "java.util.List<TargetAddress>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TargetIps",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TargetIps",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "TargetAddress",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "TargetAddress",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TargetAddress",
                "variableName" : "member",
                "variableType" : "TargetAddress",
                "documentation" : "",
                "simpleType" : "TargetAddress",
                "variableSetterType" : "TargetAddress"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TargetAddress",
                "variableName" : "member",
                "variableType" : "TargetAddress",
                "documentation" : "",
                "simpleType" : "TargetAddress",
                "variableSetterType" : "TargetAddress"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "TargetAddress",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "TargetAddress",
            "templateImplType" : "java.util.ArrayList<TargetAddress>",
            "templateType" : "java.util.List<TargetAddress>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "TargetIps",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An array that contains the IP addresses and ports that you want to forward </p>\n@param targetIps An array that contains the IP addresses and ports that you want to forward*/",
          "setterMethodName" : "setTargetIps",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TargetAddress>",
            "variableName" : "targetIps",
            "variableType" : "java.util.List<TargetAddress>",
            "documentation" : "",
            "simpleType" : "List<TargetAddress>",
            "variableSetterType" : "java.util.Collection<TargetAddress>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array that contains the IP addresses and ports that you want to forward </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTargetIps(java.util.Collection)} or {@link #withTargetIps(java.util.Collection)} if you want to override the existing values.</p>\n@param targetIps An array that contains the IP addresses and ports that you want to forward\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TargetAddress>",
            "variableName" : "targetIps",
            "variableType" : "java.util.List<TargetAddress>",
            "documentation" : "<p>An array that contains the IP addresses and ports that you want to forward </p>",
            "simpleType" : "List<TargetAddress>",
            "variableSetterType" : "java.util.Collection<TargetAddress>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverRule",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverRule",
        "variableName" : "resolverRule",
        "variableType" : "ResolverRule",
        "documentation" : null,
        "simpleType" : "ResolverRule",
        "variableSetterType" : "ResolverRule"
      },
      "wrapper" : false
    },
    "ResolverRuleAssociation" : {
      "c2jName" : "ResolverRuleAssociation",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>In the response to an <a>AssociateResolverRule</a>, <a>DisassociateResolverRule</a>, or <a>ListResolverRuleAssociations</a> request, information about an association between a resolver rule and a VPC.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Id",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.</p>\n@param id The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withId",
        "getterDocumentation" : "/**<p>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.</p>\n@return The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.*/",
        "getterMethodName" : "getId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Id",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Id",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.</p>\n@param id The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.*/",
        "setterMethodName" : "setId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.</p>\n@param id The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "<p>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverRuleId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n@param resolverRuleId The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleId",
        "getterDocumentation" : "/**<p>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n@return The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.*/",
        "getterMethodName" : "getResolverRuleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRuleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n@param resolverRuleId The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.*/",
        "setterMethodName" : "setResolverRuleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n@param resolverRuleId The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>The name of an association between a resolver rule and a VPC.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of an association between a resolver rule and a VPC.</p>\n@param name The name of an association between a resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of an association between a resolver rule and a VPC.</p>\n@return The name of an association between a resolver rule and a VPC.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of an association between a resolver rule and a VPC.</p>\n@param name The name of an association between a resolver rule and a VPC.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of an association between a resolver rule and a VPC.</p>\n@param name The name of an association between a resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of an association between a resolver rule and a VPC.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "VPCId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the VPC that you associated the resolver rule with.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the VPC that you associated the resolver rule with.</p>\n@param vPCId The ID of the VPC that you associated the resolver rule with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVPCId",
        "getterDocumentation" : "/**<p>The ID of the VPC that you associated the resolver rule with.</p>\n@return The ID of the VPC that you associated the resolver rule with.*/",
        "getterMethodName" : "getVPCId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "VPCId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "VPCId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VPCId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the VPC that you associated the resolver rule with.</p>\n@param vPCId The ID of the VPC that you associated the resolver rule with.*/",
        "setterMethodName" : "setVPCId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vPCId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the VPC that you associated the resolver rule with.</p>\n@param vPCId The ID of the VPC that you associated the resolver rule with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "vPCId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the VPC that you associated the resolver rule with.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Status",
        "c2jShape" : "ResolverRuleAssociationStatus",
        "deprecated" : false,
        "documentation" : "<p>A code that specifies the current status of the association between a resolver rule and a VPC.</p>",
        "enumType" : "ResolverRuleAssociationStatus",
        "fluentSetterDocumentation" : "/**<p>A code that specifies the current status of the association between a resolver rule and a VPC.</p>\n@param status A code that specifies the current status of the association between a resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverRuleAssociationStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>A code that specifies the current status of the association between a resolver rule and a VPC.</p>\n@return A code that specifies the current status of the association between a resolver rule and a VPC.\n@see ResolverRuleAssociationStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A code that specifies the current status of the association between a resolver rule and a VPC.</p>\n@param status A code that specifies the current status of the association between a resolver rule and a VPC.\n@see ResolverRuleAssociationStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A code that specifies the current status of the association between a resolver rule and a VPC.</p>\n@param status A code that specifies the current status of the association between a resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverRuleAssociationStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>A code that specifies the current status of the association between a resolver rule and a VPC.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "StatusMessage",
        "c2jShape" : "StatusMessage",
        "deprecated" : false,
        "documentation" : "<p>A detailed description of the status of the association between a resolver rule and a VPC.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A detailed description of the status of the association between a resolver rule and a VPC.</p>\n@param statusMessage A detailed description of the status of the association between a resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStatusMessage",
        "getterDocumentation" : "/**<p>A detailed description of the status of the association between a resolver rule and a VPC.</p>\n@return A detailed description of the status of the association between a resolver rule and a VPC.*/",
        "getterMethodName" : "getStatusMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "StatusMessage",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "StatusMessage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "StatusMessage",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A detailed description of the status of the association between a resolver rule and a VPC.</p>\n@param statusMessage A detailed description of the status of the association between a resolver rule and a VPC.*/",
        "setterMethodName" : "setStatusMessage",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "statusMessage",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A detailed description of the status of the association between a resolver rule and a VPC.</p>\n@param statusMessage A detailed description of the status of the association between a resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "statusMessage",
          "variableType" : "String",
          "documentation" : "<p>A detailed description of the status of the association between a resolver rule and a VPC.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Id" : {
          "c2jName" : "Id",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.</p>\n@param id The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withId",
          "getterDocumentation" : "/**<p>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.</p>\n@return The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.*/",
          "getterMethodName" : "getId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Id",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Id",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.</p>\n@param id The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.*/",
          "setterMethodName" : "setId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.</p>\n@param id The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "<p>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an <a>AssociateResolverRule</a> request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>The name of an association between a resolver rule and a VPC.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of an association between a resolver rule and a VPC.</p>\n@param name The name of an association between a resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of an association between a resolver rule and a VPC.</p>\n@return The name of an association between a resolver rule and a VPC.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of an association between a resolver rule and a VPC.</p>\n@param name The name of an association between a resolver rule and a VPC.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of an association between a resolver rule and a VPC.</p>\n@param name The name of an association between a resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of an association between a resolver rule and a VPC.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverRuleId" : {
          "c2jName" : "ResolverRuleId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n@param resolverRuleId The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleId",
          "getterDocumentation" : "/**<p>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n@return The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.*/",
          "getterMethodName" : "getResolverRuleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRuleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n@param resolverRuleId The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.*/",
          "setterMethodName" : "setResolverRuleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n@param resolverRuleId The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "Status",
          "c2jShape" : "ResolverRuleAssociationStatus",
          "deprecated" : false,
          "documentation" : "<p>A code that specifies the current status of the association between a resolver rule and a VPC.</p>",
          "enumType" : "ResolverRuleAssociationStatus",
          "fluentSetterDocumentation" : "/**<p>A code that specifies the current status of the association between a resolver rule and a VPC.</p>\n@param status A code that specifies the current status of the association between a resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverRuleAssociationStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>A code that specifies the current status of the association between a resolver rule and a VPC.</p>\n@return A code that specifies the current status of the association between a resolver rule and a VPC.\n@see ResolverRuleAssociationStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A code that specifies the current status of the association between a resolver rule and a VPC.</p>\n@param status A code that specifies the current status of the association between a resolver rule and a VPC.\n@see ResolverRuleAssociationStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A code that specifies the current status of the association between a resolver rule and a VPC.</p>\n@param status A code that specifies the current status of the association between a resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResolverRuleAssociationStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>A code that specifies the current status of the association between a resolver rule and a VPC.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StatusMessage" : {
          "c2jName" : "StatusMessage",
          "c2jShape" : "StatusMessage",
          "deprecated" : false,
          "documentation" : "<p>A detailed description of the status of the association between a resolver rule and a VPC.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A detailed description of the status of the association between a resolver rule and a VPC.</p>\n@param statusMessage A detailed description of the status of the association between a resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStatusMessage",
          "getterDocumentation" : "/**<p>A detailed description of the status of the association between a resolver rule and a VPC.</p>\n@return A detailed description of the status of the association between a resolver rule and a VPC.*/",
          "getterMethodName" : "getStatusMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "StatusMessage",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "StatusMessage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "StatusMessage",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A detailed description of the status of the association between a resolver rule and a VPC.</p>\n@param statusMessage A detailed description of the status of the association between a resolver rule and a VPC.*/",
          "setterMethodName" : "setStatusMessage",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "statusMessage",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A detailed description of the status of the association between a resolver rule and a VPC.</p>\n@param statusMessage A detailed description of the status of the association between a resolver rule and a VPC.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "statusMessage",
            "variableType" : "String",
            "documentation" : "<p>A detailed description of the status of the association between a resolver rule and a VPC.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "VPCId" : {
          "c2jName" : "VPCId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the VPC that you associated the resolver rule with.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the VPC that you associated the resolver rule with.</p>\n@param vPCId The ID of the VPC that you associated the resolver rule with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVPCId",
          "getterDocumentation" : "/**<p>The ID of the VPC that you associated the resolver rule with.</p>\n@return The ID of the VPC that you associated the resolver rule with.*/",
          "getterMethodName" : "getVPCId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "VPCId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "VPCId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VPCId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the VPC that you associated the resolver rule with.</p>\n@param vPCId The ID of the VPC that you associated the resolver rule with.*/",
          "setterMethodName" : "setVPCId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vPCId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the VPC that you associated the resolver rule with.</p>\n@param vPCId The ID of the VPC that you associated the resolver rule with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "vPCId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the VPC that you associated the resolver rule with.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverRuleAssociation",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverRuleAssociation",
        "variableName" : "resolverRuleAssociation",
        "variableType" : "ResolverRuleAssociation",
        "documentation" : null,
        "simpleType" : "ResolverRuleAssociation",
        "variableSetterType" : "ResolverRuleAssociation"
      },
      "wrapper" : false
    },
    "ResolverRuleAssociationStatus" : {
      "c2jName" : "ResolverRuleAssociationStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "CREATING",
        "value" : "CREATING"
      }, {
        "name" : "COMPLETE",
        "value" : "COMPLETE"
      }, {
        "name" : "DELETING",
        "value" : "DELETING"
      }, {
        "name" : "FAILED",
        "value" : "FAILED"
      }, {
        "name" : "OVERRIDDEN",
        "value" : "OVERRIDDEN"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverRuleAssociationStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverRuleAssociationStatus",
        "variableName" : "resolverRuleAssociationStatus",
        "variableType" : "ResolverRuleAssociationStatus",
        "documentation" : null,
        "simpleType" : "ResolverRuleAssociationStatus",
        "variableSetterType" : "ResolverRuleAssociationStatus"
      },
      "wrapper" : false
    },
    "ResolverRuleConfig" : {
      "c2jName" : "ResolverRuleConfig",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>In an <a>UpdateResolverRule</a> request, information about the changes that you want to make.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n@param name The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n@return The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n@param name The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n@param name The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TargetIps",
        "c2jShape" : "TargetList",
        "deprecated" : false,
        "documentation" : "<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n@param targetIps For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargetIps",
        "getterDocumentation" : "/**<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n@return For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.*/",
        "getterMethodName" : "getTargetIps",
        "getterModel" : {
          "returnType" : "java.util.List<TargetAddress>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TargetIps",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TargetIps",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "TargetAddress",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "TargetAddress",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TargetAddress",
              "variableName" : "member",
              "variableType" : "TargetAddress",
              "documentation" : "",
              "simpleType" : "TargetAddress",
              "variableSetterType" : "TargetAddress"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TargetAddress",
              "variableName" : "member",
              "variableType" : "TargetAddress",
              "documentation" : "",
              "simpleType" : "TargetAddress",
              "variableSetterType" : "TargetAddress"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "TargetAddress",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "TargetAddress",
          "templateImplType" : "java.util.ArrayList<TargetAddress>",
          "templateType" : "java.util.List<TargetAddress>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "TargetIps",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n@param targetIps For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.*/",
        "setterMethodName" : "setTargetIps",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TargetAddress>",
          "variableName" : "targetIps",
          "variableType" : "java.util.List<TargetAddress>",
          "documentation" : "",
          "simpleType" : "List<TargetAddress>",
          "variableSetterType" : "java.util.Collection<TargetAddress>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTargetIps(java.util.Collection)} or {@link #withTargetIps(java.util.Collection)} if you want to override the existing values.</p>\n@param targetIps For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TargetAddress>",
          "variableName" : "targetIps",
          "variableType" : "java.util.List<TargetAddress>",
          "documentation" : "<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>",
          "simpleType" : "List<TargetAddress>",
          "variableSetterType" : "java.util.Collection<TargetAddress>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@return The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n@param name The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n@return The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n@param name The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n@param name The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@return The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>\n@param resolverEndpointId The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetIps" : {
          "c2jName" : "TargetIps",
          "c2jShape" : "TargetList",
          "deprecated" : false,
          "documentation" : "<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n@param targetIps For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargetIps",
          "getterDocumentation" : "/**<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n@return For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.*/",
          "getterMethodName" : "getTargetIps",
          "getterModel" : {
            "returnType" : "java.util.List<TargetAddress>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TargetIps",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TargetIps",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "TargetAddress",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "TargetAddress",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TargetAddress",
                "variableName" : "member",
                "variableType" : "TargetAddress",
                "documentation" : "",
                "simpleType" : "TargetAddress",
                "variableSetterType" : "TargetAddress"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TargetAddress",
                "variableName" : "member",
                "variableType" : "TargetAddress",
                "documentation" : "",
                "simpleType" : "TargetAddress",
                "variableSetterType" : "TargetAddress"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "TargetAddress",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "TargetAddress",
            "templateImplType" : "java.util.ArrayList<TargetAddress>",
            "templateType" : "java.util.List<TargetAddress>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "TargetIps",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n@param targetIps For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.*/",
          "setterMethodName" : "setTargetIps",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TargetAddress>",
            "variableName" : "targetIps",
            "variableType" : "java.util.List<TargetAddress>",
            "documentation" : "",
            "simpleType" : "List<TargetAddress>",
            "variableSetterType" : "java.util.Collection<TargetAddress>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTargetIps(java.util.Collection)} or {@link #withTargetIps(java.util.Collection)} if you want to override the existing values.</p>\n@param targetIps For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TargetAddress>",
            "variableName" : "targetIps",
            "variableType" : "java.util.List<TargetAddress>",
            "documentation" : "<p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>",
            "simpleType" : "List<TargetAddress>",
            "variableSetterType" : "java.util.Collection<TargetAddress>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverRuleConfig",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverRuleConfig",
        "variableName" : "resolverRuleConfig",
        "variableType" : "ResolverRuleConfig",
        "documentation" : null,
        "simpleType" : "ResolverRuleConfig",
        "variableSetterType" : "ResolverRuleConfig"
      },
      "wrapper" : false
    },
    "ResolverRuleStatus" : {
      "c2jName" : "ResolverRuleStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "COMPLETE",
        "value" : "COMPLETE"
      }, {
        "name" : "DELETING",
        "value" : "DELETING"
      }, {
        "name" : "UPDATING",
        "value" : "UPDATING"
      }, {
        "name" : "FAILED",
        "value" : "FAILED"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResolverRuleStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResolverRuleStatus",
        "variableName" : "resolverRuleStatus",
        "variableType" : "ResolverRuleStatus",
        "documentation" : null,
        "simpleType" : "ResolverRuleStatus",
        "variableSetterType" : "ResolverRuleStatus"
      },
      "wrapper" : false
    },
    "ResourceExistsException" : {
      "c2jName" : "ResourceExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The resource that you tried to create already exists.</p>",
      "enums" : null,
      "errorCode" : "ResourceExistsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResourceType",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n@param resourceType For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n@return For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.*/",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n@param resourceType For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.*/",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n@param resourceType For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n@param resourceType For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n@return For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.*/",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n@param resourceType For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.*/",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n@param resourceType For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "<p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceExistsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResourceExistsException",
        "variableName" : "resourceExistsException",
        "variableType" : "ResourceExistsException",
        "documentation" : null,
        "simpleType" : "ResourceExistsException",
        "variableSetterType" : "ResourceExistsException"
      },
      "wrapper" : false
    },
    "ResourceInUseException" : {
      "c2jName" : "ResourceInUseException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The resource that you tried to update or delete is currently in use.</p>",
      "enums" : null,
      "errorCode" : "ResourceInUseException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResourceType",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n@param resourceType For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n@return For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.*/",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n@param resourceType For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.*/",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n@param resourceType For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n@param resourceType For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n@return For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.*/",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n@param resourceType For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.*/",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n@param resourceType For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "<p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceInUseException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResourceInUseException",
        "variableName" : "resourceInUseException",
        "variableType" : "ResourceInUseException",
        "documentation" : null,
        "simpleType" : "ResourceInUseException",
        "variableSetterType" : "ResourceInUseException"
      },
      "wrapper" : false
    },
    "ResourceNotFoundException" : {
      "c2jName" : "ResourceNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified resource doesn't exist.</p>",
      "enums" : null,
      "errorCode" : "ResourceNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResourceType",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n@param resourceType For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n@return For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.*/",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n@param resourceType For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.*/",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n@param resourceType For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n@param resourceType For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n@return For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.*/",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n@param resourceType For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.*/",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n@param resourceType For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "<p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResourceNotFoundException",
        "variableName" : "resourceNotFoundException",
        "variableType" : "ResourceNotFoundException",
        "documentation" : null,
        "simpleType" : "ResourceNotFoundException",
        "variableSetterType" : "ResourceNotFoundException"
      },
      "wrapper" : false
    },
    "ResourceUnavailableException" : {
      "c2jName" : "ResourceUnavailableException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified resource isn't available.</p>",
      "enums" : null,
      "errorCode" : "ResourceUnavailableException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResourceType",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n@param resourceType For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n@return For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.*/",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n@param resourceType For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.*/",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n@param resourceType For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n@param resourceType For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n@return For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.*/",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n@param resourceType For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.*/",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n@param resourceType For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "<p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceUnavailableException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResourceUnavailableException",
        "variableName" : "resourceUnavailableException",
        "variableType" : "ResourceUnavailableException",
        "documentation" : null,
        "simpleType" : "ResourceUnavailableException",
        "variableSetterType" : "ResourceUnavailableException"
      },
      "wrapper" : false
    },
    "RuleTypeOption" : {
      "c2jName" : "RuleTypeOption",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "FORWARD",
        "value" : "FORWARD"
      }, {
        "name" : "SYSTEM",
        "value" : "SYSTEM"
      }, {
        "name" : "RECURSIVE",
        "value" : "RECURSIVE"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RuleTypeOption",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "RuleTypeOption",
        "variableName" : "ruleTypeOption",
        "variableType" : "RuleTypeOption",
        "documentation" : null,
        "simpleType" : "RuleTypeOption",
        "variableSetterType" : "RuleTypeOption"
      },
      "wrapper" : false
    },
    "ShareStatus" : {
      "c2jName" : "ShareStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "NOT_SHARED",
        "value" : "NOT_SHARED"
      }, {
        "name" : "SHARED_WITH_ME",
        "value" : "SHARED_WITH_ME"
      }, {
        "name" : "SHARED_BY_ME",
        "value" : "SHARED_BY_ME"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ShareStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ShareStatus",
        "variableName" : "shareStatus",
        "variableType" : "ShareStatus",
        "documentation" : null,
        "simpleType" : "ShareStatus",
        "variableSetterType" : "ShareStatus"
      },
      "wrapper" : false
    },
    "Tag" : {
      "c2jName" : "Tag",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>One tag that you want to add to the specified resource. A tag consists of a <code>Key</code> (a name for the tag) and a <code>Value</code>.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Key",
        "c2jShape" : "TagKey",
        "deprecated" : false,
        "documentation" : "<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>\n@param key The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withKey",
        "getterDocumentation" : "/**<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>\n@return The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.*/",
        "getterMethodName" : "getKey",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Key",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Key",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Key",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>\n@param key The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.*/",
        "setterMethodName" : "setKey",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "key",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>\n@param key The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "key",
          "variableType" : "String",
          "documentation" : "<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Value",
        "c2jShape" : "TagValue",
        "deprecated" : false,
        "documentation" : "<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>\n@param value The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValue",
        "getterDocumentation" : "/**<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>\n@return The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.*/",
        "getterMethodName" : "getValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Value",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>\n@param value The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.*/",
        "setterMethodName" : "setValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>\n@param value The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Key" : {
          "c2jName" : "Key",
          "c2jShape" : "TagKey",
          "deprecated" : false,
          "documentation" : "<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>\n@param key The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withKey",
          "getterDocumentation" : "/**<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>\n@return The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.*/",
          "getterMethodName" : "getKey",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Key",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Key",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Key",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>\n@param key The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.*/",
          "setterMethodName" : "setKey",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "key",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>\n@param key The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "key",
            "variableType" : "String",
            "documentation" : "<p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of <code>Key</code> might be <code>account-id</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "TagValue",
          "deprecated" : false,
          "documentation" : "<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>\n@param value The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValue",
          "getterDocumentation" : "/**<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>\n@return The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.*/",
          "getterMethodName" : "getValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Value",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>\n@param value The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.*/",
          "setterMethodName" : "setValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>\n@param value The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "<p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the customer account that you're creating the resource for.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Tag",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Tag",
        "variableName" : "tag",
        "variableType" : "Tag",
        "documentation" : null,
        "simpleType" : "Tag",
        "variableSetterType" : "Tag"
      },
      "wrapper" : false
    },
    "TagResourceRequest" : {
      "c2jName" : "TagResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "TagResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.TagResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResourceArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>\n@return The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li>*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li>*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Tags",
        "c2jShape" : "TagList",
        "deprecated" : false,
        "documentation" : "<p>The tags that you want to add to the specified resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The tags that you want to add to the specified resource.</p>\n@param tags The tags that you want to add to the specified resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>The tags that you want to add to the specified resource.</p>\n@return The tags that you want to add to the specified resource.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The tags that you want to add to the specified resource.</p>\n@param tags The tags that you want to add to the specified resource.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The tags that you want to add to the specified resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags The tags that you want to add to the specified resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>The tags that you want to add to the specified resource.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceArn" : {
          "c2jName" : "ResourceArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>\n@return The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li>*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li>*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "TagList",
          "deprecated" : false,
          "documentation" : "<p>The tags that you want to add to the specified resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The tags that you want to add to the specified resource.</p>\n@param tags The tags that you want to add to the specified resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>The tags that you want to add to the specified resource.</p>\n@return The tags that you want to add to the specified resource.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The tags that you want to add to the specified resource.</p>\n@param tags The tags that you want to add to the specified resource.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The tags that you want to add to the specified resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags The tags that you want to add to the specified resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>The tags that you want to add to the specified resource.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResourceArn", "Tags" ],
      "shapeName" : "TagResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TagResourceRequest",
        "variableName" : "tagResourceRequest",
        "variableType" : "TagResourceRequest",
        "documentation" : null,
        "simpleType" : "TagResourceRequest",
        "variableSetterType" : "TagResourceRequest"
      },
      "wrapper" : false
    },
    "TagResourceResult" : {
      "c2jName" : "TagResourceResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TagResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TagResourceResult",
        "variableName" : "tagResourceResult",
        "variableType" : "TagResourceResult",
        "documentation" : null,
        "simpleType" : "TagResourceResult",
        "variableSetterType" : "TagResourceResult"
      },
      "wrapper" : false
    },
    "TargetAddress" : {
      "c2jName" : "TargetAddress",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>In a <a>CreateResolverRule</a> request, an array of the IPs that you want to forward DNS queries to.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Ip",
        "c2jShape" : "Ip",
        "deprecated" : false,
        "documentation" : "<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n@param ip One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIp",
        "getterDocumentation" : "/**<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n@return One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.*/",
        "getterMethodName" : "getIp",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Ip",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Ip",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Ip",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n@param ip One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.*/",
        "setterMethodName" : "setIp",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ip",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n@param ip One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ip",
          "variableType" : "String",
          "documentation" : "<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Port",
        "c2jShape" : "Port",
        "deprecated" : false,
        "documentation" : "<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n@param port The port at <code>Ip</code> that you want to forward DNS queries to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPort",
        "getterDocumentation" : "/**<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n@return The port at <code>Ip</code> that you want to forward DNS queries to.*/",
        "getterMethodName" : "getPort",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Port",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Port",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "Port",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n@param port The port at <code>Ip</code> that you want to forward DNS queries to.*/",
        "setterMethodName" : "setPort",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "port",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n@param port The port at <code>Ip</code> that you want to forward DNS queries to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "port",
          "variableType" : "Integer",
          "documentation" : "<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Ip" : {
          "c2jName" : "Ip",
          "c2jShape" : "Ip",
          "deprecated" : false,
          "documentation" : "<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n@param ip One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIp",
          "getterDocumentation" : "/**<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n@return One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.*/",
          "getterMethodName" : "getIp",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Ip",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Ip",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Ip",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n@param ip One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.*/",
          "setterMethodName" : "setIp",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ip",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n@param ip One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ip",
            "variableType" : "String",
            "documentation" : "<p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Port" : {
          "c2jName" : "Port",
          "c2jShape" : "Port",
          "deprecated" : false,
          "documentation" : "<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n@param port The port at <code>Ip</code> that you want to forward DNS queries to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPort",
          "getterDocumentation" : "/**<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n@return The port at <code>Ip</code> that you want to forward DNS queries to.*/",
          "getterMethodName" : "getPort",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Port",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Port",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "Port",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n@param port The port at <code>Ip</code> that you want to forward DNS queries to.*/",
          "setterMethodName" : "setPort",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "port",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n@param port The port at <code>Ip</code> that you want to forward DNS queries to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "port",
            "variableType" : "Integer",
            "documentation" : "<p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Ip" ],
      "shapeName" : "TargetAddress",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TargetAddress",
        "variableName" : "targetAddress",
        "variableType" : "TargetAddress",
        "documentation" : null,
        "simpleType" : "TargetAddress",
        "variableSetterType" : "TargetAddress"
      },
      "wrapper" : false
    },
    "ThrottlingException" : {
      "c2jName" : "ThrottlingException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The request was throttled. Try again in a few minutes.</p>",
      "enums" : null,
      "errorCode" : "ThrottlingException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ThrottlingException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ThrottlingException",
        "variableName" : "throttlingException",
        "variableType" : "ThrottlingException",
        "documentation" : null,
        "simpleType" : "ThrottlingException",
        "variableSetterType" : "ThrottlingException"
      },
      "wrapper" : false
    },
    "UnknownResourceException" : {
      "c2jName" : "UnknownResourceException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified resource doesn't exist.</p>",
      "enums" : null,
      "errorCode" : "UnknownResourceException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UnknownResourceException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UnknownResourceException",
        "variableName" : "unknownResourceException",
        "variableType" : "UnknownResourceException",
        "documentation" : null,
        "simpleType" : "UnknownResourceException",
        "variableSetterType" : "UnknownResourceException"
      },
      "wrapper" : false
    },
    "UntagResourceRequest" : {
      "c2jName" : "UntagResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UntagResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.UntagResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResourceArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>\n@return The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li>*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li>*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TagKeys",
        "c2jShape" : "TagKeyList",
        "deprecated" : false,
        "documentation" : "<p>The tags that you want to remove to the specified resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The tags that you want to remove to the specified resource.</p>\n@param tagKeys The tags that you want to remove to the specified resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTagKeys",
        "getterDocumentation" : "/**<p>The tags that you want to remove to the specified resource.</p>\n@return The tags that you want to remove to the specified resource.*/",
        "getterMethodName" : "getTagKeys",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TagKeys",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TagKeys",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "TagKey",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "TagKeys",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The tags that you want to remove to the specified resource.</p>\n@param tagKeys The tags that you want to remove to the specified resource.*/",
        "setterMethodName" : "setTagKeys",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "tagKeys",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The tags that you want to remove to the specified resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTagKeys(java.util.Collection)} or {@link #withTagKeys(java.util.Collection)} if you want to override the existing values.</p>\n@param tagKeys The tags that you want to remove to the specified resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "tagKeys",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The tags that you want to remove to the specified resource.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceArn" : {
          "c2jName" : "ResourceArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>\n@return The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li>*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li>*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>\n@param resourceArn The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p> <a>GetResolverEndpoint</a> </p> </li> <li> <p> <a>GetResolverRule</a> </p> </li> <li> <p> <a>GetResolverRuleAssociation</a> </p> </li> <li> <p> <a>ListResolverEndpoints</a> </p> </li> <li> <p> <a>ListResolverRuleAssociations</a> </p> </li> <li> <p> <a>ListResolverRules</a> </p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TagKeys" : {
          "c2jName" : "TagKeys",
          "c2jShape" : "TagKeyList",
          "deprecated" : false,
          "documentation" : "<p>The tags that you want to remove to the specified resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The tags that you want to remove to the specified resource.</p>\n@param tagKeys The tags that you want to remove to the specified resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTagKeys",
          "getterDocumentation" : "/**<p>The tags that you want to remove to the specified resource.</p>\n@return The tags that you want to remove to the specified resource.*/",
          "getterMethodName" : "getTagKeys",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TagKeys",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TagKeys",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "TagKey",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "TagKeys",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The tags that you want to remove to the specified resource.</p>\n@param tagKeys The tags that you want to remove to the specified resource.*/",
          "setterMethodName" : "setTagKeys",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "tagKeys",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The tags that you want to remove to the specified resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTagKeys(java.util.Collection)} or {@link #withTagKeys(java.util.Collection)} if you want to override the existing values.</p>\n@param tagKeys The tags that you want to remove to the specified resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "tagKeys",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The tags that you want to remove to the specified resource.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResourceArn", "TagKeys" ],
      "shapeName" : "UntagResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UntagResourceRequest",
        "variableName" : "untagResourceRequest",
        "variableType" : "UntagResourceRequest",
        "documentation" : null,
        "simpleType" : "UntagResourceRequest",
        "variableSetterType" : "UntagResourceRequest"
      },
      "wrapper" : false
    },
    "UntagResourceResult" : {
      "c2jName" : "UntagResourceResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UntagResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UntagResourceResult",
        "variableName" : "untagResourceResult",
        "variableType" : "UntagResourceResult",
        "documentation" : null,
        "simpleType" : "UntagResourceResult",
        "variableSetterType" : "UntagResourceResult"
      },
      "wrapper" : false
    },
    "UpdateResolverEndpointRequest" : {
      "c2jName" : "UpdateResolverEndpointRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateResolverEndpoint",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.UpdateResolverEndpoint",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverEndpointId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the resolver endpoint that you want to update.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to update.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpointId",
        "getterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to update.</p>\n@return The ID of the resolver endpoint that you want to update.*/",
        "getterMethodName" : "getResolverEndpointId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpointId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpointId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverEndpointId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to update.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to update.*/",
        "setterMethodName" : "setResolverEndpointId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to update.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverEndpointId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the resolver endpoint that you want to update.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>The name of the resolver endpoint that you want to update.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the resolver endpoint that you want to update.</p>\n@param name The name of the resolver endpoint that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the resolver endpoint that you want to update.</p>\n@return The name of the resolver endpoint that you want to update.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the resolver endpoint that you want to update.</p>\n@param name The name of the resolver endpoint that you want to update.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the resolver endpoint that you want to update.</p>\n@param name The name of the resolver endpoint that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the resolver endpoint that you want to update.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>The name of the resolver endpoint that you want to update.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the resolver endpoint that you want to update.</p>\n@param name The name of the resolver endpoint that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the resolver endpoint that you want to update.</p>\n@return The name of the resolver endpoint that you want to update.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the resolver endpoint that you want to update.</p>\n@param name The name of the resolver endpoint that you want to update.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the resolver endpoint that you want to update.</p>\n@param name The name of the resolver endpoint that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the resolver endpoint that you want to update.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverEndpointId" : {
          "c2jName" : "ResolverEndpointId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the resolver endpoint that you want to update.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to update.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpointId",
          "getterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to update.</p>\n@return The ID of the resolver endpoint that you want to update.*/",
          "getterMethodName" : "getResolverEndpointId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpointId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpointId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverEndpointId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to update.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to update.*/",
          "setterMethodName" : "setResolverEndpointId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the resolver endpoint that you want to update.</p>\n@param resolverEndpointId The ID of the resolver endpoint that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverEndpointId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the resolver endpoint that you want to update.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverEndpointId" ],
      "shapeName" : "UpdateResolverEndpointRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateResolverEndpointRequest",
        "variableName" : "updateResolverEndpointRequest",
        "variableType" : "UpdateResolverEndpointRequest",
        "documentation" : null,
        "simpleType" : "UpdateResolverEndpointRequest",
        "variableSetterType" : "UpdateResolverEndpointRequest"
      },
      "wrapper" : false
    },
    "UpdateResolverEndpointResult" : {
      "c2jName" : "UpdateResolverEndpointResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverEndpoint",
        "c2jShape" : "ResolverEndpoint",
        "deprecated" : false,
        "documentation" : "<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n@param resolverEndpoint The response to an <code>UpdateResolverEndpoint</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverEndpoint",
        "getterDocumentation" : "/**<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n@return The response to an <code>UpdateResolverEndpoint</code> request.*/",
        "getterMethodName" : "getResolverEndpoint",
        "getterModel" : {
          "returnType" : "ResolverEndpoint",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverEndpoint",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverEndpoint",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverEndpoint",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n@param resolverEndpoint The response to an <code>UpdateResolverEndpoint</code> request.*/",
        "setterMethodName" : "setResolverEndpoint",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n@param resolverEndpoint The response to an <code>UpdateResolverEndpoint</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverEndpoint",
          "variableName" : "resolverEndpoint",
          "variableType" : "ResolverEndpoint",
          "documentation" : "<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>",
          "simpleType" : "ResolverEndpoint",
          "variableSetterType" : "ResolverEndpoint"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverEndpoint" : {
          "c2jName" : "ResolverEndpoint",
          "c2jShape" : "ResolverEndpoint",
          "deprecated" : false,
          "documentation" : "<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n@param resolverEndpoint The response to an <code>UpdateResolverEndpoint</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverEndpoint",
          "getterDocumentation" : "/**<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n@return The response to an <code>UpdateResolverEndpoint</code> request.*/",
          "getterMethodName" : "getResolverEndpoint",
          "getterModel" : {
            "returnType" : "ResolverEndpoint",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverEndpoint",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverEndpoint",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverEndpoint",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n@param resolverEndpoint The response to an <code>UpdateResolverEndpoint</code> request.*/",
          "setterMethodName" : "setResolverEndpoint",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n@param resolverEndpoint The response to an <code>UpdateResolverEndpoint</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverEndpoint",
            "variableName" : "resolverEndpoint",
            "variableType" : "ResolverEndpoint",
            "documentation" : "<p>The response to an <code>UpdateResolverEndpoint</code> request.</p>",
            "simpleType" : "ResolverEndpoint",
            "variableSetterType" : "ResolverEndpoint"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateResolverEndpointResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateResolverEndpointResult",
        "variableName" : "updateResolverEndpointResult",
        "variableType" : "UpdateResolverEndpointResult",
        "documentation" : null,
        "simpleType" : "UpdateResolverEndpointResult",
        "variableSetterType" : "UpdateResolverEndpointResult"
      },
      "wrapper" : false
    },
    "UpdateResolverRuleRequest" : {
      "c2jName" : "UpdateResolverRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateResolverRule",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "Route53Resolver.UpdateResolverRule",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResolverRuleId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the resolver rule that you want to update.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to update.</p>\n@param resolverRuleId The ID of the resolver rule that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRuleId",
        "getterDocumentation" : "/**<p>The ID of the resolver rule that you want to update.</p>\n@return The ID of the resolver rule that you want to update.*/",
        "getterMethodName" : "getResolverRuleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRuleId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRuleId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResolverRuleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the resolver rule that you want to update.</p>\n@param resolverRuleId The ID of the resolver rule that you want to update.*/",
        "setterMethodName" : "setResolverRuleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to update.</p>\n@param resolverRuleId The ID of the resolver rule that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resolverRuleId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the resolver rule that you want to update.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Config",
        "c2jShape" : "ResolverRuleConfig",
        "deprecated" : false,
        "documentation" : "<p>The new settings for the resolver rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The new settings for the resolver rule.</p>\n@param config The new settings for the resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfig",
        "getterDocumentation" : "/**<p>The new settings for the resolver rule.</p>\n@return The new settings for the resolver rule.*/",
        "getterMethodName" : "getConfig",
        "getterModel" : {
          "returnType" : "ResolverRuleConfig",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Config",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Config",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Config",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The new settings for the resolver rule.</p>\n@param config The new settings for the resolver rule.*/",
        "setterMethodName" : "setConfig",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRuleConfig",
          "variableName" : "config",
          "variableType" : "ResolverRuleConfig",
          "documentation" : "",
          "simpleType" : "ResolverRuleConfig",
          "variableSetterType" : "ResolverRuleConfig"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The new settings for the resolver rule.</p>\n@param config The new settings for the resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRuleConfig",
          "variableName" : "config",
          "variableType" : "ResolverRuleConfig",
          "documentation" : "<p>The new settings for the resolver rule.</p>",
          "simpleType" : "ResolverRuleConfig",
          "variableSetterType" : "ResolverRuleConfig"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Config" : {
          "c2jName" : "Config",
          "c2jShape" : "ResolverRuleConfig",
          "deprecated" : false,
          "documentation" : "<p>The new settings for the resolver rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The new settings for the resolver rule.</p>\n@param config The new settings for the resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfig",
          "getterDocumentation" : "/**<p>The new settings for the resolver rule.</p>\n@return The new settings for the resolver rule.*/",
          "getterMethodName" : "getConfig",
          "getterModel" : {
            "returnType" : "ResolverRuleConfig",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Config",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Config",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Config",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The new settings for the resolver rule.</p>\n@param config The new settings for the resolver rule.*/",
          "setterMethodName" : "setConfig",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRuleConfig",
            "variableName" : "config",
            "variableType" : "ResolverRuleConfig",
            "documentation" : "",
            "simpleType" : "ResolverRuleConfig",
            "variableSetterType" : "ResolverRuleConfig"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The new settings for the resolver rule.</p>\n@param config The new settings for the resolver rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRuleConfig",
            "variableName" : "config",
            "variableType" : "ResolverRuleConfig",
            "documentation" : "<p>The new settings for the resolver rule.</p>",
            "simpleType" : "ResolverRuleConfig",
            "variableSetterType" : "ResolverRuleConfig"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolverRuleId" : {
          "c2jName" : "ResolverRuleId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the resolver rule that you want to update.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to update.</p>\n@param resolverRuleId The ID of the resolver rule that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRuleId",
          "getterDocumentation" : "/**<p>The ID of the resolver rule that you want to update.</p>\n@return The ID of the resolver rule that you want to update.*/",
          "getterMethodName" : "getResolverRuleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRuleId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRuleId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResolverRuleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the resolver rule that you want to update.</p>\n@param resolverRuleId The ID of the resolver rule that you want to update.*/",
          "setterMethodName" : "setResolverRuleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the resolver rule that you want to update.</p>\n@param resolverRuleId The ID of the resolver rule that you want to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resolverRuleId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the resolver rule that you want to update.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResolverRuleId", "Config" ],
      "shapeName" : "UpdateResolverRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateResolverRuleRequest",
        "variableName" : "updateResolverRuleRequest",
        "variableType" : "UpdateResolverRuleRequest",
        "documentation" : null,
        "simpleType" : "UpdateResolverRuleRequest",
        "variableSetterType" : "UpdateResolverRuleRequest"
      },
      "wrapper" : false
    },
    "UpdateResolverRuleResult" : {
      "c2jName" : "UpdateResolverRuleResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResolverRule",
        "c2jShape" : "ResolverRule",
        "deprecated" : false,
        "documentation" : "<p>The response to an <code>UpdateResolverRule</code> request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The response to an <code>UpdateResolverRule</code> request.</p>\n@param resolverRule The response to an <code>UpdateResolverRule</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolverRule",
        "getterDocumentation" : "/**<p>The response to an <code>UpdateResolverRule</code> request.</p>\n@return The response to an <code>UpdateResolverRule</code> request.*/",
        "getterMethodName" : "getResolverRule",
        "getterModel" : {
          "returnType" : "ResolverRule",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResolverRule",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResolverRule",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ResolverRule",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The response to an <code>UpdateResolverRule</code> request.</p>\n@param resolverRule The response to an <code>UpdateResolverRule</code> request.*/",
        "setterMethodName" : "setResolverRule",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRule",
          "variableName" : "resolverRule",
          "variableType" : "ResolverRule",
          "documentation" : "",
          "simpleType" : "ResolverRule",
          "variableSetterType" : "ResolverRule"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The response to an <code>UpdateResolverRule</code> request.</p>\n@param resolverRule The response to an <code>UpdateResolverRule</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ResolverRule",
          "variableName" : "resolverRule",
          "variableType" : "ResolverRule",
          "documentation" : "<p>The response to an <code>UpdateResolverRule</code> request.</p>",
          "simpleType" : "ResolverRule",
          "variableSetterType" : "ResolverRule"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResolverRule" : {
          "c2jName" : "ResolverRule",
          "c2jShape" : "ResolverRule",
          "deprecated" : false,
          "documentation" : "<p>The response to an <code>UpdateResolverRule</code> request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The response to an <code>UpdateResolverRule</code> request.</p>\n@param resolverRule The response to an <code>UpdateResolverRule</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolverRule",
          "getterDocumentation" : "/**<p>The response to an <code>UpdateResolverRule</code> request.</p>\n@return The response to an <code>UpdateResolverRule</code> request.*/",
          "getterMethodName" : "getResolverRule",
          "getterModel" : {
            "returnType" : "ResolverRule",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResolverRule",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResolverRule",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ResolverRule",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The response to an <code>UpdateResolverRule</code> request.</p>\n@param resolverRule The response to an <code>UpdateResolverRule</code> request.*/",
          "setterMethodName" : "setResolverRule",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRule",
            "variableName" : "resolverRule",
            "variableType" : "ResolverRule",
            "documentation" : "",
            "simpleType" : "ResolverRule",
            "variableSetterType" : "ResolverRule"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The response to an <code>UpdateResolverRule</code> request.</p>\n@param resolverRule The response to an <code>UpdateResolverRule</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ResolverRule",
            "variableName" : "resolverRule",
            "variableType" : "ResolverRule",
            "documentation" : "<p>The response to an <code>UpdateResolverRule</code> request.</p>",
            "simpleType" : "ResolverRule",
            "variableSetterType" : "ResolverRule"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateResolverRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateResolverRuleResult",
        "variableName" : "updateResolverRuleResult",
        "variableType" : "UpdateResolverRuleResult",
        "documentation" : null,
        "simpleType" : "UpdateResolverRuleResult",
        "variableSetterType" : "UpdateResolverRuleResult"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "examples" : {
    "examples" : { },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2014-2019 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AmazonRoute53ResolverException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.route53resolver.model.AmazonRoute53ResolverException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.route53resolver.model.transform"
}