{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "contentTypeOverride" : null,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseHandlerFqcn" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "ClientMutationMethods", "ClientConstructors", "EnumSetterOverload" ],
    "emitLegacyEnumSetterFor" : null,
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipClientMethodForOperations" : [ ],
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : true,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false,
    "useUidAsFilePrefix" : true
  },
  "metadata" : {
    "apiVersion" : "2018-08-01",
    "asyncClient" : "AWSLicenseManagerAsyncClient",
    "asyncClientBuilderClassName" : "AWSLicenseManagerAsyncClientBuilder",
    "asyncInterface" : "AWSLicenseManagerAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : null,
    "cucumberModuleInjectorClassName" : "AWSLicenseManagerModuleInjector",
    "defaultEndpoint" : "license-manager.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "license-manager.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<fullname> AWS License Manager </fullname> <p> <i>This is the AWS License Manager API Reference.</i> It provides descriptions, syntax, and usage examples for each of the actions and data types for License Manager. The topic for each action shows the Query API request parameters and the XML response. You can also view the XML request elements in the WSDL. </p> <p> Alternatively, you can use one of the AWS SDKs to access an API that's tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>. </p>",
    "endpointPrefix" : "license-manager",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.licensemanager",
    "packagePath" : "com/amazonaws/services/licensemanager",
    "protocol" : "json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : null,
    "serviceFullName" : "AWS License Manager",
    "serviceId" : "License Manager",
    "serviceName" : "AWS License Manager",
    "signingName" : "license-manager",
    "smokeTestsPackageName" : "com.amazonaws.services.licensemanager.smoketests",
    "syncClient" : "AWSLicenseManagerClient",
    "syncClientBuilderClassName" : "AWSLicenseManagerClientBuilder",
    "syncInterface" : "AWSLicenseManager",
    "uid" : "license-manager-2018-08-01",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "CreateLicenseConfiguration" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateLicenseConfigurationResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateLicenseConfigurationResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateLicenseConfigurationRequest, CreateLicenseConfigurationResult>",
      "asyncReturnType" : "CreateLicenseConfigurationResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a new license configuration object. A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or VCPU), tenancy (shared tenancy, Amazon EC2 Dedicated Instance, Amazon EC2 Dedicated Host, or any of these), host affinity (how long a VM must be associated with a host), the number of licenses purchased and used.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>One or more parameter values are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerInternalException",
        "documentation" : "<p>The server experienced an internal error. Try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceLimitExceededException",
        "documentation" : "<p>Your resource limits have been exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AuthorizationException",
        "documentation" : "<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>Access to resource denied.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RateLimitExceededException",
        "documentation" : "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateLicenseConfigurationRequest",
        "variableName" : "createLicenseConfigurationRequest",
        "variableType" : "CreateLicenseConfigurationRequest",
        "documentation" : "",
        "simpleType" : "CreateLicenseConfigurationRequest",
        "variableSetterType" : "CreateLicenseConfigurationRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createLicenseConfiguration",
      "operationName" : "CreateLicenseConfiguration",
      "returnType" : {
        "returnType" : "CreateLicenseConfigurationResult",
        "documentation" : null
      },
      "syncReturnType" : "CreateLicenseConfigurationResult"
    },
    "DeleteLicenseConfiguration" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteLicenseConfigurationResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteLicenseConfigurationResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteLicenseConfigurationRequest, DeleteLicenseConfigurationResult>",
      "asyncReturnType" : "DeleteLicenseConfigurationResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes an existing license configuration. This action fails if the configuration is in use.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>One or more parameter values are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerInternalException",
        "documentation" : "<p>The server experienced an internal error. Try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AuthorizationException",
        "documentation" : "<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>Access to resource denied.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RateLimitExceededException",
        "documentation" : "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteLicenseConfigurationRequest",
        "variableName" : "deleteLicenseConfigurationRequest",
        "variableType" : "DeleteLicenseConfigurationRequest",
        "documentation" : "",
        "simpleType" : "DeleteLicenseConfigurationRequest",
        "variableSetterType" : "DeleteLicenseConfigurationRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteLicenseConfiguration",
      "operationName" : "DeleteLicenseConfiguration",
      "returnType" : {
        "returnType" : "DeleteLicenseConfigurationResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteLicenseConfigurationResult"
    },
    "GetLicenseConfiguration" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetLicenseConfigurationResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetLicenseConfigurationResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetLicenseConfigurationRequest, GetLicenseConfigurationResult>",
      "asyncReturnType" : "GetLicenseConfigurationResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns a detailed description of a license configuration.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>One or more parameter values are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerInternalException",
        "documentation" : "<p>The server experienced an internal error. Try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AuthorizationException",
        "documentation" : "<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>Access to resource denied.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RateLimitExceededException",
        "documentation" : "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetLicenseConfigurationRequest",
        "variableName" : "getLicenseConfigurationRequest",
        "variableType" : "GetLicenseConfigurationRequest",
        "documentation" : "",
        "simpleType" : "GetLicenseConfigurationRequest",
        "variableSetterType" : "GetLicenseConfigurationRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getLicenseConfiguration",
      "operationName" : "GetLicenseConfiguration",
      "returnType" : {
        "returnType" : "GetLicenseConfigurationResult",
        "documentation" : null
      },
      "syncReturnType" : "GetLicenseConfigurationResult"
    },
    "GetServiceSettings" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetServiceSettingsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetServiceSettingsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetServiceSettingsRequest, GetServiceSettingsResult>",
      "asyncReturnType" : "GetServiceSettingsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets License Manager settings for a region. Exposes the configured S3 bucket, SNS topic, etc., for inspection. </p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerInternalException",
        "documentation" : "<p>The server experienced an internal error. Try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AuthorizationException",
        "documentation" : "<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>Access to resource denied.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RateLimitExceededException",
        "documentation" : "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetServiceSettingsRequest",
        "variableName" : "getServiceSettingsRequest",
        "variableType" : "GetServiceSettingsRequest",
        "documentation" : "",
        "simpleType" : "GetServiceSettingsRequest",
        "variableSetterType" : "GetServiceSettingsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getServiceSettings",
      "operationName" : "GetServiceSettings",
      "returnType" : {
        "returnType" : "GetServiceSettingsResult",
        "documentation" : null
      },
      "syncReturnType" : "GetServiceSettingsResult"
    },
    "ListAssociationsForLicenseConfiguration" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListAssociationsForLicenseConfigurationResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListAssociationsForLicenseConfigurationResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListAssociationsForLicenseConfigurationRequest, ListAssociationsForLicenseConfigurationResult>",
      "asyncReturnType" : "ListAssociationsForLicenseConfigurationResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the resource associations for a license configuration. Resource associations need not consume licenses from a license configuration. For example, an AMI or a stopped instance may not consume a license (depending on the license rules). Use this operation to find all resources associated with a license configuration.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>One or more parameter values are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "FilterLimitExceededException",
        "documentation" : "<p>The request uses too many filters or too many filter values.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerInternalException",
        "documentation" : "<p>The server experienced an internal error. Try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AuthorizationException",
        "documentation" : "<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>Access to resource denied.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RateLimitExceededException",
        "documentation" : "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListAssociationsForLicenseConfigurationRequest",
        "variableName" : "listAssociationsForLicenseConfigurationRequest",
        "variableType" : "ListAssociationsForLicenseConfigurationRequest",
        "documentation" : "",
        "simpleType" : "ListAssociationsForLicenseConfigurationRequest",
        "variableSetterType" : "ListAssociationsForLicenseConfigurationRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listAssociationsForLicenseConfiguration",
      "operationName" : "ListAssociationsForLicenseConfiguration",
      "returnType" : {
        "returnType" : "ListAssociationsForLicenseConfigurationResult",
        "documentation" : null
      },
      "syncReturnType" : "ListAssociationsForLicenseConfigurationResult"
    },
    "ListLicenseConfigurations" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListLicenseConfigurationsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListLicenseConfigurationsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListLicenseConfigurationsRequest, ListLicenseConfigurationsResult>",
      "asyncReturnType" : "ListLicenseConfigurationsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists license configuration objects for an account, each containing the name, description, license type, and other license terms modeled from a license agreement.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>One or more parameter values are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerInternalException",
        "documentation" : "<p>The server experienced an internal error. Try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "FilterLimitExceededException",
        "documentation" : "<p>The request uses too many filters or too many filter values.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AuthorizationException",
        "documentation" : "<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>Access to resource denied.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RateLimitExceededException",
        "documentation" : "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListLicenseConfigurationsRequest",
        "variableName" : "listLicenseConfigurationsRequest",
        "variableType" : "ListLicenseConfigurationsRequest",
        "documentation" : "",
        "simpleType" : "ListLicenseConfigurationsRequest",
        "variableSetterType" : "ListLicenseConfigurationsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listLicenseConfigurations",
      "operationName" : "ListLicenseConfigurations",
      "returnType" : {
        "returnType" : "ListLicenseConfigurationsResult",
        "documentation" : null
      },
      "syncReturnType" : "ListLicenseConfigurationsResult"
    },
    "ListLicenseSpecificationsForResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListLicenseSpecificationsForResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListLicenseSpecificationsForResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListLicenseSpecificationsForResourceRequest, ListLicenseSpecificationsForResourceResult>",
      "asyncReturnType" : "ListLicenseSpecificationsForResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns the license configuration for a resource.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>One or more parameter values are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerInternalException",
        "documentation" : "<p>The server experienced an internal error. Try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AuthorizationException",
        "documentation" : "<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>Access to resource denied.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RateLimitExceededException",
        "documentation" : "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListLicenseSpecificationsForResourceRequest",
        "variableName" : "listLicenseSpecificationsForResourceRequest",
        "variableType" : "ListLicenseSpecificationsForResourceRequest",
        "documentation" : "",
        "simpleType" : "ListLicenseSpecificationsForResourceRequest",
        "variableSetterType" : "ListLicenseSpecificationsForResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listLicenseSpecificationsForResource",
      "operationName" : "ListLicenseSpecificationsForResource",
      "returnType" : {
        "returnType" : "ListLicenseSpecificationsForResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "ListLicenseSpecificationsForResourceResult"
    },
    "ListResourceInventory" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListResourceInventoryResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListResourceInventoryResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListResourceInventoryRequest, ListResourceInventoryResult>",
      "asyncReturnType" : "ListResourceInventoryResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns a detailed list of resources.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>One or more parameter values are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerInternalException",
        "documentation" : "<p>The server experienced an internal error. Try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "FilterLimitExceededException",
        "documentation" : "<p>The request uses too many filters or too many filter values.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "FailedDependencyException",
        "documentation" : "<p>A dependency required to run the API is missing.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AuthorizationException",
        "documentation" : "<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>Access to resource denied.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RateLimitExceededException",
        "documentation" : "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResourceInventoryRequest",
        "variableName" : "listResourceInventoryRequest",
        "variableType" : "ListResourceInventoryRequest",
        "documentation" : "",
        "simpleType" : "ListResourceInventoryRequest",
        "variableSetterType" : "ListResourceInventoryRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listResourceInventory",
      "operationName" : "ListResourceInventory",
      "returnType" : {
        "returnType" : "ListResourceInventoryResult",
        "documentation" : null
      },
      "syncReturnType" : "ListResourceInventoryResult"
    },
    "ListTagsForResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListTagsForResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListTagsForResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListTagsForResourceRequest, ListTagsForResourceResult>",
      "asyncReturnType" : "ListTagsForResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists tags attached to a resource.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>One or more parameter values are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerInternalException",
        "documentation" : "<p>The server experienced an internal error. Try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AuthorizationException",
        "documentation" : "<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>Access to resource denied.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RateLimitExceededException",
        "documentation" : "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTagsForResourceRequest",
        "variableName" : "listTagsForResourceRequest",
        "variableType" : "ListTagsForResourceRequest",
        "documentation" : "",
        "simpleType" : "ListTagsForResourceRequest",
        "variableSetterType" : "ListTagsForResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listTagsForResource",
      "operationName" : "ListTagsForResource",
      "returnType" : {
        "returnType" : "ListTagsForResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "ListTagsForResourceResult"
    },
    "ListUsageForLicenseConfiguration" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListUsageForLicenseConfigurationResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListUsageForLicenseConfigurationResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListUsageForLicenseConfigurationRequest, ListUsageForLicenseConfigurationResult>",
      "asyncReturnType" : "ListUsageForLicenseConfigurationResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists all license usage records for a license configuration, displaying license consumption details by resource at a selected point in time. Use this action to audit the current license consumption for any license inventory and configuration.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>One or more parameter values are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "FilterLimitExceededException",
        "documentation" : "<p>The request uses too many filters or too many filter values.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerInternalException",
        "documentation" : "<p>The server experienced an internal error. Try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AuthorizationException",
        "documentation" : "<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>Access to resource denied.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RateLimitExceededException",
        "documentation" : "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListUsageForLicenseConfigurationRequest",
        "variableName" : "listUsageForLicenseConfigurationRequest",
        "variableType" : "ListUsageForLicenseConfigurationRequest",
        "documentation" : "",
        "simpleType" : "ListUsageForLicenseConfigurationRequest",
        "variableSetterType" : "ListUsageForLicenseConfigurationRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listUsageForLicenseConfiguration",
      "operationName" : "ListUsageForLicenseConfiguration",
      "returnType" : {
        "returnType" : "ListUsageForLicenseConfigurationResult",
        "documentation" : null
      },
      "syncReturnType" : "ListUsageForLicenseConfigurationResult"
    },
    "TagResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<TagResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<TagResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<TagResourceRequest, TagResourceResult>",
      "asyncReturnType" : "TagResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Attach one of more tags to any resource.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>One or more parameter values are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerInternalException",
        "documentation" : "<p>The server experienced an internal error. Try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AuthorizationException",
        "documentation" : "<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>Access to resource denied.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RateLimitExceededException",
        "documentation" : "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TagResourceRequest",
        "variableName" : "tagResourceRequest",
        "variableType" : "TagResourceRequest",
        "documentation" : "",
        "simpleType" : "TagResourceRequest",
        "variableSetterType" : "TagResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "tagResource",
      "operationName" : "TagResource",
      "returnType" : {
        "returnType" : "TagResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "TagResourceResult"
    },
    "UntagResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UntagResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UntagResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UntagResourceRequest, UntagResourceResult>",
      "asyncReturnType" : "UntagResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Remove tags from a resource.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>One or more parameter values are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerInternalException",
        "documentation" : "<p>The server experienced an internal error. Try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AuthorizationException",
        "documentation" : "<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>Access to resource denied.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RateLimitExceededException",
        "documentation" : "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UntagResourceRequest",
        "variableName" : "untagResourceRequest",
        "variableType" : "UntagResourceRequest",
        "documentation" : "",
        "simpleType" : "UntagResourceRequest",
        "variableSetterType" : "UntagResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "untagResource",
      "operationName" : "UntagResource",
      "returnType" : {
        "returnType" : "UntagResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "UntagResourceResult"
    },
    "UpdateLicenseConfiguration" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateLicenseConfigurationResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateLicenseConfigurationResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateLicenseConfigurationRequest, UpdateLicenseConfigurationResult>",
      "asyncReturnType" : "UpdateLicenseConfigurationResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Modifies the attributes of an existing license configuration object. A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (Instances, cores, sockets, VCPUs), tenancy (shared or Dedicated Host), host affinity (how long a VM is associated with a host), the number of licenses purchased and used.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>One or more parameter values are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerInternalException",
        "documentation" : "<p>The server experienced an internal error. Try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AuthorizationException",
        "documentation" : "<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>Access to resource denied.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RateLimitExceededException",
        "documentation" : "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateLicenseConfigurationRequest",
        "variableName" : "updateLicenseConfigurationRequest",
        "variableType" : "UpdateLicenseConfigurationRequest",
        "documentation" : "",
        "simpleType" : "UpdateLicenseConfigurationRequest",
        "variableSetterType" : "UpdateLicenseConfigurationRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateLicenseConfiguration",
      "operationName" : "UpdateLicenseConfiguration",
      "returnType" : {
        "returnType" : "UpdateLicenseConfigurationResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateLicenseConfigurationResult"
    },
    "UpdateLicenseSpecificationsForResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateLicenseSpecificationsForResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateLicenseSpecificationsForResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateLicenseSpecificationsForResourceRequest, UpdateLicenseSpecificationsForResourceResult>",
      "asyncReturnType" : "UpdateLicenseSpecificationsForResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Adds or removes license configurations for a specified AWS resource. This operation currently supports updating the license specifications of AMIs, instances, and hosts. Launch templates and AWS CloudFormation templates are not managed from this operation as those resources send the license configurations directly to a resource creation operation, such as <code>RunInstances</code>.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>One or more parameter values are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidResourceStateException",
        "documentation" : "<p>License Manager cannot allocate a license to a resource because of its state. </p> <p>For example, you cannot allocate a license to an instance in the process of shutting down.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LicenseUsageException",
        "documentation" : "<p>You do not have enough licenses available to support a new resource launch.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerInternalException",
        "documentation" : "<p>The server experienced an internal error. Try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AuthorizationException",
        "documentation" : "<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>Access to resource denied.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RateLimitExceededException",
        "documentation" : "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateLicenseSpecificationsForResourceRequest",
        "variableName" : "updateLicenseSpecificationsForResourceRequest",
        "variableType" : "UpdateLicenseSpecificationsForResourceRequest",
        "documentation" : "",
        "simpleType" : "UpdateLicenseSpecificationsForResourceRequest",
        "variableSetterType" : "UpdateLicenseSpecificationsForResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateLicenseSpecificationsForResource",
      "operationName" : "UpdateLicenseSpecificationsForResource",
      "returnType" : {
        "returnType" : "UpdateLicenseSpecificationsForResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateLicenseSpecificationsForResourceResult"
    },
    "UpdateServiceSettings" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateServiceSettingsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateServiceSettingsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateServiceSettingsRequest, UpdateServiceSettingsResult>",
      "asyncReturnType" : "UpdateServiceSettingsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Updates License Manager service settings.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>One or more parameter values are not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerInternalException",
        "documentation" : "<p>The server experienced an internal error. Try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AuthorizationException",
        "documentation" : "<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>Access to resource denied.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RateLimitExceededException",
        "documentation" : "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateServiceSettingsRequest",
        "variableName" : "updateServiceSettingsRequest",
        "variableType" : "UpdateServiceSettingsRequest",
        "documentation" : "",
        "simpleType" : "UpdateServiceSettingsRequest",
        "variableSetterType" : "UpdateServiceSettingsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateServiceSettings",
      "operationName" : "UpdateServiceSettings",
      "returnType" : {
        "returnType" : "UpdateServiceSettingsResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateServiceSettingsResult"
    }
  },
  "shapes" : {
    "AccessDeniedException" : {
      "c2jName" : "AccessDeniedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Access to resource denied.</p>",
      "enums" : null,
      "errorCode" : "AccessDeniedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AccessDeniedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AccessDeniedException",
        "variableName" : "accessDeniedException",
        "variableType" : "AccessDeniedException",
        "documentation" : null,
        "simpleType" : "AccessDeniedException",
        "variableSetterType" : "AccessDeniedException"
      },
      "wrapper" : false
    },
    "AuthorizationException" : {
      "c2jName" : "AuthorizationException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
      "enums" : null,
      "errorCode" : "AuthorizationException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AuthorizationException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AuthorizationException",
        "variableName" : "authorizationException",
        "variableType" : "AuthorizationException",
        "documentation" : null,
        "simpleType" : "AuthorizationException",
        "variableSetterType" : "AuthorizationException"
      },
      "wrapper" : false
    },
    "ConsumedLicenseSummary" : {
      "c2jName" : "ConsumedLicenseSummary",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Details about license consumption.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResourceType",
        "c2jShape" : "ResourceType",
        "deprecated" : false,
        "documentation" : "<p>Resource type of the resource consuming a license (instance, host, or AMI).</p>",
        "enumType" : "ResourceType",
        "fluentSetterDocumentation" : "/**<p>Resource type of the resource consuming a license (instance, host, or AMI).</p>\n@param resourceType Resource type of the resource consuming a license (instance, host, or AMI).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**<p>Resource type of the resource consuming a license (instance, host, or AMI).</p>\n@return Resource type of the resource consuming a license (instance, host, or AMI).\n@see ResourceType*/",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Resource type of the resource consuming a license (instance, host, or AMI).</p>\n@param resourceType Resource type of the resource consuming a license (instance, host, or AMI).\n@see ResourceType*/",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Resource type of the resource consuming a license (instance, host, or AMI).</p>\n@param resourceType Resource type of the resource consuming a license (instance, host, or AMI).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "<p>Resource type of the resource consuming a license (instance, host, or AMI).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ConsumedLicenses",
        "c2jShape" : "BoxLong",
        "deprecated" : false,
        "documentation" : "<p>Number of licenses consumed by a resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Number of licenses consumed by a resource.</p>\n@param consumedLicenses Number of licenses consumed by a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConsumedLicenses",
        "getterDocumentation" : "/**<p>Number of licenses consumed by a resource.</p>\n@return Number of licenses consumed by a resource.*/",
        "getterMethodName" : "getConsumedLicenses",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ConsumedLicenses",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ConsumedLicenses",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "ConsumedLicenses",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Number of licenses consumed by a resource.</p>\n@param consumedLicenses Number of licenses consumed by a resource.*/",
        "setterMethodName" : "setConsumedLicenses",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "consumedLicenses",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Number of licenses consumed by a resource.</p>\n@param consumedLicenses Number of licenses consumed by a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "consumedLicenses",
          "variableType" : "Long",
          "documentation" : "<p>Number of licenses consumed by a resource.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ConsumedLicenses" : {
          "c2jName" : "ConsumedLicenses",
          "c2jShape" : "BoxLong",
          "deprecated" : false,
          "documentation" : "<p>Number of licenses consumed by a resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Number of licenses consumed by a resource.</p>\n@param consumedLicenses Number of licenses consumed by a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConsumedLicenses",
          "getterDocumentation" : "/**<p>Number of licenses consumed by a resource.</p>\n@return Number of licenses consumed by a resource.*/",
          "getterMethodName" : "getConsumedLicenses",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ConsumedLicenses",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ConsumedLicenses",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "ConsumedLicenses",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Number of licenses consumed by a resource.</p>\n@param consumedLicenses Number of licenses consumed by a resource.*/",
          "setterMethodName" : "setConsumedLicenses",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "consumedLicenses",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Number of licenses consumed by a resource.</p>\n@param consumedLicenses Number of licenses consumed by a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "consumedLicenses",
            "variableType" : "Long",
            "documentation" : "<p>Number of licenses consumed by a resource.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "ResourceType",
          "deprecated" : false,
          "documentation" : "<p>Resource type of the resource consuming a license (instance, host, or AMI).</p>",
          "enumType" : "ResourceType",
          "fluentSetterDocumentation" : "/**<p>Resource type of the resource consuming a license (instance, host, or AMI).</p>\n@param resourceType Resource type of the resource consuming a license (instance, host, or AMI).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**<p>Resource type of the resource consuming a license (instance, host, or AMI).</p>\n@return Resource type of the resource consuming a license (instance, host, or AMI).\n@see ResourceType*/",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Resource type of the resource consuming a license (instance, host, or AMI).</p>\n@param resourceType Resource type of the resource consuming a license (instance, host, or AMI).\n@see ResourceType*/",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Resource type of the resource consuming a license (instance, host, or AMI).</p>\n@param resourceType Resource type of the resource consuming a license (instance, host, or AMI).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "<p>Resource type of the resource consuming a license (instance, host, or AMI).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ConsumedLicenseSummary",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ConsumedLicenseSummary",
        "variableName" : "consumedLicenseSummary",
        "variableType" : "ConsumedLicenseSummary",
        "documentation" : null,
        "simpleType" : "ConsumedLicenseSummary",
        "variableSetterType" : "ConsumedLicenseSummary"
      },
      "wrapper" : false
    },
    "CreateLicenseConfigurationRequest" : {
      "c2jName" : "CreateLicenseConfigurationRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateLicenseConfiguration",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSLicenseManager.CreateLicenseConfiguration",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Name",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Name of the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>Name of the license configuration.</p>\n@return Name of the license configuration.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>Name of the license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Description",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Human-friendly description of the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Human-friendly description of the license configuration.</p>\n@param description Human-friendly description of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDescription",
        "getterDocumentation" : "/**<p>Human-friendly description of the license configuration.</p>\n@return Human-friendly description of the license configuration.*/",
        "getterMethodName" : "getDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Description",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Description",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Description",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Human-friendly description of the license configuration.</p>\n@param description Human-friendly description of the license configuration.*/",
        "setterMethodName" : "setDescription",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Human-friendly description of the license configuration.</p>\n@param description Human-friendly description of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "<p>Human-friendly description of the license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseCountingType",
        "c2jShape" : "LicenseCountingType",
        "deprecated" : false,
        "documentation" : "<p>Dimension to use to track the license inventory.</p>",
        "enumType" : "LicenseCountingType",
        "fluentSetterDocumentation" : "/**<p>Dimension to use to track the license inventory.</p>\n@param licenseCountingType Dimension to use to track the license inventory.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LicenseCountingType*/",
        "fluentSetterMethodName" : "withLicenseCountingType",
        "getterDocumentation" : "/**<p>Dimension to use to track the license inventory.</p>\n@return Dimension to use to track the license inventory.\n@see LicenseCountingType*/",
        "getterMethodName" : "getLicenseCountingType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseCountingType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseCountingType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LicenseCountingType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Dimension to use to track the license inventory.</p>\n@param licenseCountingType Dimension to use to track the license inventory.\n@see LicenseCountingType*/",
        "setterMethodName" : "setLicenseCountingType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseCountingType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Dimension to use to track the license inventory.</p>\n@param licenseCountingType Dimension to use to track the license inventory.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LicenseCountingType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseCountingType",
          "variableType" : "String",
          "documentation" : "<p>Dimension to use to track the license inventory.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseCount",
        "c2jShape" : "BoxLong",
        "deprecated" : false,
        "documentation" : "<p>Number of licenses managed by the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Number of licenses managed by the license configuration.</p>\n@param licenseCount Number of licenses managed by the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseCount",
        "getterDocumentation" : "/**<p>Number of licenses managed by the license configuration.</p>\n@return Number of licenses managed by the license configuration.*/",
        "getterMethodName" : "getLicenseCount",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseCount",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "LicenseCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Number of licenses managed by the license configuration.</p>\n@param licenseCount Number of licenses managed by the license configuration.*/",
        "setterMethodName" : "setLicenseCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "licenseCount",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Number of licenses managed by the license configuration.</p>\n@param licenseCount Number of licenses managed by the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "licenseCount",
          "variableType" : "Long",
          "documentation" : "<p>Number of licenses managed by the license configuration.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseCountHardLimit",
        "c2jShape" : "BoxBoolean",
        "deprecated" : false,
        "documentation" : "<p>Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.</p>\n@param licenseCountHardLimit Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseCountHardLimit",
        "getterDocumentation" : "/**<p>Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.</p>\n@return Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.*/",
        "getterMethodName" : "getLicenseCountHardLimit",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseCountHardLimit",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseCountHardLimit",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "LicenseCountHardLimit",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.</p>\n@param licenseCountHardLimit Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.*/",
        "setterMethodName" : "setLicenseCountHardLimit",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "licenseCountHardLimit",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.</p>\n@param licenseCountHardLimit Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "licenseCountHardLimit",
          "variableType" : "Boolean",
          "documentation" : "<p>Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseRules",
        "c2jShape" : "StringList",
        "deprecated" : false,
        "documentation" : "<p>Array of configured License Manager rules.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Array of configured License Manager rules.</p>\n@param licenseRules Array of configured License Manager rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseRules",
        "getterDocumentation" : "/**<p>Array of configured License Manager rules.</p>\n@return Array of configured License Manager rules.*/",
        "getterMethodName" : "getLicenseRules",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseRules",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseRules",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "String",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "LicenseRules",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Array of configured License Manager rules.</p>\n@param licenseRules Array of configured License Manager rules.*/",
        "setterMethodName" : "setLicenseRules",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "licenseRules",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Array of configured License Manager rules.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseRules(java.util.Collection)} or {@link #withLicenseRules(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseRules Array of configured License Manager rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "licenseRules",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>Array of configured License Manager rules.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Tags",
        "c2jShape" : "TagList",
        "deprecated" : false,
        "documentation" : "<p>The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p> <p/>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p> <p/>\n@param tags The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p> <p/>\n@return The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p>*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p> <p/>\n@param tags The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p>*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p> <p/>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p> <p/>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Description" : {
          "c2jName" : "Description",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Human-friendly description of the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Human-friendly description of the license configuration.</p>\n@param description Human-friendly description of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDescription",
          "getterDocumentation" : "/**<p>Human-friendly description of the license configuration.</p>\n@return Human-friendly description of the license configuration.*/",
          "getterMethodName" : "getDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Description",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Description",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Description",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Human-friendly description of the license configuration.</p>\n@param description Human-friendly description of the license configuration.*/",
          "setterMethodName" : "setDescription",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Human-friendly description of the license configuration.</p>\n@param description Human-friendly description of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "<p>Human-friendly description of the license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseCount" : {
          "c2jName" : "LicenseCount",
          "c2jShape" : "BoxLong",
          "deprecated" : false,
          "documentation" : "<p>Number of licenses managed by the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Number of licenses managed by the license configuration.</p>\n@param licenseCount Number of licenses managed by the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseCount",
          "getterDocumentation" : "/**<p>Number of licenses managed by the license configuration.</p>\n@return Number of licenses managed by the license configuration.*/",
          "getterMethodName" : "getLicenseCount",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseCount",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "LicenseCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Number of licenses managed by the license configuration.</p>\n@param licenseCount Number of licenses managed by the license configuration.*/",
          "setterMethodName" : "setLicenseCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "licenseCount",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Number of licenses managed by the license configuration.</p>\n@param licenseCount Number of licenses managed by the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "licenseCount",
            "variableType" : "Long",
            "documentation" : "<p>Number of licenses managed by the license configuration.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseCountHardLimit" : {
          "c2jName" : "LicenseCountHardLimit",
          "c2jShape" : "BoxBoolean",
          "deprecated" : false,
          "documentation" : "<p>Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.</p>\n@param licenseCountHardLimit Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseCountHardLimit",
          "getterDocumentation" : "/**<p>Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.</p>\n@return Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.*/",
          "getterMethodName" : "getLicenseCountHardLimit",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseCountHardLimit",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseCountHardLimit",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "LicenseCountHardLimit",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.</p>\n@param licenseCountHardLimit Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.*/",
          "setterMethodName" : "setLicenseCountHardLimit",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "licenseCountHardLimit",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.</p>\n@param licenseCountHardLimit Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "licenseCountHardLimit",
            "variableType" : "Boolean",
            "documentation" : "<p>Flag indicating whether hard or soft license enforcement is used. Exceeding a hard limit results in the blocked deployment of new instances.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseCountingType" : {
          "c2jName" : "LicenseCountingType",
          "c2jShape" : "LicenseCountingType",
          "deprecated" : false,
          "documentation" : "<p>Dimension to use to track the license inventory.</p>",
          "enumType" : "LicenseCountingType",
          "fluentSetterDocumentation" : "/**<p>Dimension to use to track the license inventory.</p>\n@param licenseCountingType Dimension to use to track the license inventory.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LicenseCountingType*/",
          "fluentSetterMethodName" : "withLicenseCountingType",
          "getterDocumentation" : "/**<p>Dimension to use to track the license inventory.</p>\n@return Dimension to use to track the license inventory.\n@see LicenseCountingType*/",
          "getterMethodName" : "getLicenseCountingType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseCountingType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseCountingType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LicenseCountingType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Dimension to use to track the license inventory.</p>\n@param licenseCountingType Dimension to use to track the license inventory.\n@see LicenseCountingType*/",
          "setterMethodName" : "setLicenseCountingType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseCountingType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Dimension to use to track the license inventory.</p>\n@param licenseCountingType Dimension to use to track the license inventory.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LicenseCountingType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseCountingType",
            "variableType" : "String",
            "documentation" : "<p>Dimension to use to track the license inventory.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseRules" : {
          "c2jName" : "LicenseRules",
          "c2jShape" : "StringList",
          "deprecated" : false,
          "documentation" : "<p>Array of configured License Manager rules.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Array of configured License Manager rules.</p>\n@param licenseRules Array of configured License Manager rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseRules",
          "getterDocumentation" : "/**<p>Array of configured License Manager rules.</p>\n@return Array of configured License Manager rules.*/",
          "getterMethodName" : "getLicenseRules",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseRules",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseRules",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "String",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "LicenseRules",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Array of configured License Manager rules.</p>\n@param licenseRules Array of configured License Manager rules.*/",
          "setterMethodName" : "setLicenseRules",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "licenseRules",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Array of configured License Manager rules.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseRules(java.util.Collection)} or {@link #withLicenseRules(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseRules Array of configured License Manager rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "licenseRules",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>Array of configured License Manager rules.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Name of the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>Name of the license configuration.</p>\n@return Name of the license configuration.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>Name of the license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "TagList",
          "deprecated" : false,
          "documentation" : "<p>The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p> <p/>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p> <p/>\n@param tags The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p> <p/>\n@return The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p>*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p> <p/>\n@param tags The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p>*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p> <p/>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .</p> <p/>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Name", "LicenseCountingType" ],
      "shapeName" : "CreateLicenseConfigurationRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateLicenseConfigurationRequest",
        "variableName" : "createLicenseConfigurationRequest",
        "variableType" : "CreateLicenseConfigurationRequest",
        "documentation" : null,
        "simpleType" : "CreateLicenseConfigurationRequest",
        "variableSetterType" : "CreateLicenseConfigurationRequest"
      },
      "wrapper" : false
    },
    "CreateLicenseConfigurationResult" : {
      "c2jName" : "CreateLicenseConfigurationResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "LicenseConfigurationArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ARN of the license configuration object after its creation.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ARN of the license configuration object after its creation.</p>\n@param licenseConfigurationArn ARN of the license configuration object after its creation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseConfigurationArn",
        "getterDocumentation" : "/**<p>ARN of the license configuration object after its creation.</p>\n@return ARN of the license configuration object after its creation.*/",
        "getterMethodName" : "getLicenseConfigurationArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseConfigurationArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseConfigurationArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LicenseConfigurationArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ARN of the license configuration object after its creation.</p>\n@param licenseConfigurationArn ARN of the license configuration object after its creation.*/",
        "setterMethodName" : "setLicenseConfigurationArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ARN of the license configuration object after its creation.</p>\n@param licenseConfigurationArn ARN of the license configuration object after its creation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "<p>ARN of the license configuration object after its creation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LicenseConfigurationArn" : {
          "c2jName" : "LicenseConfigurationArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ARN of the license configuration object after its creation.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ARN of the license configuration object after its creation.</p>\n@param licenseConfigurationArn ARN of the license configuration object after its creation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseConfigurationArn",
          "getterDocumentation" : "/**<p>ARN of the license configuration object after its creation.</p>\n@return ARN of the license configuration object after its creation.*/",
          "getterMethodName" : "getLicenseConfigurationArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseConfigurationArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseConfigurationArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LicenseConfigurationArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ARN of the license configuration object after its creation.</p>\n@param licenseConfigurationArn ARN of the license configuration object after its creation.*/",
          "setterMethodName" : "setLicenseConfigurationArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ARN of the license configuration object after its creation.</p>\n@param licenseConfigurationArn ARN of the license configuration object after its creation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "<p>ARN of the license configuration object after its creation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateLicenseConfigurationResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateLicenseConfigurationResult",
        "variableName" : "createLicenseConfigurationResult",
        "variableType" : "CreateLicenseConfigurationResult",
        "documentation" : null,
        "simpleType" : "CreateLicenseConfigurationResult",
        "variableSetterType" : "CreateLicenseConfigurationResult"
      },
      "wrapper" : false
    },
    "DeleteLicenseConfigurationRequest" : {
      "c2jName" : "DeleteLicenseConfigurationRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteLicenseConfiguration",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSLicenseManager.DeleteLicenseConfiguration",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "LicenseConfigurationArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Unique ID of the configuration object to delete.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Unique ID of the configuration object to delete.</p>\n@param licenseConfigurationArn Unique ID of the configuration object to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseConfigurationArn",
        "getterDocumentation" : "/**<p>Unique ID of the configuration object to delete.</p>\n@return Unique ID of the configuration object to delete.*/",
        "getterMethodName" : "getLicenseConfigurationArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseConfigurationArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseConfigurationArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LicenseConfigurationArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Unique ID of the configuration object to delete.</p>\n@param licenseConfigurationArn Unique ID of the configuration object to delete.*/",
        "setterMethodName" : "setLicenseConfigurationArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Unique ID of the configuration object to delete.</p>\n@param licenseConfigurationArn Unique ID of the configuration object to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "<p>Unique ID of the configuration object to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LicenseConfigurationArn" : {
          "c2jName" : "LicenseConfigurationArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Unique ID of the configuration object to delete.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Unique ID of the configuration object to delete.</p>\n@param licenseConfigurationArn Unique ID of the configuration object to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseConfigurationArn",
          "getterDocumentation" : "/**<p>Unique ID of the configuration object to delete.</p>\n@return Unique ID of the configuration object to delete.*/",
          "getterMethodName" : "getLicenseConfigurationArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseConfigurationArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseConfigurationArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LicenseConfigurationArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Unique ID of the configuration object to delete.</p>\n@param licenseConfigurationArn Unique ID of the configuration object to delete.*/",
          "setterMethodName" : "setLicenseConfigurationArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Unique ID of the configuration object to delete.</p>\n@param licenseConfigurationArn Unique ID of the configuration object to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "<p>Unique ID of the configuration object to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "LicenseConfigurationArn" ],
      "shapeName" : "DeleteLicenseConfigurationRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteLicenseConfigurationRequest",
        "variableName" : "deleteLicenseConfigurationRequest",
        "variableType" : "DeleteLicenseConfigurationRequest",
        "documentation" : null,
        "simpleType" : "DeleteLicenseConfigurationRequest",
        "variableSetterType" : "DeleteLicenseConfigurationRequest"
      },
      "wrapper" : false
    },
    "DeleteLicenseConfigurationResult" : {
      "c2jName" : "DeleteLicenseConfigurationResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteLicenseConfigurationResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteLicenseConfigurationResult",
        "variableName" : "deleteLicenseConfigurationResult",
        "variableType" : "DeleteLicenseConfigurationResult",
        "documentation" : null,
        "simpleType" : "DeleteLicenseConfigurationResult",
        "variableSetterType" : "DeleteLicenseConfigurationResult"
      },
      "wrapper" : false
    },
    "FailedDependencyException" : {
      "c2jName" : "FailedDependencyException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A dependency required to run the API is missing.</p>",
      "enums" : null,
      "errorCode" : "FailedDependencyException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "FailedDependencyException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "FailedDependencyException",
        "variableName" : "failedDependencyException",
        "variableType" : "FailedDependencyException",
        "documentation" : null,
        "simpleType" : "FailedDependencyException",
        "variableSetterType" : "FailedDependencyException"
      },
      "wrapper" : false
    },
    "Filter" : {
      "c2jName" : "Filter",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a <code>Describe</code> operation are documented with the <code>Describe</code> operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Name",
        "c2jShape" : "FilterName",
        "deprecated" : false,
        "documentation" : "<p>Name of the filter. Filter names are case-sensitive.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Name of the filter. Filter names are case-sensitive.</p>\n@param name Name of the filter. Filter names are case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>Name of the filter. Filter names are case-sensitive.</p>\n@return Name of the filter. Filter names are case-sensitive.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Name of the filter. Filter names are case-sensitive.</p>\n@param name Name of the filter. Filter names are case-sensitive.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Name of the filter. Filter names are case-sensitive.</p>\n@param name Name of the filter. Filter names are case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>Name of the filter. Filter names are case-sensitive.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Values",
        "c2jShape" : "FilterValues",
        "deprecated" : false,
        "documentation" : "<p>One or more filter values. Filter values are case-sensitive.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>One or more filter values. Filter values are case-sensitive.</p>\n@param values One or more filter values. Filter values are case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValues",
        "getterDocumentation" : "/**<p>One or more filter values. Filter values are case-sensitive.</p>\n@return One or more filter values. Filter values are case-sensitive.*/",
        "getterMethodName" : "getValues",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Values",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Values",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FilterValue",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Values",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>One or more filter values. Filter values are case-sensitive.</p>\n@param values One or more filter values. Filter values are case-sensitive.*/",
        "setterMethodName" : "setValues",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "values",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>One or more filter values. Filter values are case-sensitive.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setValues(java.util.Collection)} or {@link #withValues(java.util.Collection)} if you want to override the existing values.</p>\n@param values One or more filter values. Filter values are case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "values",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>One or more filter values. Filter values are case-sensitive.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "FilterName",
          "deprecated" : false,
          "documentation" : "<p>Name of the filter. Filter names are case-sensitive.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Name of the filter. Filter names are case-sensitive.</p>\n@param name Name of the filter. Filter names are case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>Name of the filter. Filter names are case-sensitive.</p>\n@return Name of the filter. Filter names are case-sensitive.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Name of the filter. Filter names are case-sensitive.</p>\n@param name Name of the filter. Filter names are case-sensitive.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Name of the filter. Filter names are case-sensitive.</p>\n@param name Name of the filter. Filter names are case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>Name of the filter. Filter names are case-sensitive.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Values" : {
          "c2jName" : "Values",
          "c2jShape" : "FilterValues",
          "deprecated" : false,
          "documentation" : "<p>One or more filter values. Filter values are case-sensitive.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>One or more filter values. Filter values are case-sensitive.</p>\n@param values One or more filter values. Filter values are case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValues",
          "getterDocumentation" : "/**<p>One or more filter values. Filter values are case-sensitive.</p>\n@return One or more filter values. Filter values are case-sensitive.*/",
          "getterMethodName" : "getValues",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Values",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Values",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FilterValue",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Values",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>One or more filter values. Filter values are case-sensitive.</p>\n@param values One or more filter values. Filter values are case-sensitive.*/",
          "setterMethodName" : "setValues",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "values",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>One or more filter values. Filter values are case-sensitive.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setValues(java.util.Collection)} or {@link #withValues(java.util.Collection)} if you want to override the existing values.</p>\n@param values One or more filter values. Filter values are case-sensitive.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "values",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>One or more filter values. Filter values are case-sensitive.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Filter",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Filter",
        "variableName" : "filter",
        "variableType" : "Filter",
        "documentation" : null,
        "simpleType" : "Filter",
        "variableSetterType" : "Filter"
      },
      "wrapper" : false
    },
    "FilterLimitExceededException" : {
      "c2jName" : "FilterLimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The request uses too many filters or too many filter values.</p>",
      "enums" : null,
      "errorCode" : "FilterLimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "FilterLimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "FilterLimitExceededException",
        "variableName" : "filterLimitExceededException",
        "variableType" : "FilterLimitExceededException",
        "documentation" : null,
        "simpleType" : "FilterLimitExceededException",
        "variableSetterType" : "FilterLimitExceededException"
      },
      "wrapper" : false
    },
    "GetLicenseConfigurationRequest" : {
      "c2jName" : "GetLicenseConfigurationRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetLicenseConfiguration",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSLicenseManager.GetLicenseConfiguration",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "LicenseConfigurationArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ARN of the license configuration being requested.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ARN of the license configuration being requested.</p>\n@param licenseConfigurationArn ARN of the license configuration being requested.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseConfigurationArn",
        "getterDocumentation" : "/**<p>ARN of the license configuration being requested.</p>\n@return ARN of the license configuration being requested.*/",
        "getterMethodName" : "getLicenseConfigurationArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseConfigurationArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseConfigurationArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LicenseConfigurationArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ARN of the license configuration being requested.</p>\n@param licenseConfigurationArn ARN of the license configuration being requested.*/",
        "setterMethodName" : "setLicenseConfigurationArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ARN of the license configuration being requested.</p>\n@param licenseConfigurationArn ARN of the license configuration being requested.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "<p>ARN of the license configuration being requested.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LicenseConfigurationArn" : {
          "c2jName" : "LicenseConfigurationArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ARN of the license configuration being requested.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ARN of the license configuration being requested.</p>\n@param licenseConfigurationArn ARN of the license configuration being requested.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseConfigurationArn",
          "getterDocumentation" : "/**<p>ARN of the license configuration being requested.</p>\n@return ARN of the license configuration being requested.*/",
          "getterMethodName" : "getLicenseConfigurationArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseConfigurationArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseConfigurationArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LicenseConfigurationArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ARN of the license configuration being requested.</p>\n@param licenseConfigurationArn ARN of the license configuration being requested.*/",
          "setterMethodName" : "setLicenseConfigurationArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ARN of the license configuration being requested.</p>\n@param licenseConfigurationArn ARN of the license configuration being requested.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "<p>ARN of the license configuration being requested.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "LicenseConfigurationArn" ],
      "shapeName" : "GetLicenseConfigurationRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetLicenseConfigurationRequest",
        "variableName" : "getLicenseConfigurationRequest",
        "variableType" : "GetLicenseConfigurationRequest",
        "documentation" : null,
        "simpleType" : "GetLicenseConfigurationRequest",
        "variableSetterType" : "GetLicenseConfigurationRequest"
      },
      "wrapper" : false
    },
    "GetLicenseConfigurationResult" : {
      "c2jName" : "GetLicenseConfigurationResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "LicenseConfigurationId",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Unique ID for the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Unique ID for the license configuration.</p>\n@param licenseConfigurationId Unique ID for the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseConfigurationId",
        "getterDocumentation" : "/**<p>Unique ID for the license configuration.</p>\n@return Unique ID for the license configuration.*/",
        "getterMethodName" : "getLicenseConfigurationId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseConfigurationId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseConfigurationId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LicenseConfigurationId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Unique ID for the license configuration.</p>\n@param licenseConfigurationId Unique ID for the license configuration.*/",
        "setterMethodName" : "setLicenseConfigurationId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Unique ID for the license configuration.</p>\n@param licenseConfigurationId Unique ID for the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationId",
          "variableType" : "String",
          "documentation" : "<p>Unique ID for the license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseConfigurationArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ARN of the license configuration requested.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ARN of the license configuration requested.</p>\n@param licenseConfigurationArn ARN of the license configuration requested.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseConfigurationArn",
        "getterDocumentation" : "/**<p>ARN of the license configuration requested.</p>\n@return ARN of the license configuration requested.*/",
        "getterMethodName" : "getLicenseConfigurationArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseConfigurationArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseConfigurationArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LicenseConfigurationArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ARN of the license configuration requested.</p>\n@param licenseConfigurationArn ARN of the license configuration requested.*/",
        "setterMethodName" : "setLicenseConfigurationArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ARN of the license configuration requested.</p>\n@param licenseConfigurationArn ARN of the license configuration requested.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "<p>ARN of the license configuration requested.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Name of the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>Name of the license configuration.</p>\n@return Name of the license configuration.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>Name of the license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Description",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Description of the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Description of the license configuration.</p>\n@param description Description of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDescription",
        "getterDocumentation" : "/**<p>Description of the license configuration.</p>\n@return Description of the license configuration.*/",
        "getterMethodName" : "getDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Description",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Description",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Description",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Description of the license configuration.</p>\n@param description Description of the license configuration.*/",
        "setterMethodName" : "setDescription",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Description of the license configuration.</p>\n@param description Description of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "<p>Description of the license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseCountingType",
        "c2jShape" : "LicenseCountingType",
        "deprecated" : false,
        "documentation" : "<p>Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).</p>",
        "enumType" : "LicenseCountingType",
        "fluentSetterDocumentation" : "/**<p>Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).</p>\n@param licenseCountingType Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).\n@return Returns a reference to this object so that method calls can be chained together.\n@see LicenseCountingType*/",
        "fluentSetterMethodName" : "withLicenseCountingType",
        "getterDocumentation" : "/**<p>Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).</p>\n@return Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).\n@see LicenseCountingType*/",
        "getterMethodName" : "getLicenseCountingType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseCountingType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseCountingType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LicenseCountingType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).</p>\n@param licenseCountingType Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).\n@see LicenseCountingType*/",
        "setterMethodName" : "setLicenseCountingType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseCountingType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).</p>\n@param licenseCountingType Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).\n@return Returns a reference to this object so that method calls can be chained together.\n@see LicenseCountingType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseCountingType",
          "variableType" : "String",
          "documentation" : "<p>Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseRules",
        "c2jShape" : "StringList",
        "deprecated" : false,
        "documentation" : "<p>List of flexible text strings designating license rules.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>List of flexible text strings designating license rules.</p>\n@param licenseRules List of flexible text strings designating license rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseRules",
        "getterDocumentation" : "/**<p>List of flexible text strings designating license rules.</p>\n@return List of flexible text strings designating license rules.*/",
        "getterMethodName" : "getLicenseRules",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseRules",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseRules",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "String",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "LicenseRules",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>List of flexible text strings designating license rules.</p>\n@param licenseRules List of flexible text strings designating license rules.*/",
        "setterMethodName" : "setLicenseRules",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "licenseRules",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>List of flexible text strings designating license rules.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseRules(java.util.Collection)} or {@link #withLicenseRules(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseRules List of flexible text strings designating license rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "licenseRules",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>List of flexible text strings designating license rules.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseCount",
        "c2jShape" : "BoxLong",
        "deprecated" : false,
        "documentation" : "<p>Number of available licenses.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Number of available licenses.</p>\n@param licenseCount Number of available licenses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseCount",
        "getterDocumentation" : "/**<p>Number of available licenses.</p>\n@return Number of available licenses.*/",
        "getterMethodName" : "getLicenseCount",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseCount",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "LicenseCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Number of available licenses.</p>\n@param licenseCount Number of available licenses.*/",
        "setterMethodName" : "setLicenseCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "licenseCount",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Number of available licenses.</p>\n@param licenseCount Number of available licenses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "licenseCount",
          "variableType" : "Long",
          "documentation" : "<p>Number of available licenses.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseCountHardLimit",
        "c2jShape" : "BoxBoolean",
        "deprecated" : false,
        "documentation" : "<p>Sets the number of available licenses as a hard limit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseCountHardLimit",
        "getterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@return Sets the number of available licenses as a hard limit.*/",
        "getterMethodName" : "getLicenseCountHardLimit",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseCountHardLimit",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseCountHardLimit",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "LicenseCountHardLimit",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.*/",
        "setterMethodName" : "setLicenseCountHardLimit",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "licenseCountHardLimit",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "licenseCountHardLimit",
          "variableType" : "Boolean",
          "documentation" : "<p>Sets the number of available licenses as a hard limit.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ConsumedLicenses",
        "c2jShape" : "BoxLong",
        "deprecated" : false,
        "documentation" : "<p>Number of licenses assigned to resources.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Number of licenses assigned to resources.</p>\n@param consumedLicenses Number of licenses assigned to resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConsumedLicenses",
        "getterDocumentation" : "/**<p>Number of licenses assigned to resources.</p>\n@return Number of licenses assigned to resources.*/",
        "getterMethodName" : "getConsumedLicenses",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ConsumedLicenses",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ConsumedLicenses",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "ConsumedLicenses",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Number of licenses assigned to resources.</p>\n@param consumedLicenses Number of licenses assigned to resources.*/",
        "setterMethodName" : "setConsumedLicenses",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "consumedLicenses",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Number of licenses assigned to resources.</p>\n@param consumedLicenses Number of licenses assigned to resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "consumedLicenses",
          "variableType" : "Long",
          "documentation" : "<p>Number of licenses assigned to resources.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Status",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>License configuration status (active, etc.).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>License configuration status (active, etc.).</p>\n@param status License configuration status (active, etc.).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>License configuration status (active, etc.).</p>\n@return License configuration status (active, etc.).*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>License configuration status (active, etc.).</p>\n@param status License configuration status (active, etc.).*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>License configuration status (active, etc.).</p>\n@param status License configuration status (active, etc.).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>License configuration status (active, etc.).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OwnerAccountId",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Owner account ID for the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Owner account ID for the license configuration.</p>\n@param ownerAccountId Owner account ID for the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOwnerAccountId",
        "getterDocumentation" : "/**<p>Owner account ID for the license configuration.</p>\n@return Owner account ID for the license configuration.*/",
        "getterMethodName" : "getOwnerAccountId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "OwnerAccountId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OwnerAccountId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OwnerAccountId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Owner account ID for the license configuration.</p>\n@param ownerAccountId Owner account ID for the license configuration.*/",
        "setterMethodName" : "setOwnerAccountId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ownerAccountId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Owner account ID for the license configuration.</p>\n@param ownerAccountId Owner account ID for the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ownerAccountId",
          "variableType" : "String",
          "documentation" : "<p>Owner account ID for the license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ConsumedLicenseSummaryList",
        "c2jShape" : "ConsumedLicenseSummaryList",
        "deprecated" : false,
        "documentation" : "<p>List of summaries for consumed licenses used by various resources.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>List of summaries for consumed licenses used by various resources.</p>\n@param consumedLicenseSummaryList List of summaries for consumed licenses used by various resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConsumedLicenseSummaryList",
        "getterDocumentation" : "/**<p>List of summaries for consumed licenses used by various resources.</p>\n@return List of summaries for consumed licenses used by various resources.*/",
        "getterMethodName" : "getConsumedLicenseSummaryList",
        "getterModel" : {
          "returnType" : "java.util.List<ConsumedLicenseSummary>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ConsumedLicenseSummaryList",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ConsumedLicenseSummaryList",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ConsumedLicenseSummary",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ConsumedLicenseSummary",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ConsumedLicenseSummary",
              "variableName" : "member",
              "variableType" : "ConsumedLicenseSummary",
              "documentation" : "",
              "simpleType" : "ConsumedLicenseSummary",
              "variableSetterType" : "ConsumedLicenseSummary"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ConsumedLicenseSummary",
              "variableName" : "member",
              "variableType" : "ConsumedLicenseSummary",
              "documentation" : "",
              "simpleType" : "ConsumedLicenseSummary",
              "variableSetterType" : "ConsumedLicenseSummary"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ConsumedLicenseSummary",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ConsumedLicenseSummary",
          "templateImplType" : "java.util.ArrayList<ConsumedLicenseSummary>",
          "templateType" : "java.util.List<ConsumedLicenseSummary>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ConsumedLicenseSummaryList",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>List of summaries for consumed licenses used by various resources.</p>\n@param consumedLicenseSummaryList List of summaries for consumed licenses used by various resources.*/",
        "setterMethodName" : "setConsumedLicenseSummaryList",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ConsumedLicenseSummary>",
          "variableName" : "consumedLicenseSummaryList",
          "variableType" : "java.util.List<ConsumedLicenseSummary>",
          "documentation" : "",
          "simpleType" : "List<ConsumedLicenseSummary>",
          "variableSetterType" : "java.util.Collection<ConsumedLicenseSummary>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>List of summaries for consumed licenses used by various resources.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setConsumedLicenseSummaryList(java.util.Collection)} or {@link #withConsumedLicenseSummaryList(java.util.Collection)} if you want to override the existing values.</p>\n@param consumedLicenseSummaryList List of summaries for consumed licenses used by various resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ConsumedLicenseSummary>",
          "variableName" : "consumedLicenseSummaryList",
          "variableType" : "java.util.List<ConsumedLicenseSummary>",
          "documentation" : "<p>List of summaries for consumed licenses used by various resources.</p>",
          "simpleType" : "List<ConsumedLicenseSummary>",
          "variableSetterType" : "java.util.Collection<ConsumedLicenseSummary>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ManagedResourceSummaryList",
        "c2jShape" : "ManagedResourceSummaryList",
        "deprecated" : false,
        "documentation" : "<p>List of summaries of managed resources.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>List of summaries of managed resources.</p>\n@param managedResourceSummaryList List of summaries of managed resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withManagedResourceSummaryList",
        "getterDocumentation" : "/**<p>List of summaries of managed resources.</p>\n@return List of summaries of managed resources.*/",
        "getterMethodName" : "getManagedResourceSummaryList",
        "getterModel" : {
          "returnType" : "java.util.List<ManagedResourceSummary>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ManagedResourceSummaryList",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ManagedResourceSummaryList",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ManagedResourceSummary",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ManagedResourceSummary",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ManagedResourceSummary",
              "variableName" : "member",
              "variableType" : "ManagedResourceSummary",
              "documentation" : "",
              "simpleType" : "ManagedResourceSummary",
              "variableSetterType" : "ManagedResourceSummary"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ManagedResourceSummary",
              "variableName" : "member",
              "variableType" : "ManagedResourceSummary",
              "documentation" : "",
              "simpleType" : "ManagedResourceSummary",
              "variableSetterType" : "ManagedResourceSummary"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ManagedResourceSummary",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ManagedResourceSummary",
          "templateImplType" : "java.util.ArrayList<ManagedResourceSummary>",
          "templateType" : "java.util.List<ManagedResourceSummary>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ManagedResourceSummaryList",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>List of summaries of managed resources.</p>\n@param managedResourceSummaryList List of summaries of managed resources.*/",
        "setterMethodName" : "setManagedResourceSummaryList",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ManagedResourceSummary>",
          "variableName" : "managedResourceSummaryList",
          "variableType" : "java.util.List<ManagedResourceSummary>",
          "documentation" : "",
          "simpleType" : "List<ManagedResourceSummary>",
          "variableSetterType" : "java.util.Collection<ManagedResourceSummary>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>List of summaries of managed resources.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setManagedResourceSummaryList(java.util.Collection)} or {@link #withManagedResourceSummaryList(java.util.Collection)} if you want to override the existing values.</p>\n@param managedResourceSummaryList List of summaries of managed resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ManagedResourceSummary>",
          "variableName" : "managedResourceSummaryList",
          "variableType" : "java.util.List<ManagedResourceSummary>",
          "documentation" : "<p>List of summaries of managed resources.</p>",
          "simpleType" : "List<ManagedResourceSummary>",
          "variableSetterType" : "java.util.Collection<ManagedResourceSummary>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Tags",
        "c2jShape" : "TagList",
        "deprecated" : false,
        "documentation" : "<p>List of tags attached to the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>List of tags attached to the license configuration.</p>\n@param tags List of tags attached to the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>List of tags attached to the license configuration.</p>\n@return List of tags attached to the license configuration.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>List of tags attached to the license configuration.</p>\n@param tags List of tags attached to the license configuration.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>List of tags attached to the license configuration.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags List of tags attached to the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>List of tags attached to the license configuration.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ConsumedLicenseSummaryList" : {
          "c2jName" : "ConsumedLicenseSummaryList",
          "c2jShape" : "ConsumedLicenseSummaryList",
          "deprecated" : false,
          "documentation" : "<p>List of summaries for consumed licenses used by various resources.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>List of summaries for consumed licenses used by various resources.</p>\n@param consumedLicenseSummaryList List of summaries for consumed licenses used by various resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConsumedLicenseSummaryList",
          "getterDocumentation" : "/**<p>List of summaries for consumed licenses used by various resources.</p>\n@return List of summaries for consumed licenses used by various resources.*/",
          "getterMethodName" : "getConsumedLicenseSummaryList",
          "getterModel" : {
            "returnType" : "java.util.List<ConsumedLicenseSummary>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ConsumedLicenseSummaryList",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ConsumedLicenseSummaryList",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ConsumedLicenseSummary",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ConsumedLicenseSummary",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ConsumedLicenseSummary",
                "variableName" : "member",
                "variableType" : "ConsumedLicenseSummary",
                "documentation" : "",
                "simpleType" : "ConsumedLicenseSummary",
                "variableSetterType" : "ConsumedLicenseSummary"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ConsumedLicenseSummary",
                "variableName" : "member",
                "variableType" : "ConsumedLicenseSummary",
                "documentation" : "",
                "simpleType" : "ConsumedLicenseSummary",
                "variableSetterType" : "ConsumedLicenseSummary"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ConsumedLicenseSummary",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ConsumedLicenseSummary",
            "templateImplType" : "java.util.ArrayList<ConsumedLicenseSummary>",
            "templateType" : "java.util.List<ConsumedLicenseSummary>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ConsumedLicenseSummaryList",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>List of summaries for consumed licenses used by various resources.</p>\n@param consumedLicenseSummaryList List of summaries for consumed licenses used by various resources.*/",
          "setterMethodName" : "setConsumedLicenseSummaryList",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ConsumedLicenseSummary>",
            "variableName" : "consumedLicenseSummaryList",
            "variableType" : "java.util.List<ConsumedLicenseSummary>",
            "documentation" : "",
            "simpleType" : "List<ConsumedLicenseSummary>",
            "variableSetterType" : "java.util.Collection<ConsumedLicenseSummary>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>List of summaries for consumed licenses used by various resources.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setConsumedLicenseSummaryList(java.util.Collection)} or {@link #withConsumedLicenseSummaryList(java.util.Collection)} if you want to override the existing values.</p>\n@param consumedLicenseSummaryList List of summaries for consumed licenses used by various resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ConsumedLicenseSummary>",
            "variableName" : "consumedLicenseSummaryList",
            "variableType" : "java.util.List<ConsumedLicenseSummary>",
            "documentation" : "<p>List of summaries for consumed licenses used by various resources.</p>",
            "simpleType" : "List<ConsumedLicenseSummary>",
            "variableSetterType" : "java.util.Collection<ConsumedLicenseSummary>"
          },
          "xmlNameSpaceUri" : null
        },
        "ConsumedLicenses" : {
          "c2jName" : "ConsumedLicenses",
          "c2jShape" : "BoxLong",
          "deprecated" : false,
          "documentation" : "<p>Number of licenses assigned to resources.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Number of licenses assigned to resources.</p>\n@param consumedLicenses Number of licenses assigned to resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConsumedLicenses",
          "getterDocumentation" : "/**<p>Number of licenses assigned to resources.</p>\n@return Number of licenses assigned to resources.*/",
          "getterMethodName" : "getConsumedLicenses",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ConsumedLicenses",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ConsumedLicenses",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "ConsumedLicenses",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Number of licenses assigned to resources.</p>\n@param consumedLicenses Number of licenses assigned to resources.*/",
          "setterMethodName" : "setConsumedLicenses",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "consumedLicenses",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Number of licenses assigned to resources.</p>\n@param consumedLicenses Number of licenses assigned to resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "consumedLicenses",
            "variableType" : "Long",
            "documentation" : "<p>Number of licenses assigned to resources.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "Description" : {
          "c2jName" : "Description",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Description of the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Description of the license configuration.</p>\n@param description Description of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDescription",
          "getterDocumentation" : "/**<p>Description of the license configuration.</p>\n@return Description of the license configuration.*/",
          "getterMethodName" : "getDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Description",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Description",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Description",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Description of the license configuration.</p>\n@param description Description of the license configuration.*/",
          "setterMethodName" : "setDescription",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Description of the license configuration.</p>\n@param description Description of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "<p>Description of the license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseConfigurationArn" : {
          "c2jName" : "LicenseConfigurationArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ARN of the license configuration requested.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ARN of the license configuration requested.</p>\n@param licenseConfigurationArn ARN of the license configuration requested.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseConfigurationArn",
          "getterDocumentation" : "/**<p>ARN of the license configuration requested.</p>\n@return ARN of the license configuration requested.*/",
          "getterMethodName" : "getLicenseConfigurationArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseConfigurationArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseConfigurationArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LicenseConfigurationArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ARN of the license configuration requested.</p>\n@param licenseConfigurationArn ARN of the license configuration requested.*/",
          "setterMethodName" : "setLicenseConfigurationArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ARN of the license configuration requested.</p>\n@param licenseConfigurationArn ARN of the license configuration requested.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "<p>ARN of the license configuration requested.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseConfigurationId" : {
          "c2jName" : "LicenseConfigurationId",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Unique ID for the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Unique ID for the license configuration.</p>\n@param licenseConfigurationId Unique ID for the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseConfigurationId",
          "getterDocumentation" : "/**<p>Unique ID for the license configuration.</p>\n@return Unique ID for the license configuration.*/",
          "getterMethodName" : "getLicenseConfigurationId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseConfigurationId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseConfigurationId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LicenseConfigurationId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Unique ID for the license configuration.</p>\n@param licenseConfigurationId Unique ID for the license configuration.*/",
          "setterMethodName" : "setLicenseConfigurationId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Unique ID for the license configuration.</p>\n@param licenseConfigurationId Unique ID for the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationId",
            "variableType" : "String",
            "documentation" : "<p>Unique ID for the license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseCount" : {
          "c2jName" : "LicenseCount",
          "c2jShape" : "BoxLong",
          "deprecated" : false,
          "documentation" : "<p>Number of available licenses.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Number of available licenses.</p>\n@param licenseCount Number of available licenses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseCount",
          "getterDocumentation" : "/**<p>Number of available licenses.</p>\n@return Number of available licenses.*/",
          "getterMethodName" : "getLicenseCount",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseCount",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "LicenseCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Number of available licenses.</p>\n@param licenseCount Number of available licenses.*/",
          "setterMethodName" : "setLicenseCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "licenseCount",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Number of available licenses.</p>\n@param licenseCount Number of available licenses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "licenseCount",
            "variableType" : "Long",
            "documentation" : "<p>Number of available licenses.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseCountHardLimit" : {
          "c2jName" : "LicenseCountHardLimit",
          "c2jShape" : "BoxBoolean",
          "deprecated" : false,
          "documentation" : "<p>Sets the number of available licenses as a hard limit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseCountHardLimit",
          "getterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@return Sets the number of available licenses as a hard limit.*/",
          "getterMethodName" : "getLicenseCountHardLimit",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseCountHardLimit",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseCountHardLimit",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "LicenseCountHardLimit",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.*/",
          "setterMethodName" : "setLicenseCountHardLimit",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "licenseCountHardLimit",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "licenseCountHardLimit",
            "variableType" : "Boolean",
            "documentation" : "<p>Sets the number of available licenses as a hard limit.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseCountingType" : {
          "c2jName" : "LicenseCountingType",
          "c2jShape" : "LicenseCountingType",
          "deprecated" : false,
          "documentation" : "<p>Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).</p>",
          "enumType" : "LicenseCountingType",
          "fluentSetterDocumentation" : "/**<p>Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).</p>\n@param licenseCountingType Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).\n@return Returns a reference to this object so that method calls can be chained together.\n@see LicenseCountingType*/",
          "fluentSetterMethodName" : "withLicenseCountingType",
          "getterDocumentation" : "/**<p>Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).</p>\n@return Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).\n@see LicenseCountingType*/",
          "getterMethodName" : "getLicenseCountingType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseCountingType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseCountingType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LicenseCountingType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).</p>\n@param licenseCountingType Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).\n@see LicenseCountingType*/",
          "setterMethodName" : "setLicenseCountingType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseCountingType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).</p>\n@param licenseCountingType Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).\n@return Returns a reference to this object so that method calls can be chained together.\n@see LicenseCountingType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseCountingType",
            "variableType" : "String",
            "documentation" : "<p>Dimension on which the licenses are counted (for example, instances, cores, sockets, or VCPUs).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseRules" : {
          "c2jName" : "LicenseRules",
          "c2jShape" : "StringList",
          "deprecated" : false,
          "documentation" : "<p>List of flexible text strings designating license rules.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>List of flexible text strings designating license rules.</p>\n@param licenseRules List of flexible text strings designating license rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseRules",
          "getterDocumentation" : "/**<p>List of flexible text strings designating license rules.</p>\n@return List of flexible text strings designating license rules.*/",
          "getterMethodName" : "getLicenseRules",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseRules",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseRules",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "String",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "LicenseRules",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>List of flexible text strings designating license rules.</p>\n@param licenseRules List of flexible text strings designating license rules.*/",
          "setterMethodName" : "setLicenseRules",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "licenseRules",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>List of flexible text strings designating license rules.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseRules(java.util.Collection)} or {@link #withLicenseRules(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseRules List of flexible text strings designating license rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "licenseRules",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>List of flexible text strings designating license rules.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "ManagedResourceSummaryList" : {
          "c2jName" : "ManagedResourceSummaryList",
          "c2jShape" : "ManagedResourceSummaryList",
          "deprecated" : false,
          "documentation" : "<p>List of summaries of managed resources.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>List of summaries of managed resources.</p>\n@param managedResourceSummaryList List of summaries of managed resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withManagedResourceSummaryList",
          "getterDocumentation" : "/**<p>List of summaries of managed resources.</p>\n@return List of summaries of managed resources.*/",
          "getterMethodName" : "getManagedResourceSummaryList",
          "getterModel" : {
            "returnType" : "java.util.List<ManagedResourceSummary>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ManagedResourceSummaryList",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ManagedResourceSummaryList",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ManagedResourceSummary",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ManagedResourceSummary",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ManagedResourceSummary",
                "variableName" : "member",
                "variableType" : "ManagedResourceSummary",
                "documentation" : "",
                "simpleType" : "ManagedResourceSummary",
                "variableSetterType" : "ManagedResourceSummary"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ManagedResourceSummary",
                "variableName" : "member",
                "variableType" : "ManagedResourceSummary",
                "documentation" : "",
                "simpleType" : "ManagedResourceSummary",
                "variableSetterType" : "ManagedResourceSummary"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ManagedResourceSummary",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ManagedResourceSummary",
            "templateImplType" : "java.util.ArrayList<ManagedResourceSummary>",
            "templateType" : "java.util.List<ManagedResourceSummary>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ManagedResourceSummaryList",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>List of summaries of managed resources.</p>\n@param managedResourceSummaryList List of summaries of managed resources.*/",
          "setterMethodName" : "setManagedResourceSummaryList",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ManagedResourceSummary>",
            "variableName" : "managedResourceSummaryList",
            "variableType" : "java.util.List<ManagedResourceSummary>",
            "documentation" : "",
            "simpleType" : "List<ManagedResourceSummary>",
            "variableSetterType" : "java.util.Collection<ManagedResourceSummary>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>List of summaries of managed resources.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setManagedResourceSummaryList(java.util.Collection)} or {@link #withManagedResourceSummaryList(java.util.Collection)} if you want to override the existing values.</p>\n@param managedResourceSummaryList List of summaries of managed resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ManagedResourceSummary>",
            "variableName" : "managedResourceSummaryList",
            "variableType" : "java.util.List<ManagedResourceSummary>",
            "documentation" : "<p>List of summaries of managed resources.</p>",
            "simpleType" : "List<ManagedResourceSummary>",
            "variableSetterType" : "java.util.Collection<ManagedResourceSummary>"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Name of the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>Name of the license configuration.</p>\n@return Name of the license configuration.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>Name of the license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "OwnerAccountId" : {
          "c2jName" : "OwnerAccountId",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Owner account ID for the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Owner account ID for the license configuration.</p>\n@param ownerAccountId Owner account ID for the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOwnerAccountId",
          "getterDocumentation" : "/**<p>Owner account ID for the license configuration.</p>\n@return Owner account ID for the license configuration.*/",
          "getterMethodName" : "getOwnerAccountId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "OwnerAccountId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OwnerAccountId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OwnerAccountId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Owner account ID for the license configuration.</p>\n@param ownerAccountId Owner account ID for the license configuration.*/",
          "setterMethodName" : "setOwnerAccountId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ownerAccountId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Owner account ID for the license configuration.</p>\n@param ownerAccountId Owner account ID for the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ownerAccountId",
            "variableType" : "String",
            "documentation" : "<p>Owner account ID for the license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "Status",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>License configuration status (active, etc.).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>License configuration status (active, etc.).</p>\n@param status License configuration status (active, etc.).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>License configuration status (active, etc.).</p>\n@return License configuration status (active, etc.).*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>License configuration status (active, etc.).</p>\n@param status License configuration status (active, etc.).*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>License configuration status (active, etc.).</p>\n@param status License configuration status (active, etc.).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>License configuration status (active, etc.).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "TagList",
          "deprecated" : false,
          "documentation" : "<p>List of tags attached to the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>List of tags attached to the license configuration.</p>\n@param tags List of tags attached to the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>List of tags attached to the license configuration.</p>\n@return List of tags attached to the license configuration.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>List of tags attached to the license configuration.</p>\n@param tags List of tags attached to the license configuration.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>List of tags attached to the license configuration.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags List of tags attached to the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>List of tags attached to the license configuration.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetLicenseConfigurationResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetLicenseConfigurationResult",
        "variableName" : "getLicenseConfigurationResult",
        "variableType" : "GetLicenseConfigurationResult",
        "documentation" : null,
        "simpleType" : "GetLicenseConfigurationResult",
        "variableSetterType" : "GetLicenseConfigurationResult"
      },
      "wrapper" : false
    },
    "GetServiceSettingsRequest" : {
      "c2jName" : "GetServiceSettingsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetServiceSettings",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSLicenseManager.GetServiceSettings",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetServiceSettingsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetServiceSettingsRequest",
        "variableName" : "getServiceSettingsRequest",
        "variableType" : "GetServiceSettingsRequest",
        "documentation" : null,
        "simpleType" : "GetServiceSettingsRequest",
        "variableSetterType" : "GetServiceSettingsRequest"
      },
      "wrapper" : false
    },
    "GetServiceSettingsResult" : {
      "c2jName" : "GetServiceSettingsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "S3BucketArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.</p>\n@param s3BucketArn Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withS3BucketArn",
        "getterDocumentation" : "/**<p>Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.</p>\n@return Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.*/",
        "getterMethodName" : "getS3BucketArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "S3BucketArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "S3BucketArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "S3BucketArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.</p>\n@param s3BucketArn Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.*/",
        "setterMethodName" : "setS3BucketArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "s3BucketArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.</p>\n@param s3BucketArn Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "s3BucketArn",
          "variableType" : "String",
          "documentation" : "<p>Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SnsTopicArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>SNS topic configured to receive notifications from License Manager.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>SNS topic configured to receive notifications from License Manager.</p>\n@param snsTopicArn SNS topic configured to receive notifications from License Manager.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSnsTopicArn",
        "getterDocumentation" : "/**<p>SNS topic configured to receive notifications from License Manager.</p>\n@return SNS topic configured to receive notifications from License Manager.*/",
        "getterMethodName" : "getSnsTopicArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SnsTopicArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SnsTopicArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SnsTopicArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>SNS topic configured to receive notifications from License Manager.</p>\n@param snsTopicArn SNS topic configured to receive notifications from License Manager.*/",
        "setterMethodName" : "setSnsTopicArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "snsTopicArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>SNS topic configured to receive notifications from License Manager.</p>\n@param snsTopicArn SNS topic configured to receive notifications from License Manager.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "snsTopicArn",
          "variableType" : "String",
          "documentation" : "<p>SNS topic configured to receive notifications from License Manager.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OrganizationConfiguration",
        "c2jShape" : "OrganizationConfiguration",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.</p>\n@param organizationConfiguration Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOrganizationConfiguration",
        "getterDocumentation" : "/**<p>Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.</p>\n@return Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.*/",
        "getterMethodName" : "getOrganizationConfiguration",
        "getterModel" : {
          "returnType" : "OrganizationConfiguration",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "OrganizationConfiguration",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OrganizationConfiguration",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "OrganizationConfiguration",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.</p>\n@param organizationConfiguration Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.*/",
        "setterMethodName" : "setOrganizationConfiguration",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "OrganizationConfiguration",
          "variableName" : "organizationConfiguration",
          "variableType" : "OrganizationConfiguration",
          "documentation" : "",
          "simpleType" : "OrganizationConfiguration",
          "variableSetterType" : "OrganizationConfiguration"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.</p>\n@param organizationConfiguration Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "OrganizationConfiguration",
          "variableName" : "organizationConfiguration",
          "variableType" : "OrganizationConfiguration",
          "documentation" : "<p>Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.</p>",
          "simpleType" : "OrganizationConfiguration",
          "variableSetterType" : "OrganizationConfiguration"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "EnableCrossAccountsDiscovery",
        "c2jShape" : "BoxBoolean",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether cross-account discovery has been enabled.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether cross-account discovery has been enabled.</p>\n@param enableCrossAccountsDiscovery Indicates whether cross-account discovery has been enabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withEnableCrossAccountsDiscovery",
        "getterDocumentation" : "/**<p>Indicates whether cross-account discovery has been enabled.</p>\n@return Indicates whether cross-account discovery has been enabled.*/",
        "getterMethodName" : "getEnableCrossAccountsDiscovery",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "EnableCrossAccountsDiscovery",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "EnableCrossAccountsDiscovery",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "EnableCrossAccountsDiscovery",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Indicates whether cross-account discovery has been enabled.</p>\n@param enableCrossAccountsDiscovery Indicates whether cross-account discovery has been enabled.*/",
        "setterMethodName" : "setEnableCrossAccountsDiscovery",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "enableCrossAccountsDiscovery",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates whether cross-account discovery has been enabled.</p>\n@param enableCrossAccountsDiscovery Indicates whether cross-account discovery has been enabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "enableCrossAccountsDiscovery",
          "variableType" : "Boolean",
          "documentation" : "<p>Indicates whether cross-account discovery has been enabled.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "EnableCrossAccountsDiscovery" : {
          "c2jName" : "EnableCrossAccountsDiscovery",
          "c2jShape" : "BoxBoolean",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether cross-account discovery has been enabled.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether cross-account discovery has been enabled.</p>\n@param enableCrossAccountsDiscovery Indicates whether cross-account discovery has been enabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withEnableCrossAccountsDiscovery",
          "getterDocumentation" : "/**<p>Indicates whether cross-account discovery has been enabled.</p>\n@return Indicates whether cross-account discovery has been enabled.*/",
          "getterMethodName" : "getEnableCrossAccountsDiscovery",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "EnableCrossAccountsDiscovery",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "EnableCrossAccountsDiscovery",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "EnableCrossAccountsDiscovery",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Indicates whether cross-account discovery has been enabled.</p>\n@param enableCrossAccountsDiscovery Indicates whether cross-account discovery has been enabled.*/",
          "setterMethodName" : "setEnableCrossAccountsDiscovery",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "enableCrossAccountsDiscovery",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates whether cross-account discovery has been enabled.</p>\n@param enableCrossAccountsDiscovery Indicates whether cross-account discovery has been enabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "enableCrossAccountsDiscovery",
            "variableType" : "Boolean",
            "documentation" : "<p>Indicates whether cross-account discovery has been enabled.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "OrganizationConfiguration" : {
          "c2jName" : "OrganizationConfiguration",
          "c2jShape" : "OrganizationConfiguration",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.</p>\n@param organizationConfiguration Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOrganizationConfiguration",
          "getterDocumentation" : "/**<p>Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.</p>\n@return Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.*/",
          "getterMethodName" : "getOrganizationConfiguration",
          "getterModel" : {
            "returnType" : "OrganizationConfiguration",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "OrganizationConfiguration",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OrganizationConfiguration",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "OrganizationConfiguration",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.</p>\n@param organizationConfiguration Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.*/",
          "setterMethodName" : "setOrganizationConfiguration",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "OrganizationConfiguration",
            "variableName" : "organizationConfiguration",
            "variableType" : "OrganizationConfiguration",
            "documentation" : "",
            "simpleType" : "OrganizationConfiguration",
            "variableSetterType" : "OrganizationConfiguration"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.</p>\n@param organizationConfiguration Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "OrganizationConfiguration",
            "variableName" : "organizationConfiguration",
            "variableType" : "OrganizationConfiguration",
            "documentation" : "<p>Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.</p>",
            "simpleType" : "OrganizationConfiguration",
            "variableSetterType" : "OrganizationConfiguration"
          },
          "xmlNameSpaceUri" : null
        },
        "S3BucketArn" : {
          "c2jName" : "S3BucketArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.</p>\n@param s3BucketArn Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withS3BucketArn",
          "getterDocumentation" : "/**<p>Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.</p>\n@return Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.*/",
          "getterMethodName" : "getS3BucketArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "S3BucketArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "S3BucketArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "S3BucketArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.</p>\n@param s3BucketArn Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.*/",
          "setterMethodName" : "setS3BucketArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "s3BucketArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.</p>\n@param s3BucketArn Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "s3BucketArn",
            "variableType" : "String",
            "documentation" : "<p>Regional S3 bucket path for storing reports, license trail event data, discovery data, etc.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SnsTopicArn" : {
          "c2jName" : "SnsTopicArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>SNS topic configured to receive notifications from License Manager.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>SNS topic configured to receive notifications from License Manager.</p>\n@param snsTopicArn SNS topic configured to receive notifications from License Manager.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSnsTopicArn",
          "getterDocumentation" : "/**<p>SNS topic configured to receive notifications from License Manager.</p>\n@return SNS topic configured to receive notifications from License Manager.*/",
          "getterMethodName" : "getSnsTopicArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SnsTopicArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SnsTopicArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SnsTopicArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>SNS topic configured to receive notifications from License Manager.</p>\n@param snsTopicArn SNS topic configured to receive notifications from License Manager.*/",
          "setterMethodName" : "setSnsTopicArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "snsTopicArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>SNS topic configured to receive notifications from License Manager.</p>\n@param snsTopicArn SNS topic configured to receive notifications from License Manager.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "snsTopicArn",
            "variableType" : "String",
            "documentation" : "<p>SNS topic configured to receive notifications from License Manager.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetServiceSettingsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetServiceSettingsResult",
        "variableName" : "getServiceSettingsResult",
        "variableType" : "GetServiceSettingsResult",
        "documentation" : null,
        "simpleType" : "GetServiceSettingsResult",
        "variableSetterType" : "GetServiceSettingsResult"
      },
      "wrapper" : false
    },
    "InvalidParameterValueException" : {
      "c2jName" : "InvalidParameterValueException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>One or more parameter values are not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidParameterValueException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidParameterValueException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidParameterValueException",
        "variableName" : "invalidParameterValueException",
        "variableType" : "InvalidParameterValueException",
        "documentation" : null,
        "simpleType" : "InvalidParameterValueException",
        "variableSetterType" : "InvalidParameterValueException"
      },
      "wrapper" : false
    },
    "InvalidResourceStateException" : {
      "c2jName" : "InvalidResourceStateException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>License Manager cannot allocate a license to a resource because of its state. </p> <p>For example, you cannot allocate a license to an instance in the process of shutting down.</p>",
      "enums" : null,
      "errorCode" : "InvalidResourceStateException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidResourceStateException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidResourceStateException",
        "variableName" : "invalidResourceStateException",
        "variableType" : "InvalidResourceStateException",
        "documentation" : null,
        "simpleType" : "InvalidResourceStateException",
        "variableSetterType" : "InvalidResourceStateException"
      },
      "wrapper" : false
    },
    "InventoryFilter" : {
      "c2jName" : "InventoryFilter",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An inventory filter object.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Name",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>The name of the filter.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the filter.</p>\n@param name The name of the filter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the filter.</p>\n@return The name of the filter.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the filter.</p>\n@param name The name of the filter.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the filter.</p>\n@param name The name of the filter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the filter.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Condition",
        "c2jShape" : "InventoryFilterCondition",
        "deprecated" : false,
        "documentation" : "<p>The condition of the filter.</p>",
        "enumType" : "InventoryFilterCondition",
        "fluentSetterDocumentation" : "/**<p>The condition of the filter.</p>\n@param condition The condition of the filter.\n@return Returns a reference to this object so that method calls can be chained together.\n@see InventoryFilterCondition*/",
        "fluentSetterMethodName" : "withCondition",
        "getterDocumentation" : "/**<p>The condition of the filter.</p>\n@return The condition of the filter.\n@see InventoryFilterCondition*/",
        "getterMethodName" : "getCondition",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Condition",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Condition",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Condition",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The condition of the filter.</p>\n@param condition The condition of the filter.\n@see InventoryFilterCondition*/",
        "setterMethodName" : "setCondition",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "condition",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The condition of the filter.</p>\n@param condition The condition of the filter.\n@return Returns a reference to this object so that method calls can be chained together.\n@see InventoryFilterCondition*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "condition",
          "variableType" : "String",
          "documentation" : "<p>The condition of the filter.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Value",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Value of the filter.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Value of the filter.</p>\n@param value Value of the filter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValue",
        "getterDocumentation" : "/**<p>Value of the filter.</p>\n@return Value of the filter.*/",
        "getterMethodName" : "getValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Value",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Value of the filter.</p>\n@param value Value of the filter.*/",
        "setterMethodName" : "setValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Value of the filter.</p>\n@param value Value of the filter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "<p>Value of the filter.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Condition" : {
          "c2jName" : "Condition",
          "c2jShape" : "InventoryFilterCondition",
          "deprecated" : false,
          "documentation" : "<p>The condition of the filter.</p>",
          "enumType" : "InventoryFilterCondition",
          "fluentSetterDocumentation" : "/**<p>The condition of the filter.</p>\n@param condition The condition of the filter.\n@return Returns a reference to this object so that method calls can be chained together.\n@see InventoryFilterCondition*/",
          "fluentSetterMethodName" : "withCondition",
          "getterDocumentation" : "/**<p>The condition of the filter.</p>\n@return The condition of the filter.\n@see InventoryFilterCondition*/",
          "getterMethodName" : "getCondition",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Condition",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Condition",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Condition",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The condition of the filter.</p>\n@param condition The condition of the filter.\n@see InventoryFilterCondition*/",
          "setterMethodName" : "setCondition",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "condition",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The condition of the filter.</p>\n@param condition The condition of the filter.\n@return Returns a reference to this object so that method calls can be chained together.\n@see InventoryFilterCondition*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "condition",
            "variableType" : "String",
            "documentation" : "<p>The condition of the filter.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>The name of the filter.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the filter.</p>\n@param name The name of the filter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the filter.</p>\n@return The name of the filter.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the filter.</p>\n@param name The name of the filter.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the filter.</p>\n@param name The name of the filter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the filter.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Value of the filter.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Value of the filter.</p>\n@param value Value of the filter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValue",
          "getterDocumentation" : "/**<p>Value of the filter.</p>\n@return Value of the filter.*/",
          "getterMethodName" : "getValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Value",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Value of the filter.</p>\n@param value Value of the filter.*/",
          "setterMethodName" : "setValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Value of the filter.</p>\n@param value Value of the filter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "<p>Value of the filter.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Name", "Condition" ],
      "shapeName" : "InventoryFilter",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InventoryFilter",
        "variableName" : "inventoryFilter",
        "variableType" : "InventoryFilter",
        "documentation" : null,
        "simpleType" : "InventoryFilter",
        "variableSetterType" : "InventoryFilter"
      },
      "wrapper" : false
    },
    "InventoryFilterCondition" : {
      "c2jName" : "InventoryFilterCondition",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "EQUALS",
        "value" : "EQUALS"
      }, {
        "name" : "NOT_EQUALS",
        "value" : "NOT_EQUALS"
      }, {
        "name" : "BEGINS_WITH",
        "value" : "BEGINS_WITH"
      }, {
        "name" : "CONTAINS",
        "value" : "CONTAINS"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InventoryFilterCondition",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InventoryFilterCondition",
        "variableName" : "inventoryFilterCondition",
        "variableType" : "InventoryFilterCondition",
        "documentation" : null,
        "simpleType" : "InventoryFilterCondition",
        "variableSetterType" : "InventoryFilterCondition"
      },
      "wrapper" : false
    },
    "LicenseConfiguration" : {
      "c2jName" : "LicenseConfiguration",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or VCPU), tenancy (shared tenancy, Amazon EC2 Dedicated Instance, Amazon EC2 Dedicated Host, or any of these), host affinity (how long a VM must be associated with a host), the number of licenses purchased and used.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "LicenseConfigurationId",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Unique ID of the <code>LicenseConfiguration</code> object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Unique ID of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationId Unique ID of the <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseConfigurationId",
        "getterDocumentation" : "/**<p>Unique ID of the <code>LicenseConfiguration</code> object.</p>\n@return Unique ID of the <code>LicenseConfiguration</code> object.*/",
        "getterMethodName" : "getLicenseConfigurationId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseConfigurationId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseConfigurationId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LicenseConfigurationId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Unique ID of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationId Unique ID of the <code>LicenseConfiguration</code> object.*/",
        "setterMethodName" : "setLicenseConfigurationId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Unique ID of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationId Unique ID of the <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationId",
          "variableType" : "String",
          "documentation" : "<p>Unique ID of the <code>LicenseConfiguration</code> object.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseConfigurationArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ARN of the <code>LicenseConfiguration</code> object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ARN of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseConfigurationArn",
        "getterDocumentation" : "/**<p>ARN of the <code>LicenseConfiguration</code> object.</p>\n@return ARN of the <code>LicenseConfiguration</code> object.*/",
        "getterMethodName" : "getLicenseConfigurationArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseConfigurationArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseConfigurationArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LicenseConfigurationArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ARN of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the <code>LicenseConfiguration</code> object.*/",
        "setterMethodName" : "setLicenseConfigurationArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ARN of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "<p>ARN of the <code>LicenseConfiguration</code> object.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Name of the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>Name of the license configuration.</p>\n@return Name of the license configuration.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>Name of the license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Description",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Description of the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Description of the license configuration.</p>\n@param description Description of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDescription",
        "getterDocumentation" : "/**<p>Description of the license configuration.</p>\n@return Description of the license configuration.*/",
        "getterMethodName" : "getDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Description",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Description",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Description",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Description of the license configuration.</p>\n@param description Description of the license configuration.*/",
        "setterMethodName" : "setDescription",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Description of the license configuration.</p>\n@param description Description of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "<p>Description of the license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseCountingType",
        "c2jShape" : "LicenseCountingType",
        "deprecated" : false,
        "documentation" : "<p>Dimension to use to track license inventory.</p>",
        "enumType" : "LicenseCountingType",
        "fluentSetterDocumentation" : "/**<p>Dimension to use to track license inventory.</p>\n@param licenseCountingType Dimension to use to track license inventory.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LicenseCountingType*/",
        "fluentSetterMethodName" : "withLicenseCountingType",
        "getterDocumentation" : "/**<p>Dimension to use to track license inventory.</p>\n@return Dimension to use to track license inventory.\n@see LicenseCountingType*/",
        "getterMethodName" : "getLicenseCountingType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseCountingType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseCountingType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LicenseCountingType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Dimension to use to track license inventory.</p>\n@param licenseCountingType Dimension to use to track license inventory.\n@see LicenseCountingType*/",
        "setterMethodName" : "setLicenseCountingType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseCountingType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Dimension to use to track license inventory.</p>\n@param licenseCountingType Dimension to use to track license inventory.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LicenseCountingType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseCountingType",
          "variableType" : "String",
          "documentation" : "<p>Dimension to use to track license inventory.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseRules",
        "c2jShape" : "StringList",
        "deprecated" : false,
        "documentation" : "<p>Array of configured License Manager rules.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Array of configured License Manager rules.</p>\n@param licenseRules Array of configured License Manager rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseRules",
        "getterDocumentation" : "/**<p>Array of configured License Manager rules.</p>\n@return Array of configured License Manager rules.*/",
        "getterMethodName" : "getLicenseRules",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseRules",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseRules",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "String",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "LicenseRules",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Array of configured License Manager rules.</p>\n@param licenseRules Array of configured License Manager rules.*/",
        "setterMethodName" : "setLicenseRules",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "licenseRules",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Array of configured License Manager rules.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseRules(java.util.Collection)} or {@link #withLicenseRules(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseRules Array of configured License Manager rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "licenseRules",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>Array of configured License Manager rules.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseCount",
        "c2jShape" : "BoxLong",
        "deprecated" : false,
        "documentation" : "<p>Number of licenses managed by the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Number of licenses managed by the license configuration.</p>\n@param licenseCount Number of licenses managed by the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseCount",
        "getterDocumentation" : "/**<p>Number of licenses managed by the license configuration.</p>\n@return Number of licenses managed by the license configuration.*/",
        "getterMethodName" : "getLicenseCount",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseCount",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "LicenseCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Number of licenses managed by the license configuration.</p>\n@param licenseCount Number of licenses managed by the license configuration.*/",
        "setterMethodName" : "setLicenseCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "licenseCount",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Number of licenses managed by the license configuration.</p>\n@param licenseCount Number of licenses managed by the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "licenseCount",
          "variableType" : "Long",
          "documentation" : "<p>Number of licenses managed by the license configuration.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseCountHardLimit",
        "c2jShape" : "BoxBoolean",
        "deprecated" : false,
        "documentation" : "<p>Sets the number of available licenses as a hard limit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseCountHardLimit",
        "getterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@return Sets the number of available licenses as a hard limit.*/",
        "getterMethodName" : "getLicenseCountHardLimit",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseCountHardLimit",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseCountHardLimit",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "LicenseCountHardLimit",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.*/",
        "setterMethodName" : "setLicenseCountHardLimit",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "licenseCountHardLimit",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "licenseCountHardLimit",
          "variableType" : "Boolean",
          "documentation" : "<p>Sets the number of available licenses as a hard limit.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ConsumedLicenses",
        "c2jShape" : "BoxLong",
        "deprecated" : false,
        "documentation" : "<p>Number of licenses consumed. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Number of licenses consumed. </p>\n@param consumedLicenses Number of licenses consumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConsumedLicenses",
        "getterDocumentation" : "/**<p>Number of licenses consumed. </p>\n@return Number of licenses consumed.*/",
        "getterMethodName" : "getConsumedLicenses",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ConsumedLicenses",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ConsumedLicenses",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "ConsumedLicenses",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Number of licenses consumed. </p>\n@param consumedLicenses Number of licenses consumed.*/",
        "setterMethodName" : "setConsumedLicenses",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "consumedLicenses",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Number of licenses consumed. </p>\n@param consumedLicenses Number of licenses consumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "consumedLicenses",
          "variableType" : "Long",
          "documentation" : "<p>Number of licenses consumed. </p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Status",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Status of the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Status of the license configuration.</p>\n@param status Status of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>Status of the license configuration.</p>\n@return Status of the license configuration.*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Status of the license configuration.</p>\n@param status Status of the license configuration.*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Status of the license configuration.</p>\n@param status Status of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>Status of the license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OwnerAccountId",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Account ID of the license configuration's owner.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Account ID of the license configuration's owner.</p>\n@param ownerAccountId Account ID of the license configuration's owner.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOwnerAccountId",
        "getterDocumentation" : "/**<p>Account ID of the license configuration's owner.</p>\n@return Account ID of the license configuration's owner.*/",
        "getterMethodName" : "getOwnerAccountId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "OwnerAccountId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OwnerAccountId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OwnerAccountId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Account ID of the license configuration's owner.</p>\n@param ownerAccountId Account ID of the license configuration's owner.*/",
        "setterMethodName" : "setOwnerAccountId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ownerAccountId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Account ID of the license configuration's owner.</p>\n@param ownerAccountId Account ID of the license configuration's owner.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "ownerAccountId",
          "variableType" : "String",
          "documentation" : "<p>Account ID of the license configuration's owner.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ConsumedLicenseSummaryList",
        "c2jShape" : "ConsumedLicenseSummaryList",
        "deprecated" : false,
        "documentation" : "<p>List of summaries for licenses consumed by various resources.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>List of summaries for licenses consumed by various resources.</p>\n@param consumedLicenseSummaryList List of summaries for licenses consumed by various resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConsumedLicenseSummaryList",
        "getterDocumentation" : "/**<p>List of summaries for licenses consumed by various resources.</p>\n@return List of summaries for licenses consumed by various resources.*/",
        "getterMethodName" : "getConsumedLicenseSummaryList",
        "getterModel" : {
          "returnType" : "java.util.List<ConsumedLicenseSummary>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ConsumedLicenseSummaryList",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ConsumedLicenseSummaryList",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ConsumedLicenseSummary",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ConsumedLicenseSummary",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ConsumedLicenseSummary",
              "variableName" : "member",
              "variableType" : "ConsumedLicenseSummary",
              "documentation" : "",
              "simpleType" : "ConsumedLicenseSummary",
              "variableSetterType" : "ConsumedLicenseSummary"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ConsumedLicenseSummary",
              "variableName" : "member",
              "variableType" : "ConsumedLicenseSummary",
              "documentation" : "",
              "simpleType" : "ConsumedLicenseSummary",
              "variableSetterType" : "ConsumedLicenseSummary"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ConsumedLicenseSummary",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ConsumedLicenseSummary",
          "templateImplType" : "java.util.ArrayList<ConsumedLicenseSummary>",
          "templateType" : "java.util.List<ConsumedLicenseSummary>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ConsumedLicenseSummaryList",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>List of summaries for licenses consumed by various resources.</p>\n@param consumedLicenseSummaryList List of summaries for licenses consumed by various resources.*/",
        "setterMethodName" : "setConsumedLicenseSummaryList",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ConsumedLicenseSummary>",
          "variableName" : "consumedLicenseSummaryList",
          "variableType" : "java.util.List<ConsumedLicenseSummary>",
          "documentation" : "",
          "simpleType" : "List<ConsumedLicenseSummary>",
          "variableSetterType" : "java.util.Collection<ConsumedLicenseSummary>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>List of summaries for licenses consumed by various resources.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setConsumedLicenseSummaryList(java.util.Collection)} or {@link #withConsumedLicenseSummaryList(java.util.Collection)} if you want to override the existing values.</p>\n@param consumedLicenseSummaryList List of summaries for licenses consumed by various resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ConsumedLicenseSummary>",
          "variableName" : "consumedLicenseSummaryList",
          "variableType" : "java.util.List<ConsumedLicenseSummary>",
          "documentation" : "<p>List of summaries for licenses consumed by various resources.</p>",
          "simpleType" : "List<ConsumedLicenseSummary>",
          "variableSetterType" : "java.util.Collection<ConsumedLicenseSummary>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ManagedResourceSummaryList",
        "c2jShape" : "ManagedResourceSummaryList",
        "deprecated" : false,
        "documentation" : "<p>List of summaries for managed resources.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>List of summaries for managed resources.</p>\n@param managedResourceSummaryList List of summaries for managed resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withManagedResourceSummaryList",
        "getterDocumentation" : "/**<p>List of summaries for managed resources.</p>\n@return List of summaries for managed resources.*/",
        "getterMethodName" : "getManagedResourceSummaryList",
        "getterModel" : {
          "returnType" : "java.util.List<ManagedResourceSummary>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ManagedResourceSummaryList",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ManagedResourceSummaryList",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ManagedResourceSummary",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ManagedResourceSummary",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ManagedResourceSummary",
              "variableName" : "member",
              "variableType" : "ManagedResourceSummary",
              "documentation" : "",
              "simpleType" : "ManagedResourceSummary",
              "variableSetterType" : "ManagedResourceSummary"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ManagedResourceSummary",
              "variableName" : "member",
              "variableType" : "ManagedResourceSummary",
              "documentation" : "",
              "simpleType" : "ManagedResourceSummary",
              "variableSetterType" : "ManagedResourceSummary"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ManagedResourceSummary",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ManagedResourceSummary",
          "templateImplType" : "java.util.ArrayList<ManagedResourceSummary>",
          "templateType" : "java.util.List<ManagedResourceSummary>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ManagedResourceSummaryList",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>List of summaries for managed resources.</p>\n@param managedResourceSummaryList List of summaries for managed resources.*/",
        "setterMethodName" : "setManagedResourceSummaryList",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ManagedResourceSummary>",
          "variableName" : "managedResourceSummaryList",
          "variableType" : "java.util.List<ManagedResourceSummary>",
          "documentation" : "",
          "simpleType" : "List<ManagedResourceSummary>",
          "variableSetterType" : "java.util.Collection<ManagedResourceSummary>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>List of summaries for managed resources.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setManagedResourceSummaryList(java.util.Collection)} or {@link #withManagedResourceSummaryList(java.util.Collection)} if you want to override the existing values.</p>\n@param managedResourceSummaryList List of summaries for managed resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ManagedResourceSummary>",
          "variableName" : "managedResourceSummaryList",
          "variableType" : "java.util.List<ManagedResourceSummary>",
          "documentation" : "<p>List of summaries for managed resources.</p>",
          "simpleType" : "List<ManagedResourceSummary>",
          "variableSetterType" : "java.util.Collection<ManagedResourceSummary>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ConsumedLicenseSummaryList" : {
          "c2jName" : "ConsumedLicenseSummaryList",
          "c2jShape" : "ConsumedLicenseSummaryList",
          "deprecated" : false,
          "documentation" : "<p>List of summaries for licenses consumed by various resources.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>List of summaries for licenses consumed by various resources.</p>\n@param consumedLicenseSummaryList List of summaries for licenses consumed by various resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConsumedLicenseSummaryList",
          "getterDocumentation" : "/**<p>List of summaries for licenses consumed by various resources.</p>\n@return List of summaries for licenses consumed by various resources.*/",
          "getterMethodName" : "getConsumedLicenseSummaryList",
          "getterModel" : {
            "returnType" : "java.util.List<ConsumedLicenseSummary>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ConsumedLicenseSummaryList",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ConsumedLicenseSummaryList",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ConsumedLicenseSummary",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ConsumedLicenseSummary",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ConsumedLicenseSummary",
                "variableName" : "member",
                "variableType" : "ConsumedLicenseSummary",
                "documentation" : "",
                "simpleType" : "ConsumedLicenseSummary",
                "variableSetterType" : "ConsumedLicenseSummary"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ConsumedLicenseSummary",
                "variableName" : "member",
                "variableType" : "ConsumedLicenseSummary",
                "documentation" : "",
                "simpleType" : "ConsumedLicenseSummary",
                "variableSetterType" : "ConsumedLicenseSummary"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ConsumedLicenseSummary",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ConsumedLicenseSummary",
            "templateImplType" : "java.util.ArrayList<ConsumedLicenseSummary>",
            "templateType" : "java.util.List<ConsumedLicenseSummary>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ConsumedLicenseSummaryList",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>List of summaries for licenses consumed by various resources.</p>\n@param consumedLicenseSummaryList List of summaries for licenses consumed by various resources.*/",
          "setterMethodName" : "setConsumedLicenseSummaryList",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ConsumedLicenseSummary>",
            "variableName" : "consumedLicenseSummaryList",
            "variableType" : "java.util.List<ConsumedLicenseSummary>",
            "documentation" : "",
            "simpleType" : "List<ConsumedLicenseSummary>",
            "variableSetterType" : "java.util.Collection<ConsumedLicenseSummary>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>List of summaries for licenses consumed by various resources.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setConsumedLicenseSummaryList(java.util.Collection)} or {@link #withConsumedLicenseSummaryList(java.util.Collection)} if you want to override the existing values.</p>\n@param consumedLicenseSummaryList List of summaries for licenses consumed by various resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ConsumedLicenseSummary>",
            "variableName" : "consumedLicenseSummaryList",
            "variableType" : "java.util.List<ConsumedLicenseSummary>",
            "documentation" : "<p>List of summaries for licenses consumed by various resources.</p>",
            "simpleType" : "List<ConsumedLicenseSummary>",
            "variableSetterType" : "java.util.Collection<ConsumedLicenseSummary>"
          },
          "xmlNameSpaceUri" : null
        },
        "ConsumedLicenses" : {
          "c2jName" : "ConsumedLicenses",
          "c2jShape" : "BoxLong",
          "deprecated" : false,
          "documentation" : "<p>Number of licenses consumed. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Number of licenses consumed. </p>\n@param consumedLicenses Number of licenses consumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConsumedLicenses",
          "getterDocumentation" : "/**<p>Number of licenses consumed. </p>\n@return Number of licenses consumed.*/",
          "getterMethodName" : "getConsumedLicenses",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ConsumedLicenses",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ConsumedLicenses",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "ConsumedLicenses",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Number of licenses consumed. </p>\n@param consumedLicenses Number of licenses consumed.*/",
          "setterMethodName" : "setConsumedLicenses",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "consumedLicenses",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Number of licenses consumed. </p>\n@param consumedLicenses Number of licenses consumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "consumedLicenses",
            "variableType" : "Long",
            "documentation" : "<p>Number of licenses consumed. </p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "Description" : {
          "c2jName" : "Description",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Description of the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Description of the license configuration.</p>\n@param description Description of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDescription",
          "getterDocumentation" : "/**<p>Description of the license configuration.</p>\n@return Description of the license configuration.*/",
          "getterMethodName" : "getDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Description",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Description",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Description",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Description of the license configuration.</p>\n@param description Description of the license configuration.*/",
          "setterMethodName" : "setDescription",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Description of the license configuration.</p>\n@param description Description of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "<p>Description of the license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseConfigurationArn" : {
          "c2jName" : "LicenseConfigurationArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ARN of the <code>LicenseConfiguration</code> object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ARN of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseConfigurationArn",
          "getterDocumentation" : "/**<p>ARN of the <code>LicenseConfiguration</code> object.</p>\n@return ARN of the <code>LicenseConfiguration</code> object.*/",
          "getterMethodName" : "getLicenseConfigurationArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseConfigurationArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseConfigurationArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LicenseConfigurationArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ARN of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the <code>LicenseConfiguration</code> object.*/",
          "setterMethodName" : "setLicenseConfigurationArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ARN of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "<p>ARN of the <code>LicenseConfiguration</code> object.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseConfigurationId" : {
          "c2jName" : "LicenseConfigurationId",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Unique ID of the <code>LicenseConfiguration</code> object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Unique ID of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationId Unique ID of the <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseConfigurationId",
          "getterDocumentation" : "/**<p>Unique ID of the <code>LicenseConfiguration</code> object.</p>\n@return Unique ID of the <code>LicenseConfiguration</code> object.*/",
          "getterMethodName" : "getLicenseConfigurationId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseConfigurationId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseConfigurationId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LicenseConfigurationId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Unique ID of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationId Unique ID of the <code>LicenseConfiguration</code> object.*/",
          "setterMethodName" : "setLicenseConfigurationId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Unique ID of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationId Unique ID of the <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationId",
            "variableType" : "String",
            "documentation" : "<p>Unique ID of the <code>LicenseConfiguration</code> object.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseCount" : {
          "c2jName" : "LicenseCount",
          "c2jShape" : "BoxLong",
          "deprecated" : false,
          "documentation" : "<p>Number of licenses managed by the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Number of licenses managed by the license configuration.</p>\n@param licenseCount Number of licenses managed by the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseCount",
          "getterDocumentation" : "/**<p>Number of licenses managed by the license configuration.</p>\n@return Number of licenses managed by the license configuration.*/",
          "getterMethodName" : "getLicenseCount",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseCount",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "LicenseCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Number of licenses managed by the license configuration.</p>\n@param licenseCount Number of licenses managed by the license configuration.*/",
          "setterMethodName" : "setLicenseCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "licenseCount",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Number of licenses managed by the license configuration.</p>\n@param licenseCount Number of licenses managed by the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "licenseCount",
            "variableType" : "Long",
            "documentation" : "<p>Number of licenses managed by the license configuration.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseCountHardLimit" : {
          "c2jName" : "LicenseCountHardLimit",
          "c2jShape" : "BoxBoolean",
          "deprecated" : false,
          "documentation" : "<p>Sets the number of available licenses as a hard limit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseCountHardLimit",
          "getterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@return Sets the number of available licenses as a hard limit.*/",
          "getterMethodName" : "getLicenseCountHardLimit",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseCountHardLimit",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseCountHardLimit",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "LicenseCountHardLimit",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.*/",
          "setterMethodName" : "setLicenseCountHardLimit",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "licenseCountHardLimit",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "licenseCountHardLimit",
            "variableType" : "Boolean",
            "documentation" : "<p>Sets the number of available licenses as a hard limit.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseCountingType" : {
          "c2jName" : "LicenseCountingType",
          "c2jShape" : "LicenseCountingType",
          "deprecated" : false,
          "documentation" : "<p>Dimension to use to track license inventory.</p>",
          "enumType" : "LicenseCountingType",
          "fluentSetterDocumentation" : "/**<p>Dimension to use to track license inventory.</p>\n@param licenseCountingType Dimension to use to track license inventory.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LicenseCountingType*/",
          "fluentSetterMethodName" : "withLicenseCountingType",
          "getterDocumentation" : "/**<p>Dimension to use to track license inventory.</p>\n@return Dimension to use to track license inventory.\n@see LicenseCountingType*/",
          "getterMethodName" : "getLicenseCountingType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseCountingType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseCountingType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LicenseCountingType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Dimension to use to track license inventory.</p>\n@param licenseCountingType Dimension to use to track license inventory.\n@see LicenseCountingType*/",
          "setterMethodName" : "setLicenseCountingType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseCountingType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Dimension to use to track license inventory.</p>\n@param licenseCountingType Dimension to use to track license inventory.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LicenseCountingType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseCountingType",
            "variableType" : "String",
            "documentation" : "<p>Dimension to use to track license inventory.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseRules" : {
          "c2jName" : "LicenseRules",
          "c2jShape" : "StringList",
          "deprecated" : false,
          "documentation" : "<p>Array of configured License Manager rules.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Array of configured License Manager rules.</p>\n@param licenseRules Array of configured License Manager rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseRules",
          "getterDocumentation" : "/**<p>Array of configured License Manager rules.</p>\n@return Array of configured License Manager rules.*/",
          "getterMethodName" : "getLicenseRules",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseRules",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseRules",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "String",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "LicenseRules",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Array of configured License Manager rules.</p>\n@param licenseRules Array of configured License Manager rules.*/",
          "setterMethodName" : "setLicenseRules",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "licenseRules",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Array of configured License Manager rules.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseRules(java.util.Collection)} or {@link #withLicenseRules(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseRules Array of configured License Manager rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "licenseRules",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>Array of configured License Manager rules.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "ManagedResourceSummaryList" : {
          "c2jName" : "ManagedResourceSummaryList",
          "c2jShape" : "ManagedResourceSummaryList",
          "deprecated" : false,
          "documentation" : "<p>List of summaries for managed resources.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>List of summaries for managed resources.</p>\n@param managedResourceSummaryList List of summaries for managed resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withManagedResourceSummaryList",
          "getterDocumentation" : "/**<p>List of summaries for managed resources.</p>\n@return List of summaries for managed resources.*/",
          "getterMethodName" : "getManagedResourceSummaryList",
          "getterModel" : {
            "returnType" : "java.util.List<ManagedResourceSummary>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ManagedResourceSummaryList",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ManagedResourceSummaryList",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ManagedResourceSummary",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ManagedResourceSummary",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ManagedResourceSummary",
                "variableName" : "member",
                "variableType" : "ManagedResourceSummary",
                "documentation" : "",
                "simpleType" : "ManagedResourceSummary",
                "variableSetterType" : "ManagedResourceSummary"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ManagedResourceSummary",
                "variableName" : "member",
                "variableType" : "ManagedResourceSummary",
                "documentation" : "",
                "simpleType" : "ManagedResourceSummary",
                "variableSetterType" : "ManagedResourceSummary"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ManagedResourceSummary",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ManagedResourceSummary",
            "templateImplType" : "java.util.ArrayList<ManagedResourceSummary>",
            "templateType" : "java.util.List<ManagedResourceSummary>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ManagedResourceSummaryList",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>List of summaries for managed resources.</p>\n@param managedResourceSummaryList List of summaries for managed resources.*/",
          "setterMethodName" : "setManagedResourceSummaryList",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ManagedResourceSummary>",
            "variableName" : "managedResourceSummaryList",
            "variableType" : "java.util.List<ManagedResourceSummary>",
            "documentation" : "",
            "simpleType" : "List<ManagedResourceSummary>",
            "variableSetterType" : "java.util.Collection<ManagedResourceSummary>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>List of summaries for managed resources.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setManagedResourceSummaryList(java.util.Collection)} or {@link #withManagedResourceSummaryList(java.util.Collection)} if you want to override the existing values.</p>\n@param managedResourceSummaryList List of summaries for managed resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ManagedResourceSummary>",
            "variableName" : "managedResourceSummaryList",
            "variableType" : "java.util.List<ManagedResourceSummary>",
            "documentation" : "<p>List of summaries for managed resources.</p>",
            "simpleType" : "List<ManagedResourceSummary>",
            "variableSetterType" : "java.util.Collection<ManagedResourceSummary>"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Name of the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>Name of the license configuration.</p>\n@return Name of the license configuration.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Name of the license configuration.</p>\n@param name Name of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>Name of the license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "OwnerAccountId" : {
          "c2jName" : "OwnerAccountId",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Account ID of the license configuration's owner.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Account ID of the license configuration's owner.</p>\n@param ownerAccountId Account ID of the license configuration's owner.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOwnerAccountId",
          "getterDocumentation" : "/**<p>Account ID of the license configuration's owner.</p>\n@return Account ID of the license configuration's owner.*/",
          "getterMethodName" : "getOwnerAccountId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "OwnerAccountId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OwnerAccountId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OwnerAccountId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Account ID of the license configuration's owner.</p>\n@param ownerAccountId Account ID of the license configuration's owner.*/",
          "setterMethodName" : "setOwnerAccountId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ownerAccountId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Account ID of the license configuration's owner.</p>\n@param ownerAccountId Account ID of the license configuration's owner.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "ownerAccountId",
            "variableType" : "String",
            "documentation" : "<p>Account ID of the license configuration's owner.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "Status",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Status of the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Status of the license configuration.</p>\n@param status Status of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>Status of the license configuration.</p>\n@return Status of the license configuration.*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Status of the license configuration.</p>\n@param status Status of the license configuration.*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Status of the license configuration.</p>\n@param status Status of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>Status of the license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LicenseConfiguration",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LicenseConfiguration",
        "variableName" : "licenseConfiguration",
        "variableType" : "LicenseConfiguration",
        "documentation" : null,
        "simpleType" : "LicenseConfiguration",
        "variableSetterType" : "LicenseConfiguration"
      },
      "wrapper" : false
    },
    "LicenseConfigurationAssociation" : {
      "c2jName" : "LicenseConfigurationAssociation",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes a server resource that is associated with a license configuration.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResourceArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ARN of the resource associated with the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ARN of the resource associated with the license configuration.</p>\n@param resourceArn ARN of the resource associated with the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>ARN of the resource associated with the license configuration.</p>\n@return ARN of the resource associated with the license configuration.*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ARN of the resource associated with the license configuration.</p>\n@param resourceArn ARN of the resource associated with the license configuration.*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ARN of the resource associated with the license configuration.</p>\n@param resourceArn ARN of the resource associated with the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>ARN of the resource associated with the license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResourceType",
        "c2jShape" : "ResourceType",
        "deprecated" : false,
        "documentation" : "<p>Type of server resource.</p>",
        "enumType" : "ResourceType",
        "fluentSetterDocumentation" : "/**<p>Type of server resource.</p>\n@param resourceType Type of server resource.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**<p>Type of server resource.</p>\n@return Type of server resource.\n@see ResourceType*/",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Type of server resource.</p>\n@param resourceType Type of server resource.\n@see ResourceType*/",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Type of server resource.</p>\n@param resourceType Type of server resource.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "<p>Type of server resource.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResourceOwnerId",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ID of the AWS account that owns the resource consuming licenses.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID of the AWS account that owns the resource consuming licenses.</p>\n@param resourceOwnerId ID of the AWS account that owns the resource consuming licenses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceOwnerId",
        "getterDocumentation" : "/**<p>ID of the AWS account that owns the resource consuming licenses.</p>\n@return ID of the AWS account that owns the resource consuming licenses.*/",
        "getterMethodName" : "getResourceOwnerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceOwnerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceOwnerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceOwnerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ID of the AWS account that owns the resource consuming licenses.</p>\n@param resourceOwnerId ID of the AWS account that owns the resource consuming licenses.*/",
        "setterMethodName" : "setResourceOwnerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceOwnerId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ID of the AWS account that owns the resource consuming licenses.</p>\n@param resourceOwnerId ID of the AWS account that owns the resource consuming licenses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceOwnerId",
          "variableType" : "String",
          "documentation" : "<p>ID of the AWS account that owns the resource consuming licenses.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "AssociationTime",
        "c2jShape" : "DateTime",
        "deprecated" : false,
        "documentation" : "<p>Time when the license configuration was associated with the resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Time when the license configuration was associated with the resource.</p>\n@param associationTime Time when the license configuration was associated with the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAssociationTime",
        "getterDocumentation" : "/**<p>Time when the license configuration was associated with the resource.</p>\n@return Time when the license configuration was associated with the resource.*/",
        "getterMethodName" : "getAssociationTime",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "AssociationTime",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "AssociationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "AssociationTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Time when the license configuration was associated with the resource.</p>\n@param associationTime Time when the license configuration was associated with the resource.*/",
        "setterMethodName" : "setAssociationTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "associationTime",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Time when the license configuration was associated with the resource.</p>\n@param associationTime Time when the license configuration was associated with the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "associationTime",
          "variableType" : "java.util.Date",
          "documentation" : "<p>Time when the license configuration was associated with the resource.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AssociationTime" : {
          "c2jName" : "AssociationTime",
          "c2jShape" : "DateTime",
          "deprecated" : false,
          "documentation" : "<p>Time when the license configuration was associated with the resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Time when the license configuration was associated with the resource.</p>\n@param associationTime Time when the license configuration was associated with the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAssociationTime",
          "getterDocumentation" : "/**<p>Time when the license configuration was associated with the resource.</p>\n@return Time when the license configuration was associated with the resource.*/",
          "getterMethodName" : "getAssociationTime",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "AssociationTime",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "AssociationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "AssociationTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Time when the license configuration was associated with the resource.</p>\n@param associationTime Time when the license configuration was associated with the resource.*/",
          "setterMethodName" : "setAssociationTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "associationTime",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Time when the license configuration was associated with the resource.</p>\n@param associationTime Time when the license configuration was associated with the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "associationTime",
            "variableType" : "java.util.Date",
            "documentation" : "<p>Time when the license configuration was associated with the resource.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceArn" : {
          "c2jName" : "ResourceArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ARN of the resource associated with the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ARN of the resource associated with the license configuration.</p>\n@param resourceArn ARN of the resource associated with the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>ARN of the resource associated with the license configuration.</p>\n@return ARN of the resource associated with the license configuration.*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ARN of the resource associated with the license configuration.</p>\n@param resourceArn ARN of the resource associated with the license configuration.*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ARN of the resource associated with the license configuration.</p>\n@param resourceArn ARN of the resource associated with the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>ARN of the resource associated with the license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceOwnerId" : {
          "c2jName" : "ResourceOwnerId",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ID of the AWS account that owns the resource consuming licenses.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID of the AWS account that owns the resource consuming licenses.</p>\n@param resourceOwnerId ID of the AWS account that owns the resource consuming licenses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceOwnerId",
          "getterDocumentation" : "/**<p>ID of the AWS account that owns the resource consuming licenses.</p>\n@return ID of the AWS account that owns the resource consuming licenses.*/",
          "getterMethodName" : "getResourceOwnerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceOwnerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceOwnerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceOwnerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ID of the AWS account that owns the resource consuming licenses.</p>\n@param resourceOwnerId ID of the AWS account that owns the resource consuming licenses.*/",
          "setterMethodName" : "setResourceOwnerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceOwnerId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ID of the AWS account that owns the resource consuming licenses.</p>\n@param resourceOwnerId ID of the AWS account that owns the resource consuming licenses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceOwnerId",
            "variableType" : "String",
            "documentation" : "<p>ID of the AWS account that owns the resource consuming licenses.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "ResourceType",
          "deprecated" : false,
          "documentation" : "<p>Type of server resource.</p>",
          "enumType" : "ResourceType",
          "fluentSetterDocumentation" : "/**<p>Type of server resource.</p>\n@param resourceType Type of server resource.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**<p>Type of server resource.</p>\n@return Type of server resource.\n@see ResourceType*/",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Type of server resource.</p>\n@param resourceType Type of server resource.\n@see ResourceType*/",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Type of server resource.</p>\n@param resourceType Type of server resource.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "<p>Type of server resource.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LicenseConfigurationAssociation",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LicenseConfigurationAssociation",
        "variableName" : "licenseConfigurationAssociation",
        "variableType" : "LicenseConfigurationAssociation",
        "documentation" : null,
        "simpleType" : "LicenseConfigurationAssociation",
        "variableSetterType" : "LicenseConfigurationAssociation"
      },
      "wrapper" : false
    },
    "LicenseConfigurationStatus" : {
      "c2jName" : "LicenseConfigurationStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "AVAILABLE",
        "value" : "AVAILABLE"
      }, {
        "name" : "DISABLED",
        "value" : "DISABLED"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LicenseConfigurationStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LicenseConfigurationStatus",
        "variableName" : "licenseConfigurationStatus",
        "variableType" : "LicenseConfigurationStatus",
        "documentation" : null,
        "simpleType" : "LicenseConfigurationStatus",
        "variableSetterType" : "LicenseConfigurationStatus"
      },
      "wrapper" : false
    },
    "LicenseConfigurationUsage" : {
      "c2jName" : "LicenseConfigurationUsage",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Contains details of the usage of each resource from the license pool.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResourceArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ARN of the resource associated with a license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ARN of the resource associated with a license configuration.</p>\n@param resourceArn ARN of the resource associated with a license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>ARN of the resource associated with a license configuration.</p>\n@return ARN of the resource associated with a license configuration.*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ARN of the resource associated with a license configuration.</p>\n@param resourceArn ARN of the resource associated with a license configuration.*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ARN of the resource associated with a license configuration.</p>\n@param resourceArn ARN of the resource associated with a license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>ARN of the resource associated with a license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResourceType",
        "c2jShape" : "ResourceType",
        "deprecated" : false,
        "documentation" : "<p>Type of resource associated with athe license configuration.</p>",
        "enumType" : "ResourceType",
        "fluentSetterDocumentation" : "/**<p>Type of resource associated with athe license configuration.</p>\n@param resourceType Type of resource associated with athe license configuration.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**<p>Type of resource associated with athe license configuration.</p>\n@return Type of resource associated with athe license configuration.\n@see ResourceType*/",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Type of resource associated with athe license configuration.</p>\n@param resourceType Type of resource associated with athe license configuration.\n@see ResourceType*/",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Type of resource associated with athe license configuration.</p>\n@param resourceType Type of resource associated with athe license configuration.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "<p>Type of resource associated with athe license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResourceStatus",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Status of a resource associated with the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Status of a resource associated with the license configuration.</p>\n@param resourceStatus Status of a resource associated with the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceStatus",
        "getterDocumentation" : "/**<p>Status of a resource associated with the license configuration.</p>\n@return Status of a resource associated with the license configuration.*/",
        "getterMethodName" : "getResourceStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceStatus",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceStatus",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Status of a resource associated with the license configuration.</p>\n@param resourceStatus Status of a resource associated with the license configuration.*/",
        "setterMethodName" : "setResourceStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Status of a resource associated with the license configuration.</p>\n@param resourceStatus Status of a resource associated with the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceStatus",
          "variableType" : "String",
          "documentation" : "<p>Status of a resource associated with the license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResourceOwnerId",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ID of the account that owns a resource that is associated with the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID of the account that owns a resource that is associated with the license configuration.</p>\n@param resourceOwnerId ID of the account that owns a resource that is associated with the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceOwnerId",
        "getterDocumentation" : "/**<p>ID of the account that owns a resource that is associated with the license configuration.</p>\n@return ID of the account that owns a resource that is associated with the license configuration.*/",
        "getterMethodName" : "getResourceOwnerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceOwnerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceOwnerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceOwnerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ID of the account that owns a resource that is associated with the license configuration.</p>\n@param resourceOwnerId ID of the account that owns a resource that is associated with the license configuration.*/",
        "setterMethodName" : "setResourceOwnerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceOwnerId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ID of the account that owns a resource that is associated with the license configuration.</p>\n@param resourceOwnerId ID of the account that owns a resource that is associated with the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceOwnerId",
          "variableType" : "String",
          "documentation" : "<p>ID of the account that owns a resource that is associated with the license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "AssociationTime",
        "c2jShape" : "DateTime",
        "deprecated" : false,
        "documentation" : "<p>Time when the license configuration was initially associated with a resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Time when the license configuration was initially associated with a resource.</p>\n@param associationTime Time when the license configuration was initially associated with a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAssociationTime",
        "getterDocumentation" : "/**<p>Time when the license configuration was initially associated with a resource.</p>\n@return Time when the license configuration was initially associated with a resource.*/",
        "getterMethodName" : "getAssociationTime",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "AssociationTime",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "AssociationTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "AssociationTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Time when the license configuration was initially associated with a resource.</p>\n@param associationTime Time when the license configuration was initially associated with a resource.*/",
        "setterMethodName" : "setAssociationTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "associationTime",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Time when the license configuration was initially associated with a resource.</p>\n@param associationTime Time when the license configuration was initially associated with a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "associationTime",
          "variableType" : "java.util.Date",
          "documentation" : "<p>Time when the license configuration was initially associated with a resource.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ConsumedLicenses",
        "c2jShape" : "BoxLong",
        "deprecated" : false,
        "documentation" : "<p>Number of licenses consumed out of the total provisioned in the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Number of licenses consumed out of the total provisioned in the license configuration.</p>\n@param consumedLicenses Number of licenses consumed out of the total provisioned in the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConsumedLicenses",
        "getterDocumentation" : "/**<p>Number of licenses consumed out of the total provisioned in the license configuration.</p>\n@return Number of licenses consumed out of the total provisioned in the license configuration.*/",
        "getterMethodName" : "getConsumedLicenses",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ConsumedLicenses",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ConsumedLicenses",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "ConsumedLicenses",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Number of licenses consumed out of the total provisioned in the license configuration.</p>\n@param consumedLicenses Number of licenses consumed out of the total provisioned in the license configuration.*/",
        "setterMethodName" : "setConsumedLicenses",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "consumedLicenses",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Number of licenses consumed out of the total provisioned in the license configuration.</p>\n@param consumedLicenses Number of licenses consumed out of the total provisioned in the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "consumedLicenses",
          "variableType" : "Long",
          "documentation" : "<p>Number of licenses consumed out of the total provisioned in the license configuration.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AssociationTime" : {
          "c2jName" : "AssociationTime",
          "c2jShape" : "DateTime",
          "deprecated" : false,
          "documentation" : "<p>Time when the license configuration was initially associated with a resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Time when the license configuration was initially associated with a resource.</p>\n@param associationTime Time when the license configuration was initially associated with a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAssociationTime",
          "getterDocumentation" : "/**<p>Time when the license configuration was initially associated with a resource.</p>\n@return Time when the license configuration was initially associated with a resource.*/",
          "getterMethodName" : "getAssociationTime",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "AssociationTime",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "AssociationTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "AssociationTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Time when the license configuration was initially associated with a resource.</p>\n@param associationTime Time when the license configuration was initially associated with a resource.*/",
          "setterMethodName" : "setAssociationTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "associationTime",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Time when the license configuration was initially associated with a resource.</p>\n@param associationTime Time when the license configuration was initially associated with a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "associationTime",
            "variableType" : "java.util.Date",
            "documentation" : "<p>Time when the license configuration was initially associated with a resource.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "ConsumedLicenses" : {
          "c2jName" : "ConsumedLicenses",
          "c2jShape" : "BoxLong",
          "deprecated" : false,
          "documentation" : "<p>Number of licenses consumed out of the total provisioned in the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Number of licenses consumed out of the total provisioned in the license configuration.</p>\n@param consumedLicenses Number of licenses consumed out of the total provisioned in the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConsumedLicenses",
          "getterDocumentation" : "/**<p>Number of licenses consumed out of the total provisioned in the license configuration.</p>\n@return Number of licenses consumed out of the total provisioned in the license configuration.*/",
          "getterMethodName" : "getConsumedLicenses",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ConsumedLicenses",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ConsumedLicenses",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "ConsumedLicenses",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Number of licenses consumed out of the total provisioned in the license configuration.</p>\n@param consumedLicenses Number of licenses consumed out of the total provisioned in the license configuration.*/",
          "setterMethodName" : "setConsumedLicenses",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "consumedLicenses",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Number of licenses consumed out of the total provisioned in the license configuration.</p>\n@param consumedLicenses Number of licenses consumed out of the total provisioned in the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "consumedLicenses",
            "variableType" : "Long",
            "documentation" : "<p>Number of licenses consumed out of the total provisioned in the license configuration.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceArn" : {
          "c2jName" : "ResourceArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ARN of the resource associated with a license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ARN of the resource associated with a license configuration.</p>\n@param resourceArn ARN of the resource associated with a license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>ARN of the resource associated with a license configuration.</p>\n@return ARN of the resource associated with a license configuration.*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ARN of the resource associated with a license configuration.</p>\n@param resourceArn ARN of the resource associated with a license configuration.*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ARN of the resource associated with a license configuration.</p>\n@param resourceArn ARN of the resource associated with a license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>ARN of the resource associated with a license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceOwnerId" : {
          "c2jName" : "ResourceOwnerId",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ID of the account that owns a resource that is associated with the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID of the account that owns a resource that is associated with the license configuration.</p>\n@param resourceOwnerId ID of the account that owns a resource that is associated with the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceOwnerId",
          "getterDocumentation" : "/**<p>ID of the account that owns a resource that is associated with the license configuration.</p>\n@return ID of the account that owns a resource that is associated with the license configuration.*/",
          "getterMethodName" : "getResourceOwnerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceOwnerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceOwnerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceOwnerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ID of the account that owns a resource that is associated with the license configuration.</p>\n@param resourceOwnerId ID of the account that owns a resource that is associated with the license configuration.*/",
          "setterMethodName" : "setResourceOwnerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceOwnerId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ID of the account that owns a resource that is associated with the license configuration.</p>\n@param resourceOwnerId ID of the account that owns a resource that is associated with the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceOwnerId",
            "variableType" : "String",
            "documentation" : "<p>ID of the account that owns a resource that is associated with the license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceStatus" : {
          "c2jName" : "ResourceStatus",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Status of a resource associated with the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Status of a resource associated with the license configuration.</p>\n@param resourceStatus Status of a resource associated with the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceStatus",
          "getterDocumentation" : "/**<p>Status of a resource associated with the license configuration.</p>\n@return Status of a resource associated with the license configuration.*/",
          "getterMethodName" : "getResourceStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceStatus",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceStatus",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Status of a resource associated with the license configuration.</p>\n@param resourceStatus Status of a resource associated with the license configuration.*/",
          "setterMethodName" : "setResourceStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Status of a resource associated with the license configuration.</p>\n@param resourceStatus Status of a resource associated with the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceStatus",
            "variableType" : "String",
            "documentation" : "<p>Status of a resource associated with the license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "ResourceType",
          "deprecated" : false,
          "documentation" : "<p>Type of resource associated with athe license configuration.</p>",
          "enumType" : "ResourceType",
          "fluentSetterDocumentation" : "/**<p>Type of resource associated with athe license configuration.</p>\n@param resourceType Type of resource associated with athe license configuration.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**<p>Type of resource associated with athe license configuration.</p>\n@return Type of resource associated with athe license configuration.\n@see ResourceType*/",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Type of resource associated with athe license configuration.</p>\n@param resourceType Type of resource associated with athe license configuration.\n@see ResourceType*/",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Type of resource associated with athe license configuration.</p>\n@param resourceType Type of resource associated with athe license configuration.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "<p>Type of resource associated with athe license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LicenseConfigurationUsage",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LicenseConfigurationUsage",
        "variableName" : "licenseConfigurationUsage",
        "variableType" : "LicenseConfigurationUsage",
        "documentation" : null,
        "simpleType" : "LicenseConfigurationUsage",
        "variableSetterType" : "LicenseConfigurationUsage"
      },
      "wrapper" : false
    },
    "LicenseCountingType" : {
      "c2jName" : "LicenseCountingType",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "VCPU",
        "value" : "vCPU"
      }, {
        "name" : "Instance",
        "value" : "Instance"
      }, {
        "name" : "Core",
        "value" : "Core"
      }, {
        "name" : "Socket",
        "value" : "Socket"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LicenseCountingType",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LicenseCountingType",
        "variableName" : "licenseCountingType",
        "variableType" : "LicenseCountingType",
        "documentation" : null,
        "simpleType" : "LicenseCountingType",
        "variableSetterType" : "LicenseCountingType"
      },
      "wrapper" : false
    },
    "LicenseSpecification" : {
      "c2jName" : "LicenseSpecification",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Object used for associating a license configuration with a resource.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "LicenseConfigurationArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ARN of the <code>LicenseConfiguration</code> object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ARN of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseConfigurationArn",
        "getterDocumentation" : "/**<p>ARN of the <code>LicenseConfiguration</code> object.</p>\n@return ARN of the <code>LicenseConfiguration</code> object.*/",
        "getterMethodName" : "getLicenseConfigurationArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseConfigurationArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseConfigurationArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LicenseConfigurationArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ARN of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the <code>LicenseConfiguration</code> object.*/",
        "setterMethodName" : "setLicenseConfigurationArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ARN of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "<p>ARN of the <code>LicenseConfiguration</code> object.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LicenseConfigurationArn" : {
          "c2jName" : "LicenseConfigurationArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ARN of the <code>LicenseConfiguration</code> object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ARN of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseConfigurationArn",
          "getterDocumentation" : "/**<p>ARN of the <code>LicenseConfiguration</code> object.</p>\n@return ARN of the <code>LicenseConfiguration</code> object.*/",
          "getterMethodName" : "getLicenseConfigurationArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseConfigurationArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseConfigurationArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LicenseConfigurationArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ARN of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the <code>LicenseConfiguration</code> object.*/",
          "setterMethodName" : "setLicenseConfigurationArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ARN of the <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "<p>ARN of the <code>LicenseConfiguration</code> object.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "LicenseConfigurationArn" ],
      "shapeName" : "LicenseSpecification",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LicenseSpecification",
        "variableName" : "licenseSpecification",
        "variableType" : "LicenseSpecification",
        "documentation" : null,
        "simpleType" : "LicenseSpecification",
        "variableSetterType" : "LicenseSpecification"
      },
      "wrapper" : false
    },
    "LicenseUsageException" : {
      "c2jName" : "LicenseUsageException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>You do not have enough licenses available to support a new resource launch.</p>",
      "enums" : null,
      "errorCode" : "LicenseUsageException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LicenseUsageException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LicenseUsageException",
        "variableName" : "licenseUsageException",
        "variableType" : "LicenseUsageException",
        "documentation" : null,
        "simpleType" : "LicenseUsageException",
        "variableSetterType" : "LicenseUsageException"
      },
      "wrapper" : false
    },
    "ListAssociationsForLicenseConfigurationRequest" : {
      "c2jName" : "ListAssociationsForLicenseConfigurationRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListAssociationsForLicenseConfiguration",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSLicenseManager.ListAssociationsForLicenseConfiguration",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "LicenseConfigurationArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ARN of a <code>LicenseConfiguration</code> object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ARN of a <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of a <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseConfigurationArn",
        "getterDocumentation" : "/**<p>ARN of a <code>LicenseConfiguration</code> object.</p>\n@return ARN of a <code>LicenseConfiguration</code> object.*/",
        "getterMethodName" : "getLicenseConfigurationArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseConfigurationArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseConfigurationArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LicenseConfigurationArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ARN of a <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of a <code>LicenseConfiguration</code> object.*/",
        "setterMethodName" : "setLicenseConfigurationArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ARN of a <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of a <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "<p>ARN of a <code>LicenseConfiguration</code> object.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "BoxInteger",
        "deprecated" : false,
        "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@return Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Token for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>Token for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LicenseConfigurationArn" : {
          "c2jName" : "LicenseConfigurationArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ARN of a <code>LicenseConfiguration</code> object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ARN of a <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of a <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseConfigurationArn",
          "getterDocumentation" : "/**<p>ARN of a <code>LicenseConfiguration</code> object.</p>\n@return ARN of a <code>LicenseConfiguration</code> object.*/",
          "getterMethodName" : "getLicenseConfigurationArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseConfigurationArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseConfigurationArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LicenseConfigurationArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ARN of a <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of a <code>LicenseConfiguration</code> object.*/",
          "setterMethodName" : "setLicenseConfigurationArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ARN of a <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of a <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "<p>ARN of a <code>LicenseConfiguration</code> object.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "BoxInteger",
          "deprecated" : false,
          "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@return Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Token for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>Token for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "LicenseConfigurationArn" ],
      "shapeName" : "ListAssociationsForLicenseConfigurationRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListAssociationsForLicenseConfigurationRequest",
        "variableName" : "listAssociationsForLicenseConfigurationRequest",
        "variableType" : "ListAssociationsForLicenseConfigurationRequest",
        "documentation" : null,
        "simpleType" : "ListAssociationsForLicenseConfigurationRequest",
        "variableSetterType" : "ListAssociationsForLicenseConfigurationRequest"
      },
      "wrapper" : false
    },
    "ListAssociationsForLicenseConfigurationResult" : {
      "c2jName" : "ListAssociationsForLicenseConfigurationResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "LicenseConfigurationAssociations",
        "c2jShape" : "LicenseConfigurationAssociations",
        "deprecated" : false,
        "documentation" : "<p>Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.</p>\n@param licenseConfigurationAssociations Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseConfigurationAssociations",
        "getterDocumentation" : "/**<p>Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.</p>\n@return Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.*/",
        "getterMethodName" : "getLicenseConfigurationAssociations",
        "getterModel" : {
          "returnType" : "java.util.List<LicenseConfigurationAssociation>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseConfigurationAssociations",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseConfigurationAssociations",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "LicenseConfigurationAssociation",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "LicenseConfigurationAssociation",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "LicenseConfigurationAssociation",
              "variableName" : "member",
              "variableType" : "LicenseConfigurationAssociation",
              "documentation" : "",
              "simpleType" : "LicenseConfigurationAssociation",
              "variableSetterType" : "LicenseConfigurationAssociation"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "LicenseConfigurationAssociation",
              "variableName" : "member",
              "variableType" : "LicenseConfigurationAssociation",
              "documentation" : "",
              "simpleType" : "LicenseConfigurationAssociation",
              "variableSetterType" : "LicenseConfigurationAssociation"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "LicenseConfigurationAssociation",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "LicenseConfigurationAssociation",
          "templateImplType" : "java.util.ArrayList<LicenseConfigurationAssociation>",
          "templateType" : "java.util.List<LicenseConfigurationAssociation>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "LicenseConfigurationAssociations",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.</p>\n@param licenseConfigurationAssociations Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.*/",
        "setterMethodName" : "setLicenseConfigurationAssociations",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<LicenseConfigurationAssociation>",
          "variableName" : "licenseConfigurationAssociations",
          "variableType" : "java.util.List<LicenseConfigurationAssociation>",
          "documentation" : "",
          "simpleType" : "List<LicenseConfigurationAssociation>",
          "variableSetterType" : "java.util.Collection<LicenseConfigurationAssociation>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseConfigurationAssociations(java.util.Collection)} or {@link #withLicenseConfigurationAssociations(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseConfigurationAssociations Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<LicenseConfigurationAssociation>",
          "variableName" : "licenseConfigurationAssociations",
          "variableType" : "java.util.List<LicenseConfigurationAssociation>",
          "documentation" : "<p>Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.</p>",
          "simpleType" : "List<LicenseConfigurationAssociation>",
          "variableSetterType" : "java.util.Collection<LicenseConfigurationAssociation>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Token for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>Token for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LicenseConfigurationAssociations" : {
          "c2jName" : "LicenseConfigurationAssociations",
          "c2jShape" : "LicenseConfigurationAssociations",
          "deprecated" : false,
          "documentation" : "<p>Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.</p>\n@param licenseConfigurationAssociations Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseConfigurationAssociations",
          "getterDocumentation" : "/**<p>Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.</p>\n@return Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.*/",
          "getterMethodName" : "getLicenseConfigurationAssociations",
          "getterModel" : {
            "returnType" : "java.util.List<LicenseConfigurationAssociation>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseConfigurationAssociations",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseConfigurationAssociations",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "LicenseConfigurationAssociation",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "LicenseConfigurationAssociation",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "LicenseConfigurationAssociation",
                "variableName" : "member",
                "variableType" : "LicenseConfigurationAssociation",
                "documentation" : "",
                "simpleType" : "LicenseConfigurationAssociation",
                "variableSetterType" : "LicenseConfigurationAssociation"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "LicenseConfigurationAssociation",
                "variableName" : "member",
                "variableType" : "LicenseConfigurationAssociation",
                "documentation" : "",
                "simpleType" : "LicenseConfigurationAssociation",
                "variableSetterType" : "LicenseConfigurationAssociation"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "LicenseConfigurationAssociation",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "LicenseConfigurationAssociation",
            "templateImplType" : "java.util.ArrayList<LicenseConfigurationAssociation>",
            "templateType" : "java.util.List<LicenseConfigurationAssociation>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "LicenseConfigurationAssociations",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.</p>\n@param licenseConfigurationAssociations Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.*/",
          "setterMethodName" : "setLicenseConfigurationAssociations",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<LicenseConfigurationAssociation>",
            "variableName" : "licenseConfigurationAssociations",
            "variableType" : "java.util.List<LicenseConfigurationAssociation>",
            "documentation" : "",
            "simpleType" : "List<LicenseConfigurationAssociation>",
            "variableSetterType" : "java.util.Collection<LicenseConfigurationAssociation>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseConfigurationAssociations(java.util.Collection)} or {@link #withLicenseConfigurationAssociations(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseConfigurationAssociations Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<LicenseConfigurationAssociation>",
            "variableName" : "licenseConfigurationAssociations",
            "variableType" : "java.util.List<LicenseConfigurationAssociation>",
            "documentation" : "<p>Lists association objects for the license configuration, each containing the association time, number of consumed licenses, resource ARN, resource ID, account ID that owns the resource, resource size, and resource type.</p>",
            "simpleType" : "List<LicenseConfigurationAssociation>",
            "variableSetterType" : "java.util.Collection<LicenseConfigurationAssociation>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Token for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>Token for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListAssociationsForLicenseConfigurationResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListAssociationsForLicenseConfigurationResult",
        "variableName" : "listAssociationsForLicenseConfigurationResult",
        "variableType" : "ListAssociationsForLicenseConfigurationResult",
        "documentation" : null,
        "simpleType" : "ListAssociationsForLicenseConfigurationResult",
        "variableSetterType" : "ListAssociationsForLicenseConfigurationResult"
      },
      "wrapper" : false
    },
    "ListLicenseConfigurationsRequest" : {
      "c2jName" : "ListLicenseConfigurationsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListLicenseConfigurations",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSLicenseManager.ListLicenseConfigurations",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "LicenseConfigurationArns",
        "c2jShape" : "StringList",
        "deprecated" : false,
        "documentation" : "<p>An array of ARNs for the calling account’s license configurations.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of ARNs for the calling account’s license configurations.</p>\n@param licenseConfigurationArns An array of ARNs for the calling account’s license configurations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseConfigurationArns",
        "getterDocumentation" : "/**<p>An array of ARNs for the calling account’s license configurations.</p>\n@return An array of ARNs for the calling account’s license configurations.*/",
        "getterMethodName" : "getLicenseConfigurationArns",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseConfigurationArns",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseConfigurationArns",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "String",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "LicenseConfigurationArns",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An array of ARNs for the calling account’s license configurations.</p>\n@param licenseConfigurationArns An array of ARNs for the calling account’s license configurations.*/",
        "setterMethodName" : "setLicenseConfigurationArns",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "licenseConfigurationArns",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of ARNs for the calling account’s license configurations.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseConfigurationArns(java.util.Collection)} or {@link #withLicenseConfigurationArns(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseConfigurationArns An array of ARNs for the calling account’s license configurations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "licenseConfigurationArns",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>An array of ARNs for the calling account’s license configurations.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "BoxInteger",
        "deprecated" : false,
        "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@return Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Token for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>Token for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Filters",
        "c2jShape" : "Filters",
        "deprecated" : false,
        "documentation" : "<p>One or more filters.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>One or more filters.</p>\n@param filters One or more filters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilters",
        "getterDocumentation" : "/**<p>One or more filters.</p>\n@return One or more filters.*/",
        "getterMethodName" : "getFilters",
        "getterModel" : {
          "returnType" : "java.util.List<Filter>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Filters",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Filters",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Filter",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Filter",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Filter",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Filter",
          "templateImplType" : "java.util.ArrayList<Filter>",
          "templateType" : "java.util.List<Filter>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Filters",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>One or more filters.</p>\n@param filters One or more filters.*/",
        "setterMethodName" : "setFilters",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>One or more filters.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters One or more filters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "<p>One or more filters.</p>",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Filters" : {
          "c2jName" : "Filters",
          "c2jShape" : "Filters",
          "deprecated" : false,
          "documentation" : "<p>One or more filters.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>One or more filters.</p>\n@param filters One or more filters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilters",
          "getterDocumentation" : "/**<p>One or more filters.</p>\n@return One or more filters.*/",
          "getterMethodName" : "getFilters",
          "getterModel" : {
            "returnType" : "java.util.List<Filter>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Filters",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Filters",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Filter",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Filter",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Filter",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Filter",
            "templateImplType" : "java.util.ArrayList<Filter>",
            "templateType" : "java.util.List<Filter>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Filters",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>One or more filters.</p>\n@param filters One or more filters.*/",
          "setterMethodName" : "setFilters",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>One or more filters.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters One or more filters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "<p>One or more filters.</p>",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseConfigurationArns" : {
          "c2jName" : "LicenseConfigurationArns",
          "c2jShape" : "StringList",
          "deprecated" : false,
          "documentation" : "<p>An array of ARNs for the calling account’s license configurations.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of ARNs for the calling account’s license configurations.</p>\n@param licenseConfigurationArns An array of ARNs for the calling account’s license configurations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseConfigurationArns",
          "getterDocumentation" : "/**<p>An array of ARNs for the calling account’s license configurations.</p>\n@return An array of ARNs for the calling account’s license configurations.*/",
          "getterMethodName" : "getLicenseConfigurationArns",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseConfigurationArns",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseConfigurationArns",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "String",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "LicenseConfigurationArns",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An array of ARNs for the calling account’s license configurations.</p>\n@param licenseConfigurationArns An array of ARNs for the calling account’s license configurations.*/",
          "setterMethodName" : "setLicenseConfigurationArns",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "licenseConfigurationArns",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of ARNs for the calling account’s license configurations.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseConfigurationArns(java.util.Collection)} or {@link #withLicenseConfigurationArns(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseConfigurationArns An array of ARNs for the calling account’s license configurations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "licenseConfigurationArns",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>An array of ARNs for the calling account’s license configurations.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "BoxInteger",
          "deprecated" : false,
          "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@return Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Token for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>Token for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListLicenseConfigurationsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListLicenseConfigurationsRequest",
        "variableName" : "listLicenseConfigurationsRequest",
        "variableType" : "ListLicenseConfigurationsRequest",
        "documentation" : null,
        "simpleType" : "ListLicenseConfigurationsRequest",
        "variableSetterType" : "ListLicenseConfigurationsRequest"
      },
      "wrapper" : false
    },
    "ListLicenseConfigurationsResult" : {
      "c2jName" : "ListLicenseConfigurationsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "LicenseConfigurations",
        "c2jShape" : "LicenseConfigurations",
        "deprecated" : false,
        "documentation" : "<p>Array of license configuration objects.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Array of license configuration objects.</p>\n@param licenseConfigurations Array of license configuration objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseConfigurations",
        "getterDocumentation" : "/**<p>Array of license configuration objects.</p>\n@return Array of license configuration objects.*/",
        "getterMethodName" : "getLicenseConfigurations",
        "getterModel" : {
          "returnType" : "java.util.List<LicenseConfiguration>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseConfigurations",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseConfigurations",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "LicenseConfiguration",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "LicenseConfiguration",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "LicenseConfiguration",
              "variableName" : "member",
              "variableType" : "LicenseConfiguration",
              "documentation" : "",
              "simpleType" : "LicenseConfiguration",
              "variableSetterType" : "LicenseConfiguration"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "LicenseConfiguration",
              "variableName" : "member",
              "variableType" : "LicenseConfiguration",
              "documentation" : "",
              "simpleType" : "LicenseConfiguration",
              "variableSetterType" : "LicenseConfiguration"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "LicenseConfiguration",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "LicenseConfiguration",
          "templateImplType" : "java.util.ArrayList<LicenseConfiguration>",
          "templateType" : "java.util.List<LicenseConfiguration>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "LicenseConfigurations",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Array of license configuration objects.</p>\n@param licenseConfigurations Array of license configuration objects.*/",
        "setterMethodName" : "setLicenseConfigurations",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<LicenseConfiguration>",
          "variableName" : "licenseConfigurations",
          "variableType" : "java.util.List<LicenseConfiguration>",
          "documentation" : "",
          "simpleType" : "List<LicenseConfiguration>",
          "variableSetterType" : "java.util.Collection<LicenseConfiguration>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Array of license configuration objects.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseConfigurations(java.util.Collection)} or {@link #withLicenseConfigurations(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseConfigurations Array of license configuration objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<LicenseConfiguration>",
          "variableName" : "licenseConfigurations",
          "variableType" : "java.util.List<LicenseConfiguration>",
          "documentation" : "<p>Array of license configuration objects.</p>",
          "simpleType" : "List<LicenseConfiguration>",
          "variableSetterType" : "java.util.Collection<LicenseConfiguration>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Token for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>Token for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LicenseConfigurations" : {
          "c2jName" : "LicenseConfigurations",
          "c2jShape" : "LicenseConfigurations",
          "deprecated" : false,
          "documentation" : "<p>Array of license configuration objects.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Array of license configuration objects.</p>\n@param licenseConfigurations Array of license configuration objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseConfigurations",
          "getterDocumentation" : "/**<p>Array of license configuration objects.</p>\n@return Array of license configuration objects.*/",
          "getterMethodName" : "getLicenseConfigurations",
          "getterModel" : {
            "returnType" : "java.util.List<LicenseConfiguration>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseConfigurations",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseConfigurations",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "LicenseConfiguration",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "LicenseConfiguration",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "LicenseConfiguration",
                "variableName" : "member",
                "variableType" : "LicenseConfiguration",
                "documentation" : "",
                "simpleType" : "LicenseConfiguration",
                "variableSetterType" : "LicenseConfiguration"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "LicenseConfiguration",
                "variableName" : "member",
                "variableType" : "LicenseConfiguration",
                "documentation" : "",
                "simpleType" : "LicenseConfiguration",
                "variableSetterType" : "LicenseConfiguration"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "LicenseConfiguration",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "LicenseConfiguration",
            "templateImplType" : "java.util.ArrayList<LicenseConfiguration>",
            "templateType" : "java.util.List<LicenseConfiguration>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "LicenseConfigurations",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Array of license configuration objects.</p>\n@param licenseConfigurations Array of license configuration objects.*/",
          "setterMethodName" : "setLicenseConfigurations",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<LicenseConfiguration>",
            "variableName" : "licenseConfigurations",
            "variableType" : "java.util.List<LicenseConfiguration>",
            "documentation" : "",
            "simpleType" : "List<LicenseConfiguration>",
            "variableSetterType" : "java.util.Collection<LicenseConfiguration>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Array of license configuration objects.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseConfigurations(java.util.Collection)} or {@link #withLicenseConfigurations(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseConfigurations Array of license configuration objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<LicenseConfiguration>",
            "variableName" : "licenseConfigurations",
            "variableType" : "java.util.List<LicenseConfiguration>",
            "documentation" : "<p>Array of license configuration objects.</p>",
            "simpleType" : "List<LicenseConfiguration>",
            "variableSetterType" : "java.util.Collection<LicenseConfiguration>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Token for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>Token for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListLicenseConfigurationsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListLicenseConfigurationsResult",
        "variableName" : "listLicenseConfigurationsResult",
        "variableType" : "ListLicenseConfigurationsResult",
        "documentation" : null,
        "simpleType" : "ListLicenseConfigurationsResult",
        "variableSetterType" : "ListLicenseConfigurationsResult"
      },
      "wrapper" : false
    },
    "ListLicenseSpecificationsForResourceRequest" : {
      "c2jName" : "ListLicenseSpecificationsForResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListLicenseSpecificationsForResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSLicenseManager.ListLicenseSpecificationsForResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResourceArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ARN of an AMI or Amazon EC2 instance that has an associated license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ARN of an AMI or Amazon EC2 instance that has an associated license configuration.</p>\n@param resourceArn ARN of an AMI or Amazon EC2 instance that has an associated license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>ARN of an AMI or Amazon EC2 instance that has an associated license configuration.</p>\n@return ARN of an AMI or Amazon EC2 instance that has an associated license configuration.*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ARN of an AMI or Amazon EC2 instance that has an associated license configuration.</p>\n@param resourceArn ARN of an AMI or Amazon EC2 instance that has an associated license configuration.*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ARN of an AMI or Amazon EC2 instance that has an associated license configuration.</p>\n@param resourceArn ARN of an AMI or Amazon EC2 instance that has an associated license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>ARN of an AMI or Amazon EC2 instance that has an associated license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "BoxInteger",
        "deprecated" : false,
        "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@return Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Token for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>Token for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "BoxInteger",
          "deprecated" : false,
          "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@return Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Token for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>Token for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceArn" : {
          "c2jName" : "ResourceArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ARN of an AMI or Amazon EC2 instance that has an associated license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ARN of an AMI or Amazon EC2 instance that has an associated license configuration.</p>\n@param resourceArn ARN of an AMI or Amazon EC2 instance that has an associated license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>ARN of an AMI or Amazon EC2 instance that has an associated license configuration.</p>\n@return ARN of an AMI or Amazon EC2 instance that has an associated license configuration.*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ARN of an AMI or Amazon EC2 instance that has an associated license configuration.</p>\n@param resourceArn ARN of an AMI or Amazon EC2 instance that has an associated license configuration.*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ARN of an AMI or Amazon EC2 instance that has an associated license configuration.</p>\n@param resourceArn ARN of an AMI or Amazon EC2 instance that has an associated license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>ARN of an AMI or Amazon EC2 instance that has an associated license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResourceArn" ],
      "shapeName" : "ListLicenseSpecificationsForResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListLicenseSpecificationsForResourceRequest",
        "variableName" : "listLicenseSpecificationsForResourceRequest",
        "variableType" : "ListLicenseSpecificationsForResourceRequest",
        "documentation" : null,
        "simpleType" : "ListLicenseSpecificationsForResourceRequest",
        "variableSetterType" : "ListLicenseSpecificationsForResourceRequest"
      },
      "wrapper" : false
    },
    "ListLicenseSpecificationsForResourceResult" : {
      "c2jName" : "ListLicenseSpecificationsForResourceResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "LicenseSpecifications",
        "c2jShape" : "LicenseSpecifications",
        "deprecated" : false,
        "documentation" : "<p>License configurations associated with a resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>License configurations associated with a resource.</p>\n@param licenseSpecifications License configurations associated with a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseSpecifications",
        "getterDocumentation" : "/**<p>License configurations associated with a resource.</p>\n@return License configurations associated with a resource.*/",
        "getterMethodName" : "getLicenseSpecifications",
        "getterModel" : {
          "returnType" : "java.util.List<LicenseSpecification>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseSpecifications",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseSpecifications",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "LicenseSpecification",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "LicenseSpecification",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "LicenseSpecification",
              "variableName" : "member",
              "variableType" : "LicenseSpecification",
              "documentation" : "",
              "simpleType" : "LicenseSpecification",
              "variableSetterType" : "LicenseSpecification"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "LicenseSpecification",
              "variableName" : "member",
              "variableType" : "LicenseSpecification",
              "documentation" : "",
              "simpleType" : "LicenseSpecification",
              "variableSetterType" : "LicenseSpecification"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "LicenseSpecification",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "LicenseSpecification",
          "templateImplType" : "java.util.ArrayList<LicenseSpecification>",
          "templateType" : "java.util.List<LicenseSpecification>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "LicenseSpecifications",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>License configurations associated with a resource.</p>\n@param licenseSpecifications License configurations associated with a resource.*/",
        "setterMethodName" : "setLicenseSpecifications",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<LicenseSpecification>",
          "variableName" : "licenseSpecifications",
          "variableType" : "java.util.List<LicenseSpecification>",
          "documentation" : "",
          "simpleType" : "List<LicenseSpecification>",
          "variableSetterType" : "java.util.Collection<LicenseSpecification>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>License configurations associated with a resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseSpecifications(java.util.Collection)} or {@link #withLicenseSpecifications(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseSpecifications License configurations associated with a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<LicenseSpecification>",
          "variableName" : "licenseSpecifications",
          "variableType" : "java.util.List<LicenseSpecification>",
          "documentation" : "<p>License configurations associated with a resource.</p>",
          "simpleType" : "List<LicenseSpecification>",
          "variableSetterType" : "java.util.Collection<LicenseSpecification>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Token for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>Token for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LicenseSpecifications" : {
          "c2jName" : "LicenseSpecifications",
          "c2jShape" : "LicenseSpecifications",
          "deprecated" : false,
          "documentation" : "<p>License configurations associated with a resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>License configurations associated with a resource.</p>\n@param licenseSpecifications License configurations associated with a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseSpecifications",
          "getterDocumentation" : "/**<p>License configurations associated with a resource.</p>\n@return License configurations associated with a resource.*/",
          "getterMethodName" : "getLicenseSpecifications",
          "getterModel" : {
            "returnType" : "java.util.List<LicenseSpecification>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseSpecifications",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseSpecifications",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "LicenseSpecification",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "LicenseSpecification",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "LicenseSpecification",
                "variableName" : "member",
                "variableType" : "LicenseSpecification",
                "documentation" : "",
                "simpleType" : "LicenseSpecification",
                "variableSetterType" : "LicenseSpecification"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "LicenseSpecification",
                "variableName" : "member",
                "variableType" : "LicenseSpecification",
                "documentation" : "",
                "simpleType" : "LicenseSpecification",
                "variableSetterType" : "LicenseSpecification"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "LicenseSpecification",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "LicenseSpecification",
            "templateImplType" : "java.util.ArrayList<LicenseSpecification>",
            "templateType" : "java.util.List<LicenseSpecification>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "LicenseSpecifications",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>License configurations associated with a resource.</p>\n@param licenseSpecifications License configurations associated with a resource.*/",
          "setterMethodName" : "setLicenseSpecifications",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<LicenseSpecification>",
            "variableName" : "licenseSpecifications",
            "variableType" : "java.util.List<LicenseSpecification>",
            "documentation" : "",
            "simpleType" : "List<LicenseSpecification>",
            "variableSetterType" : "java.util.Collection<LicenseSpecification>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>License configurations associated with a resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseSpecifications(java.util.Collection)} or {@link #withLicenseSpecifications(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseSpecifications License configurations associated with a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<LicenseSpecification>",
            "variableName" : "licenseSpecifications",
            "variableType" : "java.util.List<LicenseSpecification>",
            "documentation" : "<p>License configurations associated with a resource.</p>",
            "simpleType" : "List<LicenseSpecification>",
            "variableSetterType" : "java.util.Collection<LicenseSpecification>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Token for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>Token for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListLicenseSpecificationsForResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListLicenseSpecificationsForResourceResult",
        "variableName" : "listLicenseSpecificationsForResourceResult",
        "variableType" : "ListLicenseSpecificationsForResourceResult",
        "documentation" : null,
        "simpleType" : "ListLicenseSpecificationsForResourceResult",
        "variableSetterType" : "ListLicenseSpecificationsForResourceResult"
      },
      "wrapper" : false
    },
    "ListResourceInventoryRequest" : {
      "c2jName" : "ListResourceInventoryRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListResourceInventory",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSLicenseManager.ListResourceInventory",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "MaxResults",
        "c2jShape" : "BoxInteger",
        "deprecated" : false,
        "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@return Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Token for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>Token for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Filters",
        "c2jShape" : "InventoryFilterList",
        "deprecated" : false,
        "documentation" : "<p>One or more filters.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>One or more filters.</p>\n@param filters One or more filters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilters",
        "getterDocumentation" : "/**<p>One or more filters.</p>\n@return One or more filters.*/",
        "getterMethodName" : "getFilters",
        "getterModel" : {
          "returnType" : "java.util.List<InventoryFilter>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Filters",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Filters",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "InventoryFilter",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "InventoryFilter",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "InventoryFilter",
              "variableName" : "member",
              "variableType" : "InventoryFilter",
              "documentation" : "",
              "simpleType" : "InventoryFilter",
              "variableSetterType" : "InventoryFilter"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "InventoryFilter",
              "variableName" : "member",
              "variableType" : "InventoryFilter",
              "documentation" : "",
              "simpleType" : "InventoryFilter",
              "variableSetterType" : "InventoryFilter"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "InventoryFilter",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "InventoryFilter",
          "templateImplType" : "java.util.ArrayList<InventoryFilter>",
          "templateType" : "java.util.List<InventoryFilter>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Filters",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>One or more filters.</p>\n@param filters One or more filters.*/",
        "setterMethodName" : "setFilters",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<InventoryFilter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<InventoryFilter>",
          "documentation" : "",
          "simpleType" : "List<InventoryFilter>",
          "variableSetterType" : "java.util.Collection<InventoryFilter>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>One or more filters.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters One or more filters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<InventoryFilter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<InventoryFilter>",
          "documentation" : "<p>One or more filters.</p>",
          "simpleType" : "List<InventoryFilter>",
          "variableSetterType" : "java.util.Collection<InventoryFilter>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Filters" : {
          "c2jName" : "Filters",
          "c2jShape" : "InventoryFilterList",
          "deprecated" : false,
          "documentation" : "<p>One or more filters.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>One or more filters.</p>\n@param filters One or more filters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilters",
          "getterDocumentation" : "/**<p>One or more filters.</p>\n@return One or more filters.*/",
          "getterMethodName" : "getFilters",
          "getterModel" : {
            "returnType" : "java.util.List<InventoryFilter>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Filters",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Filters",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "InventoryFilter",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "InventoryFilter",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "InventoryFilter",
                "variableName" : "member",
                "variableType" : "InventoryFilter",
                "documentation" : "",
                "simpleType" : "InventoryFilter",
                "variableSetterType" : "InventoryFilter"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "InventoryFilter",
                "variableName" : "member",
                "variableType" : "InventoryFilter",
                "documentation" : "",
                "simpleType" : "InventoryFilter",
                "variableSetterType" : "InventoryFilter"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "InventoryFilter",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "InventoryFilter",
            "templateImplType" : "java.util.ArrayList<InventoryFilter>",
            "templateType" : "java.util.List<InventoryFilter>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Filters",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>One or more filters.</p>\n@param filters One or more filters.*/",
          "setterMethodName" : "setFilters",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<InventoryFilter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<InventoryFilter>",
            "documentation" : "",
            "simpleType" : "List<InventoryFilter>",
            "variableSetterType" : "java.util.Collection<InventoryFilter>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>One or more filters.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters One or more filters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<InventoryFilter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<InventoryFilter>",
            "documentation" : "<p>One or more filters.</p>",
            "simpleType" : "List<InventoryFilter>",
            "variableSetterType" : "java.util.Collection<InventoryFilter>"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "BoxInteger",
          "deprecated" : false,
          "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@return Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Token for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>Token for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResourceInventoryRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResourceInventoryRequest",
        "variableName" : "listResourceInventoryRequest",
        "variableType" : "ListResourceInventoryRequest",
        "documentation" : null,
        "simpleType" : "ListResourceInventoryRequest",
        "variableSetterType" : "ListResourceInventoryRequest"
      },
      "wrapper" : false
    },
    "ListResourceInventoryResult" : {
      "c2jName" : "ListResourceInventoryResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResourceInventoryList",
        "c2jShape" : "ResourceInventoryList",
        "deprecated" : false,
        "documentation" : "<p>The detailed list of resources.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The detailed list of resources.</p>\n@param resourceInventoryList The detailed list of resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceInventoryList",
        "getterDocumentation" : "/**<p>The detailed list of resources.</p>\n@return The detailed list of resources.*/",
        "getterMethodName" : "getResourceInventoryList",
        "getterModel" : {
          "returnType" : "java.util.List<ResourceInventory>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceInventoryList",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceInventoryList",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResourceInventory",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ResourceInventory",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResourceInventory",
              "variableName" : "member",
              "variableType" : "ResourceInventory",
              "documentation" : "",
              "simpleType" : "ResourceInventory",
              "variableSetterType" : "ResourceInventory"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResourceInventory",
              "variableName" : "member",
              "variableType" : "ResourceInventory",
              "documentation" : "",
              "simpleType" : "ResourceInventory",
              "variableSetterType" : "ResourceInventory"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ResourceInventory",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ResourceInventory",
          "templateImplType" : "java.util.ArrayList<ResourceInventory>",
          "templateType" : "java.util.List<ResourceInventory>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ResourceInventoryList",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The detailed list of resources.</p>\n@param resourceInventoryList The detailed list of resources.*/",
        "setterMethodName" : "setResourceInventoryList",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResourceInventory>",
          "variableName" : "resourceInventoryList",
          "variableType" : "java.util.List<ResourceInventory>",
          "documentation" : "",
          "simpleType" : "List<ResourceInventory>",
          "variableSetterType" : "java.util.Collection<ResourceInventory>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The detailed list of resources.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResourceInventoryList(java.util.Collection)} or {@link #withResourceInventoryList(java.util.Collection)} if you want to override the existing values.</p>\n@param resourceInventoryList The detailed list of resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResourceInventory>",
          "variableName" : "resourceInventoryList",
          "variableType" : "java.util.List<ResourceInventory>",
          "documentation" : "<p>The detailed list of resources.</p>",
          "simpleType" : "List<ResourceInventory>",
          "variableSetterType" : "java.util.Collection<ResourceInventory>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Token for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>Token for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Token for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>Token for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceInventoryList" : {
          "c2jName" : "ResourceInventoryList",
          "c2jShape" : "ResourceInventoryList",
          "deprecated" : false,
          "documentation" : "<p>The detailed list of resources.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The detailed list of resources.</p>\n@param resourceInventoryList The detailed list of resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceInventoryList",
          "getterDocumentation" : "/**<p>The detailed list of resources.</p>\n@return The detailed list of resources.*/",
          "getterMethodName" : "getResourceInventoryList",
          "getterModel" : {
            "returnType" : "java.util.List<ResourceInventory>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceInventoryList",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceInventoryList",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResourceInventory",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ResourceInventory",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResourceInventory",
                "variableName" : "member",
                "variableType" : "ResourceInventory",
                "documentation" : "",
                "simpleType" : "ResourceInventory",
                "variableSetterType" : "ResourceInventory"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResourceInventory",
                "variableName" : "member",
                "variableType" : "ResourceInventory",
                "documentation" : "",
                "simpleType" : "ResourceInventory",
                "variableSetterType" : "ResourceInventory"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ResourceInventory",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ResourceInventory",
            "templateImplType" : "java.util.ArrayList<ResourceInventory>",
            "templateType" : "java.util.List<ResourceInventory>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ResourceInventoryList",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The detailed list of resources.</p>\n@param resourceInventoryList The detailed list of resources.*/",
          "setterMethodName" : "setResourceInventoryList",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResourceInventory>",
            "variableName" : "resourceInventoryList",
            "variableType" : "java.util.List<ResourceInventory>",
            "documentation" : "",
            "simpleType" : "List<ResourceInventory>",
            "variableSetterType" : "java.util.Collection<ResourceInventory>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The detailed list of resources.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResourceInventoryList(java.util.Collection)} or {@link #withResourceInventoryList(java.util.Collection)} if you want to override the existing values.</p>\n@param resourceInventoryList The detailed list of resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResourceInventory>",
            "variableName" : "resourceInventoryList",
            "variableType" : "java.util.List<ResourceInventory>",
            "documentation" : "<p>The detailed list of resources.</p>",
            "simpleType" : "List<ResourceInventory>",
            "variableSetterType" : "java.util.Collection<ResourceInventory>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListResourceInventoryResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListResourceInventoryResult",
        "variableName" : "listResourceInventoryResult",
        "variableType" : "ListResourceInventoryResult",
        "documentation" : null,
        "simpleType" : "ListResourceInventoryResult",
        "variableSetterType" : "ListResourceInventoryResult"
      },
      "wrapper" : false
    },
    "ListTagsForResourceRequest" : {
      "c2jName" : "ListTagsForResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListTagsForResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSLicenseManager.ListTagsForResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResourceArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ARN for the resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ARN for the resource.</p>\n@param resourceArn ARN for the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>ARN for the resource.</p>\n@return ARN for the resource.*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ARN for the resource.</p>\n@param resourceArn ARN for the resource.*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ARN for the resource.</p>\n@param resourceArn ARN for the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>ARN for the resource.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceArn" : {
          "c2jName" : "ResourceArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ARN for the resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ARN for the resource.</p>\n@param resourceArn ARN for the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>ARN for the resource.</p>\n@return ARN for the resource.*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ARN for the resource.</p>\n@param resourceArn ARN for the resource.*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ARN for the resource.</p>\n@param resourceArn ARN for the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>ARN for the resource.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResourceArn" ],
      "shapeName" : "ListTagsForResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTagsForResourceRequest",
        "variableName" : "listTagsForResourceRequest",
        "variableType" : "ListTagsForResourceRequest",
        "documentation" : null,
        "simpleType" : "ListTagsForResourceRequest",
        "variableSetterType" : "ListTagsForResourceRequest"
      },
      "wrapper" : false
    },
    "ListTagsForResourceResult" : {
      "c2jName" : "ListTagsForResourceResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Tags",
        "c2jShape" : "TagList",
        "deprecated" : false,
        "documentation" : "<p>List of tags attached to the resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>List of tags attached to the resource.</p>\n@param tags List of tags attached to the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>List of tags attached to the resource.</p>\n@return List of tags attached to the resource.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>List of tags attached to the resource.</p>\n@param tags List of tags attached to the resource.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>List of tags attached to the resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags List of tags attached to the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>List of tags attached to the resource.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "TagList",
          "deprecated" : false,
          "documentation" : "<p>List of tags attached to the resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>List of tags attached to the resource.</p>\n@param tags List of tags attached to the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>List of tags attached to the resource.</p>\n@return List of tags attached to the resource.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>List of tags attached to the resource.</p>\n@param tags List of tags attached to the resource.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>List of tags attached to the resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags List of tags attached to the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>List of tags attached to the resource.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListTagsForResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTagsForResourceResult",
        "variableName" : "listTagsForResourceResult",
        "variableType" : "ListTagsForResourceResult",
        "documentation" : null,
        "simpleType" : "ListTagsForResourceResult",
        "variableSetterType" : "ListTagsForResourceResult"
      },
      "wrapper" : false
    },
    "ListUsageForLicenseConfigurationRequest" : {
      "c2jName" : "ListUsageForLicenseConfigurationRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListUsageForLicenseConfiguration",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSLicenseManager.ListUsageForLicenseConfiguration",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "LicenseConfigurationArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ARN of the targeted <code>LicenseConfiguration</code> object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ARN of the targeted <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the targeted <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseConfigurationArn",
        "getterDocumentation" : "/**<p>ARN of the targeted <code>LicenseConfiguration</code> object.</p>\n@return ARN of the targeted <code>LicenseConfiguration</code> object.*/",
        "getterMethodName" : "getLicenseConfigurationArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseConfigurationArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseConfigurationArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LicenseConfigurationArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ARN of the targeted <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the targeted <code>LicenseConfiguration</code> object.*/",
        "setterMethodName" : "setLicenseConfigurationArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ARN of the targeted <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the targeted <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "<p>ARN of the targeted <code>LicenseConfiguration</code> object.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "BoxInteger",
        "deprecated" : false,
        "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@return Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Token for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>Token for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Filters",
        "c2jShape" : "Filters",
        "deprecated" : false,
        "documentation" : "<p>List of filters to apply.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>List of filters to apply.</p>\n@param filters List of filters to apply.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilters",
        "getterDocumentation" : "/**<p>List of filters to apply.</p>\n@return List of filters to apply.*/",
        "getterMethodName" : "getFilters",
        "getterModel" : {
          "returnType" : "java.util.List<Filter>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Filters",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Filters",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Filter",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Filter",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Filter",
              "variableName" : "member",
              "variableType" : "Filter",
              "documentation" : "",
              "simpleType" : "Filter",
              "variableSetterType" : "Filter"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Filter",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Filter",
          "templateImplType" : "java.util.ArrayList<Filter>",
          "templateType" : "java.util.List<Filter>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Filters",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>List of filters to apply.</p>\n@param filters List of filters to apply.*/",
        "setterMethodName" : "setFilters",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>List of filters to apply.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters List of filters to apply.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Filter>",
          "variableName" : "filters",
          "variableType" : "java.util.List<Filter>",
          "documentation" : "<p>List of filters to apply.</p>",
          "simpleType" : "List<Filter>",
          "variableSetterType" : "java.util.Collection<Filter>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Filters" : {
          "c2jName" : "Filters",
          "c2jShape" : "Filters",
          "deprecated" : false,
          "documentation" : "<p>List of filters to apply.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>List of filters to apply.</p>\n@param filters List of filters to apply.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilters",
          "getterDocumentation" : "/**<p>List of filters to apply.</p>\n@return List of filters to apply.*/",
          "getterMethodName" : "getFilters",
          "getterModel" : {
            "returnType" : "java.util.List<Filter>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Filters",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Filters",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Filter",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Filter",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Filter",
                "variableName" : "member",
                "variableType" : "Filter",
                "documentation" : "",
                "simpleType" : "Filter",
                "variableSetterType" : "Filter"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Filter",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Filter",
            "templateImplType" : "java.util.ArrayList<Filter>",
            "templateType" : "java.util.List<Filter>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Filters",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>List of filters to apply.</p>\n@param filters List of filters to apply.*/",
          "setterMethodName" : "setFilters",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>List of filters to apply.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFilters(java.util.Collection)} or {@link #withFilters(java.util.Collection)} if you want to override the existing values.</p>\n@param filters List of filters to apply.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Filter>",
            "variableName" : "filters",
            "variableType" : "java.util.List<Filter>",
            "documentation" : "<p>List of filters to apply.</p>",
            "simpleType" : "List<Filter>",
            "variableSetterType" : "java.util.Collection<Filter>"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseConfigurationArn" : {
          "c2jName" : "LicenseConfigurationArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ARN of the targeted <code>LicenseConfiguration</code> object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ARN of the targeted <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the targeted <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseConfigurationArn",
          "getterDocumentation" : "/**<p>ARN of the targeted <code>LicenseConfiguration</code> object.</p>\n@return ARN of the targeted <code>LicenseConfiguration</code> object.*/",
          "getterMethodName" : "getLicenseConfigurationArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseConfigurationArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseConfigurationArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LicenseConfigurationArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ARN of the targeted <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the targeted <code>LicenseConfiguration</code> object.*/",
          "setterMethodName" : "setLicenseConfigurationArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ARN of the targeted <code>LicenseConfiguration</code> object.</p>\n@param licenseConfigurationArn ARN of the targeted <code>LicenseConfiguration</code> object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "<p>ARN of the targeted <code>LicenseConfiguration</code> object.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "BoxInteger",
          "deprecated" : false,
          "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@return Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>\n@param maxResults Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>Maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Token for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>Token for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "LicenseConfigurationArn" ],
      "shapeName" : "ListUsageForLicenseConfigurationRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListUsageForLicenseConfigurationRequest",
        "variableName" : "listUsageForLicenseConfigurationRequest",
        "variableType" : "ListUsageForLicenseConfigurationRequest",
        "documentation" : null,
        "simpleType" : "ListUsageForLicenseConfigurationRequest",
        "variableSetterType" : "ListUsageForLicenseConfigurationRequest"
      },
      "wrapper" : false
    },
    "ListUsageForLicenseConfigurationResult" : {
      "c2jName" : "ListUsageForLicenseConfigurationResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "LicenseConfigurationUsageList",
        "c2jShape" : "LicenseConfigurationUsageList",
        "deprecated" : false,
        "documentation" : "<p>An array of <code>LicenseConfigurationUsage</code> objects.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of <code>LicenseConfigurationUsage</code> objects.</p>\n@param licenseConfigurationUsageList An array of <code>LicenseConfigurationUsage</code> objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseConfigurationUsageList",
        "getterDocumentation" : "/**<p>An array of <code>LicenseConfigurationUsage</code> objects.</p>\n@return An array of <code>LicenseConfigurationUsage</code> objects.*/",
        "getterMethodName" : "getLicenseConfigurationUsageList",
        "getterModel" : {
          "returnType" : "java.util.List<LicenseConfigurationUsage>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseConfigurationUsageList",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseConfigurationUsageList",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "LicenseConfigurationUsage",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "LicenseConfigurationUsage",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "LicenseConfigurationUsage",
              "variableName" : "member",
              "variableType" : "LicenseConfigurationUsage",
              "documentation" : "",
              "simpleType" : "LicenseConfigurationUsage",
              "variableSetterType" : "LicenseConfigurationUsage"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "LicenseConfigurationUsage",
              "variableName" : "member",
              "variableType" : "LicenseConfigurationUsage",
              "documentation" : "",
              "simpleType" : "LicenseConfigurationUsage",
              "variableSetterType" : "LicenseConfigurationUsage"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "LicenseConfigurationUsage",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "LicenseConfigurationUsage",
          "templateImplType" : "java.util.ArrayList<LicenseConfigurationUsage>",
          "templateType" : "java.util.List<LicenseConfigurationUsage>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "LicenseConfigurationUsageList",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An array of <code>LicenseConfigurationUsage</code> objects.</p>\n@param licenseConfigurationUsageList An array of <code>LicenseConfigurationUsage</code> objects.*/",
        "setterMethodName" : "setLicenseConfigurationUsageList",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<LicenseConfigurationUsage>",
          "variableName" : "licenseConfigurationUsageList",
          "variableType" : "java.util.List<LicenseConfigurationUsage>",
          "documentation" : "",
          "simpleType" : "List<LicenseConfigurationUsage>",
          "variableSetterType" : "java.util.Collection<LicenseConfigurationUsage>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of <code>LicenseConfigurationUsage</code> objects.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseConfigurationUsageList(java.util.Collection)} or {@link #withLicenseConfigurationUsageList(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseConfigurationUsageList An array of <code>LicenseConfigurationUsage</code> objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<LicenseConfigurationUsage>",
          "variableName" : "licenseConfigurationUsageList",
          "variableType" : "java.util.List<LicenseConfigurationUsage>",
          "documentation" : "<p>An array of <code>LicenseConfigurationUsage</code> objects.</p>",
          "simpleType" : "List<LicenseConfigurationUsage>",
          "variableSetterType" : "java.util.Collection<LicenseConfigurationUsage>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Token for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>Token for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LicenseConfigurationUsageList" : {
          "c2jName" : "LicenseConfigurationUsageList",
          "c2jShape" : "LicenseConfigurationUsageList",
          "deprecated" : false,
          "documentation" : "<p>An array of <code>LicenseConfigurationUsage</code> objects.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of <code>LicenseConfigurationUsage</code> objects.</p>\n@param licenseConfigurationUsageList An array of <code>LicenseConfigurationUsage</code> objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseConfigurationUsageList",
          "getterDocumentation" : "/**<p>An array of <code>LicenseConfigurationUsage</code> objects.</p>\n@return An array of <code>LicenseConfigurationUsage</code> objects.*/",
          "getterMethodName" : "getLicenseConfigurationUsageList",
          "getterModel" : {
            "returnType" : "java.util.List<LicenseConfigurationUsage>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseConfigurationUsageList",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseConfigurationUsageList",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "LicenseConfigurationUsage",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "LicenseConfigurationUsage",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "LicenseConfigurationUsage",
                "variableName" : "member",
                "variableType" : "LicenseConfigurationUsage",
                "documentation" : "",
                "simpleType" : "LicenseConfigurationUsage",
                "variableSetterType" : "LicenseConfigurationUsage"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "LicenseConfigurationUsage",
                "variableName" : "member",
                "variableType" : "LicenseConfigurationUsage",
                "documentation" : "",
                "simpleType" : "LicenseConfigurationUsage",
                "variableSetterType" : "LicenseConfigurationUsage"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "LicenseConfigurationUsage",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "LicenseConfigurationUsage",
            "templateImplType" : "java.util.ArrayList<LicenseConfigurationUsage>",
            "templateType" : "java.util.List<LicenseConfigurationUsage>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "LicenseConfigurationUsageList",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An array of <code>LicenseConfigurationUsage</code> objects.</p>\n@param licenseConfigurationUsageList An array of <code>LicenseConfigurationUsage</code> objects.*/",
          "setterMethodName" : "setLicenseConfigurationUsageList",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<LicenseConfigurationUsage>",
            "variableName" : "licenseConfigurationUsageList",
            "variableType" : "java.util.List<LicenseConfigurationUsage>",
            "documentation" : "",
            "simpleType" : "List<LicenseConfigurationUsage>",
            "variableSetterType" : "java.util.Collection<LicenseConfigurationUsage>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of <code>LicenseConfigurationUsage</code> objects.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseConfigurationUsageList(java.util.Collection)} or {@link #withLicenseConfigurationUsageList(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseConfigurationUsageList An array of <code>LicenseConfigurationUsage</code> objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<LicenseConfigurationUsage>",
            "variableName" : "licenseConfigurationUsageList",
            "variableType" : "java.util.List<LicenseConfigurationUsage>",
            "documentation" : "<p>An array of <code>LicenseConfigurationUsage</code> objects.</p>",
            "simpleType" : "List<LicenseConfigurationUsage>",
            "variableSetterType" : "java.util.Collection<LicenseConfigurationUsage>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Token for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>Token for the next set of results.</p>\n@return Token for the next set of results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Token for the next set of results.</p>\n@param nextToken Token for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>Token for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListUsageForLicenseConfigurationResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListUsageForLicenseConfigurationResult",
        "variableName" : "listUsageForLicenseConfigurationResult",
        "variableType" : "ListUsageForLicenseConfigurationResult",
        "documentation" : null,
        "simpleType" : "ListUsageForLicenseConfigurationResult",
        "variableSetterType" : "ListUsageForLicenseConfigurationResult"
      },
      "wrapper" : false
    },
    "ManagedResourceSummary" : {
      "c2jName" : "ManagedResourceSummary",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Summary for a resource.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResourceType",
        "c2jShape" : "ResourceType",
        "deprecated" : false,
        "documentation" : "<p>Type of resource associated with a license (instance, host, or AMI).</p>",
        "enumType" : "ResourceType",
        "fluentSetterDocumentation" : "/**<p>Type of resource associated with a license (instance, host, or AMI).</p>\n@param resourceType Type of resource associated with a license (instance, host, or AMI).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**<p>Type of resource associated with a license (instance, host, or AMI).</p>\n@return Type of resource associated with a license (instance, host, or AMI).\n@see ResourceType*/",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Type of resource associated with a license (instance, host, or AMI).</p>\n@param resourceType Type of resource associated with a license (instance, host, or AMI).\n@see ResourceType*/",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Type of resource associated with a license (instance, host, or AMI).</p>\n@param resourceType Type of resource associated with a license (instance, host, or AMI).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "<p>Type of resource associated with a license (instance, host, or AMI).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "AssociationCount",
        "c2jShape" : "BoxLong",
        "deprecated" : false,
        "documentation" : "<p>Number of resources associated with licenses.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Number of resources associated with licenses.</p>\n@param associationCount Number of resources associated with licenses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAssociationCount",
        "getterDocumentation" : "/**<p>Number of resources associated with licenses.</p>\n@return Number of resources associated with licenses.*/",
        "getterMethodName" : "getAssociationCount",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "AssociationCount",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "AssociationCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "AssociationCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Number of resources associated with licenses.</p>\n@param associationCount Number of resources associated with licenses.*/",
        "setterMethodName" : "setAssociationCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "associationCount",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Number of resources associated with licenses.</p>\n@param associationCount Number of resources associated with licenses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "associationCount",
          "variableType" : "Long",
          "documentation" : "<p>Number of resources associated with licenses.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AssociationCount" : {
          "c2jName" : "AssociationCount",
          "c2jShape" : "BoxLong",
          "deprecated" : false,
          "documentation" : "<p>Number of resources associated with licenses.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Number of resources associated with licenses.</p>\n@param associationCount Number of resources associated with licenses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAssociationCount",
          "getterDocumentation" : "/**<p>Number of resources associated with licenses.</p>\n@return Number of resources associated with licenses.*/",
          "getterMethodName" : "getAssociationCount",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "AssociationCount",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "AssociationCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "AssociationCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Number of resources associated with licenses.</p>\n@param associationCount Number of resources associated with licenses.*/",
          "setterMethodName" : "setAssociationCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "associationCount",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Number of resources associated with licenses.</p>\n@param associationCount Number of resources associated with licenses.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "associationCount",
            "variableType" : "Long",
            "documentation" : "<p>Number of resources associated with licenses.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "ResourceType",
          "deprecated" : false,
          "documentation" : "<p>Type of resource associated with a license (instance, host, or AMI).</p>",
          "enumType" : "ResourceType",
          "fluentSetterDocumentation" : "/**<p>Type of resource associated with a license (instance, host, or AMI).</p>\n@param resourceType Type of resource associated with a license (instance, host, or AMI).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**<p>Type of resource associated with a license (instance, host, or AMI).</p>\n@return Type of resource associated with a license (instance, host, or AMI).\n@see ResourceType*/",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Type of resource associated with a license (instance, host, or AMI).</p>\n@param resourceType Type of resource associated with a license (instance, host, or AMI).\n@see ResourceType*/",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Type of resource associated with a license (instance, host, or AMI).</p>\n@param resourceType Type of resource associated with a license (instance, host, or AMI).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "<p>Type of resource associated with a license (instance, host, or AMI).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ManagedResourceSummary",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ManagedResourceSummary",
        "variableName" : "managedResourceSummary",
        "variableType" : "ManagedResourceSummary",
        "documentation" : null,
        "simpleType" : "ManagedResourceSummary",
        "variableSetterType" : "ManagedResourceSummary"
      },
      "wrapper" : false
    },
    "OrganizationConfiguration" : {
      "c2jName" : "OrganizationConfiguration",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Object containing configuration information for AWS Organizations.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "EnableIntegration",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Flag to activate AWS Organization integration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Flag to activate AWS Organization integration.</p>\n@param enableIntegration Flag to activate AWS Organization integration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withEnableIntegration",
        "getterDocumentation" : "/**<p>Flag to activate AWS Organization integration.</p>\n@return Flag to activate AWS Organization integration.*/",
        "getterMethodName" : "getEnableIntegration",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "EnableIntegration",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "EnableIntegration",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "EnableIntegration",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Flag to activate AWS Organization integration.</p>\n@param enableIntegration Flag to activate AWS Organization integration.*/",
        "setterMethodName" : "setEnableIntegration",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "enableIntegration",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Flag to activate AWS Organization integration.</p>\n@param enableIntegration Flag to activate AWS Organization integration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "enableIntegration",
          "variableType" : "Boolean",
          "documentation" : "<p>Flag to activate AWS Organization integration.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "EnableIntegration" : {
          "c2jName" : "EnableIntegration",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Flag to activate AWS Organization integration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Flag to activate AWS Organization integration.</p>\n@param enableIntegration Flag to activate AWS Organization integration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withEnableIntegration",
          "getterDocumentation" : "/**<p>Flag to activate AWS Organization integration.</p>\n@return Flag to activate AWS Organization integration.*/",
          "getterMethodName" : "getEnableIntegration",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "EnableIntegration",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "EnableIntegration",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "EnableIntegration",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Flag to activate AWS Organization integration.</p>\n@param enableIntegration Flag to activate AWS Organization integration.*/",
          "setterMethodName" : "setEnableIntegration",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "enableIntegration",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Flag to activate AWS Organization integration.</p>\n@param enableIntegration Flag to activate AWS Organization integration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "enableIntegration",
            "variableType" : "Boolean",
            "documentation" : "<p>Flag to activate AWS Organization integration.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "EnableIntegration" ],
      "shapeName" : "OrganizationConfiguration",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "OrganizationConfiguration",
        "variableName" : "organizationConfiguration",
        "variableType" : "OrganizationConfiguration",
        "documentation" : null,
        "simpleType" : "OrganizationConfiguration",
        "variableSetterType" : "OrganizationConfiguration"
      },
      "wrapper" : false
    },
    "RateLimitExceededException" : {
      "c2jName" : "RateLimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
      "enums" : null,
      "errorCode" : "RateLimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RateLimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "RateLimitExceededException",
        "variableName" : "rateLimitExceededException",
        "variableType" : "RateLimitExceededException",
        "documentation" : null,
        "simpleType" : "RateLimitExceededException",
        "variableSetterType" : "RateLimitExceededException"
      },
      "wrapper" : false
    },
    "ResourceInventory" : {
      "c2jName" : "ResourceInventory",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A set of attributes that describe a resource.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ResourceId",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Unique ID of the resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Unique ID of the resource.</p>\n@param resourceId Unique ID of the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceId",
        "getterDocumentation" : "/**<p>Unique ID of the resource.</p>\n@return Unique ID of the resource.*/",
        "getterMethodName" : "getResourceId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Unique ID of the resource.</p>\n@param resourceId Unique ID of the resource.*/",
        "setterMethodName" : "setResourceId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Unique ID of the resource.</p>\n@param resourceId Unique ID of the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceId",
          "variableType" : "String",
          "documentation" : "<p>Unique ID of the resource.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResourceType",
        "c2jShape" : "ResourceType",
        "deprecated" : false,
        "documentation" : "<p>The type of resource.</p>",
        "enumType" : "ResourceType",
        "fluentSetterDocumentation" : "/**<p>The type of resource.</p>\n@param resourceType The type of resource.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**<p>The type of resource.</p>\n@return The type of resource.\n@see ResourceType*/",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The type of resource.</p>\n@param resourceType The type of resource.\n@see ResourceType*/",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The type of resource.</p>\n@param resourceType The type of resource.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "<p>The type of resource.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResourceArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the resource.</p>\n@param resourceArn The ARN of the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>The ARN of the resource.</p>\n@return The ARN of the resource.*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ARN of the resource.</p>\n@param resourceArn The ARN of the resource.*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the resource.</p>\n@param resourceArn The ARN of the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the resource.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Platform",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>The platform of the resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The platform of the resource.</p>\n@param platform The platform of the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPlatform",
        "getterDocumentation" : "/**<p>The platform of the resource.</p>\n@return The platform of the resource.*/",
        "getterMethodName" : "getPlatform",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Platform",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Platform",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Platform",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The platform of the resource.</p>\n@param platform The platform of the resource.*/",
        "setterMethodName" : "setPlatform",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "platform",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The platform of the resource.</p>\n@param platform The platform of the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "platform",
          "variableType" : "String",
          "documentation" : "<p>The platform of the resource.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "PlatformVersion",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Platform version of the resource in the inventory.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Platform version of the resource in the inventory.</p>\n@param platformVersion Platform version of the resource in the inventory.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPlatformVersion",
        "getterDocumentation" : "/**<p>Platform version of the resource in the inventory.</p>\n@return Platform version of the resource in the inventory.*/",
        "getterMethodName" : "getPlatformVersion",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "PlatformVersion",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "PlatformVersion",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PlatformVersion",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Platform version of the resource in the inventory.</p>\n@param platformVersion Platform version of the resource in the inventory.*/",
        "setterMethodName" : "setPlatformVersion",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "platformVersion",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Platform version of the resource in the inventory.</p>\n@param platformVersion Platform version of the resource in the inventory.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "platformVersion",
          "variableType" : "String",
          "documentation" : "<p>Platform version of the resource in the inventory.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResourceOwningAccountId",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Unique ID of the account that owns the resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Unique ID of the account that owns the resource.</p>\n@param resourceOwningAccountId Unique ID of the account that owns the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceOwningAccountId",
        "getterDocumentation" : "/**<p>Unique ID of the account that owns the resource.</p>\n@return Unique ID of the account that owns the resource.*/",
        "getterMethodName" : "getResourceOwningAccountId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceOwningAccountId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceOwningAccountId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceOwningAccountId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Unique ID of the account that owns the resource.</p>\n@param resourceOwningAccountId Unique ID of the account that owns the resource.*/",
        "setterMethodName" : "setResourceOwningAccountId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceOwningAccountId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Unique ID of the account that owns the resource.</p>\n@param resourceOwningAccountId Unique ID of the account that owns the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceOwningAccountId",
          "variableType" : "String",
          "documentation" : "<p>Unique ID of the account that owns the resource.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Platform" : {
          "c2jName" : "Platform",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>The platform of the resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The platform of the resource.</p>\n@param platform The platform of the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPlatform",
          "getterDocumentation" : "/**<p>The platform of the resource.</p>\n@return The platform of the resource.*/",
          "getterMethodName" : "getPlatform",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Platform",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Platform",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Platform",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The platform of the resource.</p>\n@param platform The platform of the resource.*/",
          "setterMethodName" : "setPlatform",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "platform",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The platform of the resource.</p>\n@param platform The platform of the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "platform",
            "variableType" : "String",
            "documentation" : "<p>The platform of the resource.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PlatformVersion" : {
          "c2jName" : "PlatformVersion",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Platform version of the resource in the inventory.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Platform version of the resource in the inventory.</p>\n@param platformVersion Platform version of the resource in the inventory.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPlatformVersion",
          "getterDocumentation" : "/**<p>Platform version of the resource in the inventory.</p>\n@return Platform version of the resource in the inventory.*/",
          "getterMethodName" : "getPlatformVersion",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "PlatformVersion",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "PlatformVersion",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PlatformVersion",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Platform version of the resource in the inventory.</p>\n@param platformVersion Platform version of the resource in the inventory.*/",
          "setterMethodName" : "setPlatformVersion",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "platformVersion",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Platform version of the resource in the inventory.</p>\n@param platformVersion Platform version of the resource in the inventory.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "platformVersion",
            "variableType" : "String",
            "documentation" : "<p>Platform version of the resource in the inventory.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceArn" : {
          "c2jName" : "ResourceArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the resource.</p>\n@param resourceArn The ARN of the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>The ARN of the resource.</p>\n@return The ARN of the resource.*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ARN of the resource.</p>\n@param resourceArn The ARN of the resource.*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the resource.</p>\n@param resourceArn The ARN of the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the resource.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceId" : {
          "c2jName" : "ResourceId",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Unique ID of the resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Unique ID of the resource.</p>\n@param resourceId Unique ID of the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceId",
          "getterDocumentation" : "/**<p>Unique ID of the resource.</p>\n@return Unique ID of the resource.*/",
          "getterMethodName" : "getResourceId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Unique ID of the resource.</p>\n@param resourceId Unique ID of the resource.*/",
          "setterMethodName" : "setResourceId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Unique ID of the resource.</p>\n@param resourceId Unique ID of the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceId",
            "variableType" : "String",
            "documentation" : "<p>Unique ID of the resource.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceOwningAccountId" : {
          "c2jName" : "ResourceOwningAccountId",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Unique ID of the account that owns the resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Unique ID of the account that owns the resource.</p>\n@param resourceOwningAccountId Unique ID of the account that owns the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceOwningAccountId",
          "getterDocumentation" : "/**<p>Unique ID of the account that owns the resource.</p>\n@return Unique ID of the account that owns the resource.*/",
          "getterMethodName" : "getResourceOwningAccountId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceOwningAccountId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceOwningAccountId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceOwningAccountId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Unique ID of the account that owns the resource.</p>\n@param resourceOwningAccountId Unique ID of the account that owns the resource.*/",
          "setterMethodName" : "setResourceOwningAccountId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceOwningAccountId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Unique ID of the account that owns the resource.</p>\n@param resourceOwningAccountId Unique ID of the account that owns the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceOwningAccountId",
            "variableType" : "String",
            "documentation" : "<p>Unique ID of the account that owns the resource.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "ResourceType",
          "deprecated" : false,
          "documentation" : "<p>The type of resource.</p>",
          "enumType" : "ResourceType",
          "fluentSetterDocumentation" : "/**<p>The type of resource.</p>\n@param resourceType The type of resource.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**<p>The type of resource.</p>\n@return The type of resource.\n@see ResourceType*/",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The type of resource.</p>\n@param resourceType The type of resource.\n@see ResourceType*/",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The type of resource.</p>\n@param resourceType The type of resource.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ResourceType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "<p>The type of resource.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceInventory",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResourceInventory",
        "variableName" : "resourceInventory",
        "variableType" : "ResourceInventory",
        "documentation" : null,
        "simpleType" : "ResourceInventory",
        "variableSetterType" : "ResourceInventory"
      },
      "wrapper" : false
    },
    "ResourceLimitExceededException" : {
      "c2jName" : "ResourceLimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Your resource limits have been exceeded.</p>",
      "enums" : null,
      "errorCode" : "ResourceLimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceLimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResourceLimitExceededException",
        "variableName" : "resourceLimitExceededException",
        "variableType" : "ResourceLimitExceededException",
        "documentation" : null,
        "simpleType" : "ResourceLimitExceededException",
        "variableSetterType" : "ResourceLimitExceededException"
      },
      "wrapper" : false
    },
    "ResourceType" : {
      "c2jName" : "ResourceType",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "EC2_INSTANCE",
        "value" : "EC2_INSTANCE"
      }, {
        "name" : "EC2_HOST",
        "value" : "EC2_HOST"
      }, {
        "name" : "EC2_AMI",
        "value" : "EC2_AMI"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceType",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResourceType",
        "variableName" : "resourceType",
        "variableType" : "ResourceType",
        "documentation" : null,
        "simpleType" : "ResourceType",
        "variableSetterType" : "ResourceType"
      },
      "wrapper" : false
    },
    "ServerInternalException" : {
      "c2jName" : "ServerInternalException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The server experienced an internal error. Try again.</p>",
      "enums" : null,
      "errorCode" : "ServerInternalException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ServerInternalException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ServerInternalException",
        "variableName" : "serverInternalException",
        "variableType" : "ServerInternalException",
        "documentation" : null,
        "simpleType" : "ServerInternalException",
        "variableSetterType" : "ServerInternalException"
      },
      "wrapper" : false
    },
    "Tag" : {
      "c2jName" : "Tag",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Tag for a resource in a key-value format.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Key",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Key for the resource tag.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Key for the resource tag.</p>\n@param key Key for the resource tag.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withKey",
        "getterDocumentation" : "/**<p>Key for the resource tag.</p>\n@return Key for the resource tag.*/",
        "getterMethodName" : "getKey",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Key",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Key",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Key",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Key for the resource tag.</p>\n@param key Key for the resource tag.*/",
        "setterMethodName" : "setKey",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "key",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Key for the resource tag.</p>\n@param key Key for the resource tag.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "key",
          "variableType" : "String",
          "documentation" : "<p>Key for the resource tag.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Value",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Value for the resource tag.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Value for the resource tag.</p>\n@param value Value for the resource tag.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValue",
        "getterDocumentation" : "/**<p>Value for the resource tag.</p>\n@return Value for the resource tag.*/",
        "getterMethodName" : "getValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Value",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Value for the resource tag.</p>\n@param value Value for the resource tag.*/",
        "setterMethodName" : "setValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Value for the resource tag.</p>\n@param value Value for the resource tag.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "<p>Value for the resource tag.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Key" : {
          "c2jName" : "Key",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Key for the resource tag.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Key for the resource tag.</p>\n@param key Key for the resource tag.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withKey",
          "getterDocumentation" : "/**<p>Key for the resource tag.</p>\n@return Key for the resource tag.*/",
          "getterMethodName" : "getKey",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Key",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Key",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Key",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Key for the resource tag.</p>\n@param key Key for the resource tag.*/",
          "setterMethodName" : "setKey",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "key",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Key for the resource tag.</p>\n@param key Key for the resource tag.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "key",
            "variableType" : "String",
            "documentation" : "<p>Key for the resource tag.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Value for the resource tag.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Value for the resource tag.</p>\n@param value Value for the resource tag.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValue",
          "getterDocumentation" : "/**<p>Value for the resource tag.</p>\n@return Value for the resource tag.*/",
          "getterMethodName" : "getValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Value",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Value for the resource tag.</p>\n@param value Value for the resource tag.*/",
          "setterMethodName" : "setValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Value for the resource tag.</p>\n@param value Value for the resource tag.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "<p>Value for the resource tag.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Tag",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Tag",
        "variableName" : "tag",
        "variableType" : "Tag",
        "documentation" : null,
        "simpleType" : "Tag",
        "variableSetterType" : "Tag"
      },
      "wrapper" : false
    },
    "TagResourceRequest" : {
      "c2jName" : "TagResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "TagResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSLicenseManager.TagResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResourceArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Resource of the ARN to be tagged.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Resource of the ARN to be tagged.</p>\n@param resourceArn Resource of the ARN to be tagged.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>Resource of the ARN to be tagged.</p>\n@return Resource of the ARN to be tagged.*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Resource of the ARN to be tagged.</p>\n@param resourceArn Resource of the ARN to be tagged.*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Resource of the ARN to be tagged.</p>\n@param resourceArn Resource of the ARN to be tagged.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>Resource of the ARN to be tagged.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Tags",
        "c2jShape" : "TagList",
        "deprecated" : false,
        "documentation" : "<p>Names of the tags to attach to the resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Names of the tags to attach to the resource.</p>\n@param tags Names of the tags to attach to the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>Names of the tags to attach to the resource.</p>\n@return Names of the tags to attach to the resource.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Names of the tags to attach to the resource.</p>\n@param tags Names of the tags to attach to the resource.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Names of the tags to attach to the resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags Names of the tags to attach to the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>Names of the tags to attach to the resource.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceArn" : {
          "c2jName" : "ResourceArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Resource of the ARN to be tagged.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Resource of the ARN to be tagged.</p>\n@param resourceArn Resource of the ARN to be tagged.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>Resource of the ARN to be tagged.</p>\n@return Resource of the ARN to be tagged.*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Resource of the ARN to be tagged.</p>\n@param resourceArn Resource of the ARN to be tagged.*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Resource of the ARN to be tagged.</p>\n@param resourceArn Resource of the ARN to be tagged.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>Resource of the ARN to be tagged.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "TagList",
          "deprecated" : false,
          "documentation" : "<p>Names of the tags to attach to the resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Names of the tags to attach to the resource.</p>\n@param tags Names of the tags to attach to the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>Names of the tags to attach to the resource.</p>\n@return Names of the tags to attach to the resource.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Names of the tags to attach to the resource.</p>\n@param tags Names of the tags to attach to the resource.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Names of the tags to attach to the resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags Names of the tags to attach to the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>Names of the tags to attach to the resource.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResourceArn", "Tags" ],
      "shapeName" : "TagResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TagResourceRequest",
        "variableName" : "tagResourceRequest",
        "variableType" : "TagResourceRequest",
        "documentation" : null,
        "simpleType" : "TagResourceRequest",
        "variableSetterType" : "TagResourceRequest"
      },
      "wrapper" : false
    },
    "TagResourceResult" : {
      "c2jName" : "TagResourceResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TagResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TagResourceResult",
        "variableName" : "tagResourceResult",
        "variableType" : "TagResourceResult",
        "documentation" : null,
        "simpleType" : "TagResourceResult",
        "variableSetterType" : "TagResourceResult"
      },
      "wrapper" : false
    },
    "UntagResourceRequest" : {
      "c2jName" : "UntagResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UntagResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSLicenseManager.UntagResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResourceArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ARN of the resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ARN of the resource.</p>\n@param resourceArn ARN of the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>ARN of the resource.</p>\n@return ARN of the resource.*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ARN of the resource.</p>\n@param resourceArn ARN of the resource.*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ARN of the resource.</p>\n@param resourceArn ARN of the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>ARN of the resource.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TagKeys",
        "c2jShape" : "TagKeyList",
        "deprecated" : false,
        "documentation" : "<p>List keys identifying tags to remove.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>List keys identifying tags to remove.</p>\n@param tagKeys List keys identifying tags to remove.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTagKeys",
        "getterDocumentation" : "/**<p>List keys identifying tags to remove.</p>\n@return List keys identifying tags to remove.*/",
        "getterMethodName" : "getTagKeys",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TagKeys",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TagKeys",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "String",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "TagKeys",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>List keys identifying tags to remove.</p>\n@param tagKeys List keys identifying tags to remove.*/",
        "setterMethodName" : "setTagKeys",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "tagKeys",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>List keys identifying tags to remove.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTagKeys(java.util.Collection)} or {@link #withTagKeys(java.util.Collection)} if you want to override the existing values.</p>\n@param tagKeys List keys identifying tags to remove.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "tagKeys",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>List keys identifying tags to remove.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceArn" : {
          "c2jName" : "ResourceArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ARN of the resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ARN of the resource.</p>\n@param resourceArn ARN of the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>ARN of the resource.</p>\n@return ARN of the resource.*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ARN of the resource.</p>\n@param resourceArn ARN of the resource.*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ARN of the resource.</p>\n@param resourceArn ARN of the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>ARN of the resource.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TagKeys" : {
          "c2jName" : "TagKeys",
          "c2jShape" : "TagKeyList",
          "deprecated" : false,
          "documentation" : "<p>List keys identifying tags to remove.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>List keys identifying tags to remove.</p>\n@param tagKeys List keys identifying tags to remove.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTagKeys",
          "getterDocumentation" : "/**<p>List keys identifying tags to remove.</p>\n@return List keys identifying tags to remove.*/",
          "getterMethodName" : "getTagKeys",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TagKeys",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TagKeys",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "String",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "TagKeys",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>List keys identifying tags to remove.</p>\n@param tagKeys List keys identifying tags to remove.*/",
          "setterMethodName" : "setTagKeys",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "tagKeys",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>List keys identifying tags to remove.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTagKeys(java.util.Collection)} or {@link #withTagKeys(java.util.Collection)} if you want to override the existing values.</p>\n@param tagKeys List keys identifying tags to remove.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "tagKeys",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>List keys identifying tags to remove.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResourceArn", "TagKeys" ],
      "shapeName" : "UntagResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UntagResourceRequest",
        "variableName" : "untagResourceRequest",
        "variableType" : "UntagResourceRequest",
        "documentation" : null,
        "simpleType" : "UntagResourceRequest",
        "variableSetterType" : "UntagResourceRequest"
      },
      "wrapper" : false
    },
    "UntagResourceResult" : {
      "c2jName" : "UntagResourceResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UntagResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UntagResourceResult",
        "variableName" : "untagResourceResult",
        "variableType" : "UntagResourceResult",
        "documentation" : null,
        "simpleType" : "UntagResourceResult",
        "variableSetterType" : "UntagResourceResult"
      },
      "wrapper" : false
    },
    "UpdateLicenseConfigurationRequest" : {
      "c2jName" : "UpdateLicenseConfigurationRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateLicenseConfiguration",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSLicenseManager.UpdateLicenseConfiguration",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "LicenseConfigurationArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ARN for a license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ARN for a license configuration.</p>\n@param licenseConfigurationArn ARN for a license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseConfigurationArn",
        "getterDocumentation" : "/**<p>ARN for a license configuration.</p>\n@return ARN for a license configuration.*/",
        "getterMethodName" : "getLicenseConfigurationArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseConfigurationArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseConfigurationArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LicenseConfigurationArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ARN for a license configuration.</p>\n@param licenseConfigurationArn ARN for a license configuration.*/",
        "setterMethodName" : "setLicenseConfigurationArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ARN for a license configuration.</p>\n@param licenseConfigurationArn ARN for a license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationArn",
          "variableType" : "String",
          "documentation" : "<p>ARN for a license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseConfigurationStatus",
        "c2jShape" : "LicenseConfigurationStatus",
        "deprecated" : false,
        "documentation" : "<p>New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).</p>",
        "enumType" : "LicenseConfigurationStatus",
        "fluentSetterDocumentation" : "/**<p>New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).</p>\n@param licenseConfigurationStatus New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).\n@return Returns a reference to this object so that method calls can be chained together.\n@see LicenseConfigurationStatus*/",
        "fluentSetterMethodName" : "withLicenseConfigurationStatus",
        "getterDocumentation" : "/**<p>New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).</p>\n@return New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).\n@see LicenseConfigurationStatus*/",
        "getterMethodName" : "getLicenseConfigurationStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseConfigurationStatus",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseConfigurationStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LicenseConfigurationStatus",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).</p>\n@param licenseConfigurationStatus New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).\n@see LicenseConfigurationStatus*/",
        "setterMethodName" : "setLicenseConfigurationStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).</p>\n@param licenseConfigurationStatus New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).\n@return Returns a reference to this object so that method calls can be chained together.\n@see LicenseConfigurationStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "licenseConfigurationStatus",
          "variableType" : "String",
          "documentation" : "<p>New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseRules",
        "c2jShape" : "StringList",
        "deprecated" : false,
        "documentation" : "<p>List of flexible text strings designating license rules.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>List of flexible text strings designating license rules.</p>\n@param licenseRules List of flexible text strings designating license rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseRules",
        "getterDocumentation" : "/**<p>List of flexible text strings designating license rules.</p>\n@return List of flexible text strings designating license rules.*/",
        "getterMethodName" : "getLicenseRules",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseRules",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseRules",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "String",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "LicenseRules",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>List of flexible text strings designating license rules.</p>\n@param licenseRules List of flexible text strings designating license rules.*/",
        "setterMethodName" : "setLicenseRules",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "licenseRules",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>List of flexible text strings designating license rules.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseRules(java.util.Collection)} or {@link #withLicenseRules(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseRules List of flexible text strings designating license rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "licenseRules",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>List of flexible text strings designating license rules.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseCount",
        "c2jShape" : "BoxLong",
        "deprecated" : false,
        "documentation" : "<p>New number of licenses managed by the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>New number of licenses managed by the license configuration.</p>\n@param licenseCount New number of licenses managed by the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseCount",
        "getterDocumentation" : "/**<p>New number of licenses managed by the license configuration.</p>\n@return New number of licenses managed by the license configuration.*/",
        "getterMethodName" : "getLicenseCount",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseCount",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "LicenseCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>New number of licenses managed by the license configuration.</p>\n@param licenseCount New number of licenses managed by the license configuration.*/",
        "setterMethodName" : "setLicenseCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "licenseCount",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>New number of licenses managed by the license configuration.</p>\n@param licenseCount New number of licenses managed by the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "licenseCount",
          "variableType" : "Long",
          "documentation" : "<p>New number of licenses managed by the license configuration.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LicenseCountHardLimit",
        "c2jShape" : "BoxBoolean",
        "deprecated" : false,
        "documentation" : "<p>Sets the number of available licenses as a hard limit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLicenseCountHardLimit",
        "getterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@return Sets the number of available licenses as a hard limit.*/",
        "getterMethodName" : "getLicenseCountHardLimit",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LicenseCountHardLimit",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LicenseCountHardLimit",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "LicenseCountHardLimit",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.*/",
        "setterMethodName" : "setLicenseCountHardLimit",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "licenseCountHardLimit",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "licenseCountHardLimit",
          "variableType" : "Boolean",
          "documentation" : "<p>Sets the number of available licenses as a hard limit.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>New name of the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>New name of the license configuration.</p>\n@param name New name of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>New name of the license configuration.</p>\n@return New name of the license configuration.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>New name of the license configuration.</p>\n@param name New name of the license configuration.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>New name of the license configuration.</p>\n@param name New name of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>New name of the license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Description",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>New human-friendly description of the license configuration.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>New human-friendly description of the license configuration.</p>\n@param description New human-friendly description of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDescription",
        "getterDocumentation" : "/**<p>New human-friendly description of the license configuration.</p>\n@return New human-friendly description of the license configuration.*/",
        "getterMethodName" : "getDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Description",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Description",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Description",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>New human-friendly description of the license configuration.</p>\n@param description New human-friendly description of the license configuration.*/",
        "setterMethodName" : "setDescription",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>New human-friendly description of the license configuration.</p>\n@param description New human-friendly description of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "<p>New human-friendly description of the license configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Description" : {
          "c2jName" : "Description",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>New human-friendly description of the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>New human-friendly description of the license configuration.</p>\n@param description New human-friendly description of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDescription",
          "getterDocumentation" : "/**<p>New human-friendly description of the license configuration.</p>\n@return New human-friendly description of the license configuration.*/",
          "getterMethodName" : "getDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Description",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Description",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Description",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>New human-friendly description of the license configuration.</p>\n@param description New human-friendly description of the license configuration.*/",
          "setterMethodName" : "setDescription",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>New human-friendly description of the license configuration.</p>\n@param description New human-friendly description of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "<p>New human-friendly description of the license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseConfigurationArn" : {
          "c2jName" : "LicenseConfigurationArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ARN for a license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ARN for a license configuration.</p>\n@param licenseConfigurationArn ARN for a license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseConfigurationArn",
          "getterDocumentation" : "/**<p>ARN for a license configuration.</p>\n@return ARN for a license configuration.*/",
          "getterMethodName" : "getLicenseConfigurationArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseConfigurationArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseConfigurationArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LicenseConfigurationArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ARN for a license configuration.</p>\n@param licenseConfigurationArn ARN for a license configuration.*/",
          "setterMethodName" : "setLicenseConfigurationArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ARN for a license configuration.</p>\n@param licenseConfigurationArn ARN for a license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationArn",
            "variableType" : "String",
            "documentation" : "<p>ARN for a license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseConfigurationStatus" : {
          "c2jName" : "LicenseConfigurationStatus",
          "c2jShape" : "LicenseConfigurationStatus",
          "deprecated" : false,
          "documentation" : "<p>New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).</p>",
          "enumType" : "LicenseConfigurationStatus",
          "fluentSetterDocumentation" : "/**<p>New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).</p>\n@param licenseConfigurationStatus New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).\n@return Returns a reference to this object so that method calls can be chained together.\n@see LicenseConfigurationStatus*/",
          "fluentSetterMethodName" : "withLicenseConfigurationStatus",
          "getterDocumentation" : "/**<p>New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).</p>\n@return New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).\n@see LicenseConfigurationStatus*/",
          "getterMethodName" : "getLicenseConfigurationStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseConfigurationStatus",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseConfigurationStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LicenseConfigurationStatus",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).</p>\n@param licenseConfigurationStatus New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).\n@see LicenseConfigurationStatus*/",
          "setterMethodName" : "setLicenseConfigurationStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).</p>\n@param licenseConfigurationStatus New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).\n@return Returns a reference to this object so that method calls can be chained together.\n@see LicenseConfigurationStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "licenseConfigurationStatus",
            "variableType" : "String",
            "documentation" : "<p>New status of the license configuration (<code>ACTIVE</code> or <code>INACTIVE</code>).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseCount" : {
          "c2jName" : "LicenseCount",
          "c2jShape" : "BoxLong",
          "deprecated" : false,
          "documentation" : "<p>New number of licenses managed by the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>New number of licenses managed by the license configuration.</p>\n@param licenseCount New number of licenses managed by the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseCount",
          "getterDocumentation" : "/**<p>New number of licenses managed by the license configuration.</p>\n@return New number of licenses managed by the license configuration.*/",
          "getterMethodName" : "getLicenseCount",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseCount",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "LicenseCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>New number of licenses managed by the license configuration.</p>\n@param licenseCount New number of licenses managed by the license configuration.*/",
          "setterMethodName" : "setLicenseCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "licenseCount",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>New number of licenses managed by the license configuration.</p>\n@param licenseCount New number of licenses managed by the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "licenseCount",
            "variableType" : "Long",
            "documentation" : "<p>New number of licenses managed by the license configuration.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseCountHardLimit" : {
          "c2jName" : "LicenseCountHardLimit",
          "c2jShape" : "BoxBoolean",
          "deprecated" : false,
          "documentation" : "<p>Sets the number of available licenses as a hard limit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseCountHardLimit",
          "getterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@return Sets the number of available licenses as a hard limit.*/",
          "getterMethodName" : "getLicenseCountHardLimit",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseCountHardLimit",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseCountHardLimit",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "LicenseCountHardLimit",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.*/",
          "setterMethodName" : "setLicenseCountHardLimit",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "licenseCountHardLimit",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Sets the number of available licenses as a hard limit.</p>\n@param licenseCountHardLimit Sets the number of available licenses as a hard limit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "licenseCountHardLimit",
            "variableType" : "Boolean",
            "documentation" : "<p>Sets the number of available licenses as a hard limit.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "LicenseRules" : {
          "c2jName" : "LicenseRules",
          "c2jShape" : "StringList",
          "deprecated" : false,
          "documentation" : "<p>List of flexible text strings designating license rules.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>List of flexible text strings designating license rules.</p>\n@param licenseRules List of flexible text strings designating license rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLicenseRules",
          "getterDocumentation" : "/**<p>List of flexible text strings designating license rules.</p>\n@return List of flexible text strings designating license rules.*/",
          "getterMethodName" : "getLicenseRules",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LicenseRules",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LicenseRules",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "String",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "LicenseRules",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>List of flexible text strings designating license rules.</p>\n@param licenseRules List of flexible text strings designating license rules.*/",
          "setterMethodName" : "setLicenseRules",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "licenseRules",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>List of flexible text strings designating license rules.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLicenseRules(java.util.Collection)} or {@link #withLicenseRules(java.util.Collection)} if you want to override the existing values.</p>\n@param licenseRules List of flexible text strings designating license rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "licenseRules",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>List of flexible text strings designating license rules.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>New name of the license configuration.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>New name of the license configuration.</p>\n@param name New name of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>New name of the license configuration.</p>\n@return New name of the license configuration.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>New name of the license configuration.</p>\n@param name New name of the license configuration.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>New name of the license configuration.</p>\n@param name New name of the license configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>New name of the license configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "LicenseConfigurationArn" ],
      "shapeName" : "UpdateLicenseConfigurationRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateLicenseConfigurationRequest",
        "variableName" : "updateLicenseConfigurationRequest",
        "variableType" : "UpdateLicenseConfigurationRequest",
        "documentation" : null,
        "simpleType" : "UpdateLicenseConfigurationRequest",
        "variableSetterType" : "UpdateLicenseConfigurationRequest"
      },
      "wrapper" : false
    },
    "UpdateLicenseConfigurationResult" : {
      "c2jName" : "UpdateLicenseConfigurationResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateLicenseConfigurationResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateLicenseConfigurationResult",
        "variableName" : "updateLicenseConfigurationResult",
        "variableType" : "UpdateLicenseConfigurationResult",
        "documentation" : null,
        "simpleType" : "UpdateLicenseConfigurationResult",
        "variableSetterType" : "UpdateLicenseConfigurationResult"
      },
      "wrapper" : false
    },
    "UpdateLicenseSpecificationsForResourceRequest" : {
      "c2jName" : "UpdateLicenseSpecificationsForResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateLicenseSpecificationsForResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSLicenseManager.UpdateLicenseSpecificationsForResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ResourceArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ARN for an AWS server resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ARN for an AWS server resource.</p>\n@param resourceArn ARN for an AWS server resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>ARN for an AWS server resource.</p>\n@return ARN for an AWS server resource.*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ARN for an AWS server resource.</p>\n@param resourceArn ARN for an AWS server resource.*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ARN for an AWS server resource.</p>\n@param resourceArn ARN for an AWS server resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>ARN for an AWS server resource.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "AddLicenseSpecifications",
        "c2jShape" : "LicenseSpecifications",
        "deprecated" : false,
        "documentation" : "<p>License configuration ARNs to be added to a resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>License configuration ARNs to be added to a resource.</p>\n@param addLicenseSpecifications License configuration ARNs to be added to a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAddLicenseSpecifications",
        "getterDocumentation" : "/**<p>License configuration ARNs to be added to a resource.</p>\n@return License configuration ARNs to be added to a resource.*/",
        "getterMethodName" : "getAddLicenseSpecifications",
        "getterModel" : {
          "returnType" : "java.util.List<LicenseSpecification>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "AddLicenseSpecifications",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "AddLicenseSpecifications",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "LicenseSpecification",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "LicenseSpecification",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "LicenseSpecification",
              "variableName" : "member",
              "variableType" : "LicenseSpecification",
              "documentation" : "",
              "simpleType" : "LicenseSpecification",
              "variableSetterType" : "LicenseSpecification"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "LicenseSpecification",
              "variableName" : "member",
              "variableType" : "LicenseSpecification",
              "documentation" : "",
              "simpleType" : "LicenseSpecification",
              "variableSetterType" : "LicenseSpecification"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "LicenseSpecification",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "LicenseSpecification",
          "templateImplType" : "java.util.ArrayList<LicenseSpecification>",
          "templateType" : "java.util.List<LicenseSpecification>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "AddLicenseSpecifications",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>License configuration ARNs to be added to a resource.</p>\n@param addLicenseSpecifications License configuration ARNs to be added to a resource.*/",
        "setterMethodName" : "setAddLicenseSpecifications",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<LicenseSpecification>",
          "variableName" : "addLicenseSpecifications",
          "variableType" : "java.util.List<LicenseSpecification>",
          "documentation" : "",
          "simpleType" : "List<LicenseSpecification>",
          "variableSetterType" : "java.util.Collection<LicenseSpecification>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>License configuration ARNs to be added to a resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAddLicenseSpecifications(java.util.Collection)} or {@link #withAddLicenseSpecifications(java.util.Collection)} if you want to override the existing values.</p>\n@param addLicenseSpecifications License configuration ARNs to be added to a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<LicenseSpecification>",
          "variableName" : "addLicenseSpecifications",
          "variableType" : "java.util.List<LicenseSpecification>",
          "documentation" : "<p>License configuration ARNs to be added to a resource.</p>",
          "simpleType" : "List<LicenseSpecification>",
          "variableSetterType" : "java.util.Collection<LicenseSpecification>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "RemoveLicenseSpecifications",
        "c2jShape" : "LicenseSpecifications",
        "deprecated" : false,
        "documentation" : "<p>License configuration ARNs to be removed from a resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>License configuration ARNs to be removed from a resource.</p>\n@param removeLicenseSpecifications License configuration ARNs to be removed from a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRemoveLicenseSpecifications",
        "getterDocumentation" : "/**<p>License configuration ARNs to be removed from a resource.</p>\n@return License configuration ARNs to be removed from a resource.*/",
        "getterMethodName" : "getRemoveLicenseSpecifications",
        "getterModel" : {
          "returnType" : "java.util.List<LicenseSpecification>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "RemoveLicenseSpecifications",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "RemoveLicenseSpecifications",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "LicenseSpecification",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "LicenseSpecification",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "LicenseSpecification",
              "variableName" : "member",
              "variableType" : "LicenseSpecification",
              "documentation" : "",
              "simpleType" : "LicenseSpecification",
              "variableSetterType" : "LicenseSpecification"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "LicenseSpecification",
              "variableName" : "member",
              "variableType" : "LicenseSpecification",
              "documentation" : "",
              "simpleType" : "LicenseSpecification",
              "variableSetterType" : "LicenseSpecification"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "LicenseSpecification",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "LicenseSpecification",
          "templateImplType" : "java.util.ArrayList<LicenseSpecification>",
          "templateType" : "java.util.List<LicenseSpecification>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "RemoveLicenseSpecifications",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>License configuration ARNs to be removed from a resource.</p>\n@param removeLicenseSpecifications License configuration ARNs to be removed from a resource.*/",
        "setterMethodName" : "setRemoveLicenseSpecifications",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<LicenseSpecification>",
          "variableName" : "removeLicenseSpecifications",
          "variableType" : "java.util.List<LicenseSpecification>",
          "documentation" : "",
          "simpleType" : "List<LicenseSpecification>",
          "variableSetterType" : "java.util.Collection<LicenseSpecification>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>License configuration ARNs to be removed from a resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRemoveLicenseSpecifications(java.util.Collection)} or {@link #withRemoveLicenseSpecifications(java.util.Collection)} if you want to override the existing values.</p>\n@param removeLicenseSpecifications License configuration ARNs to be removed from a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<LicenseSpecification>",
          "variableName" : "removeLicenseSpecifications",
          "variableType" : "java.util.List<LicenseSpecification>",
          "documentation" : "<p>License configuration ARNs to be removed from a resource.</p>",
          "simpleType" : "List<LicenseSpecification>",
          "variableSetterType" : "java.util.Collection<LicenseSpecification>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AddLicenseSpecifications" : {
          "c2jName" : "AddLicenseSpecifications",
          "c2jShape" : "LicenseSpecifications",
          "deprecated" : false,
          "documentation" : "<p>License configuration ARNs to be added to a resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>License configuration ARNs to be added to a resource.</p>\n@param addLicenseSpecifications License configuration ARNs to be added to a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAddLicenseSpecifications",
          "getterDocumentation" : "/**<p>License configuration ARNs to be added to a resource.</p>\n@return License configuration ARNs to be added to a resource.*/",
          "getterMethodName" : "getAddLicenseSpecifications",
          "getterModel" : {
            "returnType" : "java.util.List<LicenseSpecification>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "AddLicenseSpecifications",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "AddLicenseSpecifications",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "LicenseSpecification",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "LicenseSpecification",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "LicenseSpecification",
                "variableName" : "member",
                "variableType" : "LicenseSpecification",
                "documentation" : "",
                "simpleType" : "LicenseSpecification",
                "variableSetterType" : "LicenseSpecification"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "LicenseSpecification",
                "variableName" : "member",
                "variableType" : "LicenseSpecification",
                "documentation" : "",
                "simpleType" : "LicenseSpecification",
                "variableSetterType" : "LicenseSpecification"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "LicenseSpecification",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "LicenseSpecification",
            "templateImplType" : "java.util.ArrayList<LicenseSpecification>",
            "templateType" : "java.util.List<LicenseSpecification>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "AddLicenseSpecifications",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>License configuration ARNs to be added to a resource.</p>\n@param addLicenseSpecifications License configuration ARNs to be added to a resource.*/",
          "setterMethodName" : "setAddLicenseSpecifications",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<LicenseSpecification>",
            "variableName" : "addLicenseSpecifications",
            "variableType" : "java.util.List<LicenseSpecification>",
            "documentation" : "",
            "simpleType" : "List<LicenseSpecification>",
            "variableSetterType" : "java.util.Collection<LicenseSpecification>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>License configuration ARNs to be added to a resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAddLicenseSpecifications(java.util.Collection)} or {@link #withAddLicenseSpecifications(java.util.Collection)} if you want to override the existing values.</p>\n@param addLicenseSpecifications License configuration ARNs to be added to a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<LicenseSpecification>",
            "variableName" : "addLicenseSpecifications",
            "variableType" : "java.util.List<LicenseSpecification>",
            "documentation" : "<p>License configuration ARNs to be added to a resource.</p>",
            "simpleType" : "List<LicenseSpecification>",
            "variableSetterType" : "java.util.Collection<LicenseSpecification>"
          },
          "xmlNameSpaceUri" : null
        },
        "RemoveLicenseSpecifications" : {
          "c2jName" : "RemoveLicenseSpecifications",
          "c2jShape" : "LicenseSpecifications",
          "deprecated" : false,
          "documentation" : "<p>License configuration ARNs to be removed from a resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>License configuration ARNs to be removed from a resource.</p>\n@param removeLicenseSpecifications License configuration ARNs to be removed from a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRemoveLicenseSpecifications",
          "getterDocumentation" : "/**<p>License configuration ARNs to be removed from a resource.</p>\n@return License configuration ARNs to be removed from a resource.*/",
          "getterMethodName" : "getRemoveLicenseSpecifications",
          "getterModel" : {
            "returnType" : "java.util.List<LicenseSpecification>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "RemoveLicenseSpecifications",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "RemoveLicenseSpecifications",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "LicenseSpecification",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "LicenseSpecification",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "LicenseSpecification",
                "variableName" : "member",
                "variableType" : "LicenseSpecification",
                "documentation" : "",
                "simpleType" : "LicenseSpecification",
                "variableSetterType" : "LicenseSpecification"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "LicenseSpecification",
                "variableName" : "member",
                "variableType" : "LicenseSpecification",
                "documentation" : "",
                "simpleType" : "LicenseSpecification",
                "variableSetterType" : "LicenseSpecification"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "LicenseSpecification",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "LicenseSpecification",
            "templateImplType" : "java.util.ArrayList<LicenseSpecification>",
            "templateType" : "java.util.List<LicenseSpecification>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "RemoveLicenseSpecifications",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>License configuration ARNs to be removed from a resource.</p>\n@param removeLicenseSpecifications License configuration ARNs to be removed from a resource.*/",
          "setterMethodName" : "setRemoveLicenseSpecifications",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<LicenseSpecification>",
            "variableName" : "removeLicenseSpecifications",
            "variableType" : "java.util.List<LicenseSpecification>",
            "documentation" : "",
            "simpleType" : "List<LicenseSpecification>",
            "variableSetterType" : "java.util.Collection<LicenseSpecification>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>License configuration ARNs to be removed from a resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRemoveLicenseSpecifications(java.util.Collection)} or {@link #withRemoveLicenseSpecifications(java.util.Collection)} if you want to override the existing values.</p>\n@param removeLicenseSpecifications License configuration ARNs to be removed from a resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<LicenseSpecification>",
            "variableName" : "removeLicenseSpecifications",
            "variableType" : "java.util.List<LicenseSpecification>",
            "documentation" : "<p>License configuration ARNs to be removed from a resource.</p>",
            "simpleType" : "List<LicenseSpecification>",
            "variableSetterType" : "java.util.Collection<LicenseSpecification>"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceArn" : {
          "c2jName" : "ResourceArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ARN for an AWS server resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ARN for an AWS server resource.</p>\n@param resourceArn ARN for an AWS server resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>ARN for an AWS server resource.</p>\n@return ARN for an AWS server resource.*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ARN for an AWS server resource.</p>\n@param resourceArn ARN for an AWS server resource.*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ARN for an AWS server resource.</p>\n@param resourceArn ARN for an AWS server resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>ARN for an AWS server resource.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ResourceArn" ],
      "shapeName" : "UpdateLicenseSpecificationsForResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateLicenseSpecificationsForResourceRequest",
        "variableName" : "updateLicenseSpecificationsForResourceRequest",
        "variableType" : "UpdateLicenseSpecificationsForResourceRequest",
        "documentation" : null,
        "simpleType" : "UpdateLicenseSpecificationsForResourceRequest",
        "variableSetterType" : "UpdateLicenseSpecificationsForResourceRequest"
      },
      "wrapper" : false
    },
    "UpdateLicenseSpecificationsForResourceResult" : {
      "c2jName" : "UpdateLicenseSpecificationsForResourceResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateLicenseSpecificationsForResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateLicenseSpecificationsForResourceResult",
        "variableName" : "updateLicenseSpecificationsForResourceResult",
        "variableType" : "UpdateLicenseSpecificationsForResourceResult",
        "documentation" : null,
        "simpleType" : "UpdateLicenseSpecificationsForResourceResult",
        "variableSetterType" : "UpdateLicenseSpecificationsForResourceResult"
      },
      "wrapper" : false
    },
    "UpdateServiceSettingsRequest" : {
      "c2jName" : "UpdateServiceSettingsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateServiceSettings",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSLicenseManager.UpdateServiceSettings",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "S3BucketArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ARN of the Amazon S3 bucket where License Manager information is stored.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ARN of the Amazon S3 bucket where License Manager information is stored.</p>\n@param s3BucketArn ARN of the Amazon S3 bucket where License Manager information is stored.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withS3BucketArn",
        "getterDocumentation" : "/**<p>ARN of the Amazon S3 bucket where License Manager information is stored.</p>\n@return ARN of the Amazon S3 bucket where License Manager information is stored.*/",
        "getterMethodName" : "getS3BucketArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "S3BucketArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "S3BucketArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "S3BucketArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ARN of the Amazon S3 bucket where License Manager information is stored.</p>\n@param s3BucketArn ARN of the Amazon S3 bucket where License Manager information is stored.*/",
        "setterMethodName" : "setS3BucketArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "s3BucketArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ARN of the Amazon S3 bucket where License Manager information is stored.</p>\n@param s3BucketArn ARN of the Amazon S3 bucket where License Manager information is stored.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "s3BucketArn",
          "variableType" : "String",
          "documentation" : "<p>ARN of the Amazon S3 bucket where License Manager information is stored.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SnsTopicArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>ARN of the Amazon SNS topic used for License Manager alerts.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ARN of the Amazon SNS topic used for License Manager alerts.</p>\n@param snsTopicArn ARN of the Amazon SNS topic used for License Manager alerts.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSnsTopicArn",
        "getterDocumentation" : "/**<p>ARN of the Amazon SNS topic used for License Manager alerts.</p>\n@return ARN of the Amazon SNS topic used for License Manager alerts.*/",
        "getterMethodName" : "getSnsTopicArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SnsTopicArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SnsTopicArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SnsTopicArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>ARN of the Amazon SNS topic used for License Manager alerts.</p>\n@param snsTopicArn ARN of the Amazon SNS topic used for License Manager alerts.*/",
        "setterMethodName" : "setSnsTopicArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "snsTopicArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ARN of the Amazon SNS topic used for License Manager alerts.</p>\n@param snsTopicArn ARN of the Amazon SNS topic used for License Manager alerts.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "snsTopicArn",
          "variableType" : "String",
          "documentation" : "<p>ARN of the Amazon SNS topic used for License Manager alerts.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OrganizationConfiguration",
        "c2jShape" : "OrganizationConfiguration",
        "deprecated" : false,
        "documentation" : "<p>Integrates AWS Organizations with License Manager for cross-account discovery.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Integrates AWS Organizations with License Manager for cross-account discovery.</p>\n@param organizationConfiguration Integrates AWS Organizations with License Manager for cross-account discovery.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOrganizationConfiguration",
        "getterDocumentation" : "/**<p>Integrates AWS Organizations with License Manager for cross-account discovery.</p>\n@return Integrates AWS Organizations with License Manager for cross-account discovery.*/",
        "getterMethodName" : "getOrganizationConfiguration",
        "getterModel" : {
          "returnType" : "OrganizationConfiguration",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "OrganizationConfiguration",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OrganizationConfiguration",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "OrganizationConfiguration",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Integrates AWS Organizations with License Manager for cross-account discovery.</p>\n@param organizationConfiguration Integrates AWS Organizations with License Manager for cross-account discovery.*/",
        "setterMethodName" : "setOrganizationConfiguration",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "OrganizationConfiguration",
          "variableName" : "organizationConfiguration",
          "variableType" : "OrganizationConfiguration",
          "documentation" : "",
          "simpleType" : "OrganizationConfiguration",
          "variableSetterType" : "OrganizationConfiguration"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Integrates AWS Organizations with License Manager for cross-account discovery.</p>\n@param organizationConfiguration Integrates AWS Organizations with License Manager for cross-account discovery.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "OrganizationConfiguration",
          "variableName" : "organizationConfiguration",
          "variableType" : "OrganizationConfiguration",
          "documentation" : "<p>Integrates AWS Organizations with License Manager for cross-account discovery.</p>",
          "simpleType" : "OrganizationConfiguration",
          "variableSetterType" : "OrganizationConfiguration"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "EnableCrossAccountsDiscovery",
        "c2jShape" : "BoxBoolean",
        "deprecated" : false,
        "documentation" : "<p>Activates cross-account discovery.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Activates cross-account discovery.</p>\n@param enableCrossAccountsDiscovery Activates cross-account discovery.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withEnableCrossAccountsDiscovery",
        "getterDocumentation" : "/**<p>Activates cross-account discovery.</p>\n@return Activates cross-account discovery.*/",
        "getterMethodName" : "getEnableCrossAccountsDiscovery",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "EnableCrossAccountsDiscovery",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "EnableCrossAccountsDiscovery",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "EnableCrossAccountsDiscovery",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Activates cross-account discovery.</p>\n@param enableCrossAccountsDiscovery Activates cross-account discovery.*/",
        "setterMethodName" : "setEnableCrossAccountsDiscovery",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "enableCrossAccountsDiscovery",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Activates cross-account discovery.</p>\n@param enableCrossAccountsDiscovery Activates cross-account discovery.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "enableCrossAccountsDiscovery",
          "variableType" : "Boolean",
          "documentation" : "<p>Activates cross-account discovery.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "EnableCrossAccountsDiscovery" : {
          "c2jName" : "EnableCrossAccountsDiscovery",
          "c2jShape" : "BoxBoolean",
          "deprecated" : false,
          "documentation" : "<p>Activates cross-account discovery.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Activates cross-account discovery.</p>\n@param enableCrossAccountsDiscovery Activates cross-account discovery.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withEnableCrossAccountsDiscovery",
          "getterDocumentation" : "/**<p>Activates cross-account discovery.</p>\n@return Activates cross-account discovery.*/",
          "getterMethodName" : "getEnableCrossAccountsDiscovery",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "EnableCrossAccountsDiscovery",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "EnableCrossAccountsDiscovery",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "EnableCrossAccountsDiscovery",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Activates cross-account discovery.</p>\n@param enableCrossAccountsDiscovery Activates cross-account discovery.*/",
          "setterMethodName" : "setEnableCrossAccountsDiscovery",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "enableCrossAccountsDiscovery",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Activates cross-account discovery.</p>\n@param enableCrossAccountsDiscovery Activates cross-account discovery.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "enableCrossAccountsDiscovery",
            "variableType" : "Boolean",
            "documentation" : "<p>Activates cross-account discovery.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "OrganizationConfiguration" : {
          "c2jName" : "OrganizationConfiguration",
          "c2jShape" : "OrganizationConfiguration",
          "deprecated" : false,
          "documentation" : "<p>Integrates AWS Organizations with License Manager for cross-account discovery.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Integrates AWS Organizations with License Manager for cross-account discovery.</p>\n@param organizationConfiguration Integrates AWS Organizations with License Manager for cross-account discovery.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOrganizationConfiguration",
          "getterDocumentation" : "/**<p>Integrates AWS Organizations with License Manager for cross-account discovery.</p>\n@return Integrates AWS Organizations with License Manager for cross-account discovery.*/",
          "getterMethodName" : "getOrganizationConfiguration",
          "getterModel" : {
            "returnType" : "OrganizationConfiguration",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "OrganizationConfiguration",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OrganizationConfiguration",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "OrganizationConfiguration",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Integrates AWS Organizations with License Manager for cross-account discovery.</p>\n@param organizationConfiguration Integrates AWS Organizations with License Manager for cross-account discovery.*/",
          "setterMethodName" : "setOrganizationConfiguration",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "OrganizationConfiguration",
            "variableName" : "organizationConfiguration",
            "variableType" : "OrganizationConfiguration",
            "documentation" : "",
            "simpleType" : "OrganizationConfiguration",
            "variableSetterType" : "OrganizationConfiguration"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Integrates AWS Organizations with License Manager for cross-account discovery.</p>\n@param organizationConfiguration Integrates AWS Organizations with License Manager for cross-account discovery.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "OrganizationConfiguration",
            "variableName" : "organizationConfiguration",
            "variableType" : "OrganizationConfiguration",
            "documentation" : "<p>Integrates AWS Organizations with License Manager for cross-account discovery.</p>",
            "simpleType" : "OrganizationConfiguration",
            "variableSetterType" : "OrganizationConfiguration"
          },
          "xmlNameSpaceUri" : null
        },
        "S3BucketArn" : {
          "c2jName" : "S3BucketArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ARN of the Amazon S3 bucket where License Manager information is stored.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ARN of the Amazon S3 bucket where License Manager information is stored.</p>\n@param s3BucketArn ARN of the Amazon S3 bucket where License Manager information is stored.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withS3BucketArn",
          "getterDocumentation" : "/**<p>ARN of the Amazon S3 bucket where License Manager information is stored.</p>\n@return ARN of the Amazon S3 bucket where License Manager information is stored.*/",
          "getterMethodName" : "getS3BucketArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "S3BucketArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "S3BucketArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "S3BucketArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ARN of the Amazon S3 bucket where License Manager information is stored.</p>\n@param s3BucketArn ARN of the Amazon S3 bucket where License Manager information is stored.*/",
          "setterMethodName" : "setS3BucketArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "s3BucketArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ARN of the Amazon S3 bucket where License Manager information is stored.</p>\n@param s3BucketArn ARN of the Amazon S3 bucket where License Manager information is stored.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "s3BucketArn",
            "variableType" : "String",
            "documentation" : "<p>ARN of the Amazon S3 bucket where License Manager information is stored.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SnsTopicArn" : {
          "c2jName" : "SnsTopicArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>ARN of the Amazon SNS topic used for License Manager alerts.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ARN of the Amazon SNS topic used for License Manager alerts.</p>\n@param snsTopicArn ARN of the Amazon SNS topic used for License Manager alerts.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSnsTopicArn",
          "getterDocumentation" : "/**<p>ARN of the Amazon SNS topic used for License Manager alerts.</p>\n@return ARN of the Amazon SNS topic used for License Manager alerts.*/",
          "getterMethodName" : "getSnsTopicArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SnsTopicArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SnsTopicArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SnsTopicArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>ARN of the Amazon SNS topic used for License Manager alerts.</p>\n@param snsTopicArn ARN of the Amazon SNS topic used for License Manager alerts.*/",
          "setterMethodName" : "setSnsTopicArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "snsTopicArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ARN of the Amazon SNS topic used for License Manager alerts.</p>\n@param snsTopicArn ARN of the Amazon SNS topic used for License Manager alerts.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "snsTopicArn",
            "variableType" : "String",
            "documentation" : "<p>ARN of the Amazon SNS topic used for License Manager alerts.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateServiceSettingsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateServiceSettingsRequest",
        "variableName" : "updateServiceSettingsRequest",
        "variableType" : "UpdateServiceSettingsRequest",
        "documentation" : null,
        "simpleType" : "UpdateServiceSettingsRequest",
        "variableSetterType" : "UpdateServiceSettingsRequest"
      },
      "wrapper" : false
    },
    "UpdateServiceSettingsResult" : {
      "c2jName" : "UpdateServiceSettingsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateServiceSettingsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateServiceSettingsResult",
        "variableName" : "updateServiceSettingsResult",
        "variableType" : "UpdateServiceSettingsResult",
        "documentation" : null,
        "simpleType" : "UpdateServiceSettingsResult",
        "variableSetterType" : "UpdateServiceSettingsResult"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "examples" : {
    "examples" : { },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2014-2019 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AWSLicenseManagerException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.licensemanager.model.AWSLicenseManagerException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.licensemanager.model.transform"
}