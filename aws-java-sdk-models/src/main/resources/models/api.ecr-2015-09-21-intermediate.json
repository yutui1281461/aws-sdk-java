{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "contentTypeOverride" : null,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseHandlerFqcn" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "EnumSetterOverload" ],
    "emitLegacyEnumSetterFor" : {
      "DescribeImagesFilter" : [ "tagStatus" ],
      "ImageFailure" : [ "failureCode" ],
      "Layer" : [ "layerAvailability" ],
      "LayerFailure" : [ "failureCode" ],
      "ListImagesFilter" : [ "tagStatus" ]
    },
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipClientMethodForOperations" : [ ],
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : false,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false,
    "useUidAsFilePrefix" : false
  },
  "metadata" : {
    "apiVersion" : "2015-09-21",
    "asyncClient" : "AmazonECRAsyncClient",
    "asyncClientBuilderClassName" : "AmazonECRAsyncClientBuilder",
    "asyncInterface" : "AmazonECRAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : null,
    "cucumberModuleInjectorClassName" : "AmazonECRModuleInjector",
    "defaultEndpoint" : "api.ecr.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "api.ecr.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<p>Amazon Elastic Container Registry (Amazon ECR) is a managed Docker registry service. Customers can use the familiar Docker CLI to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry. Amazon ECR supports private Docker repositories with resource-based permissions using IAM so that specific users or Amazon EC2 instances can access repositories and images. Developers can use the Docker CLI to author and manage images.</p>",
    "endpointPrefix" : "api.ecr",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.ecr",
    "packagePath" : "com/amazonaws/services/ecr",
    "protocol" : "json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : "Amazon ECR",
    "serviceFullName" : "Amazon EC2 Container Registry",
    "serviceId" : "ECR",
    "serviceName" : "Amazon ECR",
    "signingName" : "ecr",
    "smokeTestsPackageName" : "com.amazonaws.services.ecr.smoketests",
    "syncClient" : "AmazonECRClient",
    "syncClientBuilderClassName" : "AmazonECRClientBuilder",
    "syncInterface" : "AmazonECR",
    "uid" : "ecr-2015-09-21",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "BatchCheckLayerAvailability" : {
      "asyncCallableType" : "java.util.concurrent.Callable<BatchCheckLayerAvailabilityResult>",
      "asyncFutureType" : "java.util.concurrent.Future<BatchCheckLayerAvailabilityResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<BatchCheckLayerAvailabilityRequest, BatchCheckLayerAvailabilityResult>",
      "asyncReturnType" : "BatchCheckLayerAvailabilityResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Check the availability of multiple image layers in a specified registry and repository.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchCheckLayerAvailabilityRequest",
        "variableName" : "batchCheckLayerAvailabilityRequest",
        "variableType" : "BatchCheckLayerAvailabilityRequest",
        "documentation" : "",
        "simpleType" : "BatchCheckLayerAvailabilityRequest",
        "variableSetterType" : "BatchCheckLayerAvailabilityRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "batchCheckLayerAvailability",
      "operationName" : "BatchCheckLayerAvailability",
      "returnType" : {
        "returnType" : "BatchCheckLayerAvailabilityResult",
        "documentation" : null
      },
      "syncReturnType" : "BatchCheckLayerAvailabilityResult"
    },
    "BatchDeleteImage" : {
      "asyncCallableType" : "java.util.concurrent.Callable<BatchDeleteImageResult>",
      "asyncFutureType" : "java.util.concurrent.Future<BatchDeleteImageResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<BatchDeleteImageRequest, BatchDeleteImageResult>",
      "asyncReturnType" : "BatchDeleteImageResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes a list of specified images within a specified repository. Images are specified with either <code>imageTag</code> or <code>imageDigest</code>.</p> <p>You can remove a tag from an image by specifying the image's tag in your request. When you remove the last tag from an image, the image is deleted from your repository.</p> <p>You can completely delete an image (and all of its tags) by specifying the image's digest in your request.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchDeleteImageRequest",
        "variableName" : "batchDeleteImageRequest",
        "variableType" : "BatchDeleteImageRequest",
        "documentation" : "<p>Deletes specified images within a specified repository. Images are specified with either the <code>imageTag</code> or <code>imageDigest</code>.</p>",
        "simpleType" : "BatchDeleteImageRequest",
        "variableSetterType" : "BatchDeleteImageRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "batchDeleteImage",
      "operationName" : "BatchDeleteImage",
      "returnType" : {
        "returnType" : "BatchDeleteImageResult",
        "documentation" : null
      },
      "syncReturnType" : "BatchDeleteImageResult"
    },
    "BatchGetImage" : {
      "asyncCallableType" : "java.util.concurrent.Callable<BatchGetImageResult>",
      "asyncFutureType" : "java.util.concurrent.Future<BatchGetImageResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<BatchGetImageRequest, BatchGetImageResult>",
      "asyncReturnType" : "BatchGetImageResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets detailed information for specified images within a specified repository. Images are specified with either <code>imageTag</code> or <code>imageDigest</code>.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchGetImageRequest",
        "variableName" : "batchGetImageRequest",
        "variableType" : "BatchGetImageRequest",
        "documentation" : "",
        "simpleType" : "BatchGetImageRequest",
        "variableSetterType" : "BatchGetImageRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "batchGetImage",
      "operationName" : "BatchGetImage",
      "returnType" : {
        "returnType" : "BatchGetImageResult",
        "documentation" : null
      },
      "syncReturnType" : "BatchGetImageResult"
    },
    "CompleteLayerUpload" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CompleteLayerUploadResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CompleteLayerUploadResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CompleteLayerUploadRequest, CompleteLayerUploadResult>",
      "asyncReturnType" : "CompleteLayerUploadResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Informs Amazon ECR that the image layer upload has completed for a specified registry, repository name, and upload ID. You can optionally provide a <code>sha256</code> digest of the image layer for data validation purposes.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "UploadNotFoundException",
        "documentation" : "<p>The upload could not be found, or the specified upload id is not valid for this repository.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidLayerException",
        "documentation" : "<p>The layer digest calculation performed by Amazon ECR upon receipt of the image layer does not match the digest specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LayerPartTooSmallException",
        "documentation" : "<p>Layer parts must be at least 5 MiB in size.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LayerAlreadyExistsException",
        "documentation" : "<p>The image layer already exists in the associated repository.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EmptyUploadException",
        "documentation" : "<p>The specified layer upload does not contain any layer parts.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CompleteLayerUploadRequest",
        "variableName" : "completeLayerUploadRequest",
        "variableType" : "CompleteLayerUploadRequest",
        "documentation" : "",
        "simpleType" : "CompleteLayerUploadRequest",
        "variableSetterType" : "CompleteLayerUploadRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "completeLayerUpload",
      "operationName" : "CompleteLayerUpload",
      "returnType" : {
        "returnType" : "CompleteLayerUploadResult",
        "documentation" : null
      },
      "syncReturnType" : "CompleteLayerUploadResult"
    },
    "CreateRepository" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateRepositoryResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateRepositoryResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateRepositoryRequest, CreateRepositoryResult>",
      "asyncReturnType" : "CreateRepositoryResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates an image repository.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidTagParameterException",
        "documentation" : "<p>An invalid parameter has been specified. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TooManyTagsException",
        "documentation" : "<p>The list of tags on the repository is over the limit. The maximum number of tags that can be applied to a repository is 50.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryAlreadyExistsException",
        "documentation" : "<p>The specified repository already exists in the specified registry.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The operation did not succeed because it would have exceeded a service limit for your account. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonECR/latest/userguide/service_limits.html\">Amazon ECR Default Service Limits</a> in the Amazon Elastic Container Registry User Guide.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateRepositoryRequest",
        "variableName" : "createRepositoryRequest",
        "variableType" : "CreateRepositoryRequest",
        "documentation" : "",
        "simpleType" : "CreateRepositoryRequest",
        "variableSetterType" : "CreateRepositoryRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createRepository",
      "operationName" : "CreateRepository",
      "returnType" : {
        "returnType" : "CreateRepositoryResult",
        "documentation" : null
      },
      "syncReturnType" : "CreateRepositoryResult"
    },
    "DeleteLifecyclePolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteLifecyclePolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteLifecyclePolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteLifecyclePolicyRequest, DeleteLifecyclePolicyResult>",
      "asyncReturnType" : "DeleteLifecyclePolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes the specified lifecycle policy.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LifecyclePolicyNotFoundException",
        "documentation" : "<p>The lifecycle policy could not be found, and no policy is set to the repository.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteLifecyclePolicyRequest",
        "variableName" : "deleteLifecyclePolicyRequest",
        "variableType" : "DeleteLifecyclePolicyRequest",
        "documentation" : "",
        "simpleType" : "DeleteLifecyclePolicyRequest",
        "variableSetterType" : "DeleteLifecyclePolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteLifecyclePolicy",
      "operationName" : "DeleteLifecyclePolicy",
      "returnType" : {
        "returnType" : "DeleteLifecyclePolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteLifecyclePolicyResult"
    },
    "DeleteRepository" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteRepositoryResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteRepositoryResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteRepositoryRequest, DeleteRepositoryResult>",
      "asyncReturnType" : "DeleteRepositoryResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes an existing image repository. If a repository contains images, you must use the <code>force</code> option to delete it.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotEmptyException",
        "documentation" : "<p>The specified repository contains images. To delete a repository that contains images, you must force the deletion with the <code>force</code> parameter.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteRepositoryRequest",
        "variableName" : "deleteRepositoryRequest",
        "variableType" : "DeleteRepositoryRequest",
        "documentation" : "",
        "simpleType" : "DeleteRepositoryRequest",
        "variableSetterType" : "DeleteRepositoryRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteRepository",
      "operationName" : "DeleteRepository",
      "returnType" : {
        "returnType" : "DeleteRepositoryResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteRepositoryResult"
    },
    "DeleteRepositoryPolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteRepositoryPolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteRepositoryPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteRepositoryPolicyRequest, DeleteRepositoryPolicyResult>",
      "asyncReturnType" : "DeleteRepositoryPolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes the repository policy from a specified repository.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryPolicyNotFoundException",
        "documentation" : "<p>The specified repository and registry combination does not have an associated repository policy.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteRepositoryPolicyRequest",
        "variableName" : "deleteRepositoryPolicyRequest",
        "variableType" : "DeleteRepositoryPolicyRequest",
        "documentation" : "",
        "simpleType" : "DeleteRepositoryPolicyRequest",
        "variableSetterType" : "DeleteRepositoryPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteRepositoryPolicy",
      "operationName" : "DeleteRepositoryPolicy",
      "returnType" : {
        "returnType" : "DeleteRepositoryPolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteRepositoryPolicyResult"
    },
    "DescribeImages" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeImagesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeImagesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeImagesRequest, DescribeImagesResult>",
      "asyncReturnType" : "DescribeImagesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns metadata about the images in a repository, including image size, image tags, and creation date.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ImageNotFoundException",
        "documentation" : "<p>The image requested does not exist in the specified repository.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribeImagesRequest",
        "variableName" : "describeImagesRequest",
        "variableType" : "DescribeImagesRequest",
        "documentation" : "",
        "simpleType" : "DescribeImagesRequest",
        "variableSetterType" : "DescribeImagesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "describeImages",
      "operationName" : "DescribeImages",
      "returnType" : {
        "returnType" : "DescribeImagesResult",
        "documentation" : null
      },
      "syncReturnType" : "DescribeImagesResult"
    },
    "DescribeRepositories" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeRepositoriesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeRepositoriesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeRepositoriesRequest, DescribeRepositoriesResult>",
      "asyncReturnType" : "DescribeRepositoriesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Describes image repositories in a registry.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribeRepositoriesRequest",
        "variableName" : "describeRepositoriesRequest",
        "variableType" : "DescribeRepositoriesRequest",
        "documentation" : "",
        "simpleType" : "DescribeRepositoriesRequest",
        "variableSetterType" : "DescribeRepositoriesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "describeRepositories",
      "operationName" : "DescribeRepositories",
      "returnType" : {
        "returnType" : "DescribeRepositoriesResult",
        "documentation" : null
      },
      "syncReturnType" : "DescribeRepositoriesResult"
    },
    "GetAuthorizationToken" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetAuthorizationTokenResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetAuthorizationTokenResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetAuthorizationTokenRequest, GetAuthorizationTokenResult>",
      "asyncReturnType" : "GetAuthorizationTokenResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Retrieves a token that is valid for a specified registry for 12 hours. This command allows you to use the <code>docker</code> CLI to push and pull images with Amazon ECR. If you do not specify a registry, the default registry is assumed.</p> <p>The <code>authorizationToken</code> returned for each registry specified is a base64 encoded string that can be decoded and used in a <code>docker login</code> command to authenticate to a registry. The AWS CLI offers an <code>aws ecr get-login</code> command that simplifies the login process.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetAuthorizationTokenRequest",
        "variableName" : "getAuthorizationTokenRequest",
        "variableType" : "GetAuthorizationTokenRequest",
        "documentation" : "",
        "simpleType" : "GetAuthorizationTokenRequest",
        "variableSetterType" : "GetAuthorizationTokenRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getAuthorizationToken",
      "operationName" : "GetAuthorizationToken",
      "returnType" : {
        "returnType" : "GetAuthorizationTokenResult",
        "documentation" : null
      },
      "syncReturnType" : "GetAuthorizationTokenResult"
    },
    "GetDownloadUrlForLayer" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetDownloadUrlForLayerResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetDownloadUrlForLayerResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetDownloadUrlForLayerRequest, GetDownloadUrlForLayerResult>",
      "asyncReturnType" : "GetDownloadUrlForLayerResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Retrieves the pre-signed Amazon S3 download URL corresponding to an image layer. You can only get URLs for image layers that are referenced in an image.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LayersNotFoundException",
        "documentation" : "<p>The specified layers could not be found, or the specified layer is not valid for this repository.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LayerInaccessibleException",
        "documentation" : "<p>The specified layer is not available because it is not associated with an image. Unassociated image layers may be cleaned up at any time.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetDownloadUrlForLayerRequest",
        "variableName" : "getDownloadUrlForLayerRequest",
        "variableType" : "GetDownloadUrlForLayerRequest",
        "documentation" : "",
        "simpleType" : "GetDownloadUrlForLayerRequest",
        "variableSetterType" : "GetDownloadUrlForLayerRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getDownloadUrlForLayer",
      "operationName" : "GetDownloadUrlForLayer",
      "returnType" : {
        "returnType" : "GetDownloadUrlForLayerResult",
        "documentation" : null
      },
      "syncReturnType" : "GetDownloadUrlForLayerResult"
    },
    "GetLifecyclePolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetLifecyclePolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetLifecyclePolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetLifecyclePolicyRequest, GetLifecyclePolicyResult>",
      "asyncReturnType" : "GetLifecyclePolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Retrieves the specified lifecycle policy.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LifecyclePolicyNotFoundException",
        "documentation" : "<p>The lifecycle policy could not be found, and no policy is set to the repository.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetLifecyclePolicyRequest",
        "variableName" : "getLifecyclePolicyRequest",
        "variableType" : "GetLifecyclePolicyRequest",
        "documentation" : "",
        "simpleType" : "GetLifecyclePolicyRequest",
        "variableSetterType" : "GetLifecyclePolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getLifecyclePolicy",
      "operationName" : "GetLifecyclePolicy",
      "returnType" : {
        "returnType" : "GetLifecyclePolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "GetLifecyclePolicyResult"
    },
    "GetLifecyclePolicyPreview" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetLifecyclePolicyPreviewResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetLifecyclePolicyPreviewResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetLifecyclePolicyPreviewRequest, GetLifecyclePolicyPreviewResult>",
      "asyncReturnType" : "GetLifecyclePolicyPreviewResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Retrieves the results of the specified lifecycle policy preview request.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LifecyclePolicyPreviewNotFoundException",
        "documentation" : "<p>There is no dry run for this repository.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetLifecyclePolicyPreviewRequest",
        "variableName" : "getLifecyclePolicyPreviewRequest",
        "variableType" : "GetLifecyclePolicyPreviewRequest",
        "documentation" : "",
        "simpleType" : "GetLifecyclePolicyPreviewRequest",
        "variableSetterType" : "GetLifecyclePolicyPreviewRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getLifecyclePolicyPreview",
      "operationName" : "GetLifecyclePolicyPreview",
      "returnType" : {
        "returnType" : "GetLifecyclePolicyPreviewResult",
        "documentation" : null
      },
      "syncReturnType" : "GetLifecyclePolicyPreviewResult"
    },
    "GetRepositoryPolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetRepositoryPolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetRepositoryPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetRepositoryPolicyRequest, GetRepositoryPolicyResult>",
      "asyncReturnType" : "GetRepositoryPolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Retrieves the repository policy for a specified repository.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryPolicyNotFoundException",
        "documentation" : "<p>The specified repository and registry combination does not have an associated repository policy.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetRepositoryPolicyRequest",
        "variableName" : "getRepositoryPolicyRequest",
        "variableType" : "GetRepositoryPolicyRequest",
        "documentation" : "",
        "simpleType" : "GetRepositoryPolicyRequest",
        "variableSetterType" : "GetRepositoryPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getRepositoryPolicy",
      "operationName" : "GetRepositoryPolicy",
      "returnType" : {
        "returnType" : "GetRepositoryPolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "GetRepositoryPolicyResult"
    },
    "InitiateLayerUpload" : {
      "asyncCallableType" : "java.util.concurrent.Callable<InitiateLayerUploadResult>",
      "asyncFutureType" : "java.util.concurrent.Future<InitiateLayerUploadResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<InitiateLayerUploadRequest, InitiateLayerUploadResult>",
      "asyncReturnType" : "InitiateLayerUploadResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Notify Amazon ECR that you intend to upload an image layer.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InitiateLayerUploadRequest",
        "variableName" : "initiateLayerUploadRequest",
        "variableType" : "InitiateLayerUploadRequest",
        "documentation" : "",
        "simpleType" : "InitiateLayerUploadRequest",
        "variableSetterType" : "InitiateLayerUploadRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "initiateLayerUpload",
      "operationName" : "InitiateLayerUpload",
      "returnType" : {
        "returnType" : "InitiateLayerUploadResult",
        "documentation" : null
      },
      "syncReturnType" : "InitiateLayerUploadResult"
    },
    "ListImages" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListImagesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListImagesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListImagesRequest, ListImagesResult>",
      "asyncReturnType" : "ListImagesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists all the image IDs for a given repository.</p> <p>You can filter images based on whether or not they are tagged by setting the <code>tagStatus</code> parameter to <code>TAGGED</code> or <code>UNTAGGED</code>. For example, you can filter your results to return only <code>UNTAGGED</code> images and then pipe that result to a <a>BatchDeleteImage</a> operation to delete them. Or, you can filter your results to return only <code>TAGGED</code> images to list all of the tags in your repository.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListImagesRequest",
        "variableName" : "listImagesRequest",
        "variableType" : "ListImagesRequest",
        "documentation" : "",
        "simpleType" : "ListImagesRequest",
        "variableSetterType" : "ListImagesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listImages",
      "operationName" : "ListImages",
      "returnType" : {
        "returnType" : "ListImagesResult",
        "documentation" : null
      },
      "syncReturnType" : "ListImagesResult"
    },
    "ListTagsForResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListTagsForResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListTagsForResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListTagsForResourceRequest, ListTagsForResourceResult>",
      "asyncReturnType" : "ListTagsForResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>List the tags for an Amazon ECR resource.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTagsForResourceRequest",
        "variableName" : "listTagsForResourceRequest",
        "variableType" : "ListTagsForResourceRequest",
        "documentation" : "",
        "simpleType" : "ListTagsForResourceRequest",
        "variableSetterType" : "ListTagsForResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listTagsForResource",
      "operationName" : "ListTagsForResource",
      "returnType" : {
        "returnType" : "ListTagsForResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "ListTagsForResourceResult"
    },
    "PutImage" : {
      "asyncCallableType" : "java.util.concurrent.Callable<PutImageResult>",
      "asyncFutureType" : "java.util.concurrent.Future<PutImageResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutImageRequest, PutImageResult>",
      "asyncReturnType" : "PutImageResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates or updates the image manifest and tags associated with an image.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ImageAlreadyExistsException",
        "documentation" : "<p>The specified image has already been pushed, and there were no changes to the manifest or image tag after the last push.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LayersNotFoundException",
        "documentation" : "<p>The specified layers could not be found, or the specified layer is not valid for this repository.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The operation did not succeed because it would have exceeded a service limit for your account. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonECR/latest/userguide/service_limits.html\">Amazon ECR Default Service Limits</a> in the Amazon Elastic Container Registry User Guide.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutImageRequest",
        "variableName" : "putImageRequest",
        "variableType" : "PutImageRequest",
        "documentation" : "",
        "simpleType" : "PutImageRequest",
        "variableSetterType" : "PutImageRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "putImage",
      "operationName" : "PutImage",
      "returnType" : {
        "returnType" : "PutImageResult",
        "documentation" : null
      },
      "syncReturnType" : "PutImageResult"
    },
    "PutLifecyclePolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<PutLifecyclePolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<PutLifecyclePolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutLifecyclePolicyRequest, PutLifecyclePolicyResult>",
      "asyncReturnType" : "PutLifecyclePolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates or updates a lifecycle policy. For information about lifecycle policy syntax, see <a href=\"http://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html\">Lifecycle Policy Template</a>.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutLifecyclePolicyRequest",
        "variableName" : "putLifecyclePolicyRequest",
        "variableType" : "PutLifecyclePolicyRequest",
        "documentation" : "",
        "simpleType" : "PutLifecyclePolicyRequest",
        "variableSetterType" : "PutLifecyclePolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "putLifecyclePolicy",
      "operationName" : "PutLifecyclePolicy",
      "returnType" : {
        "returnType" : "PutLifecyclePolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "PutLifecyclePolicyResult"
    },
    "SetRepositoryPolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<SetRepositoryPolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<SetRepositoryPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<SetRepositoryPolicyRequest, SetRepositoryPolicyResult>",
      "asyncReturnType" : "SetRepositoryPolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Applies a repository policy on a specified repository to control access permissions.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "SetRepositoryPolicyRequest",
        "variableName" : "setRepositoryPolicyRequest",
        "variableType" : "SetRepositoryPolicyRequest",
        "documentation" : "",
        "simpleType" : "SetRepositoryPolicyRequest",
        "variableSetterType" : "SetRepositoryPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "setRepositoryPolicy",
      "operationName" : "SetRepositoryPolicy",
      "returnType" : {
        "returnType" : "SetRepositoryPolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "SetRepositoryPolicyResult"
    },
    "StartLifecyclePolicyPreview" : {
      "asyncCallableType" : "java.util.concurrent.Callable<StartLifecyclePolicyPreviewResult>",
      "asyncFutureType" : "java.util.concurrent.Future<StartLifecyclePolicyPreviewResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<StartLifecyclePolicyPreviewRequest, StartLifecyclePolicyPreviewResult>",
      "asyncReturnType" : "StartLifecyclePolicyPreviewResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Starts a preview of the specified lifecycle policy. This allows you to see the results before creating the lifecycle policy.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LifecyclePolicyNotFoundException",
        "documentation" : "<p>The lifecycle policy could not be found, and no policy is set to the repository.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LifecyclePolicyPreviewInProgressException",
        "documentation" : "<p>The previous lifecycle policy preview request has not completed. Please try again later.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "StartLifecyclePolicyPreviewRequest",
        "variableName" : "startLifecyclePolicyPreviewRequest",
        "variableType" : "StartLifecyclePolicyPreviewRequest",
        "documentation" : "",
        "simpleType" : "StartLifecyclePolicyPreviewRequest",
        "variableSetterType" : "StartLifecyclePolicyPreviewRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "startLifecyclePolicyPreview",
      "operationName" : "StartLifecyclePolicyPreview",
      "returnType" : {
        "returnType" : "StartLifecyclePolicyPreviewResult",
        "documentation" : null
      },
      "syncReturnType" : "StartLifecyclePolicyPreviewResult"
    },
    "TagResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<TagResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<TagResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<TagResourceRequest, TagResourceResult>",
      "asyncReturnType" : "TagResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Adds specified tags to a resource with the specified ARN. Existing tags on a resource are not changed if they are not specified in the request parameters.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidTagParameterException",
        "documentation" : "<p>An invalid parameter has been specified. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TooManyTagsException",
        "documentation" : "<p>The list of tags on the repository is over the limit. The maximum number of tags that can be applied to a repository is 50.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TagResourceRequest",
        "variableName" : "tagResourceRequest",
        "variableType" : "TagResourceRequest",
        "documentation" : "",
        "simpleType" : "TagResourceRequest",
        "variableSetterType" : "TagResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "tagResource",
      "operationName" : "TagResource",
      "returnType" : {
        "returnType" : "TagResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "TagResourceResult"
    },
    "UntagResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UntagResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UntagResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UntagResourceRequest, UntagResourceResult>",
      "asyncReturnType" : "UntagResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes specified tags from a resource.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidTagParameterException",
        "documentation" : "<p>An invalid parameter has been specified. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "TooManyTagsException",
        "documentation" : "<p>The list of tags on the repository is over the limit. The maximum number of tags that can be applied to a repository is 50.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UntagResourceRequest",
        "variableName" : "untagResourceRequest",
        "variableType" : "UntagResourceRequest",
        "documentation" : "",
        "simpleType" : "UntagResourceRequest",
        "variableSetterType" : "UntagResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "untagResource",
      "operationName" : "UntagResource",
      "returnType" : {
        "returnType" : "UntagResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "UntagResourceResult"
    },
    "UploadLayerPart" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UploadLayerPartResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UploadLayerPartResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UploadLayerPartRequest, UploadLayerPartResult>",
      "asyncReturnType" : "UploadLayerPartResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Uploads an image layer part to Amazon ECR.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidLayerPartException",
        "documentation" : "<p>The layer part size is not valid, or the first byte specified is not consecutive to the last byte of a previous layer part upload.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "UploadNotFoundException",
        "documentation" : "<p>The upload could not be found, or the specified upload id is not valid for this repository.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The operation did not succeed because it would have exceeded a service limit for your account. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonECR/latest/userguide/service_limits.html\">Amazon ECR Default Service Limits</a> in the Amazon Elastic Container Registry User Guide.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UploadLayerPartRequest",
        "variableName" : "uploadLayerPartRequest",
        "variableType" : "UploadLayerPartRequest",
        "documentation" : "",
        "simpleType" : "UploadLayerPartRequest",
        "variableSetterType" : "UploadLayerPartRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "uploadLayerPart",
      "operationName" : "UploadLayerPart",
      "returnType" : {
        "returnType" : "UploadLayerPartResult",
        "documentation" : null
      },
      "syncReturnType" : "UploadLayerPartResult"
    }
  },
  "shapes" : {
    "AuthorizationData" : {
      "c2jName" : "AuthorizationData",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object representing authorization data for an Amazon ECR registry.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "authorizationToken",
        "c2jShape" : "Base64",
        "deprecated" : false,
        "documentation" : "<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>\n@param authorizationToken A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAuthorizationToken",
        "getterDocumentation" : "/**<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>\n@return A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.*/",
        "getterMethodName" : "getAuthorizationToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "authorizationToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "authorizationToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AuthorizationToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>\n@param authorizationToken A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.*/",
        "setterMethodName" : "setAuthorizationToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "authorizationToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>\n@param authorizationToken A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "authorizationToken",
          "variableType" : "String",
          "documentation" : "<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "expiresAt",
        "c2jShape" : "ExpirationTimestamp",
        "deprecated" : false,
        "documentation" : "<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>\n@param expiresAt The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withExpiresAt",
        "getterDocumentation" : "/**<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>\n@return The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.*/",
        "getterMethodName" : "getExpiresAt",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "expiresAt",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "expiresAt",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "ExpiresAt",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>\n@param expiresAt The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.*/",
        "setterMethodName" : "setExpiresAt",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "expiresAt",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>\n@param expiresAt The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "expiresAt",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "proxyEndpoint",
        "c2jShape" : "ProxyEndpoint",
        "deprecated" : false,
        "documentation" : "<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>\n@param proxyEndpoint The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>..\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withProxyEndpoint",
        "getterDocumentation" : "/**<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>\n@return The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>..*/",
        "getterMethodName" : "getProxyEndpoint",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "proxyEndpoint",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "proxyEndpoint",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ProxyEndpoint",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>\n@param proxyEndpoint The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>..*/",
        "setterMethodName" : "setProxyEndpoint",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "proxyEndpoint",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>\n@param proxyEndpoint The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>..\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "proxyEndpoint",
          "variableType" : "String",
          "documentation" : "<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AuthorizationToken" : {
          "c2jName" : "authorizationToken",
          "c2jShape" : "Base64",
          "deprecated" : false,
          "documentation" : "<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>\n@param authorizationToken A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAuthorizationToken",
          "getterDocumentation" : "/**<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>\n@return A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.*/",
          "getterMethodName" : "getAuthorizationToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "authorizationToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "authorizationToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AuthorizationToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>\n@param authorizationToken A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.*/",
          "setterMethodName" : "setAuthorizationToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "authorizationToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>\n@param authorizationToken A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "authorizationToken",
            "variableType" : "String",
            "documentation" : "<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ExpiresAt" : {
          "c2jName" : "expiresAt",
          "c2jShape" : "ExpirationTimestamp",
          "deprecated" : false,
          "documentation" : "<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>\n@param expiresAt The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withExpiresAt",
          "getterDocumentation" : "/**<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>\n@return The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.*/",
          "getterMethodName" : "getExpiresAt",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "expiresAt",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "expiresAt",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "ExpiresAt",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>\n@param expiresAt The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.*/",
          "setterMethodName" : "setExpiresAt",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "expiresAt",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>\n@param expiresAt The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "expiresAt",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "ProxyEndpoint" : {
          "c2jName" : "proxyEndpoint",
          "c2jShape" : "ProxyEndpoint",
          "deprecated" : false,
          "documentation" : "<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>\n@param proxyEndpoint The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>..\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withProxyEndpoint",
          "getterDocumentation" : "/**<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>\n@return The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>..*/",
          "getterMethodName" : "getProxyEndpoint",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "proxyEndpoint",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "proxyEndpoint",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ProxyEndpoint",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>\n@param proxyEndpoint The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>..*/",
          "setterMethodName" : "setProxyEndpoint",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "proxyEndpoint",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>\n@param proxyEndpoint The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>..\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "proxyEndpoint",
            "variableType" : "String",
            "documentation" : "<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AuthorizationData",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AuthorizationData",
        "variableName" : "authorizationData",
        "variableType" : "AuthorizationData",
        "documentation" : null,
        "simpleType" : "AuthorizationData",
        "variableSetterType" : "AuthorizationData"
      },
      "wrapper" : false
    },
    "BatchCheckLayerAvailabilityRequest" : {
      "c2jName" : "BatchCheckLayerAvailabilityRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "BatchCheckLayerAvailability",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.BatchCheckLayerAvailability",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository that is associated with the image layers to check.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository that is associated with the image layers to check.</p>\n@param repositoryName The name of the repository that is associated with the image layers to check.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository that is associated with the image layers to check.</p>\n@return The name of the repository that is associated with the image layers to check.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository that is associated with the image layers to check.</p>\n@param repositoryName The name of the repository that is associated with the image layers to check.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository that is associated with the image layers to check.</p>\n@param repositoryName The name of the repository that is associated with the image layers to check.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository that is associated with the image layers to check.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "layerDigests",
        "c2jShape" : "BatchedOperationLayerDigestList",
        "deprecated" : false,
        "documentation" : "<p>The digests of the image layers to check.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The digests of the image layers to check.</p>\n@param layerDigests The digests of the image layers to check.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLayerDigests",
        "getterDocumentation" : "/**<p>The digests of the image layers to check.</p>\n@return The digests of the image layers to check.*/",
        "getterMethodName" : "getLayerDigests",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "layerDigests",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "layerDigests",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "BatchedOperationLayerDigest",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "LayerDigests",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The digests of the image layers to check.</p>\n@param layerDigests The digests of the image layers to check.*/",
        "setterMethodName" : "setLayerDigests",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "layerDigests",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The digests of the image layers to check.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLayerDigests(java.util.Collection)} or {@link #withLayerDigests(java.util.Collection)} if you want to override the existing values.</p>\n@param layerDigests The digests of the image layers to check.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "layerDigests",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The digests of the image layers to check.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LayerDigests" : {
          "c2jName" : "layerDigests",
          "c2jShape" : "BatchedOperationLayerDigestList",
          "deprecated" : false,
          "documentation" : "<p>The digests of the image layers to check.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The digests of the image layers to check.</p>\n@param layerDigests The digests of the image layers to check.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLayerDigests",
          "getterDocumentation" : "/**<p>The digests of the image layers to check.</p>\n@return The digests of the image layers to check.*/",
          "getterMethodName" : "getLayerDigests",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "layerDigests",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "layerDigests",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "BatchedOperationLayerDigest",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "LayerDigests",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The digests of the image layers to check.</p>\n@param layerDigests The digests of the image layers to check.*/",
          "setterMethodName" : "setLayerDigests",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "layerDigests",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The digests of the image layers to check.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLayerDigests(java.util.Collection)} or {@link #withLayerDigests(java.util.Collection)} if you want to override the existing values.</p>\n@param layerDigests The digests of the image layers to check.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "layerDigests",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The digests of the image layers to check.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that is associated with the image layers to check.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository that is associated with the image layers to check.</p>\n@param repositoryName The name of the repository that is associated with the image layers to check.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository that is associated with the image layers to check.</p>\n@return The name of the repository that is associated with the image layers to check.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository that is associated with the image layers to check.</p>\n@param repositoryName The name of the repository that is associated with the image layers to check.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository that is associated with the image layers to check.</p>\n@param repositoryName The name of the repository that is associated with the image layers to check.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository that is associated with the image layers to check.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "layerDigests" ],
      "shapeName" : "BatchCheckLayerAvailabilityRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchCheckLayerAvailabilityRequest",
        "variableName" : "batchCheckLayerAvailabilityRequest",
        "variableType" : "BatchCheckLayerAvailabilityRequest",
        "documentation" : null,
        "simpleType" : "BatchCheckLayerAvailabilityRequest",
        "variableSetterType" : "BatchCheckLayerAvailabilityRequest"
      },
      "wrapper" : false
    },
    "BatchCheckLayerAvailabilityResult" : {
      "c2jName" : "BatchCheckLayerAvailabilityResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "layers",
        "c2jShape" : "LayerList",
        "deprecated" : false,
        "documentation" : "<p>A list of image layer objects corresponding to the image layer references in the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of image layer objects corresponding to the image layer references in the request.</p>\n@param layers A list of image layer objects corresponding to the image layer references in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLayers",
        "getterDocumentation" : "/**<p>A list of image layer objects corresponding to the image layer references in the request.</p>\n@return A list of image layer objects corresponding to the image layer references in the request.*/",
        "getterMethodName" : "getLayers",
        "getterModel" : {
          "returnType" : "java.util.List<Layer>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "layers",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "layers",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Layer",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Layer",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Layer",
              "variableName" : "member",
              "variableType" : "Layer",
              "documentation" : "",
              "simpleType" : "Layer",
              "variableSetterType" : "Layer"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Layer",
              "variableName" : "member",
              "variableType" : "Layer",
              "documentation" : "",
              "simpleType" : "Layer",
              "variableSetterType" : "Layer"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Layer",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Layer",
          "templateImplType" : "java.util.ArrayList<Layer>",
          "templateType" : "java.util.List<Layer>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Layers",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of image layer objects corresponding to the image layer references in the request.</p>\n@param layers A list of image layer objects corresponding to the image layer references in the request.*/",
        "setterMethodName" : "setLayers",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Layer>",
          "variableName" : "layers",
          "variableType" : "java.util.List<Layer>",
          "documentation" : "",
          "simpleType" : "List<Layer>",
          "variableSetterType" : "java.util.Collection<Layer>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of image layer objects corresponding to the image layer references in the request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLayers(java.util.Collection)} or {@link #withLayers(java.util.Collection)} if you want to override the existing values.</p>\n@param layers A list of image layer objects corresponding to the image layer references in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Layer>",
          "variableName" : "layers",
          "variableType" : "java.util.List<Layer>",
          "documentation" : "<p>A list of image layer objects corresponding to the image layer references in the request.</p>",
          "simpleType" : "List<Layer>",
          "variableSetterType" : "java.util.Collection<Layer>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "failures",
        "c2jShape" : "LayerFailureList",
        "deprecated" : false,
        "documentation" : "<p>Any failures associated with the call.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailures",
        "getterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@return Any failures associated with the call.*/",
        "getterMethodName" : "getFailures",
        "getterModel" : {
          "returnType" : "java.util.List<LayerFailure>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "failures",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "failures",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "LayerFailure",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "LayerFailure",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "LayerFailure",
              "variableName" : "member",
              "variableType" : "LayerFailure",
              "documentation" : "",
              "simpleType" : "LayerFailure",
              "variableSetterType" : "LayerFailure"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "LayerFailure",
              "variableName" : "member",
              "variableType" : "LayerFailure",
              "documentation" : "",
              "simpleType" : "LayerFailure",
              "variableSetterType" : "LayerFailure"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "LayerFailure",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "LayerFailure",
          "templateImplType" : "java.util.ArrayList<LayerFailure>",
          "templateType" : "java.util.List<LayerFailure>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Failures",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.*/",
        "setterMethodName" : "setFailures",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<LayerFailure>",
          "variableName" : "failures",
          "variableType" : "java.util.List<LayerFailure>",
          "documentation" : "",
          "simpleType" : "List<LayerFailure>",
          "variableSetterType" : "java.util.Collection<LayerFailure>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailures(java.util.Collection)} or {@link #withFailures(java.util.Collection)} if you want to override the existing values.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<LayerFailure>",
          "variableName" : "failures",
          "variableType" : "java.util.List<LayerFailure>",
          "documentation" : "<p>Any failures associated with the call.</p>",
          "simpleType" : "List<LayerFailure>",
          "variableSetterType" : "java.util.Collection<LayerFailure>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Failures" : {
          "c2jName" : "failures",
          "c2jShape" : "LayerFailureList",
          "deprecated" : false,
          "documentation" : "<p>Any failures associated with the call.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailures",
          "getterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@return Any failures associated with the call.*/",
          "getterMethodName" : "getFailures",
          "getterModel" : {
            "returnType" : "java.util.List<LayerFailure>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "failures",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "failures",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "LayerFailure",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "LayerFailure",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "LayerFailure",
                "variableName" : "member",
                "variableType" : "LayerFailure",
                "documentation" : "",
                "simpleType" : "LayerFailure",
                "variableSetterType" : "LayerFailure"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "LayerFailure",
                "variableName" : "member",
                "variableType" : "LayerFailure",
                "documentation" : "",
                "simpleType" : "LayerFailure",
                "variableSetterType" : "LayerFailure"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "LayerFailure",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "LayerFailure",
            "templateImplType" : "java.util.ArrayList<LayerFailure>",
            "templateType" : "java.util.List<LayerFailure>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Failures",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.*/",
          "setterMethodName" : "setFailures",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<LayerFailure>",
            "variableName" : "failures",
            "variableType" : "java.util.List<LayerFailure>",
            "documentation" : "",
            "simpleType" : "List<LayerFailure>",
            "variableSetterType" : "java.util.Collection<LayerFailure>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailures(java.util.Collection)} or {@link #withFailures(java.util.Collection)} if you want to override the existing values.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<LayerFailure>",
            "variableName" : "failures",
            "variableType" : "java.util.List<LayerFailure>",
            "documentation" : "<p>Any failures associated with the call.</p>",
            "simpleType" : "List<LayerFailure>",
            "variableSetterType" : "java.util.Collection<LayerFailure>"
          },
          "xmlNameSpaceUri" : null
        },
        "Layers" : {
          "c2jName" : "layers",
          "c2jShape" : "LayerList",
          "deprecated" : false,
          "documentation" : "<p>A list of image layer objects corresponding to the image layer references in the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of image layer objects corresponding to the image layer references in the request.</p>\n@param layers A list of image layer objects corresponding to the image layer references in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLayers",
          "getterDocumentation" : "/**<p>A list of image layer objects corresponding to the image layer references in the request.</p>\n@return A list of image layer objects corresponding to the image layer references in the request.*/",
          "getterMethodName" : "getLayers",
          "getterModel" : {
            "returnType" : "java.util.List<Layer>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "layers",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "layers",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Layer",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Layer",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Layer",
                "variableName" : "member",
                "variableType" : "Layer",
                "documentation" : "",
                "simpleType" : "Layer",
                "variableSetterType" : "Layer"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Layer",
                "variableName" : "member",
                "variableType" : "Layer",
                "documentation" : "",
                "simpleType" : "Layer",
                "variableSetterType" : "Layer"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Layer",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Layer",
            "templateImplType" : "java.util.ArrayList<Layer>",
            "templateType" : "java.util.List<Layer>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Layers",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of image layer objects corresponding to the image layer references in the request.</p>\n@param layers A list of image layer objects corresponding to the image layer references in the request.*/",
          "setterMethodName" : "setLayers",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Layer>",
            "variableName" : "layers",
            "variableType" : "java.util.List<Layer>",
            "documentation" : "",
            "simpleType" : "List<Layer>",
            "variableSetterType" : "java.util.Collection<Layer>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of image layer objects corresponding to the image layer references in the request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLayers(java.util.Collection)} or {@link #withLayers(java.util.Collection)} if you want to override the existing values.</p>\n@param layers A list of image layer objects corresponding to the image layer references in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Layer>",
            "variableName" : "layers",
            "variableType" : "java.util.List<Layer>",
            "documentation" : "<p>A list of image layer objects corresponding to the image layer references in the request.</p>",
            "simpleType" : "List<Layer>",
            "variableSetterType" : "java.util.Collection<Layer>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BatchCheckLayerAvailabilityResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchCheckLayerAvailabilityResult",
        "variableName" : "batchCheckLayerAvailabilityResult",
        "variableType" : "BatchCheckLayerAvailabilityResult",
        "documentation" : null,
        "simpleType" : "BatchCheckLayerAvailabilityResult",
        "variableSetterType" : "BatchCheckLayerAvailabilityResult"
      },
      "wrapper" : false
    },
    "BatchDeleteImageRequest" : {
      "c2jName" : "BatchDeleteImageRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Deletes specified images within a specified repository. Images are specified with either the <code>imageTag</code> or <code>imageDigest</code>.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "BatchDeleteImage",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.BatchDeleteImage",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The repository that contains the image to delete.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository that contains the image to delete.</p>\n@param repositoryName The repository that contains the image to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The repository that contains the image to delete.</p>\n@return The repository that contains the image to delete.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository that contains the image to delete.</p>\n@param repositoryName The repository that contains the image to delete.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository that contains the image to delete.</p>\n@param repositoryName The repository that contains the image to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The repository that contains the image to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imageIds",
        "c2jShape" : "ImageIdentifierList",
        "deprecated" : false,
        "documentation" : "<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@param imageIds A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageIds",
        "getterDocumentation" : "/**<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@return A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.*/",
        "getterMethodName" : "getImageIds",
        "getterModel" : {
          "returnType" : "java.util.List<ImageIdentifier>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageIds",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ImageIdentifier",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ImageIdentifier",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageIdentifier",
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageIdentifier",
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ImageIdentifier",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ImageIdentifier",
          "templateImplType" : "java.util.ArrayList<ImageIdentifier>",
          "templateType" : "java.util.List<ImageIdentifier>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ImageIds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@param imageIds A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.*/",
        "setterMethodName" : "setImageIds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "documentation" : "",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "documentation" : "<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ImageIds" : {
          "c2jName" : "imageIds",
          "c2jShape" : "ImageIdentifierList",
          "deprecated" : false,
          "documentation" : "<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@param imageIds A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageIds",
          "getterDocumentation" : "/**<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@return A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.*/",
          "getterMethodName" : "getImageIds",
          "getterModel" : {
            "returnType" : "java.util.List<ImageIdentifier>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageIds",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ImageIdentifier",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ImageIdentifier",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageIdentifier",
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageIdentifier",
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ImageIdentifier",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ImageIdentifier",
            "templateImplType" : "java.util.ArrayList<ImageIdentifier>",
            "templateType" : "java.util.List<ImageIdentifier>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ImageIds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@param imageIds A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.*/",
          "setterMethodName" : "setImageIds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "documentation" : "",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "documentation" : "<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The repository that contains the image to delete.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository that contains the image to delete.</p>\n@param repositoryName The repository that contains the image to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The repository that contains the image to delete.</p>\n@return The repository that contains the image to delete.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository that contains the image to delete.</p>\n@param repositoryName The repository that contains the image to delete.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository that contains the image to delete.</p>\n@param repositoryName The repository that contains the image to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The repository that contains the image to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "imageIds" ],
      "shapeName" : "BatchDeleteImageRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchDeleteImageRequest",
        "variableName" : "batchDeleteImageRequest",
        "variableType" : "BatchDeleteImageRequest",
        "documentation" : null,
        "simpleType" : "BatchDeleteImageRequest",
        "variableSetterType" : "BatchDeleteImageRequest"
      },
      "wrapper" : false
    },
    "BatchDeleteImageResult" : {
      "c2jName" : "BatchDeleteImageResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "imageIds",
        "c2jShape" : "ImageIdentifierList",
        "deprecated" : false,
        "documentation" : "<p>The image IDs of the deleted images.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The image IDs of the deleted images.</p>\n@param imageIds The image IDs of the deleted images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageIds",
        "getterDocumentation" : "/**<p>The image IDs of the deleted images.</p>\n@return The image IDs of the deleted images.*/",
        "getterMethodName" : "getImageIds",
        "getterModel" : {
          "returnType" : "java.util.List<ImageIdentifier>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageIds",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ImageIdentifier",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ImageIdentifier",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageIdentifier",
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageIdentifier",
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ImageIdentifier",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ImageIdentifier",
          "templateImplType" : "java.util.ArrayList<ImageIdentifier>",
          "templateType" : "java.util.List<ImageIdentifier>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ImageIds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The image IDs of the deleted images.</p>\n@param imageIds The image IDs of the deleted images.*/",
        "setterMethodName" : "setImageIds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "documentation" : "",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The image IDs of the deleted images.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds The image IDs of the deleted images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "documentation" : "<p>The image IDs of the deleted images.</p>",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "failures",
        "c2jShape" : "ImageFailureList",
        "deprecated" : false,
        "documentation" : "<p>Any failures associated with the call.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailures",
        "getterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@return Any failures associated with the call.*/",
        "getterMethodName" : "getFailures",
        "getterModel" : {
          "returnType" : "java.util.List<ImageFailure>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "failures",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "failures",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ImageFailure",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ImageFailure",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageFailure",
              "variableName" : "member",
              "variableType" : "ImageFailure",
              "documentation" : "",
              "simpleType" : "ImageFailure",
              "variableSetterType" : "ImageFailure"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageFailure",
              "variableName" : "member",
              "variableType" : "ImageFailure",
              "documentation" : "",
              "simpleType" : "ImageFailure",
              "variableSetterType" : "ImageFailure"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ImageFailure",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ImageFailure",
          "templateImplType" : "java.util.ArrayList<ImageFailure>",
          "templateType" : "java.util.List<ImageFailure>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Failures",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.*/",
        "setterMethodName" : "setFailures",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageFailure>",
          "variableName" : "failures",
          "variableType" : "java.util.List<ImageFailure>",
          "documentation" : "",
          "simpleType" : "List<ImageFailure>",
          "variableSetterType" : "java.util.Collection<ImageFailure>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailures(java.util.Collection)} or {@link #withFailures(java.util.Collection)} if you want to override the existing values.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageFailure>",
          "variableName" : "failures",
          "variableType" : "java.util.List<ImageFailure>",
          "documentation" : "<p>Any failures associated with the call.</p>",
          "simpleType" : "List<ImageFailure>",
          "variableSetterType" : "java.util.Collection<ImageFailure>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Failures" : {
          "c2jName" : "failures",
          "c2jShape" : "ImageFailureList",
          "deprecated" : false,
          "documentation" : "<p>Any failures associated with the call.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailures",
          "getterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@return Any failures associated with the call.*/",
          "getterMethodName" : "getFailures",
          "getterModel" : {
            "returnType" : "java.util.List<ImageFailure>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "failures",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "failures",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ImageFailure",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ImageFailure",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageFailure",
                "variableName" : "member",
                "variableType" : "ImageFailure",
                "documentation" : "",
                "simpleType" : "ImageFailure",
                "variableSetterType" : "ImageFailure"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageFailure",
                "variableName" : "member",
                "variableType" : "ImageFailure",
                "documentation" : "",
                "simpleType" : "ImageFailure",
                "variableSetterType" : "ImageFailure"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ImageFailure",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ImageFailure",
            "templateImplType" : "java.util.ArrayList<ImageFailure>",
            "templateType" : "java.util.List<ImageFailure>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Failures",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.*/",
          "setterMethodName" : "setFailures",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageFailure>",
            "variableName" : "failures",
            "variableType" : "java.util.List<ImageFailure>",
            "documentation" : "",
            "simpleType" : "List<ImageFailure>",
            "variableSetterType" : "java.util.Collection<ImageFailure>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailures(java.util.Collection)} or {@link #withFailures(java.util.Collection)} if you want to override the existing values.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageFailure>",
            "variableName" : "failures",
            "variableType" : "java.util.List<ImageFailure>",
            "documentation" : "<p>Any failures associated with the call.</p>",
            "simpleType" : "List<ImageFailure>",
            "variableSetterType" : "java.util.Collection<ImageFailure>"
          },
          "xmlNameSpaceUri" : null
        },
        "ImageIds" : {
          "c2jName" : "imageIds",
          "c2jShape" : "ImageIdentifierList",
          "deprecated" : false,
          "documentation" : "<p>The image IDs of the deleted images.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The image IDs of the deleted images.</p>\n@param imageIds The image IDs of the deleted images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageIds",
          "getterDocumentation" : "/**<p>The image IDs of the deleted images.</p>\n@return The image IDs of the deleted images.*/",
          "getterMethodName" : "getImageIds",
          "getterModel" : {
            "returnType" : "java.util.List<ImageIdentifier>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageIds",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ImageIdentifier",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ImageIdentifier",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageIdentifier",
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageIdentifier",
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ImageIdentifier",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ImageIdentifier",
            "templateImplType" : "java.util.ArrayList<ImageIdentifier>",
            "templateType" : "java.util.List<ImageIdentifier>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ImageIds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The image IDs of the deleted images.</p>\n@param imageIds The image IDs of the deleted images.*/",
          "setterMethodName" : "setImageIds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "documentation" : "",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The image IDs of the deleted images.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds The image IDs of the deleted images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "documentation" : "<p>The image IDs of the deleted images.</p>",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BatchDeleteImageResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchDeleteImageResult",
        "variableName" : "batchDeleteImageResult",
        "variableType" : "BatchDeleteImageResult",
        "documentation" : null,
        "simpleType" : "BatchDeleteImageResult",
        "variableSetterType" : "BatchDeleteImageResult"
      },
      "wrapper" : false
    },
    "BatchGetImageRequest" : {
      "c2jName" : "BatchGetImageRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "BatchGetImage",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.BatchGetImage",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The repository that contains the images to describe.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository that contains the images to describe.</p>\n@param repositoryName The repository that contains the images to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The repository that contains the images to describe.</p>\n@return The repository that contains the images to describe.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository that contains the images to describe.</p>\n@param repositoryName The repository that contains the images to describe.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository that contains the images to describe.</p>\n@param repositoryName The repository that contains the images to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The repository that contains the images to describe.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imageIds",
        "c2jShape" : "ImageIdentifierList",
        "deprecated" : false,
        "documentation" : "<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@param imageIds A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageIds",
        "getterDocumentation" : "/**<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@return A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.*/",
        "getterMethodName" : "getImageIds",
        "getterModel" : {
          "returnType" : "java.util.List<ImageIdentifier>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageIds",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ImageIdentifier",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ImageIdentifier",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageIdentifier",
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageIdentifier",
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ImageIdentifier",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ImageIdentifier",
          "templateImplType" : "java.util.ArrayList<ImageIdentifier>",
          "templateType" : "java.util.List<ImageIdentifier>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ImageIds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@param imageIds A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.*/",
        "setterMethodName" : "setImageIds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "documentation" : "",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "documentation" : "<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "acceptedMediaTypes",
        "c2jShape" : "MediaTypeList",
        "deprecated" : false,
        "documentation" : "<p>The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code> </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code> </p>\n@param acceptedMediaTypes The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAcceptedMediaTypes",
        "getterDocumentation" : "/**<p>The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code> </p>\n@return The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code>*/",
        "getterMethodName" : "getAcceptedMediaTypes",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "acceptedMediaTypes",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "acceptedMediaTypes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "MediaType",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "AcceptedMediaTypes",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code> </p>\n@param acceptedMediaTypes The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code>*/",
        "setterMethodName" : "setAcceptedMediaTypes",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "acceptedMediaTypes",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code> </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAcceptedMediaTypes(java.util.Collection)} or {@link #withAcceptedMediaTypes(java.util.Collection)} if you want to override the existing values.</p>\n@param acceptedMediaTypes The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "acceptedMediaTypes",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code> </p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AcceptedMediaTypes" : {
          "c2jName" : "acceptedMediaTypes",
          "c2jShape" : "MediaTypeList",
          "deprecated" : false,
          "documentation" : "<p>The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code> </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code> </p>\n@param acceptedMediaTypes The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAcceptedMediaTypes",
          "getterDocumentation" : "/**<p>The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code> </p>\n@return The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code>*/",
          "getterMethodName" : "getAcceptedMediaTypes",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "acceptedMediaTypes",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "acceptedMediaTypes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "MediaType",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "AcceptedMediaTypes",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code> </p>\n@param acceptedMediaTypes The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code>*/",
          "setterMethodName" : "setAcceptedMediaTypes",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "acceptedMediaTypes",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code> </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAcceptedMediaTypes(java.util.Collection)} or {@link #withAcceptedMediaTypes(java.util.Collection)} if you want to override the existing values.</p>\n@param acceptedMediaTypes The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "acceptedMediaTypes",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code> </p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "ImageIds" : {
          "c2jName" : "imageIds",
          "c2jShape" : "ImageIdentifierList",
          "deprecated" : false,
          "documentation" : "<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@param imageIds A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageIds",
          "getterDocumentation" : "/**<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@return A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.*/",
          "getterMethodName" : "getImageIds",
          "getterModel" : {
            "returnType" : "java.util.List<ImageIdentifier>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageIds",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ImageIdentifier",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ImageIdentifier",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageIdentifier",
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageIdentifier",
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ImageIdentifier",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ImageIdentifier",
            "templateImplType" : "java.util.ArrayList<ImageIdentifier>",
            "templateType" : "java.util.List<ImageIdentifier>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ImageIds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@param imageIds A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.*/",
          "setterMethodName" : "setImageIds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "documentation" : "",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "documentation" : "<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The repository that contains the images to describe.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository that contains the images to describe.</p>\n@param repositoryName The repository that contains the images to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The repository that contains the images to describe.</p>\n@return The repository that contains the images to describe.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository that contains the images to describe.</p>\n@param repositoryName The repository that contains the images to describe.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository that contains the images to describe.</p>\n@param repositoryName The repository that contains the images to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The repository that contains the images to describe.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "imageIds" ],
      "shapeName" : "BatchGetImageRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchGetImageRequest",
        "variableName" : "batchGetImageRequest",
        "variableType" : "BatchGetImageRequest",
        "documentation" : null,
        "simpleType" : "BatchGetImageRequest",
        "variableSetterType" : "BatchGetImageRequest"
      },
      "wrapper" : false
    },
    "BatchGetImageResult" : {
      "c2jName" : "BatchGetImageResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "images",
        "c2jShape" : "ImageList",
        "deprecated" : false,
        "documentation" : "<p>A list of image objects corresponding to the image references in the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of image objects corresponding to the image references in the request.</p>\n@param images A list of image objects corresponding to the image references in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImages",
        "getterDocumentation" : "/**<p>A list of image objects corresponding to the image references in the request.</p>\n@return A list of image objects corresponding to the image references in the request.*/",
        "getterMethodName" : "getImages",
        "getterModel" : {
          "returnType" : "java.util.List<Image>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "images",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "images",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Image",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Image",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Image",
              "variableName" : "member",
              "variableType" : "Image",
              "documentation" : "",
              "simpleType" : "Image",
              "variableSetterType" : "Image"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Image",
              "variableName" : "member",
              "variableType" : "Image",
              "documentation" : "",
              "simpleType" : "Image",
              "variableSetterType" : "Image"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Image",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Image",
          "templateImplType" : "java.util.ArrayList<Image>",
          "templateType" : "java.util.List<Image>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Images",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of image objects corresponding to the image references in the request.</p>\n@param images A list of image objects corresponding to the image references in the request.*/",
        "setterMethodName" : "setImages",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Image>",
          "variableName" : "images",
          "variableType" : "java.util.List<Image>",
          "documentation" : "",
          "simpleType" : "List<Image>",
          "variableSetterType" : "java.util.Collection<Image>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of image objects corresponding to the image references in the request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImages(java.util.Collection)} or {@link #withImages(java.util.Collection)} if you want to override the existing values.</p>\n@param images A list of image objects corresponding to the image references in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Image>",
          "variableName" : "images",
          "variableType" : "java.util.List<Image>",
          "documentation" : "<p>A list of image objects corresponding to the image references in the request.</p>",
          "simpleType" : "List<Image>",
          "variableSetterType" : "java.util.Collection<Image>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "failures",
        "c2jShape" : "ImageFailureList",
        "deprecated" : false,
        "documentation" : "<p>Any failures associated with the call.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailures",
        "getterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@return Any failures associated with the call.*/",
        "getterMethodName" : "getFailures",
        "getterModel" : {
          "returnType" : "java.util.List<ImageFailure>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "failures",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "failures",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ImageFailure",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ImageFailure",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageFailure",
              "variableName" : "member",
              "variableType" : "ImageFailure",
              "documentation" : "",
              "simpleType" : "ImageFailure",
              "variableSetterType" : "ImageFailure"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageFailure",
              "variableName" : "member",
              "variableType" : "ImageFailure",
              "documentation" : "",
              "simpleType" : "ImageFailure",
              "variableSetterType" : "ImageFailure"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ImageFailure",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ImageFailure",
          "templateImplType" : "java.util.ArrayList<ImageFailure>",
          "templateType" : "java.util.List<ImageFailure>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Failures",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.*/",
        "setterMethodName" : "setFailures",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageFailure>",
          "variableName" : "failures",
          "variableType" : "java.util.List<ImageFailure>",
          "documentation" : "",
          "simpleType" : "List<ImageFailure>",
          "variableSetterType" : "java.util.Collection<ImageFailure>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailures(java.util.Collection)} or {@link #withFailures(java.util.Collection)} if you want to override the existing values.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageFailure>",
          "variableName" : "failures",
          "variableType" : "java.util.List<ImageFailure>",
          "documentation" : "<p>Any failures associated with the call.</p>",
          "simpleType" : "List<ImageFailure>",
          "variableSetterType" : "java.util.Collection<ImageFailure>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Failures" : {
          "c2jName" : "failures",
          "c2jShape" : "ImageFailureList",
          "deprecated" : false,
          "documentation" : "<p>Any failures associated with the call.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailures",
          "getterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@return Any failures associated with the call.*/",
          "getterMethodName" : "getFailures",
          "getterModel" : {
            "returnType" : "java.util.List<ImageFailure>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "failures",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "failures",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ImageFailure",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ImageFailure",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageFailure",
                "variableName" : "member",
                "variableType" : "ImageFailure",
                "documentation" : "",
                "simpleType" : "ImageFailure",
                "variableSetterType" : "ImageFailure"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageFailure",
                "variableName" : "member",
                "variableType" : "ImageFailure",
                "documentation" : "",
                "simpleType" : "ImageFailure",
                "variableSetterType" : "ImageFailure"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ImageFailure",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ImageFailure",
            "templateImplType" : "java.util.ArrayList<ImageFailure>",
            "templateType" : "java.util.List<ImageFailure>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Failures",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.*/",
          "setterMethodName" : "setFailures",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageFailure>",
            "variableName" : "failures",
            "variableType" : "java.util.List<ImageFailure>",
            "documentation" : "",
            "simpleType" : "List<ImageFailure>",
            "variableSetterType" : "java.util.Collection<ImageFailure>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailures(java.util.Collection)} or {@link #withFailures(java.util.Collection)} if you want to override the existing values.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageFailure>",
            "variableName" : "failures",
            "variableType" : "java.util.List<ImageFailure>",
            "documentation" : "<p>Any failures associated with the call.</p>",
            "simpleType" : "List<ImageFailure>",
            "variableSetterType" : "java.util.Collection<ImageFailure>"
          },
          "xmlNameSpaceUri" : null
        },
        "Images" : {
          "c2jName" : "images",
          "c2jShape" : "ImageList",
          "deprecated" : false,
          "documentation" : "<p>A list of image objects corresponding to the image references in the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of image objects corresponding to the image references in the request.</p>\n@param images A list of image objects corresponding to the image references in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImages",
          "getterDocumentation" : "/**<p>A list of image objects corresponding to the image references in the request.</p>\n@return A list of image objects corresponding to the image references in the request.*/",
          "getterMethodName" : "getImages",
          "getterModel" : {
            "returnType" : "java.util.List<Image>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "images",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "images",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Image",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Image",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Image",
                "variableName" : "member",
                "variableType" : "Image",
                "documentation" : "",
                "simpleType" : "Image",
                "variableSetterType" : "Image"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Image",
                "variableName" : "member",
                "variableType" : "Image",
                "documentation" : "",
                "simpleType" : "Image",
                "variableSetterType" : "Image"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Image",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Image",
            "templateImplType" : "java.util.ArrayList<Image>",
            "templateType" : "java.util.List<Image>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Images",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of image objects corresponding to the image references in the request.</p>\n@param images A list of image objects corresponding to the image references in the request.*/",
          "setterMethodName" : "setImages",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Image>",
            "variableName" : "images",
            "variableType" : "java.util.List<Image>",
            "documentation" : "",
            "simpleType" : "List<Image>",
            "variableSetterType" : "java.util.Collection<Image>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of image objects corresponding to the image references in the request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImages(java.util.Collection)} or {@link #withImages(java.util.Collection)} if you want to override the existing values.</p>\n@param images A list of image objects corresponding to the image references in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Image>",
            "variableName" : "images",
            "variableType" : "java.util.List<Image>",
            "documentation" : "<p>A list of image objects corresponding to the image references in the request.</p>",
            "simpleType" : "List<Image>",
            "variableSetterType" : "java.util.Collection<Image>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BatchGetImageResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchGetImageResult",
        "variableName" : "batchGetImageResult",
        "variableType" : "BatchGetImageResult",
        "documentation" : null,
        "simpleType" : "BatchGetImageResult",
        "variableSetterType" : "BatchGetImageResult"
      },
      "wrapper" : false
    },
    "CompleteLayerUploadRequest" : {
      "c2jName" : "CompleteLayerUploadRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CompleteLayerUpload",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.CompleteLayerUpload",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to associate with the image layer.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to associate with the image layer.</p>\n@param repositoryName The name of the repository to associate with the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to associate with the image layer.</p>\n@return The name of the repository to associate with the image layer.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository to associate with the image layer.</p>\n@param repositoryName The name of the repository to associate with the image layer.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to associate with the image layer.</p>\n@param repositoryName The name of the repository to associate with the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to associate with the image layer.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "uploadId",
        "c2jShape" : "UploadId",
        "deprecated" : false,
        "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUploadId",
        "getterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>\n@return The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.*/",
        "getterMethodName" : "getUploadId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "uploadId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "uploadId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UploadId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.*/",
        "setterMethodName" : "setUploadId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "uploadId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "uploadId",
          "variableType" : "String",
          "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "layerDigests",
        "c2jShape" : "LayerDigestList",
        "deprecated" : false,
        "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigests The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLayerDigests",
        "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@return The <code>sha256</code> digest of the image layer.*/",
        "getterMethodName" : "getLayerDigests",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "layerDigests",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "layerDigests",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "LayerDigest",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "LayerDigests",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigests The <code>sha256</code> digest of the image layer.*/",
        "setterMethodName" : "setLayerDigests",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "layerDigests",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLayerDigests(java.util.Collection)} or {@link #withLayerDigests(java.util.Collection)} if you want to override the existing values.</p>\n@param layerDigests The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "layerDigests",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LayerDigests" : {
          "c2jName" : "layerDigests",
          "c2jShape" : "LayerDigestList",
          "deprecated" : false,
          "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigests The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLayerDigests",
          "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@return The <code>sha256</code> digest of the image layer.*/",
          "getterMethodName" : "getLayerDigests",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "layerDigests",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "layerDigests",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "LayerDigest",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "LayerDigests",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigests The <code>sha256</code> digest of the image layer.*/",
          "setterMethodName" : "setLayerDigests",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "layerDigests",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLayerDigests(java.util.Collection)} or {@link #withLayerDigests(java.util.Collection)} if you want to override the existing values.</p>\n@param layerDigests The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "layerDigests",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to associate with the image layer.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to associate with the image layer.</p>\n@param repositoryName The name of the repository to associate with the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to associate with the image layer.</p>\n@return The name of the repository to associate with the image layer.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository to associate with the image layer.</p>\n@param repositoryName The name of the repository to associate with the image layer.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to associate with the image layer.</p>\n@param repositoryName The name of the repository to associate with the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to associate with the image layer.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UploadId" : {
          "c2jName" : "uploadId",
          "c2jShape" : "UploadId",
          "deprecated" : false,
          "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUploadId",
          "getterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>\n@return The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.*/",
          "getterMethodName" : "getUploadId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "uploadId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "uploadId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UploadId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.*/",
          "setterMethodName" : "setUploadId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "uploadId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "uploadId",
            "variableType" : "String",
            "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "uploadId", "layerDigests" ],
      "shapeName" : "CompleteLayerUploadRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CompleteLayerUploadRequest",
        "variableName" : "completeLayerUploadRequest",
        "variableType" : "CompleteLayerUploadRequest",
        "documentation" : null,
        "simpleType" : "CompleteLayerUploadRequest",
        "variableSetterType" : "CompleteLayerUploadRequest"
      },
      "wrapper" : false
    },
    "CompleteLayerUploadResult" : {
      "c2jName" : "CompleteLayerUploadResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The registry ID associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The repository name associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The repository name associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "uploadId",
        "c2jShape" : "UploadId",
        "deprecated" : false,
        "documentation" : "<p>The upload ID associated with the layer.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The upload ID associated with the layer.</p>\n@param uploadId The upload ID associated with the layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUploadId",
        "getterDocumentation" : "/**<p>The upload ID associated with the layer.</p>\n@return The upload ID associated with the layer.*/",
        "getterMethodName" : "getUploadId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "uploadId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "uploadId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UploadId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The upload ID associated with the layer.</p>\n@param uploadId The upload ID associated with the layer.*/",
        "setterMethodName" : "setUploadId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "uploadId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The upload ID associated with the layer.</p>\n@param uploadId The upload ID associated with the layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "uploadId",
          "variableType" : "String",
          "documentation" : "<p>The upload ID associated with the layer.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "layerDigest",
        "c2jShape" : "LayerDigest",
        "deprecated" : false,
        "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLayerDigest",
        "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@return The <code>sha256</code> digest of the image layer.*/",
        "getterMethodName" : "getLayerDigest",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "layerDigest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "layerDigest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LayerDigest",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.*/",
        "setterMethodName" : "setLayerDigest",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "layerDigest",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "layerDigest",
          "variableType" : "String",
          "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LayerDigest" : {
          "c2jName" : "layerDigest",
          "c2jShape" : "LayerDigest",
          "deprecated" : false,
          "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLayerDigest",
          "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@return The <code>sha256</code> digest of the image layer.*/",
          "getterMethodName" : "getLayerDigest",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "layerDigest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "layerDigest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LayerDigest",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.*/",
          "setterMethodName" : "setLayerDigest",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "layerDigest",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "layerDigest",
            "variableType" : "String",
            "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The registry ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The repository name associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UploadId" : {
          "c2jName" : "uploadId",
          "c2jShape" : "UploadId",
          "deprecated" : false,
          "documentation" : "<p>The upload ID associated with the layer.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The upload ID associated with the layer.</p>\n@param uploadId The upload ID associated with the layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUploadId",
          "getterDocumentation" : "/**<p>The upload ID associated with the layer.</p>\n@return The upload ID associated with the layer.*/",
          "getterMethodName" : "getUploadId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "uploadId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "uploadId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UploadId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The upload ID associated with the layer.</p>\n@param uploadId The upload ID associated with the layer.*/",
          "setterMethodName" : "setUploadId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "uploadId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The upload ID associated with the layer.</p>\n@param uploadId The upload ID associated with the layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "uploadId",
            "variableType" : "String",
            "documentation" : "<p>The upload ID associated with the layer.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CompleteLayerUploadResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CompleteLayerUploadResult",
        "variableName" : "completeLayerUploadResult",
        "variableType" : "CompleteLayerUploadResult",
        "documentation" : null,
        "simpleType" : "CompleteLayerUploadResult",
        "variableSetterType" : "CompleteLayerUploadResult"
      },
      "wrapper" : false
    },
    "CreateRepositoryRequest" : {
      "c2jName" : "CreateRepositoryRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateRepository",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.CreateRepository",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>\n@param repositoryName The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>\n@return The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>\n@param repositoryName The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>\n@param repositoryName The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "tags",
        "c2jShape" : "TagList",
        "deprecated" : false,
        "documentation" : "<p/>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p/>\n@param tags \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p/>\n@return */",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p/>\n@param tags */",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p/>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p/>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>\n@param repositoryName The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>\n@return The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>\n@param repositoryName The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>\n@param repositoryName The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "tags",
          "c2jShape" : "TagList",
          "deprecated" : false,
          "documentation" : "<p/>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p/>\n@param tags \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p/>\n@return */",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p/>\n@param tags */",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p/>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p/>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "CreateRepositoryRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateRepositoryRequest",
        "variableName" : "createRepositoryRequest",
        "variableType" : "CreateRepositoryRequest",
        "documentation" : null,
        "simpleType" : "CreateRepositoryRequest",
        "variableSetterType" : "CreateRepositoryRequest"
      },
      "wrapper" : false
    },
    "CreateRepositoryResult" : {
      "c2jName" : "CreateRepositoryResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repository",
        "c2jShape" : "Repository",
        "deprecated" : false,
        "documentation" : "<p>The repository that was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository that was created.</p>\n@param repository The repository that was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepository",
        "getterDocumentation" : "/**<p>The repository that was created.</p>\n@return The repository that was created.*/",
        "getterMethodName" : "getRepository",
        "getterModel" : {
          "returnType" : "Repository",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repository",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repository",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Repository",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository that was created.</p>\n@param repository The repository that was created.*/",
        "setterMethodName" : "setRepository",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Repository",
          "variableName" : "repository",
          "variableType" : "Repository",
          "documentation" : "",
          "simpleType" : "Repository",
          "variableSetterType" : "Repository"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository that was created.</p>\n@param repository The repository that was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Repository",
          "variableName" : "repository",
          "variableType" : "Repository",
          "documentation" : "<p>The repository that was created.</p>",
          "simpleType" : "Repository",
          "variableSetterType" : "Repository"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Repository" : {
          "c2jName" : "repository",
          "c2jShape" : "Repository",
          "deprecated" : false,
          "documentation" : "<p>The repository that was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository that was created.</p>\n@param repository The repository that was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepository",
          "getterDocumentation" : "/**<p>The repository that was created.</p>\n@return The repository that was created.*/",
          "getterMethodName" : "getRepository",
          "getterModel" : {
            "returnType" : "Repository",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repository",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repository",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Repository",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository that was created.</p>\n@param repository The repository that was created.*/",
          "setterMethodName" : "setRepository",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Repository",
            "variableName" : "repository",
            "variableType" : "Repository",
            "documentation" : "",
            "simpleType" : "Repository",
            "variableSetterType" : "Repository"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository that was created.</p>\n@param repository The repository that was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Repository",
            "variableName" : "repository",
            "variableType" : "Repository",
            "documentation" : "<p>The repository that was created.</p>",
            "simpleType" : "Repository",
            "variableSetterType" : "Repository"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateRepositoryResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateRepositoryResult",
        "variableName" : "createRepositoryResult",
        "variableType" : "CreateRepositoryResult",
        "documentation" : null,
        "simpleType" : "CreateRepositoryResult",
        "variableSetterType" : "CreateRepositoryResult"
      },
      "wrapper" : false
    },
    "DeleteLifecyclePolicyRequest" : {
      "c2jName" : "DeleteLifecyclePolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteLifecyclePolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.DeleteLifecyclePolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository.</p>\n@return The name of the repository.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository.</p>\n@return The name of the repository.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "DeleteLifecyclePolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteLifecyclePolicyRequest",
        "variableName" : "deleteLifecyclePolicyRequest",
        "variableType" : "DeleteLifecyclePolicyRequest",
        "documentation" : null,
        "simpleType" : "DeleteLifecyclePolicyRequest",
        "variableSetterType" : "DeleteLifecyclePolicyRequest"
      },
      "wrapper" : false
    },
    "DeleteLifecyclePolicyResult" : {
      "c2jName" : "DeleteLifecyclePolicyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The registry ID associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The repository name associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The repository name associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lifecyclePolicyText",
        "c2jShape" : "LifecyclePolicyText",
        "deprecated" : false,
        "documentation" : "<p>The JSON lifecycle policy text.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLifecyclePolicyText",
        "getterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@return The JSON lifecycle policy text.*/",
        "getterMethodName" : "getLifecyclePolicyText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lifecyclePolicyText",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lifecyclePolicyText",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LifecyclePolicyText",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.*/",
        "setterMethodName" : "setLifecyclePolicyText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "lifecyclePolicyText",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "lifecyclePolicyText",
          "variableType" : "String",
          "documentation" : "<p>The JSON lifecycle policy text.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lastEvaluatedAt",
        "c2jShape" : "EvaluationTimestamp",
        "deprecated" : false,
        "documentation" : "<p>The time stamp of the last time that the lifecycle policy was run.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The time stamp of the last time that the lifecycle policy was run.</p>\n@param lastEvaluatedAt The time stamp of the last time that the lifecycle policy was run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastEvaluatedAt",
        "getterDocumentation" : "/**<p>The time stamp of the last time that the lifecycle policy was run.</p>\n@return The time stamp of the last time that the lifecycle policy was run.*/",
        "getterMethodName" : "getLastEvaluatedAt",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lastEvaluatedAt",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lastEvaluatedAt",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "LastEvaluatedAt",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The time stamp of the last time that the lifecycle policy was run.</p>\n@param lastEvaluatedAt The time stamp of the last time that the lifecycle policy was run.*/",
        "setterMethodName" : "setLastEvaluatedAt",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastEvaluatedAt",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The time stamp of the last time that the lifecycle policy was run.</p>\n@param lastEvaluatedAt The time stamp of the last time that the lifecycle policy was run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastEvaluatedAt",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The time stamp of the last time that the lifecycle policy was run.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LastEvaluatedAt" : {
          "c2jName" : "lastEvaluatedAt",
          "c2jShape" : "EvaluationTimestamp",
          "deprecated" : false,
          "documentation" : "<p>The time stamp of the last time that the lifecycle policy was run.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The time stamp of the last time that the lifecycle policy was run.</p>\n@param lastEvaluatedAt The time stamp of the last time that the lifecycle policy was run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastEvaluatedAt",
          "getterDocumentation" : "/**<p>The time stamp of the last time that the lifecycle policy was run.</p>\n@return The time stamp of the last time that the lifecycle policy was run.*/",
          "getterMethodName" : "getLastEvaluatedAt",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lastEvaluatedAt",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lastEvaluatedAt",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "LastEvaluatedAt",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The time stamp of the last time that the lifecycle policy was run.</p>\n@param lastEvaluatedAt The time stamp of the last time that the lifecycle policy was run.*/",
          "setterMethodName" : "setLastEvaluatedAt",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastEvaluatedAt",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The time stamp of the last time that the lifecycle policy was run.</p>\n@param lastEvaluatedAt The time stamp of the last time that the lifecycle policy was run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastEvaluatedAt",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The time stamp of the last time that the lifecycle policy was run.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "LifecyclePolicyText" : {
          "c2jName" : "lifecyclePolicyText",
          "c2jShape" : "LifecyclePolicyText",
          "deprecated" : false,
          "documentation" : "<p>The JSON lifecycle policy text.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLifecyclePolicyText",
          "getterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@return The JSON lifecycle policy text.*/",
          "getterMethodName" : "getLifecyclePolicyText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lifecyclePolicyText",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lifecyclePolicyText",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LifecyclePolicyText",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.*/",
          "setterMethodName" : "setLifecyclePolicyText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "lifecyclePolicyText",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "lifecyclePolicyText",
            "variableType" : "String",
            "documentation" : "<p>The JSON lifecycle policy text.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The registry ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The repository name associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteLifecyclePolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteLifecyclePolicyResult",
        "variableName" : "deleteLifecyclePolicyResult",
        "variableType" : "DeleteLifecyclePolicyResult",
        "documentation" : null,
        "simpleType" : "DeleteLifecyclePolicyResult",
        "variableSetterType" : "DeleteLifecyclePolicyResult"
      },
      "wrapper" : false
    },
    "DeleteRepositoryPolicyRequest" : {
      "c2jName" : "DeleteRepositoryPolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteRepositoryPolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.DeleteRepositoryPolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository that is associated with the repository policy to delete.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository that is associated with the repository policy to delete.</p>\n@param repositoryName The name of the repository that is associated with the repository policy to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository that is associated with the repository policy to delete.</p>\n@return The name of the repository that is associated with the repository policy to delete.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository that is associated with the repository policy to delete.</p>\n@param repositoryName The name of the repository that is associated with the repository policy to delete.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository that is associated with the repository policy to delete.</p>\n@param repositoryName The name of the repository that is associated with the repository policy to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository that is associated with the repository policy to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that is associated with the repository policy to delete.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository that is associated with the repository policy to delete.</p>\n@param repositoryName The name of the repository that is associated with the repository policy to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository that is associated with the repository policy to delete.</p>\n@return The name of the repository that is associated with the repository policy to delete.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository that is associated with the repository policy to delete.</p>\n@param repositoryName The name of the repository that is associated with the repository policy to delete.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository that is associated with the repository policy to delete.</p>\n@param repositoryName The name of the repository that is associated with the repository policy to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository that is associated with the repository policy to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "DeleteRepositoryPolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteRepositoryPolicyRequest",
        "variableName" : "deleteRepositoryPolicyRequest",
        "variableType" : "DeleteRepositoryPolicyRequest",
        "documentation" : null,
        "simpleType" : "DeleteRepositoryPolicyRequest",
        "variableSetterType" : "DeleteRepositoryPolicyRequest"
      },
      "wrapper" : false
    },
    "DeleteRepositoryPolicyResult" : {
      "c2jName" : "DeleteRepositoryPolicyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The registry ID associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The repository name associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The repository name associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyText",
        "c2jShape" : "RepositoryPolicyText",
        "deprecated" : false,
        "documentation" : "<p>The JSON repository policy that was deleted from the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON repository policy that was deleted from the repository.</p>\n@param policyText The JSON repository policy that was deleted from the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyText",
        "getterDocumentation" : "/**<p>The JSON repository policy that was deleted from the repository.</p>\n@return The JSON repository policy that was deleted from the repository.*/",
        "getterMethodName" : "getPolicyText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyText",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyText",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyText",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The JSON repository policy that was deleted from the repository.</p>\n@param policyText The JSON repository policy that was deleted from the repository.*/",
        "setterMethodName" : "setPolicyText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "policyText",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON repository policy that was deleted from the repository.</p>\n@param policyText The JSON repository policy that was deleted from the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "policyText",
          "variableType" : "String",
          "documentation" : "<p>The JSON repository policy that was deleted from the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PolicyText" : {
          "c2jName" : "policyText",
          "c2jShape" : "RepositoryPolicyText",
          "deprecated" : false,
          "documentation" : "<p>The JSON repository policy that was deleted from the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON repository policy that was deleted from the repository.</p>\n@param policyText The JSON repository policy that was deleted from the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyText",
          "getterDocumentation" : "/**<p>The JSON repository policy that was deleted from the repository.</p>\n@return The JSON repository policy that was deleted from the repository.*/",
          "getterMethodName" : "getPolicyText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyText",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyText",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyText",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The JSON repository policy that was deleted from the repository.</p>\n@param policyText The JSON repository policy that was deleted from the repository.*/",
          "setterMethodName" : "setPolicyText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "policyText",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON repository policy that was deleted from the repository.</p>\n@param policyText The JSON repository policy that was deleted from the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "policyText",
            "variableType" : "String",
            "documentation" : "<p>The JSON repository policy that was deleted from the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The registry ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The repository name associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteRepositoryPolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteRepositoryPolicyResult",
        "variableName" : "deleteRepositoryPolicyResult",
        "variableType" : "DeleteRepositoryPolicyResult",
        "documentation" : null,
        "simpleType" : "DeleteRepositoryPolicyResult",
        "variableSetterType" : "DeleteRepositoryPolicyResult"
      },
      "wrapper" : false
    },
    "DeleteRepositoryRequest" : {
      "c2jName" : "DeleteRepositoryRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteRepository",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.DeleteRepository",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to delete.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@return The name of the repository to delete.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "force",
        "c2jShape" : "ForceFlag",
        "deprecated" : false,
        "documentation" : "<p> If a repository contains images, forces the deletion.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> If a repository contains images, forces the deletion.</p>\n@param force If a repository contains images, forces the deletion.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withForce",
        "getterDocumentation" : "/**<p> If a repository contains images, forces the deletion.</p>\n@return If a repository contains images, forces the deletion.*/",
        "getterMethodName" : "getForce",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "force",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "force",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "Force",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> If a repository contains images, forces the deletion.</p>\n@param force If a repository contains images, forces the deletion.*/",
        "setterMethodName" : "setForce",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "force",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> If a repository contains images, forces the deletion.</p>\n@param force If a repository contains images, forces the deletion.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "force",
          "variableType" : "Boolean",
          "documentation" : "<p> If a repository contains images, forces the deletion.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Force" : {
          "c2jName" : "force",
          "c2jShape" : "ForceFlag",
          "deprecated" : false,
          "documentation" : "<p> If a repository contains images, forces the deletion.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> If a repository contains images, forces the deletion.</p>\n@param force If a repository contains images, forces the deletion.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withForce",
          "getterDocumentation" : "/**<p> If a repository contains images, forces the deletion.</p>\n@return If a repository contains images, forces the deletion.*/",
          "getterMethodName" : "getForce",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "force",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "force",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "Force",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> If a repository contains images, forces the deletion.</p>\n@param force If a repository contains images, forces the deletion.*/",
          "setterMethodName" : "setForce",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "force",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> If a repository contains images, forces the deletion.</p>\n@param force If a repository contains images, forces the deletion.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "force",
            "variableType" : "Boolean",
            "documentation" : "<p> If a repository contains images, forces the deletion.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to delete.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@return The name of the repository to delete.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "DeleteRepositoryRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteRepositoryRequest",
        "variableName" : "deleteRepositoryRequest",
        "variableType" : "DeleteRepositoryRequest",
        "documentation" : null,
        "simpleType" : "DeleteRepositoryRequest",
        "variableSetterType" : "DeleteRepositoryRequest"
      },
      "wrapper" : false
    },
    "DeleteRepositoryResult" : {
      "c2jName" : "DeleteRepositoryResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repository",
        "c2jShape" : "Repository",
        "deprecated" : false,
        "documentation" : "<p>The repository that was deleted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository that was deleted.</p>\n@param repository The repository that was deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepository",
        "getterDocumentation" : "/**<p>The repository that was deleted.</p>\n@return The repository that was deleted.*/",
        "getterMethodName" : "getRepository",
        "getterModel" : {
          "returnType" : "Repository",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repository",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repository",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Repository",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository that was deleted.</p>\n@param repository The repository that was deleted.*/",
        "setterMethodName" : "setRepository",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Repository",
          "variableName" : "repository",
          "variableType" : "Repository",
          "documentation" : "",
          "simpleType" : "Repository",
          "variableSetterType" : "Repository"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository that was deleted.</p>\n@param repository The repository that was deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Repository",
          "variableName" : "repository",
          "variableType" : "Repository",
          "documentation" : "<p>The repository that was deleted.</p>",
          "simpleType" : "Repository",
          "variableSetterType" : "Repository"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Repository" : {
          "c2jName" : "repository",
          "c2jShape" : "Repository",
          "deprecated" : false,
          "documentation" : "<p>The repository that was deleted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository that was deleted.</p>\n@param repository The repository that was deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepository",
          "getterDocumentation" : "/**<p>The repository that was deleted.</p>\n@return The repository that was deleted.*/",
          "getterMethodName" : "getRepository",
          "getterModel" : {
            "returnType" : "Repository",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repository",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repository",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Repository",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository that was deleted.</p>\n@param repository The repository that was deleted.*/",
          "setterMethodName" : "setRepository",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Repository",
            "variableName" : "repository",
            "variableType" : "Repository",
            "documentation" : "",
            "simpleType" : "Repository",
            "variableSetterType" : "Repository"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository that was deleted.</p>\n@param repository The repository that was deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Repository",
            "variableName" : "repository",
            "variableType" : "Repository",
            "documentation" : "<p>The repository that was deleted.</p>",
            "simpleType" : "Repository",
            "variableSetterType" : "Repository"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteRepositoryResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteRepositoryResult",
        "variableName" : "deleteRepositoryResult",
        "variableType" : "DeleteRepositoryResult",
        "documentation" : null,
        "simpleType" : "DeleteRepositoryResult",
        "variableSetterType" : "DeleteRepositoryResult"
      },
      "wrapper" : false
    },
    "DescribeImagesFilter" : {
      "c2jName" : "DescribeImagesFilter",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object representing a filter on a <a>DescribeImages</a> operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "tagStatus",
        "c2jShape" : "TagStatus",
        "deprecated" : false,
        "documentation" : "<p>The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>",
        "enumType" : "TagStatus",
        "fluentSetterDocumentation" : "/**<p>The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>\n@param tagStatus The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TagStatus*/",
        "fluentSetterMethodName" : "withTagStatus",
        "getterDocumentation" : "/**<p>The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>\n@return The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.\n@see TagStatus*/",
        "getterMethodName" : "getTagStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "tagStatus",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tagStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TagStatus",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>\n@param tagStatus The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.\n@see TagStatus*/",
        "setterMethodName" : "setTagStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tagStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>\n@param tagStatus The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TagStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tagStatus",
          "variableType" : "String",
          "documentation" : "<p>The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "TagStatus" : {
          "c2jName" : "tagStatus",
          "c2jShape" : "TagStatus",
          "deprecated" : false,
          "documentation" : "<p>The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>",
          "enumType" : "TagStatus",
          "fluentSetterDocumentation" : "/**<p>The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>\n@param tagStatus The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TagStatus*/",
          "fluentSetterMethodName" : "withTagStatus",
          "getterDocumentation" : "/**<p>The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>\n@return The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.\n@see TagStatus*/",
          "getterMethodName" : "getTagStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "tagStatus",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tagStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TagStatus",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>\n@param tagStatus The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.\n@see TagStatus*/",
          "setterMethodName" : "setTagStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tagStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>\n@param tagStatus The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TagStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tagStatus",
            "variableType" : "String",
            "documentation" : "<p>The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DescribeImagesFilter",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribeImagesFilter",
        "variableName" : "describeImagesFilter",
        "variableType" : "DescribeImagesFilter",
        "documentation" : null,
        "simpleType" : "DescribeImagesFilter",
        "variableSetterType" : "DescribeImagesFilter"
      },
      "wrapper" : false
    },
    "DescribeImagesRequest" : {
      "c2jName" : "DescribeImagesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DescribeImages",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.DescribeImages",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>A list of repositories to describe.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of repositories to describe.</p>\n@param repositoryName A list of repositories to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>A list of repositories to describe.</p>\n@return A list of repositories to describe.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of repositories to describe.</p>\n@param repositoryName A list of repositories to describe.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of repositories to describe.</p>\n@param repositoryName A list of repositories to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>A list of repositories to describe.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imageIds",
        "c2jShape" : "ImageIdentifierList",
        "deprecated" : false,
        "documentation" : "<p>The list of image IDs for the requested repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@param imageIds The list of image IDs for the requested repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageIds",
        "getterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@return The list of image IDs for the requested repository.*/",
        "getterMethodName" : "getImageIds",
        "getterModel" : {
          "returnType" : "java.util.List<ImageIdentifier>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageIds",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ImageIdentifier",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ImageIdentifier",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageIdentifier",
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageIdentifier",
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ImageIdentifier",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ImageIdentifier",
          "templateImplType" : "java.util.ArrayList<ImageIdentifier>",
          "templateType" : "java.util.List<ImageIdentifier>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ImageIds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@param imageIds The list of image IDs for the requested repository.*/",
        "setterMethodName" : "setImageIds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "documentation" : "",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds The list of image IDs for the requested repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "documentation" : "<p>The list of image IDs for the requested repository.</p>",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@return The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@return The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "maxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "maxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "filter",
        "c2jShape" : "DescribeImagesFilter",
        "deprecated" : false,
        "documentation" : "<p>The filter key and value with which to filter your <code>DescribeImages</code> results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The filter key and value with which to filter your <code>DescribeImages</code> results.</p>\n@param filter The filter key and value with which to filter your <code>DescribeImages</code> results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilter",
        "getterDocumentation" : "/**<p>The filter key and value with which to filter your <code>DescribeImages</code> results.</p>\n@return The filter key and value with which to filter your <code>DescribeImages</code> results.*/",
        "getterMethodName" : "getFilter",
        "getterModel" : {
          "returnType" : "DescribeImagesFilter",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "filter",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "filter",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Filter",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The filter key and value with which to filter your <code>DescribeImages</code> results.</p>\n@param filter The filter key and value with which to filter your <code>DescribeImages</code> results.*/",
        "setterMethodName" : "setFilter",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "DescribeImagesFilter",
          "variableName" : "filter",
          "variableType" : "DescribeImagesFilter",
          "documentation" : "",
          "simpleType" : "DescribeImagesFilter",
          "variableSetterType" : "DescribeImagesFilter"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The filter key and value with which to filter your <code>DescribeImages</code> results.</p>\n@param filter The filter key and value with which to filter your <code>DescribeImages</code> results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "DescribeImagesFilter",
          "variableName" : "filter",
          "variableType" : "DescribeImagesFilter",
          "documentation" : "<p>The filter key and value with which to filter your <code>DescribeImages</code> results.</p>",
          "simpleType" : "DescribeImagesFilter",
          "variableSetterType" : "DescribeImagesFilter"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Filter" : {
          "c2jName" : "filter",
          "c2jShape" : "DescribeImagesFilter",
          "deprecated" : false,
          "documentation" : "<p>The filter key and value with which to filter your <code>DescribeImages</code> results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The filter key and value with which to filter your <code>DescribeImages</code> results.</p>\n@param filter The filter key and value with which to filter your <code>DescribeImages</code> results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilter",
          "getterDocumentation" : "/**<p>The filter key and value with which to filter your <code>DescribeImages</code> results.</p>\n@return The filter key and value with which to filter your <code>DescribeImages</code> results.*/",
          "getterMethodName" : "getFilter",
          "getterModel" : {
            "returnType" : "DescribeImagesFilter",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "filter",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "filter",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Filter",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The filter key and value with which to filter your <code>DescribeImages</code> results.</p>\n@param filter The filter key and value with which to filter your <code>DescribeImages</code> results.*/",
          "setterMethodName" : "setFilter",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "DescribeImagesFilter",
            "variableName" : "filter",
            "variableType" : "DescribeImagesFilter",
            "documentation" : "",
            "simpleType" : "DescribeImagesFilter",
            "variableSetterType" : "DescribeImagesFilter"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The filter key and value with which to filter your <code>DescribeImages</code> results.</p>\n@param filter The filter key and value with which to filter your <code>DescribeImages</code> results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "DescribeImagesFilter",
            "variableName" : "filter",
            "variableType" : "DescribeImagesFilter",
            "documentation" : "<p>The filter key and value with which to filter your <code>DescribeImages</code> results.</p>",
            "simpleType" : "DescribeImagesFilter",
            "variableSetterType" : "DescribeImagesFilter"
          },
          "xmlNameSpaceUri" : null
        },
        "ImageIds" : {
          "c2jName" : "imageIds",
          "c2jShape" : "ImageIdentifierList",
          "deprecated" : false,
          "documentation" : "<p>The list of image IDs for the requested repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@param imageIds The list of image IDs for the requested repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageIds",
          "getterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@return The list of image IDs for the requested repository.*/",
          "getterMethodName" : "getImageIds",
          "getterModel" : {
            "returnType" : "java.util.List<ImageIdentifier>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageIds",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ImageIdentifier",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ImageIdentifier",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageIdentifier",
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageIdentifier",
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ImageIdentifier",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ImageIdentifier",
            "templateImplType" : "java.util.ArrayList<ImageIdentifier>",
            "templateType" : "java.util.List<ImageIdentifier>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ImageIds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@param imageIds The list of image IDs for the requested repository.*/",
          "setterMethodName" : "setImageIds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "documentation" : "",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds The list of image IDs for the requested repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "documentation" : "<p>The list of image IDs for the requested repository.</p>",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@return The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "maxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "maxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@return The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>A list of repositories to describe.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of repositories to describe.</p>\n@param repositoryName A list of repositories to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>A list of repositories to describe.</p>\n@return A list of repositories to describe.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of repositories to describe.</p>\n@param repositoryName A list of repositories to describe.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of repositories to describe.</p>\n@param repositoryName A list of repositories to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>A list of repositories to describe.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "DescribeImagesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribeImagesRequest",
        "variableName" : "describeImagesRequest",
        "variableType" : "DescribeImagesRequest",
        "documentation" : null,
        "simpleType" : "DescribeImagesRequest",
        "variableSetterType" : "DescribeImagesRequest"
      },
      "wrapper" : false
    },
    "DescribeImagesResult" : {
      "c2jName" : "DescribeImagesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "imageDetails",
        "c2jShape" : "ImageDetailList",
        "deprecated" : false,
        "documentation" : "<p>A list of <a>ImageDetail</a> objects that contain data about the image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of <a>ImageDetail</a> objects that contain data about the image.</p>\n@param imageDetails A list of <a>ImageDetail</a> objects that contain data about the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageDetails",
        "getterDocumentation" : "/**<p>A list of <a>ImageDetail</a> objects that contain data about the image.</p>\n@return A list of <a>ImageDetail</a> objects that contain data about the image.*/",
        "getterMethodName" : "getImageDetails",
        "getterModel" : {
          "returnType" : "java.util.List<ImageDetail>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageDetails",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageDetails",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ImageDetail",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ImageDetail",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageDetail",
              "variableName" : "member",
              "variableType" : "ImageDetail",
              "documentation" : "",
              "simpleType" : "ImageDetail",
              "variableSetterType" : "ImageDetail"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageDetail",
              "variableName" : "member",
              "variableType" : "ImageDetail",
              "documentation" : "",
              "simpleType" : "ImageDetail",
              "variableSetterType" : "ImageDetail"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ImageDetail",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ImageDetail",
          "templateImplType" : "java.util.ArrayList<ImageDetail>",
          "templateType" : "java.util.List<ImageDetail>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ImageDetails",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of <a>ImageDetail</a> objects that contain data about the image.</p>\n@param imageDetails A list of <a>ImageDetail</a> objects that contain data about the image.*/",
        "setterMethodName" : "setImageDetails",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageDetail>",
          "variableName" : "imageDetails",
          "variableType" : "java.util.List<ImageDetail>",
          "documentation" : "",
          "simpleType" : "List<ImageDetail>",
          "variableSetterType" : "java.util.Collection<ImageDetail>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of <a>ImageDetail</a> objects that contain data about the image.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageDetails(java.util.Collection)} or {@link #withImageDetails(java.util.Collection)} if you want to override the existing values.</p>\n@param imageDetails A list of <a>ImageDetail</a> objects that contain data about the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageDetail>",
          "variableName" : "imageDetails",
          "variableType" : "java.util.List<ImageDetail>",
          "documentation" : "<p>A list of <a>ImageDetail</a> objects that contain data about the image.</p>",
          "simpleType" : "List<ImageDetail>",
          "variableSetterType" : "java.util.Collection<ImageDetail>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@return The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ImageDetails" : {
          "c2jName" : "imageDetails",
          "c2jShape" : "ImageDetailList",
          "deprecated" : false,
          "documentation" : "<p>A list of <a>ImageDetail</a> objects that contain data about the image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of <a>ImageDetail</a> objects that contain data about the image.</p>\n@param imageDetails A list of <a>ImageDetail</a> objects that contain data about the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageDetails",
          "getterDocumentation" : "/**<p>A list of <a>ImageDetail</a> objects that contain data about the image.</p>\n@return A list of <a>ImageDetail</a> objects that contain data about the image.*/",
          "getterMethodName" : "getImageDetails",
          "getterModel" : {
            "returnType" : "java.util.List<ImageDetail>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageDetails",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageDetails",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ImageDetail",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ImageDetail",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageDetail",
                "variableName" : "member",
                "variableType" : "ImageDetail",
                "documentation" : "",
                "simpleType" : "ImageDetail",
                "variableSetterType" : "ImageDetail"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageDetail",
                "variableName" : "member",
                "variableType" : "ImageDetail",
                "documentation" : "",
                "simpleType" : "ImageDetail",
                "variableSetterType" : "ImageDetail"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ImageDetail",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ImageDetail",
            "templateImplType" : "java.util.ArrayList<ImageDetail>",
            "templateType" : "java.util.List<ImageDetail>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ImageDetails",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of <a>ImageDetail</a> objects that contain data about the image.</p>\n@param imageDetails A list of <a>ImageDetail</a> objects that contain data about the image.*/",
          "setterMethodName" : "setImageDetails",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageDetail>",
            "variableName" : "imageDetails",
            "variableType" : "java.util.List<ImageDetail>",
            "documentation" : "",
            "simpleType" : "List<ImageDetail>",
            "variableSetterType" : "java.util.Collection<ImageDetail>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of <a>ImageDetail</a> objects that contain data about the image.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageDetails(java.util.Collection)} or {@link #withImageDetails(java.util.Collection)} if you want to override the existing values.</p>\n@param imageDetails A list of <a>ImageDetail</a> objects that contain data about the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageDetail>",
            "variableName" : "imageDetails",
            "variableType" : "java.util.List<ImageDetail>",
            "documentation" : "<p>A list of <a>ImageDetail</a> objects that contain data about the image.</p>",
            "simpleType" : "List<ImageDetail>",
            "variableSetterType" : "java.util.Collection<ImageDetail>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@return The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DescribeImagesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribeImagesResult",
        "variableName" : "describeImagesResult",
        "variableType" : "DescribeImagesResult",
        "documentation" : null,
        "simpleType" : "DescribeImagesResult",
        "variableSetterType" : "DescribeImagesResult"
      },
      "wrapper" : false
    },
    "DescribeRepositoriesRequest" : {
      "c2jName" : "DescribeRepositoriesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DescribeRepositories",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.DescribeRepositories",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryNames",
        "c2jShape" : "RepositoryNameList",
        "deprecated" : false,
        "documentation" : "<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>\n@param repositoryNames A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryNames",
        "getterDocumentation" : "/**<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>\n@return A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.*/",
        "getterMethodName" : "getRepositoryNames",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryNames",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryNames",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryName",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "RepositoryNames",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>\n@param repositoryNames A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.*/",
        "setterMethodName" : "setRepositoryNames",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "repositoryNames",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositoryNames(java.util.Collection)} or {@link #withRepositoryNames(java.util.Collection)} if you want to override the existing values.</p>\n@param repositoryNames A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "repositoryNames",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>\n@return The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p>\n@return The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "maxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "maxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p>\n@return The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "maxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "maxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>\n@return The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return. This option cannot be used when you specify repositories with <code>repositoryNames</code>.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryNames" : {
          "c2jName" : "repositoryNames",
          "c2jShape" : "RepositoryNameList",
          "deprecated" : false,
          "documentation" : "<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>\n@param repositoryNames A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryNames",
          "getterDocumentation" : "/**<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>\n@return A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.*/",
          "getterMethodName" : "getRepositoryNames",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryNames",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryNames",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryName",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "RepositoryNames",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>\n@param repositoryNames A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.*/",
          "setterMethodName" : "setRepositoryNames",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "repositoryNames",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositoryNames(java.util.Collection)} or {@link #withRepositoryNames(java.util.Collection)} if you want to override the existing values.</p>\n@param repositoryNames A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "repositoryNames",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DescribeRepositoriesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribeRepositoriesRequest",
        "variableName" : "describeRepositoriesRequest",
        "variableType" : "DescribeRepositoriesRequest",
        "documentation" : null,
        "simpleType" : "DescribeRepositoriesRequest",
        "variableSetterType" : "DescribeRepositoriesRequest"
      },
      "wrapper" : false
    },
    "DescribeRepositoriesResult" : {
      "c2jName" : "DescribeRepositoriesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositories",
        "c2jShape" : "RepositoryList",
        "deprecated" : false,
        "documentation" : "<p>A list of repository objects corresponding to valid repositories.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of repository objects corresponding to valid repositories.</p>\n@param repositories A list of repository objects corresponding to valid repositories.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositories",
        "getterDocumentation" : "/**<p>A list of repository objects corresponding to valid repositories.</p>\n@return A list of repository objects corresponding to valid repositories.*/",
        "getterMethodName" : "getRepositories",
        "getterModel" : {
          "returnType" : "java.util.List<Repository>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositories",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositories",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Repository",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Repository",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Repository",
              "variableName" : "member",
              "variableType" : "Repository",
              "documentation" : "",
              "simpleType" : "Repository",
              "variableSetterType" : "Repository"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Repository",
              "variableName" : "member",
              "variableType" : "Repository",
              "documentation" : "",
              "simpleType" : "Repository",
              "variableSetterType" : "Repository"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Repository",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Repository",
          "templateImplType" : "java.util.ArrayList<Repository>",
          "templateType" : "java.util.List<Repository>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Repositories",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of repository objects corresponding to valid repositories.</p>\n@param repositories A list of repository objects corresponding to valid repositories.*/",
        "setterMethodName" : "setRepositories",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Repository>",
          "variableName" : "repositories",
          "variableType" : "java.util.List<Repository>",
          "documentation" : "",
          "simpleType" : "List<Repository>",
          "variableSetterType" : "java.util.Collection<Repository>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of repository objects corresponding to valid repositories.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositories(java.util.Collection)} or {@link #withRepositories(java.util.Collection)} if you want to override the existing values.</p>\n@param repositories A list of repository objects corresponding to valid repositories.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Repository>",
          "variableName" : "repositories",
          "variableType" : "java.util.List<Repository>",
          "documentation" : "<p>A list of repository objects corresponding to valid repositories.</p>",
          "simpleType" : "List<Repository>",
          "variableSetterType" : "java.util.Collection<Repository>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@return The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@return The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Repositories" : {
          "c2jName" : "repositories",
          "c2jShape" : "RepositoryList",
          "deprecated" : false,
          "documentation" : "<p>A list of repository objects corresponding to valid repositories.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of repository objects corresponding to valid repositories.</p>\n@param repositories A list of repository objects corresponding to valid repositories.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositories",
          "getterDocumentation" : "/**<p>A list of repository objects corresponding to valid repositories.</p>\n@return A list of repository objects corresponding to valid repositories.*/",
          "getterMethodName" : "getRepositories",
          "getterModel" : {
            "returnType" : "java.util.List<Repository>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositories",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositories",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Repository",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Repository",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Repository",
                "variableName" : "member",
                "variableType" : "Repository",
                "documentation" : "",
                "simpleType" : "Repository",
                "variableSetterType" : "Repository"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Repository",
                "variableName" : "member",
                "variableType" : "Repository",
                "documentation" : "",
                "simpleType" : "Repository",
                "variableSetterType" : "Repository"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Repository",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Repository",
            "templateImplType" : "java.util.ArrayList<Repository>",
            "templateType" : "java.util.List<Repository>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Repositories",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of repository objects corresponding to valid repositories.</p>\n@param repositories A list of repository objects corresponding to valid repositories.*/",
          "setterMethodName" : "setRepositories",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Repository>",
            "variableName" : "repositories",
            "variableType" : "java.util.List<Repository>",
            "documentation" : "",
            "simpleType" : "List<Repository>",
            "variableSetterType" : "java.util.Collection<Repository>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of repository objects corresponding to valid repositories.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositories(java.util.Collection)} or {@link #withRepositories(java.util.Collection)} if you want to override the existing values.</p>\n@param repositories A list of repository objects corresponding to valid repositories.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Repository>",
            "variableName" : "repositories",
            "variableType" : "java.util.List<Repository>",
            "documentation" : "<p>A list of repository objects corresponding to valid repositories.</p>",
            "simpleType" : "List<Repository>",
            "variableSetterType" : "java.util.Collection<Repository>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DescribeRepositoriesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribeRepositoriesResult",
        "variableName" : "describeRepositoriesResult",
        "variableType" : "DescribeRepositoriesResult",
        "documentation" : null,
        "simpleType" : "DescribeRepositoriesResult",
        "variableSetterType" : "DescribeRepositoriesResult"
      },
      "wrapper" : false
    },
    "EmptyUploadException" : {
      "c2jName" : "EmptyUploadException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified layer upload does not contain any layer parts.</p>",
      "enums" : null,
      "errorCode" : "EmptyUploadException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "EmptyUploadException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "EmptyUploadException",
        "variableName" : "emptyUploadException",
        "variableType" : "EmptyUploadException",
        "documentation" : null,
        "simpleType" : "EmptyUploadException",
        "variableSetterType" : "EmptyUploadException"
      },
      "wrapper" : false
    },
    "GetAuthorizationTokenRequest" : {
      "c2jName" : "GetAuthorizationTokenRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetAuthorizationToken",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.GetAuthorizationToken",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryIds",
        "c2jShape" : "GetAuthorizationTokenRegistryIdList",
        "deprecated" : false,
        "documentation" : "<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>\n@param registryIds A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryIds",
        "getterDocumentation" : "/**<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>\n@return A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryIds",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryIds",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RegistryId",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "RegistryIds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>\n@param registryIds A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryIds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "registryIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRegistryIds(java.util.Collection)} or {@link #withRegistryIds(java.util.Collection)} if you want to override the existing values.</p>\n@param registryIds A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "registryIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RegistryIds" : {
          "c2jName" : "registryIds",
          "c2jShape" : "GetAuthorizationTokenRegistryIdList",
          "deprecated" : false,
          "documentation" : "<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>\n@param registryIds A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryIds",
          "getterDocumentation" : "/**<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>\n@return A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryIds",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryIds",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RegistryId",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "RegistryIds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>\n@param registryIds A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryIds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "registryIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRegistryIds(java.util.Collection)} or {@link #withRegistryIds(java.util.Collection)} if you want to override the existing values.</p>\n@param registryIds A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "registryIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetAuthorizationTokenRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetAuthorizationTokenRequest",
        "variableName" : "getAuthorizationTokenRequest",
        "variableType" : "GetAuthorizationTokenRequest",
        "documentation" : null,
        "simpleType" : "GetAuthorizationTokenRequest",
        "variableSetterType" : "GetAuthorizationTokenRequest"
      },
      "wrapper" : false
    },
    "GetAuthorizationTokenResult" : {
      "c2jName" : "GetAuthorizationTokenResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "authorizationData",
        "c2jShape" : "AuthorizationDataList",
        "deprecated" : false,
        "documentation" : "<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>\n@param authorizationData A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAuthorizationData",
        "getterDocumentation" : "/**<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>\n@return A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.*/",
        "getterMethodName" : "getAuthorizationData",
        "getterModel" : {
          "returnType" : "java.util.List<AuthorizationData>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "authorizationData",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "authorizationData",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "AuthorizationData",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "AuthorizationData",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "AuthorizationData",
              "variableName" : "member",
              "variableType" : "AuthorizationData",
              "documentation" : "",
              "simpleType" : "AuthorizationData",
              "variableSetterType" : "AuthorizationData"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "AuthorizationData",
              "variableName" : "member",
              "variableType" : "AuthorizationData",
              "documentation" : "",
              "simpleType" : "AuthorizationData",
              "variableSetterType" : "AuthorizationData"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "AuthorizationData",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "AuthorizationData",
          "templateImplType" : "java.util.ArrayList<AuthorizationData>",
          "templateType" : "java.util.List<AuthorizationData>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "AuthorizationData",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>\n@param authorizationData A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.*/",
        "setterMethodName" : "setAuthorizationData",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<AuthorizationData>",
          "variableName" : "authorizationData",
          "variableType" : "java.util.List<AuthorizationData>",
          "documentation" : "",
          "simpleType" : "List<AuthorizationData>",
          "variableSetterType" : "java.util.Collection<AuthorizationData>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAuthorizationData(java.util.Collection)} or {@link #withAuthorizationData(java.util.Collection)} if you want to override the existing values.</p>\n@param authorizationData A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<AuthorizationData>",
          "variableName" : "authorizationData",
          "variableType" : "java.util.List<AuthorizationData>",
          "documentation" : "<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>",
          "simpleType" : "List<AuthorizationData>",
          "variableSetterType" : "java.util.Collection<AuthorizationData>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AuthorizationData" : {
          "c2jName" : "authorizationData",
          "c2jShape" : "AuthorizationDataList",
          "deprecated" : false,
          "documentation" : "<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>\n@param authorizationData A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAuthorizationData",
          "getterDocumentation" : "/**<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>\n@return A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.*/",
          "getterMethodName" : "getAuthorizationData",
          "getterModel" : {
            "returnType" : "java.util.List<AuthorizationData>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "authorizationData",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "authorizationData",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "AuthorizationData",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "AuthorizationData",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "AuthorizationData",
                "variableName" : "member",
                "variableType" : "AuthorizationData",
                "documentation" : "",
                "simpleType" : "AuthorizationData",
                "variableSetterType" : "AuthorizationData"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "AuthorizationData",
                "variableName" : "member",
                "variableType" : "AuthorizationData",
                "documentation" : "",
                "simpleType" : "AuthorizationData",
                "variableSetterType" : "AuthorizationData"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "AuthorizationData",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "AuthorizationData",
            "templateImplType" : "java.util.ArrayList<AuthorizationData>",
            "templateType" : "java.util.List<AuthorizationData>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "AuthorizationData",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>\n@param authorizationData A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.*/",
          "setterMethodName" : "setAuthorizationData",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<AuthorizationData>",
            "variableName" : "authorizationData",
            "variableType" : "java.util.List<AuthorizationData>",
            "documentation" : "",
            "simpleType" : "List<AuthorizationData>",
            "variableSetterType" : "java.util.Collection<AuthorizationData>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAuthorizationData(java.util.Collection)} or {@link #withAuthorizationData(java.util.Collection)} if you want to override the existing values.</p>\n@param authorizationData A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<AuthorizationData>",
            "variableName" : "authorizationData",
            "variableType" : "java.util.List<AuthorizationData>",
            "documentation" : "<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>",
            "simpleType" : "List<AuthorizationData>",
            "variableSetterType" : "java.util.Collection<AuthorizationData>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetAuthorizationTokenResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetAuthorizationTokenResult",
        "variableName" : "getAuthorizationTokenResult",
        "variableType" : "GetAuthorizationTokenResult",
        "documentation" : null,
        "simpleType" : "GetAuthorizationTokenResult",
        "variableSetterType" : "GetAuthorizationTokenResult"
      },
      "wrapper" : false
    },
    "GetDownloadUrlForLayerRequest" : {
      "c2jName" : "GetDownloadUrlForLayerRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetDownloadUrlForLayer",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.GetDownloadUrlForLayer",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository that is associated with the image layer to download.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository that is associated with the image layer to download.</p>\n@param repositoryName The name of the repository that is associated with the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository that is associated with the image layer to download.</p>\n@return The name of the repository that is associated with the image layer to download.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository that is associated with the image layer to download.</p>\n@param repositoryName The name of the repository that is associated with the image layer to download.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository that is associated with the image layer to download.</p>\n@param repositoryName The name of the repository that is associated with the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository that is associated with the image layer to download.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "layerDigest",
        "c2jShape" : "LayerDigest",
        "deprecated" : false,
        "documentation" : "<p>The digest of the image layer to download.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLayerDigest",
        "getterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@return The digest of the image layer to download.*/",
        "getterMethodName" : "getLayerDigest",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "layerDigest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "layerDigest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LayerDigest",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.*/",
        "setterMethodName" : "setLayerDigest",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "layerDigest",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "layerDigest",
          "variableType" : "String",
          "documentation" : "<p>The digest of the image layer to download.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LayerDigest" : {
          "c2jName" : "layerDigest",
          "c2jShape" : "LayerDigest",
          "deprecated" : false,
          "documentation" : "<p>The digest of the image layer to download.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLayerDigest",
          "getterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@return The digest of the image layer to download.*/",
          "getterMethodName" : "getLayerDigest",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "layerDigest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "layerDigest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LayerDigest",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.*/",
          "setterMethodName" : "setLayerDigest",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "layerDigest",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "layerDigest",
            "variableType" : "String",
            "documentation" : "<p>The digest of the image layer to download.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that is associated with the image layer to download.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository that is associated with the image layer to download.</p>\n@param repositoryName The name of the repository that is associated with the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository that is associated with the image layer to download.</p>\n@return The name of the repository that is associated with the image layer to download.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository that is associated with the image layer to download.</p>\n@param repositoryName The name of the repository that is associated with the image layer to download.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository that is associated with the image layer to download.</p>\n@param repositoryName The name of the repository that is associated with the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository that is associated with the image layer to download.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "layerDigest" ],
      "shapeName" : "GetDownloadUrlForLayerRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetDownloadUrlForLayerRequest",
        "variableName" : "getDownloadUrlForLayerRequest",
        "variableType" : "GetDownloadUrlForLayerRequest",
        "documentation" : null,
        "simpleType" : "GetDownloadUrlForLayerRequest",
        "variableSetterType" : "GetDownloadUrlForLayerRequest"
      },
      "wrapper" : false
    },
    "GetDownloadUrlForLayerResult" : {
      "c2jName" : "GetDownloadUrlForLayerResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "downloadUrl",
        "c2jShape" : "Url",
        "deprecated" : false,
        "documentation" : "<p>The pre-signed Amazon S3 download URL for the requested layer.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The pre-signed Amazon S3 download URL for the requested layer.</p>\n@param downloadUrl The pre-signed Amazon S3 download URL for the requested layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDownloadUrl",
        "getterDocumentation" : "/**<p>The pre-signed Amazon S3 download URL for the requested layer.</p>\n@return The pre-signed Amazon S3 download URL for the requested layer.*/",
        "getterMethodName" : "getDownloadUrl",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "downloadUrl",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "downloadUrl",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DownloadUrl",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The pre-signed Amazon S3 download URL for the requested layer.</p>\n@param downloadUrl The pre-signed Amazon S3 download URL for the requested layer.*/",
        "setterMethodName" : "setDownloadUrl",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "downloadUrl",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The pre-signed Amazon S3 download URL for the requested layer.</p>\n@param downloadUrl The pre-signed Amazon S3 download URL for the requested layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "downloadUrl",
          "variableType" : "String",
          "documentation" : "<p>The pre-signed Amazon S3 download URL for the requested layer.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "layerDigest",
        "c2jShape" : "LayerDigest",
        "deprecated" : false,
        "documentation" : "<p>The digest of the image layer to download.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLayerDigest",
        "getterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@return The digest of the image layer to download.*/",
        "getterMethodName" : "getLayerDigest",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "layerDigest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "layerDigest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LayerDigest",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.*/",
        "setterMethodName" : "setLayerDigest",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "layerDigest",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "layerDigest",
          "variableType" : "String",
          "documentation" : "<p>The digest of the image layer to download.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DownloadUrl" : {
          "c2jName" : "downloadUrl",
          "c2jShape" : "Url",
          "deprecated" : false,
          "documentation" : "<p>The pre-signed Amazon S3 download URL for the requested layer.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The pre-signed Amazon S3 download URL for the requested layer.</p>\n@param downloadUrl The pre-signed Amazon S3 download URL for the requested layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDownloadUrl",
          "getterDocumentation" : "/**<p>The pre-signed Amazon S3 download URL for the requested layer.</p>\n@return The pre-signed Amazon S3 download URL for the requested layer.*/",
          "getterMethodName" : "getDownloadUrl",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "downloadUrl",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "downloadUrl",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DownloadUrl",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The pre-signed Amazon S3 download URL for the requested layer.</p>\n@param downloadUrl The pre-signed Amazon S3 download URL for the requested layer.*/",
          "setterMethodName" : "setDownloadUrl",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "downloadUrl",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The pre-signed Amazon S3 download URL for the requested layer.</p>\n@param downloadUrl The pre-signed Amazon S3 download URL for the requested layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "downloadUrl",
            "variableType" : "String",
            "documentation" : "<p>The pre-signed Amazon S3 download URL for the requested layer.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LayerDigest" : {
          "c2jName" : "layerDigest",
          "c2jShape" : "LayerDigest",
          "deprecated" : false,
          "documentation" : "<p>The digest of the image layer to download.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLayerDigest",
          "getterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@return The digest of the image layer to download.*/",
          "getterMethodName" : "getLayerDigest",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "layerDigest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "layerDigest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LayerDigest",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.*/",
          "setterMethodName" : "setLayerDigest",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "layerDigest",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "layerDigest",
            "variableType" : "String",
            "documentation" : "<p>The digest of the image layer to download.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetDownloadUrlForLayerResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetDownloadUrlForLayerResult",
        "variableName" : "getDownloadUrlForLayerResult",
        "variableType" : "GetDownloadUrlForLayerResult",
        "documentation" : null,
        "simpleType" : "GetDownloadUrlForLayerResult",
        "variableSetterType" : "GetDownloadUrlForLayerResult"
      },
      "wrapper" : false
    },
    "GetLifecyclePolicyPreviewRequest" : {
      "c2jName" : "GetLifecyclePolicyPreviewRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetLifecyclePolicyPreview",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.GetLifecyclePolicyPreview",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository.</p>\n@return The name of the repository.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imageIds",
        "c2jShape" : "ImageIdentifierList",
        "deprecated" : false,
        "documentation" : "<p>The list of imageIDs to be included.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The list of imageIDs to be included.</p>\n@param imageIds The list of imageIDs to be included.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageIds",
        "getterDocumentation" : "/**<p>The list of imageIDs to be included.</p>\n@return The list of imageIDs to be included.*/",
        "getterMethodName" : "getImageIds",
        "getterModel" : {
          "returnType" : "java.util.List<ImageIdentifier>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageIds",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ImageIdentifier",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ImageIdentifier",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageIdentifier",
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageIdentifier",
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ImageIdentifier",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ImageIdentifier",
          "templateImplType" : "java.util.ArrayList<ImageIdentifier>",
          "templateType" : "java.util.List<ImageIdentifier>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ImageIds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The list of imageIDs to be included.</p>\n@param imageIds The list of imageIDs to be included.*/",
        "setterMethodName" : "setImageIds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "documentation" : "",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The list of imageIDs to be included.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds The list of imageIDs to be included.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "documentation" : "<p>The list of imageIDs to be included.</p>",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@return The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "maxResults",
        "c2jShape" : "LifecyclePreviewMaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@return The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "maxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "maxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "filter",
        "c2jShape" : "LifecyclePolicyPreviewFilter",
        "deprecated" : false,
        "documentation" : "<p>An optional parameter that filters results based on image tag status and all tags, if tagged.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An optional parameter that filters results based on image tag status and all tags, if tagged.</p>\n@param filter An optional parameter that filters results based on image tag status and all tags, if tagged.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilter",
        "getterDocumentation" : "/**<p>An optional parameter that filters results based on image tag status and all tags, if tagged.</p>\n@return An optional parameter that filters results based on image tag status and all tags, if tagged.*/",
        "getterMethodName" : "getFilter",
        "getterModel" : {
          "returnType" : "LifecyclePolicyPreviewFilter",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "filter",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "filter",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Filter",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An optional parameter that filters results based on image tag status and all tags, if tagged.</p>\n@param filter An optional parameter that filters results based on image tag status and all tags, if tagged.*/",
        "setterMethodName" : "setFilter",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "LifecyclePolicyPreviewFilter",
          "variableName" : "filter",
          "variableType" : "LifecyclePolicyPreviewFilter",
          "documentation" : "",
          "simpleType" : "LifecyclePolicyPreviewFilter",
          "variableSetterType" : "LifecyclePolicyPreviewFilter"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An optional parameter that filters results based on image tag status and all tags, if tagged.</p>\n@param filter An optional parameter that filters results based on image tag status and all tags, if tagged.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "LifecyclePolicyPreviewFilter",
          "variableName" : "filter",
          "variableType" : "LifecyclePolicyPreviewFilter",
          "documentation" : "<p>An optional parameter that filters results based on image tag status and all tags, if tagged.</p>",
          "simpleType" : "LifecyclePolicyPreviewFilter",
          "variableSetterType" : "LifecyclePolicyPreviewFilter"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Filter" : {
          "c2jName" : "filter",
          "c2jShape" : "LifecyclePolicyPreviewFilter",
          "deprecated" : false,
          "documentation" : "<p>An optional parameter that filters results based on image tag status and all tags, if tagged.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An optional parameter that filters results based on image tag status and all tags, if tagged.</p>\n@param filter An optional parameter that filters results based on image tag status and all tags, if tagged.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilter",
          "getterDocumentation" : "/**<p>An optional parameter that filters results based on image tag status and all tags, if tagged.</p>\n@return An optional parameter that filters results based on image tag status and all tags, if tagged.*/",
          "getterMethodName" : "getFilter",
          "getterModel" : {
            "returnType" : "LifecyclePolicyPreviewFilter",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "filter",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "filter",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Filter",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An optional parameter that filters results based on image tag status and all tags, if tagged.</p>\n@param filter An optional parameter that filters results based on image tag status and all tags, if tagged.*/",
          "setterMethodName" : "setFilter",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "LifecyclePolicyPreviewFilter",
            "variableName" : "filter",
            "variableType" : "LifecyclePolicyPreviewFilter",
            "documentation" : "",
            "simpleType" : "LifecyclePolicyPreviewFilter",
            "variableSetterType" : "LifecyclePolicyPreviewFilter"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An optional parameter that filters results based on image tag status and all tags, if tagged.</p>\n@param filter An optional parameter that filters results based on image tag status and all tags, if tagged.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "LifecyclePolicyPreviewFilter",
            "variableName" : "filter",
            "variableType" : "LifecyclePolicyPreviewFilter",
            "documentation" : "<p>An optional parameter that filters results based on image tag status and all tags, if tagged.</p>",
            "simpleType" : "LifecyclePolicyPreviewFilter",
            "variableSetterType" : "LifecyclePolicyPreviewFilter"
          },
          "xmlNameSpaceUri" : null
        },
        "ImageIds" : {
          "c2jName" : "imageIds",
          "c2jShape" : "ImageIdentifierList",
          "deprecated" : false,
          "documentation" : "<p>The list of imageIDs to be included.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The list of imageIDs to be included.</p>\n@param imageIds The list of imageIDs to be included.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageIds",
          "getterDocumentation" : "/**<p>The list of imageIDs to be included.</p>\n@return The list of imageIDs to be included.*/",
          "getterMethodName" : "getImageIds",
          "getterModel" : {
            "returnType" : "java.util.List<ImageIdentifier>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageIds",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ImageIdentifier",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ImageIdentifier",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageIdentifier",
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageIdentifier",
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ImageIdentifier",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ImageIdentifier",
            "templateImplType" : "java.util.ArrayList<ImageIdentifier>",
            "templateType" : "java.util.List<ImageIdentifier>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ImageIds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The list of imageIDs to be included.</p>\n@param imageIds The list of imageIDs to be included.*/",
          "setterMethodName" : "setImageIds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "documentation" : "",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The list of imageIDs to be included.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds The list of imageIDs to be included.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "documentation" : "<p>The list of imageIDs to be included.</p>",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "maxResults",
          "c2jShape" : "LifecyclePreviewMaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@return The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "maxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "maxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param maxResults The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in&#x2028; paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns&#x2028; <code>maxResults</code> results in a single page along with a <code>nextToken</code>&#x2028; response element. The remaining results of the initial request can be seen by sending&#x2028; another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>&#x2028; value. This value can be between 1 and 1000. If this&#x2028; parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to&#x2028; 100 results and a <code>nextToken</code> value, if&#x2028; applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@return The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated&#x2028; <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the&#x2028; results exceeded the value of that parameter. Pagination continues from the end of the&#x2028; previous results that returned the <code>nextToken</code> value. This value is&#x2028; <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository.</p>\n@return The name of the repository.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "GetLifecyclePolicyPreviewRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetLifecyclePolicyPreviewRequest",
        "variableName" : "getLifecyclePolicyPreviewRequest",
        "variableType" : "GetLifecyclePolicyPreviewRequest",
        "documentation" : null,
        "simpleType" : "GetLifecyclePolicyPreviewRequest",
        "variableSetterType" : "GetLifecyclePolicyPreviewRequest"
      },
      "wrapper" : false
    },
    "GetLifecyclePolicyPreviewResult" : {
      "c2jName" : "GetLifecyclePolicyPreviewResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The registry ID associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The repository name associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The repository name associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lifecyclePolicyText",
        "c2jShape" : "LifecyclePolicyText",
        "deprecated" : false,
        "documentation" : "<p>The JSON lifecycle policy text.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLifecyclePolicyText",
        "getterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@return The JSON lifecycle policy text.*/",
        "getterMethodName" : "getLifecyclePolicyText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lifecyclePolicyText",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lifecyclePolicyText",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LifecyclePolicyText",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.*/",
        "setterMethodName" : "setLifecyclePolicyText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "lifecyclePolicyText",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "lifecyclePolicyText",
          "variableType" : "String",
          "documentation" : "<p>The JSON lifecycle policy text.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "status",
        "c2jShape" : "LifecyclePolicyPreviewStatus",
        "deprecated" : false,
        "documentation" : "<p>The status of the lifecycle policy preview request.</p>",
        "enumType" : "LifecyclePolicyPreviewStatus",
        "fluentSetterDocumentation" : "/**<p>The status of the lifecycle policy preview request.</p>\n@param status The status of the lifecycle policy preview request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LifecyclePolicyPreviewStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>The status of the lifecycle policy preview request.</p>\n@return The status of the lifecycle policy preview request.\n@see LifecyclePolicyPreviewStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The status of the lifecycle policy preview request.</p>\n@param status The status of the lifecycle policy preview request.\n@see LifecyclePolicyPreviewStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The status of the lifecycle policy preview request.</p>\n@param status The status of the lifecycle policy preview request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LifecyclePolicyPreviewStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>The status of the lifecycle policy preview request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@return The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "previewResults",
        "c2jShape" : "LifecyclePolicyPreviewResultList",
        "deprecated" : false,
        "documentation" : "<p>The results of the lifecycle policy preview request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The results of the lifecycle policy preview request.</p>\n@param previewResults The results of the lifecycle policy preview request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPreviewResults",
        "getterDocumentation" : "/**<p>The results of the lifecycle policy preview request.</p>\n@return The results of the lifecycle policy preview request.*/",
        "getterMethodName" : "getPreviewResults",
        "getterModel" : {
          "returnType" : "java.util.List<LifecyclePolicyPreviewResult>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "previewResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "previewResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "LifecyclePolicyPreviewResult",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "LifecyclePolicyPreviewResult",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "LifecyclePolicyPreviewResult",
              "variableName" : "member",
              "variableType" : "LifecyclePolicyPreviewResult",
              "documentation" : "",
              "simpleType" : "LifecyclePolicyPreviewResult",
              "variableSetterType" : "LifecyclePolicyPreviewResult"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "LifecyclePolicyPreviewResult",
              "variableName" : "member",
              "variableType" : "LifecyclePolicyPreviewResult",
              "documentation" : "",
              "simpleType" : "LifecyclePolicyPreviewResult",
              "variableSetterType" : "LifecyclePolicyPreviewResult"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "LifecyclePolicyPreviewResult",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "LifecyclePolicyPreviewResult",
          "templateImplType" : "java.util.ArrayList<LifecyclePolicyPreviewResult>",
          "templateType" : "java.util.List<LifecyclePolicyPreviewResult>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "PreviewResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The results of the lifecycle policy preview request.</p>\n@param previewResults The results of the lifecycle policy preview request.*/",
        "setterMethodName" : "setPreviewResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<LifecyclePolicyPreviewResult>",
          "variableName" : "previewResults",
          "variableType" : "java.util.List<LifecyclePolicyPreviewResult>",
          "documentation" : "",
          "simpleType" : "List<LifecyclePolicyPreviewResult>",
          "variableSetterType" : "java.util.Collection<LifecyclePolicyPreviewResult>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The results of the lifecycle policy preview request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPreviewResults(java.util.Collection)} or {@link #withPreviewResults(java.util.Collection)} if you want to override the existing values.</p>\n@param previewResults The results of the lifecycle policy preview request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<LifecyclePolicyPreviewResult>",
          "variableName" : "previewResults",
          "variableType" : "java.util.List<LifecyclePolicyPreviewResult>",
          "documentation" : "<p>The results of the lifecycle policy preview request.</p>",
          "simpleType" : "List<LifecyclePolicyPreviewResult>",
          "variableSetterType" : "java.util.Collection<LifecyclePolicyPreviewResult>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "summary",
        "c2jShape" : "LifecyclePolicyPreviewSummary",
        "deprecated" : false,
        "documentation" : "<p>The list of images that is returned as a result of the action.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The list of images that is returned as a result of the action.</p>\n@param summary The list of images that is returned as a result of the action.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSummary",
        "getterDocumentation" : "/**<p>The list of images that is returned as a result of the action.</p>\n@return The list of images that is returned as a result of the action.*/",
        "getterMethodName" : "getSummary",
        "getterModel" : {
          "returnType" : "LifecyclePolicyPreviewSummary",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "summary",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "summary",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Summary",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The list of images that is returned as a result of the action.</p>\n@param summary The list of images that is returned as a result of the action.*/",
        "setterMethodName" : "setSummary",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "LifecyclePolicyPreviewSummary",
          "variableName" : "summary",
          "variableType" : "LifecyclePolicyPreviewSummary",
          "documentation" : "",
          "simpleType" : "LifecyclePolicyPreviewSummary",
          "variableSetterType" : "LifecyclePolicyPreviewSummary"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The list of images that is returned as a result of the action.</p>\n@param summary The list of images that is returned as a result of the action.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "LifecyclePolicyPreviewSummary",
          "variableName" : "summary",
          "variableType" : "LifecyclePolicyPreviewSummary",
          "documentation" : "<p>The list of images that is returned as a result of the action.</p>",
          "simpleType" : "LifecyclePolicyPreviewSummary",
          "variableSetterType" : "LifecyclePolicyPreviewSummary"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LifecyclePolicyText" : {
          "c2jName" : "lifecyclePolicyText",
          "c2jShape" : "LifecyclePolicyText",
          "deprecated" : false,
          "documentation" : "<p>The JSON lifecycle policy text.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLifecyclePolicyText",
          "getterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@return The JSON lifecycle policy text.*/",
          "getterMethodName" : "getLifecyclePolicyText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lifecyclePolicyText",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lifecyclePolicyText",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LifecyclePolicyText",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.*/",
          "setterMethodName" : "setLifecyclePolicyText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "lifecyclePolicyText",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "lifecyclePolicyText",
            "variableType" : "String",
            "documentation" : "<p>The JSON lifecycle policy text.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@return The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PreviewResults" : {
          "c2jName" : "previewResults",
          "c2jShape" : "LifecyclePolicyPreviewResultList",
          "deprecated" : false,
          "documentation" : "<p>The results of the lifecycle policy preview request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The results of the lifecycle policy preview request.</p>\n@param previewResults The results of the lifecycle policy preview request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPreviewResults",
          "getterDocumentation" : "/**<p>The results of the lifecycle policy preview request.</p>\n@return The results of the lifecycle policy preview request.*/",
          "getterMethodName" : "getPreviewResults",
          "getterModel" : {
            "returnType" : "java.util.List<LifecyclePolicyPreviewResult>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "previewResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "previewResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "LifecyclePolicyPreviewResult",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "LifecyclePolicyPreviewResult",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "LifecyclePolicyPreviewResult",
                "variableName" : "member",
                "variableType" : "LifecyclePolicyPreviewResult",
                "documentation" : "",
                "simpleType" : "LifecyclePolicyPreviewResult",
                "variableSetterType" : "LifecyclePolicyPreviewResult"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "LifecyclePolicyPreviewResult",
                "variableName" : "member",
                "variableType" : "LifecyclePolicyPreviewResult",
                "documentation" : "",
                "simpleType" : "LifecyclePolicyPreviewResult",
                "variableSetterType" : "LifecyclePolicyPreviewResult"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "LifecyclePolicyPreviewResult",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "LifecyclePolicyPreviewResult",
            "templateImplType" : "java.util.ArrayList<LifecyclePolicyPreviewResult>",
            "templateType" : "java.util.List<LifecyclePolicyPreviewResult>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "PreviewResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The results of the lifecycle policy preview request.</p>\n@param previewResults The results of the lifecycle policy preview request.*/",
          "setterMethodName" : "setPreviewResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<LifecyclePolicyPreviewResult>",
            "variableName" : "previewResults",
            "variableType" : "java.util.List<LifecyclePolicyPreviewResult>",
            "documentation" : "",
            "simpleType" : "List<LifecyclePolicyPreviewResult>",
            "variableSetterType" : "java.util.Collection<LifecyclePolicyPreviewResult>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The results of the lifecycle policy preview request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPreviewResults(java.util.Collection)} or {@link #withPreviewResults(java.util.Collection)} if you want to override the existing values.</p>\n@param previewResults The results of the lifecycle policy preview request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<LifecyclePolicyPreviewResult>",
            "variableName" : "previewResults",
            "variableType" : "java.util.List<LifecyclePolicyPreviewResult>",
            "documentation" : "<p>The results of the lifecycle policy preview request.</p>",
            "simpleType" : "List<LifecyclePolicyPreviewResult>",
            "variableSetterType" : "java.util.Collection<LifecyclePolicyPreviewResult>"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The registry ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The repository name associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "status",
          "c2jShape" : "LifecyclePolicyPreviewStatus",
          "deprecated" : false,
          "documentation" : "<p>The status of the lifecycle policy preview request.</p>",
          "enumType" : "LifecyclePolicyPreviewStatus",
          "fluentSetterDocumentation" : "/**<p>The status of the lifecycle policy preview request.</p>\n@param status The status of the lifecycle policy preview request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LifecyclePolicyPreviewStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>The status of the lifecycle policy preview request.</p>\n@return The status of the lifecycle policy preview request.\n@see LifecyclePolicyPreviewStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The status of the lifecycle policy preview request.</p>\n@param status The status of the lifecycle policy preview request.\n@see LifecyclePolicyPreviewStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The status of the lifecycle policy preview request.</p>\n@param status The status of the lifecycle policy preview request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LifecyclePolicyPreviewStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>The status of the lifecycle policy preview request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Summary" : {
          "c2jName" : "summary",
          "c2jShape" : "LifecyclePolicyPreviewSummary",
          "deprecated" : false,
          "documentation" : "<p>The list of images that is returned as a result of the action.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The list of images that is returned as a result of the action.</p>\n@param summary The list of images that is returned as a result of the action.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSummary",
          "getterDocumentation" : "/**<p>The list of images that is returned as a result of the action.</p>\n@return The list of images that is returned as a result of the action.*/",
          "getterMethodName" : "getSummary",
          "getterModel" : {
            "returnType" : "LifecyclePolicyPreviewSummary",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "summary",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "summary",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Summary",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The list of images that is returned as a result of the action.</p>\n@param summary The list of images that is returned as a result of the action.*/",
          "setterMethodName" : "setSummary",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "LifecyclePolicyPreviewSummary",
            "variableName" : "summary",
            "variableType" : "LifecyclePolicyPreviewSummary",
            "documentation" : "",
            "simpleType" : "LifecyclePolicyPreviewSummary",
            "variableSetterType" : "LifecyclePolicyPreviewSummary"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The list of images that is returned as a result of the action.</p>\n@param summary The list of images that is returned as a result of the action.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "LifecyclePolicyPreviewSummary",
            "variableName" : "summary",
            "variableType" : "LifecyclePolicyPreviewSummary",
            "documentation" : "<p>The list of images that is returned as a result of the action.</p>",
            "simpleType" : "LifecyclePolicyPreviewSummary",
            "variableSetterType" : "LifecyclePolicyPreviewSummary"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetLifecyclePolicyPreviewResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetLifecyclePolicyPreviewResult",
        "variableName" : "getLifecyclePolicyPreviewResult",
        "variableType" : "GetLifecyclePolicyPreviewResult",
        "documentation" : null,
        "simpleType" : "GetLifecyclePolicyPreviewResult",
        "variableSetterType" : "GetLifecyclePolicyPreviewResult"
      },
      "wrapper" : false
    },
    "GetLifecyclePolicyRequest" : {
      "c2jName" : "GetLifecyclePolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetLifecyclePolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.GetLifecyclePolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository.</p>\n@return The name of the repository.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository.</p>\n@return The name of the repository.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "GetLifecyclePolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetLifecyclePolicyRequest",
        "variableName" : "getLifecyclePolicyRequest",
        "variableType" : "GetLifecyclePolicyRequest",
        "documentation" : null,
        "simpleType" : "GetLifecyclePolicyRequest",
        "variableSetterType" : "GetLifecyclePolicyRequest"
      },
      "wrapper" : false
    },
    "GetLifecyclePolicyResult" : {
      "c2jName" : "GetLifecyclePolicyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The registry ID associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The repository name associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The repository name associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lifecyclePolicyText",
        "c2jShape" : "LifecyclePolicyText",
        "deprecated" : false,
        "documentation" : "<p>The JSON lifecycle policy text.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLifecyclePolicyText",
        "getterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@return The JSON lifecycle policy text.*/",
        "getterMethodName" : "getLifecyclePolicyText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lifecyclePolicyText",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lifecyclePolicyText",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LifecyclePolicyText",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.*/",
        "setterMethodName" : "setLifecyclePolicyText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "lifecyclePolicyText",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "lifecyclePolicyText",
          "variableType" : "String",
          "documentation" : "<p>The JSON lifecycle policy text.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lastEvaluatedAt",
        "c2jShape" : "EvaluationTimestamp",
        "deprecated" : false,
        "documentation" : "<p>The time stamp of the last time that the lifecycle policy was run.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The time stamp of the last time that the lifecycle policy was run.</p>\n@param lastEvaluatedAt The time stamp of the last time that the lifecycle policy was run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastEvaluatedAt",
        "getterDocumentation" : "/**<p>The time stamp of the last time that the lifecycle policy was run.</p>\n@return The time stamp of the last time that the lifecycle policy was run.*/",
        "getterMethodName" : "getLastEvaluatedAt",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lastEvaluatedAt",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lastEvaluatedAt",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "LastEvaluatedAt",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The time stamp of the last time that the lifecycle policy was run.</p>\n@param lastEvaluatedAt The time stamp of the last time that the lifecycle policy was run.*/",
        "setterMethodName" : "setLastEvaluatedAt",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastEvaluatedAt",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The time stamp of the last time that the lifecycle policy was run.</p>\n@param lastEvaluatedAt The time stamp of the last time that the lifecycle policy was run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastEvaluatedAt",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The time stamp of the last time that the lifecycle policy was run.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LastEvaluatedAt" : {
          "c2jName" : "lastEvaluatedAt",
          "c2jShape" : "EvaluationTimestamp",
          "deprecated" : false,
          "documentation" : "<p>The time stamp of the last time that the lifecycle policy was run.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The time stamp of the last time that the lifecycle policy was run.</p>\n@param lastEvaluatedAt The time stamp of the last time that the lifecycle policy was run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastEvaluatedAt",
          "getterDocumentation" : "/**<p>The time stamp of the last time that the lifecycle policy was run.</p>\n@return The time stamp of the last time that the lifecycle policy was run.*/",
          "getterMethodName" : "getLastEvaluatedAt",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lastEvaluatedAt",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lastEvaluatedAt",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "LastEvaluatedAt",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The time stamp of the last time that the lifecycle policy was run.</p>\n@param lastEvaluatedAt The time stamp of the last time that the lifecycle policy was run.*/",
          "setterMethodName" : "setLastEvaluatedAt",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastEvaluatedAt",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The time stamp of the last time that the lifecycle policy was run.</p>\n@param lastEvaluatedAt The time stamp of the last time that the lifecycle policy was run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastEvaluatedAt",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The time stamp of the last time that the lifecycle policy was run.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "LifecyclePolicyText" : {
          "c2jName" : "lifecyclePolicyText",
          "c2jShape" : "LifecyclePolicyText",
          "deprecated" : false,
          "documentation" : "<p>The JSON lifecycle policy text.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLifecyclePolicyText",
          "getterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@return The JSON lifecycle policy text.*/",
          "getterMethodName" : "getLifecyclePolicyText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lifecyclePolicyText",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lifecyclePolicyText",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LifecyclePolicyText",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.*/",
          "setterMethodName" : "setLifecyclePolicyText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "lifecyclePolicyText",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON lifecycle policy text.</p>\n@param lifecyclePolicyText The JSON lifecycle policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "lifecyclePolicyText",
            "variableType" : "String",
            "documentation" : "<p>The JSON lifecycle policy text.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The registry ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The repository name associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetLifecyclePolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetLifecyclePolicyResult",
        "variableName" : "getLifecyclePolicyResult",
        "variableType" : "GetLifecyclePolicyResult",
        "documentation" : null,
        "simpleType" : "GetLifecyclePolicyResult",
        "variableSetterType" : "GetLifecyclePolicyResult"
      },
      "wrapper" : false
    },
    "GetRepositoryPolicyRequest" : {
      "c2jName" : "GetRepositoryPolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetRepositoryPolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.GetRepositoryPolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository with the policy to retrieve.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository with the policy to retrieve.</p>\n@param repositoryName The name of the repository with the policy to retrieve.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository with the policy to retrieve.</p>\n@return The name of the repository with the policy to retrieve.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository with the policy to retrieve.</p>\n@param repositoryName The name of the repository with the policy to retrieve.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository with the policy to retrieve.</p>\n@param repositoryName The name of the repository with the policy to retrieve.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository with the policy to retrieve.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository with the policy to retrieve.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository with the policy to retrieve.</p>\n@param repositoryName The name of the repository with the policy to retrieve.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository with the policy to retrieve.</p>\n@return The name of the repository with the policy to retrieve.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository with the policy to retrieve.</p>\n@param repositoryName The name of the repository with the policy to retrieve.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository with the policy to retrieve.</p>\n@param repositoryName The name of the repository with the policy to retrieve.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository with the policy to retrieve.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "GetRepositoryPolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetRepositoryPolicyRequest",
        "variableName" : "getRepositoryPolicyRequest",
        "variableType" : "GetRepositoryPolicyRequest",
        "documentation" : null,
        "simpleType" : "GetRepositoryPolicyRequest",
        "variableSetterType" : "GetRepositoryPolicyRequest"
      },
      "wrapper" : false
    },
    "GetRepositoryPolicyResult" : {
      "c2jName" : "GetRepositoryPolicyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The registry ID associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The repository name associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The repository name associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyText",
        "c2jShape" : "RepositoryPolicyText",
        "deprecated" : false,
        "documentation" : "<p>The JSON repository policy text associated with the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON repository policy text associated with the repository.</p>\n@param policyText The JSON repository policy text associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyText",
        "getterDocumentation" : "/**<p>The JSON repository policy text associated with the repository.</p>\n@return The JSON repository policy text associated with the repository.*/",
        "getterMethodName" : "getPolicyText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyText",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyText",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyText",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The JSON repository policy text associated with the repository.</p>\n@param policyText The JSON repository policy text associated with the repository.*/",
        "setterMethodName" : "setPolicyText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "policyText",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON repository policy text associated with the repository.</p>\n@param policyText The JSON repository policy text associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "policyText",
          "variableType" : "String",
          "documentation" : "<p>The JSON repository policy text associated with the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PolicyText" : {
          "c2jName" : "policyText",
          "c2jShape" : "RepositoryPolicyText",
          "deprecated" : false,
          "documentation" : "<p>The JSON repository policy text associated with the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON repository policy text associated with the repository.</p>\n@param policyText The JSON repository policy text associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyText",
          "getterDocumentation" : "/**<p>The JSON repository policy text associated with the repository.</p>\n@return The JSON repository policy text associated with the repository.*/",
          "getterMethodName" : "getPolicyText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyText",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyText",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyText",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The JSON repository policy text associated with the repository.</p>\n@param policyText The JSON repository policy text associated with the repository.*/",
          "setterMethodName" : "setPolicyText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "policyText",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON repository policy text associated with the repository.</p>\n@param policyText The JSON repository policy text associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "policyText",
            "variableType" : "String",
            "documentation" : "<p>The JSON repository policy text associated with the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The registry ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The repository name associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetRepositoryPolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetRepositoryPolicyResult",
        "variableName" : "getRepositoryPolicyResult",
        "variableType" : "GetRepositoryPolicyResult",
        "documentation" : null,
        "simpleType" : "GetRepositoryPolicyResult",
        "variableSetterType" : "GetRepositoryPolicyResult"
      },
      "wrapper" : false
    },
    "Image" : {
      "c2jName" : "Image",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object representing an Amazon ECR image.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry containing the image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry containing the image.</p>\n@param registryId The AWS account ID associated with the registry containing the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry containing the image.</p>\n@return The AWS account ID associated with the registry containing the image.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry containing the image.</p>\n@param registryId The AWS account ID associated with the registry containing the image.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry containing the image.</p>\n@param registryId The AWS account ID associated with the registry containing the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry containing the image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository associated with the image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository associated with the image.</p>\n@param repositoryName The name of the repository associated with the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository associated with the image.</p>\n@return The name of the repository associated with the image.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository associated with the image.</p>\n@param repositoryName The name of the repository associated with the image.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository associated with the image.</p>\n@param repositoryName The name of the repository associated with the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository associated with the image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imageId",
        "c2jShape" : "ImageIdentifier",
        "deprecated" : false,
        "documentation" : "<p>An object containing the image tag and image digest associated with an image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An object containing the image tag and image digest associated with an image.</p>\n@param imageId An object containing the image tag and image digest associated with an image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageId",
        "getterDocumentation" : "/**<p>An object containing the image tag and image digest associated with an image.</p>\n@return An object containing the image tag and image digest associated with an image.*/",
        "getterMethodName" : "getImageId",
        "getterModel" : {
          "returnType" : "ImageIdentifier",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ImageId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An object containing the image tag and image digest associated with an image.</p>\n@param imageId An object containing the image tag and image digest associated with an image.*/",
        "setterMethodName" : "setImageId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImageIdentifier",
          "variableName" : "imageId",
          "variableType" : "ImageIdentifier",
          "documentation" : "",
          "simpleType" : "ImageIdentifier",
          "variableSetterType" : "ImageIdentifier"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An object containing the image tag and image digest associated with an image.</p>\n@param imageId An object containing the image tag and image digest associated with an image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImageIdentifier",
          "variableName" : "imageId",
          "variableType" : "ImageIdentifier",
          "documentation" : "<p>An object containing the image tag and image digest associated with an image.</p>",
          "simpleType" : "ImageIdentifier",
          "variableSetterType" : "ImageIdentifier"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imageManifest",
        "c2jShape" : "ImageManifest",
        "deprecated" : false,
        "documentation" : "<p>The image manifest associated with the image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The image manifest associated with the image.</p>\n@param imageManifest The image manifest associated with the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageManifest",
        "getterDocumentation" : "/**<p>The image manifest associated with the image.</p>\n@return The image manifest associated with the image.*/",
        "getterMethodName" : "getImageManifest",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageManifest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageManifest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ImageManifest",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The image manifest associated with the image.</p>\n@param imageManifest The image manifest associated with the image.*/",
        "setterMethodName" : "setImageManifest",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "imageManifest",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The image manifest associated with the image.</p>\n@param imageManifest The image manifest associated with the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "imageManifest",
          "variableType" : "String",
          "documentation" : "<p>The image manifest associated with the image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ImageId" : {
          "c2jName" : "imageId",
          "c2jShape" : "ImageIdentifier",
          "deprecated" : false,
          "documentation" : "<p>An object containing the image tag and image digest associated with an image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An object containing the image tag and image digest associated with an image.</p>\n@param imageId An object containing the image tag and image digest associated with an image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageId",
          "getterDocumentation" : "/**<p>An object containing the image tag and image digest associated with an image.</p>\n@return An object containing the image tag and image digest associated with an image.*/",
          "getterMethodName" : "getImageId",
          "getterModel" : {
            "returnType" : "ImageIdentifier",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ImageId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An object containing the image tag and image digest associated with an image.</p>\n@param imageId An object containing the image tag and image digest associated with an image.*/",
          "setterMethodName" : "setImageId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImageIdentifier",
            "variableName" : "imageId",
            "variableType" : "ImageIdentifier",
            "documentation" : "",
            "simpleType" : "ImageIdentifier",
            "variableSetterType" : "ImageIdentifier"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An object containing the image tag and image digest associated with an image.</p>\n@param imageId An object containing the image tag and image digest associated with an image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImageIdentifier",
            "variableName" : "imageId",
            "variableType" : "ImageIdentifier",
            "documentation" : "<p>An object containing the image tag and image digest associated with an image.</p>",
            "simpleType" : "ImageIdentifier",
            "variableSetterType" : "ImageIdentifier"
          },
          "xmlNameSpaceUri" : null
        },
        "ImageManifest" : {
          "c2jName" : "imageManifest",
          "c2jShape" : "ImageManifest",
          "deprecated" : false,
          "documentation" : "<p>The image manifest associated with the image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The image manifest associated with the image.</p>\n@param imageManifest The image manifest associated with the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageManifest",
          "getterDocumentation" : "/**<p>The image manifest associated with the image.</p>\n@return The image manifest associated with the image.*/",
          "getterMethodName" : "getImageManifest",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageManifest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageManifest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ImageManifest",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The image manifest associated with the image.</p>\n@param imageManifest The image manifest associated with the image.*/",
          "setterMethodName" : "setImageManifest",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "imageManifest",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The image manifest associated with the image.</p>\n@param imageManifest The image manifest associated with the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "imageManifest",
            "variableType" : "String",
            "documentation" : "<p>The image manifest associated with the image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry containing the image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry containing the image.</p>\n@param registryId The AWS account ID associated with the registry containing the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry containing the image.</p>\n@return The AWS account ID associated with the registry containing the image.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry containing the image.</p>\n@param registryId The AWS account ID associated with the registry containing the image.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry containing the image.</p>\n@param registryId The AWS account ID associated with the registry containing the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry containing the image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository associated with the image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository associated with the image.</p>\n@param repositoryName The name of the repository associated with the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository associated with the image.</p>\n@return The name of the repository associated with the image.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository associated with the image.</p>\n@param repositoryName The name of the repository associated with the image.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository associated with the image.</p>\n@param repositoryName The name of the repository associated with the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository associated with the image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Image",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Image",
        "variableName" : "image",
        "variableType" : "Image",
        "documentation" : null,
        "simpleType" : "Image",
        "variableSetterType" : "Image"
      },
      "wrapper" : false
    },
    "ImageActionType" : {
      "c2jName" : "ImageActionType",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "EXPIRE",
        "value" : "EXPIRE"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ImageActionType",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImageActionType",
        "variableName" : "imageActionType",
        "variableType" : "ImageActionType",
        "documentation" : null,
        "simpleType" : "ImageActionType",
        "variableSetterType" : "ImageActionType"
      },
      "wrapper" : false
    },
    "ImageAlreadyExistsException" : {
      "c2jName" : "ImageAlreadyExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified image has already been pushed, and there were no changes to the manifest or image tag after the last push.</p>",
      "enums" : null,
      "errorCode" : "ImageAlreadyExistsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ImageAlreadyExistsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImageAlreadyExistsException",
        "variableName" : "imageAlreadyExistsException",
        "variableType" : "ImageAlreadyExistsException",
        "documentation" : null,
        "simpleType" : "ImageAlreadyExistsException",
        "variableSetterType" : "ImageAlreadyExistsException"
      },
      "wrapper" : false
    },
    "ImageDetail" : {
      "c2jName" : "ImageDetail",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object that describes an image returned by a <a>DescribeImages</a> operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry to which this image belongs.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which this image belongs.</p>\n@param registryId The AWS account ID associated with the registry to which this image belongs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry to which this image belongs.</p>\n@return The AWS account ID associated with the registry to which this image belongs.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry to which this image belongs.</p>\n@param registryId The AWS account ID associated with the registry to which this image belongs.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which this image belongs.</p>\n@param registryId The AWS account ID associated with the registry to which this image belongs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry to which this image belongs.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to which this image belongs.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to which this image belongs.</p>\n@param repositoryName The name of the repository to which this image belongs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to which this image belongs.</p>\n@return The name of the repository to which this image belongs.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository to which this image belongs.</p>\n@param repositoryName The name of the repository to which this image belongs.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to which this image belongs.</p>\n@param repositoryName The name of the repository to which this image belongs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to which this image belongs.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imageDigest",
        "c2jShape" : "ImageDigest",
        "deprecated" : false,
        "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageDigest",
        "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@return The <code>sha256</code> digest of the image manifest.*/",
        "getterMethodName" : "getImageDigest",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageDigest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageDigest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ImageDigest",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.*/",
        "setterMethodName" : "setImageDigest",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "imageDigest",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "imageDigest",
          "variableType" : "String",
          "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imageTags",
        "c2jShape" : "ImageTagList",
        "deprecated" : false,
        "documentation" : "<p>The list of tags associated with this image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The list of tags associated with this image.</p>\n@param imageTags The list of tags associated with this image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageTags",
        "getterDocumentation" : "/**<p>The list of tags associated with this image.</p>\n@return The list of tags associated with this image.*/",
        "getterMethodName" : "getImageTags",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageTags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageTags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ImageTag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ImageTags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The list of tags associated with this image.</p>\n@param imageTags The list of tags associated with this image.*/",
        "setterMethodName" : "setImageTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "imageTags",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The list of tags associated with this image.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageTags(java.util.Collection)} or {@link #withImageTags(java.util.Collection)} if you want to override the existing values.</p>\n@param imageTags The list of tags associated with this image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "imageTags",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The list of tags associated with this image.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imageSizeInBytes",
        "c2jShape" : "ImageSizeInBytes",
        "deprecated" : false,
        "documentation" : "<p>The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>\n@param imageSizeInBytes The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageSizeInBytes",
        "getterDocumentation" : "/**<p>The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>\n@return The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p>*/",
        "getterMethodName" : "getImageSizeInBytes",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageSizeInBytes",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageSizeInBytes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "ImageSizeInBytes",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>\n@param imageSizeInBytes The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p>*/",
        "setterMethodName" : "setImageSizeInBytes",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "imageSizeInBytes",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>\n@param imageSizeInBytes The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "imageSizeInBytes",
          "variableType" : "Long",
          "documentation" : "<p>The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imagePushedAt",
        "c2jShape" : "PushTimestamp",
        "deprecated" : false,
        "documentation" : "<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository. </p>\n@param imagePushedAt The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImagePushedAt",
        "getterDocumentation" : "/**<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository. </p>\n@return The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.*/",
        "getterMethodName" : "getImagePushedAt",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imagePushedAt",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imagePushedAt",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "ImagePushedAt",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository. </p>\n@param imagePushedAt The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.*/",
        "setterMethodName" : "setImagePushedAt",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "imagePushedAt",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository. </p>\n@param imagePushedAt The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "imagePushedAt",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository. </p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ImageDigest" : {
          "c2jName" : "imageDigest",
          "c2jShape" : "ImageDigest",
          "deprecated" : false,
          "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageDigest",
          "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@return The <code>sha256</code> digest of the image manifest.*/",
          "getterMethodName" : "getImageDigest",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageDigest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageDigest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ImageDigest",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.*/",
          "setterMethodName" : "setImageDigest",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "imageDigest",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "imageDigest",
            "variableType" : "String",
            "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ImagePushedAt" : {
          "c2jName" : "imagePushedAt",
          "c2jShape" : "PushTimestamp",
          "deprecated" : false,
          "documentation" : "<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository. </p>\n@param imagePushedAt The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImagePushedAt",
          "getterDocumentation" : "/**<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository. </p>\n@return The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.*/",
          "getterMethodName" : "getImagePushedAt",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imagePushedAt",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imagePushedAt",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "ImagePushedAt",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository. </p>\n@param imagePushedAt The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.*/",
          "setterMethodName" : "setImagePushedAt",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "imagePushedAt",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository. </p>\n@param imagePushedAt The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "imagePushedAt",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository. </p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "ImageSizeInBytes" : {
          "c2jName" : "imageSizeInBytes",
          "c2jShape" : "ImageSizeInBytes",
          "deprecated" : false,
          "documentation" : "<p>The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>\n@param imageSizeInBytes The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageSizeInBytes",
          "getterDocumentation" : "/**<p>The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>\n@return The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p>*/",
          "getterMethodName" : "getImageSizeInBytes",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageSizeInBytes",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageSizeInBytes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "ImageSizeInBytes",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>\n@param imageSizeInBytes The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p>*/",
          "setterMethodName" : "setImageSizeInBytes",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "imageSizeInBytes",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>\n@param imageSizeInBytes The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "imageSizeInBytes",
            "variableType" : "Long",
            "documentation" : "<p>The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "ImageTags" : {
          "c2jName" : "imageTags",
          "c2jShape" : "ImageTagList",
          "deprecated" : false,
          "documentation" : "<p>The list of tags associated with this image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The list of tags associated with this image.</p>\n@param imageTags The list of tags associated with this image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageTags",
          "getterDocumentation" : "/**<p>The list of tags associated with this image.</p>\n@return The list of tags associated with this image.*/",
          "getterMethodName" : "getImageTags",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageTags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageTags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ImageTag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ImageTags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The list of tags associated with this image.</p>\n@param imageTags The list of tags associated with this image.*/",
          "setterMethodName" : "setImageTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "imageTags",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The list of tags associated with this image.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageTags(java.util.Collection)} or {@link #withImageTags(java.util.Collection)} if you want to override the existing values.</p>\n@param imageTags The list of tags associated with this image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "imageTags",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The list of tags associated with this image.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry to which this image belongs.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which this image belongs.</p>\n@param registryId The AWS account ID associated with the registry to which this image belongs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry to which this image belongs.</p>\n@return The AWS account ID associated with the registry to which this image belongs.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry to which this image belongs.</p>\n@param registryId The AWS account ID associated with the registry to which this image belongs.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which this image belongs.</p>\n@param registryId The AWS account ID associated with the registry to which this image belongs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry to which this image belongs.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to which this image belongs.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to which this image belongs.</p>\n@param repositoryName The name of the repository to which this image belongs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to which this image belongs.</p>\n@return The name of the repository to which this image belongs.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository to which this image belongs.</p>\n@param repositoryName The name of the repository to which this image belongs.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to which this image belongs.</p>\n@param repositoryName The name of the repository to which this image belongs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to which this image belongs.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ImageDetail",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImageDetail",
        "variableName" : "imageDetail",
        "variableType" : "ImageDetail",
        "documentation" : null,
        "simpleType" : "ImageDetail",
        "variableSetterType" : "ImageDetail"
      },
      "wrapper" : false
    },
    "ImageFailure" : {
      "c2jName" : "ImageFailure",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object representing an Amazon ECR image failure.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "imageId",
        "c2jShape" : "ImageIdentifier",
        "deprecated" : false,
        "documentation" : "<p>The image ID associated with the failure.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The image ID associated with the failure.</p>\n@param imageId The image ID associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageId",
        "getterDocumentation" : "/**<p>The image ID associated with the failure.</p>\n@return The image ID associated with the failure.*/",
        "getterMethodName" : "getImageId",
        "getterModel" : {
          "returnType" : "ImageIdentifier",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ImageId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The image ID associated with the failure.</p>\n@param imageId The image ID associated with the failure.*/",
        "setterMethodName" : "setImageId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImageIdentifier",
          "variableName" : "imageId",
          "variableType" : "ImageIdentifier",
          "documentation" : "",
          "simpleType" : "ImageIdentifier",
          "variableSetterType" : "ImageIdentifier"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The image ID associated with the failure.</p>\n@param imageId The image ID associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImageIdentifier",
          "variableName" : "imageId",
          "variableType" : "ImageIdentifier",
          "documentation" : "<p>The image ID associated with the failure.</p>",
          "simpleType" : "ImageIdentifier",
          "variableSetterType" : "ImageIdentifier"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "failureCode",
        "c2jShape" : "ImageFailureCode",
        "deprecated" : false,
        "documentation" : "<p>The code associated with the failure.</p>",
        "enumType" : "ImageFailureCode",
        "fluentSetterDocumentation" : "/**<p>The code associated with the failure.</p>\n@param failureCode The code associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImageFailureCode*/",
        "fluentSetterMethodName" : "withFailureCode",
        "getterDocumentation" : "/**<p>The code associated with the failure.</p>\n@return The code associated with the failure.\n@see ImageFailureCode*/",
        "getterMethodName" : "getFailureCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "failureCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "failureCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FailureCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The code associated with the failure.</p>\n@param failureCode The code associated with the failure.\n@see ImageFailureCode*/",
        "setterMethodName" : "setFailureCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "failureCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The code associated with the failure.</p>\n@param failureCode The code associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImageFailureCode*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "failureCode",
          "variableType" : "String",
          "documentation" : "<p>The code associated with the failure.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "failureReason",
        "c2jShape" : "ImageFailureReason",
        "deprecated" : false,
        "documentation" : "<p>The reason for the failure.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailureReason",
        "getterDocumentation" : "/**<p>The reason for the failure.</p>\n@return The reason for the failure.*/",
        "getterMethodName" : "getFailureReason",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "failureReason",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "failureReason",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FailureReason",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.*/",
        "setterMethodName" : "setFailureReason",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "failureReason",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "failureReason",
          "variableType" : "String",
          "documentation" : "<p>The reason for the failure.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FailureCode" : {
          "c2jName" : "failureCode",
          "c2jShape" : "ImageFailureCode",
          "deprecated" : false,
          "documentation" : "<p>The code associated with the failure.</p>",
          "enumType" : "ImageFailureCode",
          "fluentSetterDocumentation" : "/**<p>The code associated with the failure.</p>\n@param failureCode The code associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImageFailureCode*/",
          "fluentSetterMethodName" : "withFailureCode",
          "getterDocumentation" : "/**<p>The code associated with the failure.</p>\n@return The code associated with the failure.\n@see ImageFailureCode*/",
          "getterMethodName" : "getFailureCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "failureCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "failureCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FailureCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The code associated with the failure.</p>\n@param failureCode The code associated with the failure.\n@see ImageFailureCode*/",
          "setterMethodName" : "setFailureCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "failureCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The code associated with the failure.</p>\n@param failureCode The code associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImageFailureCode*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "failureCode",
            "variableType" : "String",
            "documentation" : "<p>The code associated with the failure.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FailureReason" : {
          "c2jName" : "failureReason",
          "c2jShape" : "ImageFailureReason",
          "deprecated" : false,
          "documentation" : "<p>The reason for the failure.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailureReason",
          "getterDocumentation" : "/**<p>The reason for the failure.</p>\n@return The reason for the failure.*/",
          "getterMethodName" : "getFailureReason",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "failureReason",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "failureReason",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FailureReason",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.*/",
          "setterMethodName" : "setFailureReason",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "failureReason",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "failureReason",
            "variableType" : "String",
            "documentation" : "<p>The reason for the failure.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ImageId" : {
          "c2jName" : "imageId",
          "c2jShape" : "ImageIdentifier",
          "deprecated" : false,
          "documentation" : "<p>The image ID associated with the failure.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The image ID associated with the failure.</p>\n@param imageId The image ID associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageId",
          "getterDocumentation" : "/**<p>The image ID associated with the failure.</p>\n@return The image ID associated with the failure.*/",
          "getterMethodName" : "getImageId",
          "getterModel" : {
            "returnType" : "ImageIdentifier",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ImageId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The image ID associated with the failure.</p>\n@param imageId The image ID associated with the failure.*/",
          "setterMethodName" : "setImageId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImageIdentifier",
            "variableName" : "imageId",
            "variableType" : "ImageIdentifier",
            "documentation" : "",
            "simpleType" : "ImageIdentifier",
            "variableSetterType" : "ImageIdentifier"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The image ID associated with the failure.</p>\n@param imageId The image ID associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImageIdentifier",
            "variableName" : "imageId",
            "variableType" : "ImageIdentifier",
            "documentation" : "<p>The image ID associated with the failure.</p>",
            "simpleType" : "ImageIdentifier",
            "variableSetterType" : "ImageIdentifier"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ImageFailure",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImageFailure",
        "variableName" : "imageFailure",
        "variableType" : "ImageFailure",
        "documentation" : null,
        "simpleType" : "ImageFailure",
        "variableSetterType" : "ImageFailure"
      },
      "wrapper" : false
    },
    "ImageFailureCode" : {
      "c2jName" : "ImageFailureCode",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "InvalidImageDigest",
        "value" : "InvalidImageDigest"
      }, {
        "name" : "InvalidImageTag",
        "value" : "InvalidImageTag"
      }, {
        "name" : "ImageTagDoesNotMatchDigest",
        "value" : "ImageTagDoesNotMatchDigest"
      }, {
        "name" : "ImageNotFound",
        "value" : "ImageNotFound"
      }, {
        "name" : "MissingDigestAndTag",
        "value" : "MissingDigestAndTag"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ImageFailureCode",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImageFailureCode",
        "variableName" : "imageFailureCode",
        "variableType" : "ImageFailureCode",
        "documentation" : null,
        "simpleType" : "ImageFailureCode",
        "variableSetterType" : "ImageFailureCode"
      },
      "wrapper" : false
    },
    "ImageIdentifier" : {
      "c2jName" : "ImageIdentifier",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object with identifying information for an Amazon ECR image.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "imageDigest",
        "c2jShape" : "ImageDigest",
        "deprecated" : false,
        "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageDigest",
        "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@return The <code>sha256</code> digest of the image manifest.*/",
        "getterMethodName" : "getImageDigest",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageDigest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageDigest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ImageDigest",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.*/",
        "setterMethodName" : "setImageDigest",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "imageDigest",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "imageDigest",
          "variableType" : "String",
          "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imageTag",
        "c2jShape" : "ImageTag",
        "deprecated" : false,
        "documentation" : "<p>The tag used for the image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The tag used for the image.</p>\n@param imageTag The tag used for the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageTag",
        "getterDocumentation" : "/**<p>The tag used for the image.</p>\n@return The tag used for the image.*/",
        "getterMethodName" : "getImageTag",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageTag",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageTag",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ImageTag",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The tag used for the image.</p>\n@param imageTag The tag used for the image.*/",
        "setterMethodName" : "setImageTag",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "imageTag",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The tag used for the image.</p>\n@param imageTag The tag used for the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "imageTag",
          "variableType" : "String",
          "documentation" : "<p>The tag used for the image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ImageDigest" : {
          "c2jName" : "imageDigest",
          "c2jShape" : "ImageDigest",
          "deprecated" : false,
          "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageDigest",
          "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@return The <code>sha256</code> digest of the image manifest.*/",
          "getterMethodName" : "getImageDigest",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageDigest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageDigest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ImageDigest",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.*/",
          "setterMethodName" : "setImageDigest",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "imageDigest",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "imageDigest",
            "variableType" : "String",
            "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ImageTag" : {
          "c2jName" : "imageTag",
          "c2jShape" : "ImageTag",
          "deprecated" : false,
          "documentation" : "<p>The tag used for the image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The tag used for the image.</p>\n@param imageTag The tag used for the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageTag",
          "getterDocumentation" : "/**<p>The tag used for the image.</p>\n@return The tag used for the image.*/",
          "getterMethodName" : "getImageTag",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageTag",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageTag",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ImageTag",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The tag used for the image.</p>\n@param imageTag The tag used for the image.*/",
          "setterMethodName" : "setImageTag",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "imageTag",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The tag used for the image.</p>\n@param imageTag The tag used for the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "imageTag",
            "variableType" : "String",
            "documentation" : "<p>The tag used for the image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ImageIdentifier",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImageIdentifier",
        "variableName" : "imageIdentifier",
        "variableType" : "ImageIdentifier",
        "documentation" : null,
        "simpleType" : "ImageIdentifier",
        "variableSetterType" : "ImageIdentifier"
      },
      "wrapper" : false
    },
    "ImageNotFoundException" : {
      "c2jName" : "ImageNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The image requested does not exist in the specified repository.</p>",
      "enums" : null,
      "errorCode" : "ImageNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ImageNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImageNotFoundException",
        "variableName" : "imageNotFoundException",
        "variableType" : "ImageNotFoundException",
        "documentation" : null,
        "simpleType" : "ImageNotFoundException",
        "variableSetterType" : "ImageNotFoundException"
      },
      "wrapper" : false
    },
    "InitiateLayerUploadRequest" : {
      "c2jName" : "InitiateLayerUploadRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "InitiateLayerUpload",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.InitiateLayerUpload",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to which you intend to upload layers.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to which you intend to upload layers.</p>\n@param repositoryName The name of the repository to which you intend to upload layers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to which you intend to upload layers.</p>\n@return The name of the repository to which you intend to upload layers.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository to which you intend to upload layers.</p>\n@param repositoryName The name of the repository to which you intend to upload layers.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to which you intend to upload layers.</p>\n@param repositoryName The name of the repository to which you intend to upload layers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to which you intend to upload layers.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to which you intend to upload layers.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to which you intend to upload layers.</p>\n@param repositoryName The name of the repository to which you intend to upload layers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to which you intend to upload layers.</p>\n@return The name of the repository to which you intend to upload layers.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository to which you intend to upload layers.</p>\n@param repositoryName The name of the repository to which you intend to upload layers.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to which you intend to upload layers.</p>\n@param repositoryName The name of the repository to which you intend to upload layers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to which you intend to upload layers.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "InitiateLayerUploadRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InitiateLayerUploadRequest",
        "variableName" : "initiateLayerUploadRequest",
        "variableType" : "InitiateLayerUploadRequest",
        "documentation" : null,
        "simpleType" : "InitiateLayerUploadRequest",
        "variableSetterType" : "InitiateLayerUploadRequest"
      },
      "wrapper" : false
    },
    "InitiateLayerUploadResult" : {
      "c2jName" : "InitiateLayerUploadResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "uploadId",
        "c2jShape" : "UploadId",
        "deprecated" : false,
        "documentation" : "<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>\n@param uploadId The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUploadId",
        "getterDocumentation" : "/**<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>\n@return The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.*/",
        "getterMethodName" : "getUploadId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "uploadId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "uploadId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UploadId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>\n@param uploadId The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.*/",
        "setterMethodName" : "setUploadId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "uploadId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>\n@param uploadId The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "uploadId",
          "variableType" : "String",
          "documentation" : "<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "partSize",
        "c2jShape" : "PartSize",
        "deprecated" : false,
        "documentation" : "<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>\n@param partSize The size, in bytes, that Amazon ECR expects future layer part uploads to be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPartSize",
        "getterDocumentation" : "/**<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>\n@return The size, in bytes, that Amazon ECR expects future layer part uploads to be.*/",
        "getterMethodName" : "getPartSize",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "partSize",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "partSize",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "PartSize",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>\n@param partSize The size, in bytes, that Amazon ECR expects future layer part uploads to be.*/",
        "setterMethodName" : "setPartSize",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "partSize",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>\n@param partSize The size, in bytes, that Amazon ECR expects future layer part uploads to be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "partSize",
          "variableType" : "Long",
          "documentation" : "<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PartSize" : {
          "c2jName" : "partSize",
          "c2jShape" : "PartSize",
          "deprecated" : false,
          "documentation" : "<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>\n@param partSize The size, in bytes, that Amazon ECR expects future layer part uploads to be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPartSize",
          "getterDocumentation" : "/**<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>\n@return The size, in bytes, that Amazon ECR expects future layer part uploads to be.*/",
          "getterMethodName" : "getPartSize",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "partSize",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "partSize",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "PartSize",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>\n@param partSize The size, in bytes, that Amazon ECR expects future layer part uploads to be.*/",
          "setterMethodName" : "setPartSize",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "partSize",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>\n@param partSize The size, in bytes, that Amazon ECR expects future layer part uploads to be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "partSize",
            "variableType" : "Long",
            "documentation" : "<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "UploadId" : {
          "c2jName" : "uploadId",
          "c2jShape" : "UploadId",
          "deprecated" : false,
          "documentation" : "<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>\n@param uploadId The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUploadId",
          "getterDocumentation" : "/**<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>\n@return The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.*/",
          "getterMethodName" : "getUploadId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "uploadId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "uploadId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UploadId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>\n@param uploadId The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.*/",
          "setterMethodName" : "setUploadId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "uploadId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>\n@param uploadId The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "uploadId",
            "variableType" : "String",
            "documentation" : "<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InitiateLayerUploadResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InitiateLayerUploadResult",
        "variableName" : "initiateLayerUploadResult",
        "variableType" : "InitiateLayerUploadResult",
        "documentation" : null,
        "simpleType" : "InitiateLayerUploadResult",
        "variableSetterType" : "InitiateLayerUploadResult"
      },
      "wrapper" : false
    },
    "InvalidLayerException" : {
      "c2jName" : "InvalidLayerException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The layer digest calculation performed by Amazon ECR upon receipt of the image layer does not match the digest specified.</p>",
      "enums" : null,
      "errorCode" : "InvalidLayerException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidLayerException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidLayerException",
        "variableName" : "invalidLayerException",
        "variableType" : "InvalidLayerException",
        "documentation" : null,
        "simpleType" : "InvalidLayerException",
        "variableSetterType" : "InvalidLayerException"
      },
      "wrapper" : false
    },
    "InvalidLayerPartException" : {
      "c2jName" : "InvalidLayerPartException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The layer part size is not valid, or the first byte specified is not consecutive to the last byte of a previous layer part upload.</p>",
      "enums" : null,
      "errorCode" : "InvalidLayerPartException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The registry ID associated with the exception.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the exception.</p>\n@param registryId The registry ID associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The registry ID associated with the exception.</p>\n@return The registry ID associated with the exception.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the exception.</p>\n@param registryId The registry ID associated with the exception.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the exception.</p>\n@param registryId The registry ID associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The registry ID associated with the exception.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The repository name associated with the exception.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the exception.</p>\n@param repositoryName The repository name associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The repository name associated with the exception.</p>\n@return The repository name associated with the exception.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the exception.</p>\n@param repositoryName The repository name associated with the exception.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository name associated with the exception.</p>\n@param repositoryName The repository name associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The repository name associated with the exception.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "uploadId",
        "c2jShape" : "UploadId",
        "deprecated" : false,
        "documentation" : "<p>The upload ID associated with the exception.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The upload ID associated with the exception.</p>\n@param uploadId The upload ID associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUploadId",
        "getterDocumentation" : "/**<p>The upload ID associated with the exception.</p>\n@return The upload ID associated with the exception.*/",
        "getterMethodName" : "getUploadId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "uploadId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "uploadId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UploadId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The upload ID associated with the exception.</p>\n@param uploadId The upload ID associated with the exception.*/",
        "setterMethodName" : "setUploadId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "uploadId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The upload ID associated with the exception.</p>\n@param uploadId The upload ID associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "uploadId",
          "variableType" : "String",
          "documentation" : "<p>The upload ID associated with the exception.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lastValidByteReceived",
        "c2jShape" : "PartSize",
        "deprecated" : false,
        "documentation" : "<p>The last valid byte received from the layer part upload that is associated with the exception.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The last valid byte received from the layer part upload that is associated with the exception.</p>\n@param lastValidByteReceived The last valid byte received from the layer part upload that is associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastValidByteReceived",
        "getterDocumentation" : "/**<p>The last valid byte received from the layer part upload that is associated with the exception.</p>\n@return The last valid byte received from the layer part upload that is associated with the exception.*/",
        "getterMethodName" : "getLastValidByteReceived",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lastValidByteReceived",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lastValidByteReceived",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "LastValidByteReceived",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The last valid byte received from the layer part upload that is associated with the exception.</p>\n@param lastValidByteReceived The last valid byte received from the layer part upload that is associated with the exception.*/",
        "setterMethodName" : "setLastValidByteReceived",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "lastValidByteReceived",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The last valid byte received from the layer part upload that is associated with the exception.</p>\n@param lastValidByteReceived The last valid byte received from the layer part upload that is associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "lastValidByteReceived",
          "variableType" : "Long",
          "documentation" : "<p>The last valid byte received from the layer part upload that is associated with the exception.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LastValidByteReceived" : {
          "c2jName" : "lastValidByteReceived",
          "c2jShape" : "PartSize",
          "deprecated" : false,
          "documentation" : "<p>The last valid byte received from the layer part upload that is associated with the exception.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The last valid byte received from the layer part upload that is associated with the exception.</p>\n@param lastValidByteReceived The last valid byte received from the layer part upload that is associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastValidByteReceived",
          "getterDocumentation" : "/**<p>The last valid byte received from the layer part upload that is associated with the exception.</p>\n@return The last valid byte received from the layer part upload that is associated with the exception.*/",
          "getterMethodName" : "getLastValidByteReceived",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lastValidByteReceived",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lastValidByteReceived",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "LastValidByteReceived",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The last valid byte received from the layer part upload that is associated with the exception.</p>\n@param lastValidByteReceived The last valid byte received from the layer part upload that is associated with the exception.*/",
          "setterMethodName" : "setLastValidByteReceived",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "lastValidByteReceived",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The last valid byte received from the layer part upload that is associated with the exception.</p>\n@param lastValidByteReceived The last valid byte received from the layer part upload that is associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "lastValidByteReceived",
            "variableType" : "Long",
            "documentation" : "<p>The last valid byte received from the layer part upload that is associated with the exception.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the exception.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the exception.</p>\n@param registryId The registry ID associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The registry ID associated with the exception.</p>\n@return The registry ID associated with the exception.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the exception.</p>\n@param registryId The registry ID associated with the exception.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the exception.</p>\n@param registryId The registry ID associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The registry ID associated with the exception.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the exception.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the exception.</p>\n@param repositoryName The repository name associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The repository name associated with the exception.</p>\n@return The repository name associated with the exception.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the exception.</p>\n@param repositoryName The repository name associated with the exception.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository name associated with the exception.</p>\n@param repositoryName The repository name associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The repository name associated with the exception.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UploadId" : {
          "c2jName" : "uploadId",
          "c2jShape" : "UploadId",
          "deprecated" : false,
          "documentation" : "<p>The upload ID associated with the exception.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The upload ID associated with the exception.</p>\n@param uploadId The upload ID associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUploadId",
          "getterDocumentation" : "/**<p>The upload ID associated with the exception.</p>\n@return The upload ID associated with the exception.*/",
          "getterMethodName" : "getUploadId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "uploadId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "uploadId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UploadId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The upload ID associated with the exception.</p>\n@param uploadId The upload ID associated with the exception.*/",
          "setterMethodName" : "setUploadId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "uploadId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The upload ID associated with the exception.</p>\n@param uploadId The upload ID associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "uploadId",
            "variableType" : "String",
            "documentation" : "<p>The upload ID associated with the exception.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidLayerPartException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidLayerPartException",
        "variableName" : "invalidLayerPartException",
        "variableType" : "InvalidLayerPartException",
        "documentation" : null,
        "simpleType" : "InvalidLayerPartException",
        "variableSetterType" : "InvalidLayerPartException"
      },
      "wrapper" : false
    },
    "InvalidParameterException" : {
      "c2jName" : "InvalidParameterException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
      "enums" : null,
      "errorCode" : "InvalidParameterException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidParameterException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidParameterException",
        "variableName" : "invalidParameterException",
        "variableType" : "InvalidParameterException",
        "documentation" : null,
        "simpleType" : "InvalidParameterException",
        "variableSetterType" : "InvalidParameterException"
      },
      "wrapper" : false
    },
    "InvalidTagParameterException" : {
      "c2jName" : "InvalidTagParameterException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An invalid parameter has been specified. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>",
      "enums" : null,
      "errorCode" : "InvalidTagParameterException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidTagParameterException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidTagParameterException",
        "variableName" : "invalidTagParameterException",
        "variableType" : "InvalidTagParameterException",
        "documentation" : null,
        "simpleType" : "InvalidTagParameterException",
        "variableSetterType" : "InvalidTagParameterException"
      },
      "wrapper" : false
    },
    "Layer" : {
      "c2jName" : "Layer",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object representing an Amazon ECR image layer.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "layerDigest",
        "c2jShape" : "LayerDigest",
        "deprecated" : false,
        "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLayerDigest",
        "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@return The <code>sha256</code> digest of the image layer.*/",
        "getterMethodName" : "getLayerDigest",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "layerDigest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "layerDigest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LayerDigest",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.*/",
        "setterMethodName" : "setLayerDigest",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "layerDigest",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "layerDigest",
          "variableType" : "String",
          "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "layerAvailability",
        "c2jShape" : "LayerAvailability",
        "deprecated" : false,
        "documentation" : "<p>The availability status of the image layer.</p>",
        "enumType" : "LayerAvailability",
        "fluentSetterDocumentation" : "/**<p>The availability status of the image layer.</p>\n@param layerAvailability The availability status of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LayerAvailability*/",
        "fluentSetterMethodName" : "withLayerAvailability",
        "getterDocumentation" : "/**<p>The availability status of the image layer.</p>\n@return The availability status of the image layer.\n@see LayerAvailability*/",
        "getterMethodName" : "getLayerAvailability",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "layerAvailability",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "layerAvailability",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LayerAvailability",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The availability status of the image layer.</p>\n@param layerAvailability The availability status of the image layer.\n@see LayerAvailability*/",
        "setterMethodName" : "setLayerAvailability",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "layerAvailability",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The availability status of the image layer.</p>\n@param layerAvailability The availability status of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LayerAvailability*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "layerAvailability",
          "variableType" : "String",
          "documentation" : "<p>The availability status of the image layer.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "layerSize",
        "c2jShape" : "LayerSizeInBytes",
        "deprecated" : false,
        "documentation" : "<p>The size, in bytes, of the image layer.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The size, in bytes, of the image layer.</p>\n@param layerSize The size, in bytes, of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLayerSize",
        "getterDocumentation" : "/**<p>The size, in bytes, of the image layer.</p>\n@return The size, in bytes, of the image layer.*/",
        "getterMethodName" : "getLayerSize",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "layerSize",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "layerSize",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "LayerSize",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The size, in bytes, of the image layer.</p>\n@param layerSize The size, in bytes, of the image layer.*/",
        "setterMethodName" : "setLayerSize",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "layerSize",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The size, in bytes, of the image layer.</p>\n@param layerSize The size, in bytes, of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "layerSize",
          "variableType" : "Long",
          "documentation" : "<p>The size, in bytes, of the image layer.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "mediaType",
        "c2jShape" : "MediaType",
        "deprecated" : false,
        "documentation" : "<p>The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.</p>\n@param mediaType The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMediaType",
        "getterDocumentation" : "/**<p>The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.</p>\n@return The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.*/",
        "getterMethodName" : "getMediaType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "mediaType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "mediaType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "MediaType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.</p>\n@param mediaType The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.*/",
        "setterMethodName" : "setMediaType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "mediaType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.</p>\n@param mediaType The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "mediaType",
          "variableType" : "String",
          "documentation" : "<p>The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LayerAvailability" : {
          "c2jName" : "layerAvailability",
          "c2jShape" : "LayerAvailability",
          "deprecated" : false,
          "documentation" : "<p>The availability status of the image layer.</p>",
          "enumType" : "LayerAvailability",
          "fluentSetterDocumentation" : "/**<p>The availability status of the image layer.</p>\n@param layerAvailability The availability status of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LayerAvailability*/",
          "fluentSetterMethodName" : "withLayerAvailability",
          "getterDocumentation" : "/**<p>The availability status of the image layer.</p>\n@return The availability status of the image layer.\n@see LayerAvailability*/",
          "getterMethodName" : "getLayerAvailability",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "layerAvailability",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "layerAvailability",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LayerAvailability",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The availability status of the image layer.</p>\n@param layerAvailability The availability status of the image layer.\n@see LayerAvailability*/",
          "setterMethodName" : "setLayerAvailability",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "layerAvailability",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The availability status of the image layer.</p>\n@param layerAvailability The availability status of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LayerAvailability*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "layerAvailability",
            "variableType" : "String",
            "documentation" : "<p>The availability status of the image layer.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LayerDigest" : {
          "c2jName" : "layerDigest",
          "c2jShape" : "LayerDigest",
          "deprecated" : false,
          "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLayerDigest",
          "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@return The <code>sha256</code> digest of the image layer.*/",
          "getterMethodName" : "getLayerDigest",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "layerDigest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "layerDigest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LayerDigest",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.*/",
          "setterMethodName" : "setLayerDigest",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "layerDigest",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "layerDigest",
            "variableType" : "String",
            "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LayerSize" : {
          "c2jName" : "layerSize",
          "c2jShape" : "LayerSizeInBytes",
          "deprecated" : false,
          "documentation" : "<p>The size, in bytes, of the image layer.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The size, in bytes, of the image layer.</p>\n@param layerSize The size, in bytes, of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLayerSize",
          "getterDocumentation" : "/**<p>The size, in bytes, of the image layer.</p>\n@return The size, in bytes, of the image layer.*/",
          "getterMethodName" : "getLayerSize",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "layerSize",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "layerSize",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "LayerSize",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The size, in bytes, of the image layer.</p>\n@param layerSize The size, in bytes, of the image layer.*/",
          "setterMethodName" : "setLayerSize",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "layerSize",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The size, in bytes, of the image layer.</p>\n@param layerSize The size, in bytes, of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "layerSize",
            "variableType" : "Long",
            "documentation" : "<p>The size, in bytes, of the image layer.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "MediaType" : {
          "c2jName" : "mediaType",
          "c2jShape" : "MediaType",
          "deprecated" : false,
          "documentation" : "<p>The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.</p>\n@param mediaType The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMediaType",
          "getterDocumentation" : "/**<p>The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.</p>\n@return The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.*/",
          "getterMethodName" : "getMediaType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "mediaType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "mediaType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "MediaType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.</p>\n@param mediaType The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.*/",
          "setterMethodName" : "setMediaType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "mediaType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.</p>\n@param mediaType The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "mediaType",
            "variableType" : "String",
            "documentation" : "<p>The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Layer",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Layer",
        "variableName" : "layer",
        "variableType" : "Layer",
        "documentation" : null,
        "simpleType" : "Layer",
        "variableSetterType" : "Layer"
      },
      "wrapper" : false
    },
    "LayerAlreadyExistsException" : {
      "c2jName" : "LayerAlreadyExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The image layer already exists in the associated repository.</p>",
      "enums" : null,
      "errorCode" : "LayerAlreadyExistsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LayerAlreadyExistsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LayerAlreadyExistsException",
        "variableName" : "layerAlreadyExistsException",
        "variableType" : "LayerAlreadyExistsException",
        "documentation" : null,
        "simpleType" : "LayerAlreadyExistsException",
        "variableSetterType" : "LayerAlreadyExistsException"
      },
      "wrapper" : false
    },
    "LayerAvailability" : {
      "c2jName" : "LayerAvailability",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "AVAILABLE",
        "value" : "AVAILABLE"
      }, {
        "name" : "UNAVAILABLE",
        "value" : "UNAVAILABLE"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LayerAvailability",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LayerAvailability",
        "variableName" : "layerAvailability",
        "variableType" : "LayerAvailability",
        "documentation" : null,
        "simpleType" : "LayerAvailability",
        "variableSetterType" : "LayerAvailability"
      },
      "wrapper" : false
    },
    "LayerFailure" : {
      "c2jName" : "LayerFailure",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object representing an Amazon ECR image layer failure.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "layerDigest",
        "c2jShape" : "BatchedOperationLayerDigest",
        "deprecated" : false,
        "documentation" : "<p>The layer digest associated with the failure.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The layer digest associated with the failure.</p>\n@param layerDigest The layer digest associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLayerDigest",
        "getterDocumentation" : "/**<p>The layer digest associated with the failure.</p>\n@return The layer digest associated with the failure.*/",
        "getterMethodName" : "getLayerDigest",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "layerDigest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "layerDigest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LayerDigest",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The layer digest associated with the failure.</p>\n@param layerDigest The layer digest associated with the failure.*/",
        "setterMethodName" : "setLayerDigest",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "layerDigest",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The layer digest associated with the failure.</p>\n@param layerDigest The layer digest associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "layerDigest",
          "variableType" : "String",
          "documentation" : "<p>The layer digest associated with the failure.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "failureCode",
        "c2jShape" : "LayerFailureCode",
        "deprecated" : false,
        "documentation" : "<p>The failure code associated with the failure.</p>",
        "enumType" : "LayerFailureCode",
        "fluentSetterDocumentation" : "/**<p>The failure code associated with the failure.</p>\n@param failureCode The failure code associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LayerFailureCode*/",
        "fluentSetterMethodName" : "withFailureCode",
        "getterDocumentation" : "/**<p>The failure code associated with the failure.</p>\n@return The failure code associated with the failure.\n@see LayerFailureCode*/",
        "getterMethodName" : "getFailureCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "failureCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "failureCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FailureCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The failure code associated with the failure.</p>\n@param failureCode The failure code associated with the failure.\n@see LayerFailureCode*/",
        "setterMethodName" : "setFailureCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "failureCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The failure code associated with the failure.</p>\n@param failureCode The failure code associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LayerFailureCode*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "failureCode",
          "variableType" : "String",
          "documentation" : "<p>The failure code associated with the failure.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "failureReason",
        "c2jShape" : "LayerFailureReason",
        "deprecated" : false,
        "documentation" : "<p>The reason for the failure.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailureReason",
        "getterDocumentation" : "/**<p>The reason for the failure.</p>\n@return The reason for the failure.*/",
        "getterMethodName" : "getFailureReason",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "failureReason",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "failureReason",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FailureReason",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.*/",
        "setterMethodName" : "setFailureReason",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "failureReason",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "failureReason",
          "variableType" : "String",
          "documentation" : "<p>The reason for the failure.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FailureCode" : {
          "c2jName" : "failureCode",
          "c2jShape" : "LayerFailureCode",
          "deprecated" : false,
          "documentation" : "<p>The failure code associated with the failure.</p>",
          "enumType" : "LayerFailureCode",
          "fluentSetterDocumentation" : "/**<p>The failure code associated with the failure.</p>\n@param failureCode The failure code associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LayerFailureCode*/",
          "fluentSetterMethodName" : "withFailureCode",
          "getterDocumentation" : "/**<p>The failure code associated with the failure.</p>\n@return The failure code associated with the failure.\n@see LayerFailureCode*/",
          "getterMethodName" : "getFailureCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "failureCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "failureCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FailureCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The failure code associated with the failure.</p>\n@param failureCode The failure code associated with the failure.\n@see LayerFailureCode*/",
          "setterMethodName" : "setFailureCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "failureCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The failure code associated with the failure.</p>\n@param failureCode The failure code associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LayerFailureCode*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "failureCode",
            "variableType" : "String",
            "documentation" : "<p>The failure code associated with the failure.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FailureReason" : {
          "c2jName" : "failureReason",
          "c2jShape" : "LayerFailureReason",
          "deprecated" : false,
          "documentation" : "<p>The reason for the failure.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailureReason",
          "getterDocumentation" : "/**<p>The reason for the failure.</p>\n@return The reason for the failure.*/",
          "getterMethodName" : "getFailureReason",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "failureReason",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "failureReason",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FailureReason",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.*/",
          "setterMethodName" : "setFailureReason",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "failureReason",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "failureReason",
            "variableType" : "String",
            "documentation" : "<p>The reason for the failure.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LayerDigest" : {
          "c2jName" : "layerDigest",
          "c2jShape" : "BatchedOperationLayerDigest",
          "deprecated" : false,
          "documentation" : "<p>The layer digest associated with the failure.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The layer digest associated with the failure.</p>\n@param layerDigest The layer digest associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLayerDigest",
          "getterDocumentation" : "/**<p>The layer digest associated with the failure.</p>\n@return The layer digest associated with the failure.*/",
          "getterMethodName" : "getLayerDigest",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "layerDigest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "layerDigest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LayerDigest",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The layer digest associated with the failure.</p>\n@param layerDigest The layer digest associated with the failure.*/",
          "setterMethodName" : "setLayerDigest",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "layerDigest",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The layer digest associated with the failure.</p>\n@param layerDigest The layer digest associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "layerDigest",
            "variableType" : "String",
            "documentation" : "<p>The layer digest associated with the failure.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LayerFailure",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LayerFailure",
        "variableName" : "layerFailure",
        "variableType" : "LayerFailure",
        "documentation" : null,
        "simpleType" : "LayerFailure",
        "variableSetterType" : "LayerFailure"
      },
      "wrapper" : false
    },
    "LayerFailureCode" : {
      "c2jName" : "LayerFailureCode",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "InvalidLayerDigest",
        "value" : "InvalidLayerDigest"
      }, {
        "name" : "MissingLayerDigest",
        "value" : "MissingLayerDigest"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LayerFailureCode",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LayerFailureCode",
        "variableName" : "layerFailureCode",
        "variableType" : "LayerFailureCode",
        "documentation" : null,
        "simpleType" : "LayerFailureCode",
        "variableSetterType" : "LayerFailureCode"
      },
      "wrapper" : false
    },
    "LayerInaccessibleException" : {
      "c2jName" : "LayerInaccessibleException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified layer is not available because it is not associated with an image. Unassociated image layers may be cleaned up at any time.</p>",
      "enums" : null,
      "errorCode" : "LayerInaccessibleException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LayerInaccessibleException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LayerInaccessibleException",
        "variableName" : "layerInaccessibleException",
        "variableType" : "LayerInaccessibleException",
        "documentation" : null,
        "simpleType" : "LayerInaccessibleException",
        "variableSetterType" : "LayerInaccessibleException"
      },
      "wrapper" : false
    },
    "LayerPartTooSmallException" : {
      "c2jName" : "LayerPartTooSmallException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Layer parts must be at least 5 MiB in size.</p>",
      "enums" : null,
      "errorCode" : "LayerPartTooSmallException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LayerPartTooSmallException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LayerPartTooSmallException",
        "variableName" : "layerPartTooSmallException",
        "variableType" : "LayerPartTooSmallException",
        "documentation" : null,
        "simpleType" : "LayerPartTooSmallException",
        "variableSetterType" : "LayerPartTooSmallException"
      },
      "wrapper" : false
    },
    "LayersNotFoundException" : {
      "c2jName" : "LayersNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified layers could not be found, or the specified layer is not valid for this repository.</p>",
      "enums" : null,
      "errorCode" : "LayersNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LayersNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LayersNotFoundException",
        "variableName" : "layersNotFoundException",
        "variableType" : "LayersNotFoundException",
        "documentation" : null,
        "simpleType" : "LayersNotFoundException",
        "variableSetterType" : "LayersNotFoundException"
      },
      "wrapper" : false
    },
    "LifecyclePolicyNotFoundException" : {
      "c2jName" : "LifecyclePolicyNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The lifecycle policy could not be found, and no policy is set to the repository.</p>",
      "enums" : null,
      "errorCode" : "LifecyclePolicyNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LifecyclePolicyNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LifecyclePolicyNotFoundException",
        "variableName" : "lifecyclePolicyNotFoundException",
        "variableType" : "LifecyclePolicyNotFoundException",
        "documentation" : null,
        "simpleType" : "LifecyclePolicyNotFoundException",
        "variableSetterType" : "LifecyclePolicyNotFoundException"
      },
      "wrapper" : false
    },
    "LifecyclePolicyPreviewFilter" : {
      "c2jName" : "LifecyclePolicyPreviewFilter",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The filter for the lifecycle policy preview.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "tagStatus",
        "c2jShape" : "TagStatus",
        "deprecated" : false,
        "documentation" : "<p>The tag status of the image.</p>",
        "enumType" : "TagStatus",
        "fluentSetterDocumentation" : "/**<p>The tag status of the image.</p>\n@param tagStatus The tag status of the image.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TagStatus*/",
        "fluentSetterMethodName" : "withTagStatus",
        "getterDocumentation" : "/**<p>The tag status of the image.</p>\n@return The tag status of the image.\n@see TagStatus*/",
        "getterMethodName" : "getTagStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "tagStatus",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tagStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TagStatus",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The tag status of the image.</p>\n@param tagStatus The tag status of the image.\n@see TagStatus*/",
        "setterMethodName" : "setTagStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tagStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The tag status of the image.</p>\n@param tagStatus The tag status of the image.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TagStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tagStatus",
          "variableType" : "String",
          "documentation" : "<p>The tag status of the image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "TagStatus" : {
          "c2jName" : "tagStatus",
          "c2jShape" : "TagStatus",
          "deprecated" : false,
          "documentation" : "<p>The tag status of the image.</p>",
          "enumType" : "TagStatus",
          "fluentSetterDocumentation" : "/**<p>The tag status of the image.</p>\n@param tagStatus The tag status of the image.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TagStatus*/",
          "fluentSetterMethodName" : "withTagStatus",
          "getterDocumentation" : "/**<p>The tag status of the image.</p>\n@return The tag status of the image.\n@see TagStatus*/",
          "getterMethodName" : "getTagStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "tagStatus",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tagStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TagStatus",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The tag status of the image.</p>\n@param tagStatus The tag status of the image.\n@see TagStatus*/",
          "setterMethodName" : "setTagStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tagStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The tag status of the image.</p>\n@param tagStatus The tag status of the image.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TagStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tagStatus",
            "variableType" : "String",
            "documentation" : "<p>The tag status of the image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LifecyclePolicyPreviewFilter",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LifecyclePolicyPreviewFilter",
        "variableName" : "lifecyclePolicyPreviewFilter",
        "variableType" : "LifecyclePolicyPreviewFilter",
        "documentation" : null,
        "simpleType" : "LifecyclePolicyPreviewFilter",
        "variableSetterType" : "LifecyclePolicyPreviewFilter"
      },
      "wrapper" : false
    },
    "LifecyclePolicyPreviewInProgressException" : {
      "c2jName" : "LifecyclePolicyPreviewInProgressException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The previous lifecycle policy preview request has not completed. Please try again later.</p>",
      "enums" : null,
      "errorCode" : "LifecyclePolicyPreviewInProgressException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LifecyclePolicyPreviewInProgressException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LifecyclePolicyPreviewInProgressException",
        "variableName" : "lifecyclePolicyPreviewInProgressException",
        "variableType" : "LifecyclePolicyPreviewInProgressException",
        "documentation" : null,
        "simpleType" : "LifecyclePolicyPreviewInProgressException",
        "variableSetterType" : "LifecyclePolicyPreviewInProgressException"
      },
      "wrapper" : false
    },
    "LifecyclePolicyPreviewNotFoundException" : {
      "c2jName" : "LifecyclePolicyPreviewNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>There is no dry run for this repository.</p>",
      "enums" : null,
      "errorCode" : "LifecyclePolicyPreviewNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LifecyclePolicyPreviewNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LifecyclePolicyPreviewNotFoundException",
        "variableName" : "lifecyclePolicyPreviewNotFoundException",
        "variableType" : "LifecyclePolicyPreviewNotFoundException",
        "documentation" : null,
        "simpleType" : "LifecyclePolicyPreviewNotFoundException",
        "variableSetterType" : "LifecyclePolicyPreviewNotFoundException"
      },
      "wrapper" : false
    },
    "LifecyclePolicyPreviewResult" : {
      "c2jName" : "LifecyclePolicyPreviewResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The result of the lifecycle policy preview.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "imageTags",
        "c2jShape" : "ImageTagList",
        "deprecated" : false,
        "documentation" : "<p>The list of tags associated with this image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The list of tags associated with this image.</p>\n@param imageTags The list of tags associated with this image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageTags",
        "getterDocumentation" : "/**<p>The list of tags associated with this image.</p>\n@return The list of tags associated with this image.*/",
        "getterMethodName" : "getImageTags",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageTags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageTags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ImageTag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ImageTags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The list of tags associated with this image.</p>\n@param imageTags The list of tags associated with this image.*/",
        "setterMethodName" : "setImageTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "imageTags",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The list of tags associated with this image.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageTags(java.util.Collection)} or {@link #withImageTags(java.util.Collection)} if you want to override the existing values.</p>\n@param imageTags The list of tags associated with this image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "imageTags",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The list of tags associated with this image.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imageDigest",
        "c2jShape" : "ImageDigest",
        "deprecated" : false,
        "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageDigest",
        "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@return The <code>sha256</code> digest of the image manifest.*/",
        "getterMethodName" : "getImageDigest",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageDigest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageDigest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ImageDigest",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.*/",
        "setterMethodName" : "setImageDigest",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "imageDigest",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "imageDigest",
          "variableType" : "String",
          "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imagePushedAt",
        "c2jShape" : "PushTimestamp",
        "deprecated" : false,
        "documentation" : "<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.</p>\n@param imagePushedAt The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImagePushedAt",
        "getterDocumentation" : "/**<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.</p>\n@return The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.*/",
        "getterMethodName" : "getImagePushedAt",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imagePushedAt",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imagePushedAt",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "ImagePushedAt",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.</p>\n@param imagePushedAt The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.*/",
        "setterMethodName" : "setImagePushedAt",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "imagePushedAt",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.</p>\n@param imagePushedAt The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "imagePushedAt",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "action",
        "c2jShape" : "LifecyclePolicyRuleAction",
        "deprecated" : false,
        "documentation" : "<p>The type of action to be taken.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The type of action to be taken.</p>\n@param action The type of action to be taken.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAction",
        "getterDocumentation" : "/**<p>The type of action to be taken.</p>\n@return The type of action to be taken.*/",
        "getterMethodName" : "getAction",
        "getterModel" : {
          "returnType" : "LifecyclePolicyRuleAction",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "action",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "action",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Action",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The type of action to be taken.</p>\n@param action The type of action to be taken.*/",
        "setterMethodName" : "setAction",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "LifecyclePolicyRuleAction",
          "variableName" : "action",
          "variableType" : "LifecyclePolicyRuleAction",
          "documentation" : "",
          "simpleType" : "LifecyclePolicyRuleAction",
          "variableSetterType" : "LifecyclePolicyRuleAction"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The type of action to be taken.</p>\n@param action The type of action to be taken.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "LifecyclePolicyRuleAction",
          "variableName" : "action",
          "variableType" : "LifecyclePolicyRuleAction",
          "documentation" : "<p>The type of action to be taken.</p>",
          "simpleType" : "LifecyclePolicyRuleAction",
          "variableSetterType" : "LifecyclePolicyRuleAction"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "appliedRulePriority",
        "c2jShape" : "LifecyclePolicyRulePriority",
        "deprecated" : false,
        "documentation" : "<p>The priority of the applied rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The priority of the applied rule.</p>\n@param appliedRulePriority The priority of the applied rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAppliedRulePriority",
        "getterDocumentation" : "/**<p>The priority of the applied rule.</p>\n@return The priority of the applied rule.*/",
        "getterMethodName" : "getAppliedRulePriority",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "appliedRulePriority",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "appliedRulePriority",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "AppliedRulePriority",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The priority of the applied rule.</p>\n@param appliedRulePriority The priority of the applied rule.*/",
        "setterMethodName" : "setAppliedRulePriority",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "appliedRulePriority",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The priority of the applied rule.</p>\n@param appliedRulePriority The priority of the applied rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "appliedRulePriority",
          "variableType" : "Integer",
          "documentation" : "<p>The priority of the applied rule.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Action" : {
          "c2jName" : "action",
          "c2jShape" : "LifecyclePolicyRuleAction",
          "deprecated" : false,
          "documentation" : "<p>The type of action to be taken.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The type of action to be taken.</p>\n@param action The type of action to be taken.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAction",
          "getterDocumentation" : "/**<p>The type of action to be taken.</p>\n@return The type of action to be taken.*/",
          "getterMethodName" : "getAction",
          "getterModel" : {
            "returnType" : "LifecyclePolicyRuleAction",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "action",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "action",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Action",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The type of action to be taken.</p>\n@param action The type of action to be taken.*/",
          "setterMethodName" : "setAction",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "LifecyclePolicyRuleAction",
            "variableName" : "action",
            "variableType" : "LifecyclePolicyRuleAction",
            "documentation" : "",
            "simpleType" : "LifecyclePolicyRuleAction",
            "variableSetterType" : "LifecyclePolicyRuleAction"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The type of action to be taken.</p>\n@param action The type of action to be taken.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "LifecyclePolicyRuleAction",
            "variableName" : "action",
            "variableType" : "LifecyclePolicyRuleAction",
            "documentation" : "<p>The type of action to be taken.</p>",
            "simpleType" : "LifecyclePolicyRuleAction",
            "variableSetterType" : "LifecyclePolicyRuleAction"
          },
          "xmlNameSpaceUri" : null
        },
        "AppliedRulePriority" : {
          "c2jName" : "appliedRulePriority",
          "c2jShape" : "LifecyclePolicyRulePriority",
          "deprecated" : false,
          "documentation" : "<p>The priority of the applied rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The priority of the applied rule.</p>\n@param appliedRulePriority The priority of the applied rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAppliedRulePriority",
          "getterDocumentation" : "/**<p>The priority of the applied rule.</p>\n@return The priority of the applied rule.*/",
          "getterMethodName" : "getAppliedRulePriority",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "appliedRulePriority",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "appliedRulePriority",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "AppliedRulePriority",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The priority of the applied rule.</p>\n@param appliedRulePriority The priority of the applied rule.*/",
          "setterMethodName" : "setAppliedRulePriority",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "appliedRulePriority",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The priority of the applied rule.</p>\n@param appliedRulePriority The priority of the applied rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "appliedRulePriority",
            "variableType" : "Integer",
            "documentation" : "<p>The priority of the applied rule.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "ImageDigest" : {
          "c2jName" : "imageDigest",
          "c2jShape" : "ImageDigest",
          "deprecated" : false,
          "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageDigest",
          "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@return The <code>sha256</code> digest of the image manifest.*/",
          "getterMethodName" : "getImageDigest",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageDigest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageDigest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ImageDigest",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.*/",
          "setterMethodName" : "setImageDigest",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "imageDigest",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "imageDigest",
            "variableType" : "String",
            "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ImagePushedAt" : {
          "c2jName" : "imagePushedAt",
          "c2jShape" : "PushTimestamp",
          "deprecated" : false,
          "documentation" : "<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.</p>\n@param imagePushedAt The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImagePushedAt",
          "getterDocumentation" : "/**<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.</p>\n@return The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.*/",
          "getterMethodName" : "getImagePushedAt",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imagePushedAt",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imagePushedAt",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "ImagePushedAt",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.</p>\n@param imagePushedAt The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.*/",
          "setterMethodName" : "setImagePushedAt",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "imagePushedAt",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.</p>\n@param imagePushedAt The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "imagePushedAt",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "ImageTags" : {
          "c2jName" : "imageTags",
          "c2jShape" : "ImageTagList",
          "deprecated" : false,
          "documentation" : "<p>The list of tags associated with this image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The list of tags associated with this image.</p>\n@param imageTags The list of tags associated with this image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageTags",
          "getterDocumentation" : "/**<p>The list of tags associated with this image.</p>\n@return The list of tags associated with this image.*/",
          "getterMethodName" : "getImageTags",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageTags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageTags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ImageTag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ImageTags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The list of tags associated with this image.</p>\n@param imageTags The list of tags associated with this image.*/",
          "setterMethodName" : "setImageTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "imageTags",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The list of tags associated with this image.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageTags(java.util.Collection)} or {@link #withImageTags(java.util.Collection)} if you want to override the existing values.</p>\n@param imageTags The list of tags associated with this image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "imageTags",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The list of tags associated with this image.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LifecyclePolicyPreviewResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LifecyclePolicyPreviewResult",
        "variableName" : "lifecyclePolicyPreviewResult",
        "variableType" : "LifecyclePolicyPreviewResult",
        "documentation" : null,
        "simpleType" : "LifecyclePolicyPreviewResult",
        "variableSetterType" : "LifecyclePolicyPreviewResult"
      },
      "wrapper" : false
    },
    "LifecyclePolicyPreviewStatus" : {
      "c2jName" : "LifecyclePolicyPreviewStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "IN_PROGRESS",
        "value" : "IN_PROGRESS"
      }, {
        "name" : "COMPLETE",
        "value" : "COMPLETE"
      }, {
        "name" : "EXPIRED",
        "value" : "EXPIRED"
      }, {
        "name" : "FAILED",
        "value" : "FAILED"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LifecyclePolicyPreviewStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LifecyclePolicyPreviewStatus",
        "variableName" : "lifecyclePolicyPreviewStatus",
        "variableType" : "LifecyclePolicyPreviewStatus",
        "documentation" : null,
        "simpleType" : "LifecyclePolicyPreviewStatus",
        "variableSetterType" : "LifecyclePolicyPreviewStatus"
      },
      "wrapper" : false
    },
    "LifecyclePolicyPreviewSummary" : {
      "c2jName" : "LifecyclePolicyPreviewSummary",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The summary of the lifecycle policy preview request.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "expiringImageTotalCount",
        "c2jShape" : "ImageCount",
        "deprecated" : false,
        "documentation" : "<p>The number of expiring images.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The number of expiring images.</p>\n@param expiringImageTotalCount The number of expiring images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withExpiringImageTotalCount",
        "getterDocumentation" : "/**<p>The number of expiring images.</p>\n@return The number of expiring images.*/",
        "getterMethodName" : "getExpiringImageTotalCount",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "expiringImageTotalCount",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "expiringImageTotalCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "ExpiringImageTotalCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The number of expiring images.</p>\n@param expiringImageTotalCount The number of expiring images.*/",
        "setterMethodName" : "setExpiringImageTotalCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "expiringImageTotalCount",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The number of expiring images.</p>\n@param expiringImageTotalCount The number of expiring images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "expiringImageTotalCount",
          "variableType" : "Integer",
          "documentation" : "<p>The number of expiring images.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ExpiringImageTotalCount" : {
          "c2jName" : "expiringImageTotalCount",
          "c2jShape" : "ImageCount",
          "deprecated" : false,
          "documentation" : "<p>The number of expiring images.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The number of expiring images.</p>\n@param expiringImageTotalCount The number of expiring images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withExpiringImageTotalCount",
          "getterDocumentation" : "/**<p>The number of expiring images.</p>\n@return The number of expiring images.*/",
          "getterMethodName" : "getExpiringImageTotalCount",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "expiringImageTotalCount",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "expiringImageTotalCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "ExpiringImageTotalCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The number of expiring images.</p>\n@param expiringImageTotalCount The number of expiring images.*/",
          "setterMethodName" : "setExpiringImageTotalCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "expiringImageTotalCount",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The number of expiring images.</p>\n@param expiringImageTotalCount The number of expiring images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "expiringImageTotalCount",
            "variableType" : "Integer",
            "documentation" : "<p>The number of expiring images.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LifecyclePolicyPreviewSummary",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LifecyclePolicyPreviewSummary",
        "variableName" : "lifecyclePolicyPreviewSummary",
        "variableType" : "LifecyclePolicyPreviewSummary",
        "documentation" : null,
        "simpleType" : "LifecyclePolicyPreviewSummary",
        "variableSetterType" : "LifecyclePolicyPreviewSummary"
      },
      "wrapper" : false
    },
    "LifecyclePolicyRuleAction" : {
      "c2jName" : "LifecyclePolicyRuleAction",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The type of action to be taken.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "type",
        "c2jShape" : "ImageActionType",
        "deprecated" : false,
        "documentation" : "<p>The type of action to be taken.</p>",
        "enumType" : "ImageActionType",
        "fluentSetterDocumentation" : "/**<p>The type of action to be taken.</p>\n@param type The type of action to be taken.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImageActionType*/",
        "fluentSetterMethodName" : "withType",
        "getterDocumentation" : "/**<p>The type of action to be taken.</p>\n@return The type of action to be taken.\n@see ImageActionType*/",
        "getterMethodName" : "getType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "type",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "type",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Type",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The type of action to be taken.</p>\n@param type The type of action to be taken.\n@see ImageActionType*/",
        "setterMethodName" : "setType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The type of action to be taken.</p>\n@param type The type of action to be taken.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImageActionType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "<p>The type of action to be taken.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Type" : {
          "c2jName" : "type",
          "c2jShape" : "ImageActionType",
          "deprecated" : false,
          "documentation" : "<p>The type of action to be taken.</p>",
          "enumType" : "ImageActionType",
          "fluentSetterDocumentation" : "/**<p>The type of action to be taken.</p>\n@param type The type of action to be taken.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImageActionType*/",
          "fluentSetterMethodName" : "withType",
          "getterDocumentation" : "/**<p>The type of action to be taken.</p>\n@return The type of action to be taken.\n@see ImageActionType*/",
          "getterMethodName" : "getType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "type",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "type",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Type",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The type of action to be taken.</p>\n@param type The type of action to be taken.\n@see ImageActionType*/",
          "setterMethodName" : "setType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The type of action to be taken.</p>\n@param type The type of action to be taken.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImageActionType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "<p>The type of action to be taken.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LifecyclePolicyRuleAction",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LifecyclePolicyRuleAction",
        "variableName" : "lifecyclePolicyRuleAction",
        "variableType" : "LifecyclePolicyRuleAction",
        "documentation" : null,
        "simpleType" : "LifecyclePolicyRuleAction",
        "variableSetterType" : "LifecyclePolicyRuleAction"
      },
      "wrapper" : false
    },
    "LimitExceededException" : {
      "c2jName" : "LimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The operation did not succeed because it would have exceeded a service limit for your account. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonECR/latest/userguide/service_limits.html\">Amazon ECR Default Service Limits</a> in the Amazon Elastic Container Registry User Guide.</p>",
      "enums" : null,
      "errorCode" : "LimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "LimitExceededException",
        "variableName" : "limitExceededException",
        "variableType" : "LimitExceededException",
        "documentation" : null,
        "simpleType" : "LimitExceededException",
        "variableSetterType" : "LimitExceededException"
      },
      "wrapper" : false
    },
    "ListImagesFilter" : {
      "c2jName" : "ListImagesFilter",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object representing a filter on a <a>ListImages</a> operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "tagStatus",
        "c2jShape" : "TagStatus",
        "deprecated" : false,
        "documentation" : "<p>The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>",
        "enumType" : "TagStatus",
        "fluentSetterDocumentation" : "/**<p>The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>\n@param tagStatus The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TagStatus*/",
        "fluentSetterMethodName" : "withTagStatus",
        "getterDocumentation" : "/**<p>The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>\n@return The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.\n@see TagStatus*/",
        "getterMethodName" : "getTagStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "tagStatus",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tagStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TagStatus",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>\n@param tagStatus The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.\n@see TagStatus*/",
        "setterMethodName" : "setTagStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tagStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>\n@param tagStatus The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TagStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tagStatus",
          "variableType" : "String",
          "documentation" : "<p>The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "TagStatus" : {
          "c2jName" : "tagStatus",
          "c2jShape" : "TagStatus",
          "deprecated" : false,
          "documentation" : "<p>The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>",
          "enumType" : "TagStatus",
          "fluentSetterDocumentation" : "/**<p>The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>\n@param tagStatus The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TagStatus*/",
          "fluentSetterMethodName" : "withTagStatus",
          "getterDocumentation" : "/**<p>The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>\n@return The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.\n@see TagStatus*/",
          "getterMethodName" : "getTagStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "tagStatus",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tagStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TagStatus",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>\n@param tagStatus The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.\n@see TagStatus*/",
          "setterMethodName" : "setTagStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tagStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>\n@param tagStatus The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TagStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tagStatus",
            "variableType" : "String",
            "documentation" : "<p>The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListImagesFilter",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListImagesFilter",
        "variableName" : "listImagesFilter",
        "variableType" : "ListImagesFilter",
        "documentation" : null,
        "simpleType" : "ListImagesFilter",
        "variableSetterType" : "ListImagesFilter"
      },
      "wrapper" : false
    },
    "ListImagesRequest" : {
      "c2jName" : "ListImagesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListImages",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.ListImages",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The repository with image IDs to be listed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository with image IDs to be listed.</p>\n@param repositoryName The repository with image IDs to be listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The repository with image IDs to be listed.</p>\n@return The repository with image IDs to be listed.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository with image IDs to be listed.</p>\n@param repositoryName The repository with image IDs to be listed.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository with image IDs to be listed.</p>\n@param repositoryName The repository with image IDs to be listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The repository with image IDs to be listed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>\n@return The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@return The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "maxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "maxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "filter",
        "c2jShape" : "ListImagesFilter",
        "deprecated" : false,
        "documentation" : "<p>The filter key and value with which to filter your <code>ListImages</code> results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The filter key and value with which to filter your <code>ListImages</code> results.</p>\n@param filter The filter key and value with which to filter your <code>ListImages</code> results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilter",
        "getterDocumentation" : "/**<p>The filter key and value with which to filter your <code>ListImages</code> results.</p>\n@return The filter key and value with which to filter your <code>ListImages</code> results.*/",
        "getterMethodName" : "getFilter",
        "getterModel" : {
          "returnType" : "ListImagesFilter",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "filter",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "filter",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Filter",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The filter key and value with which to filter your <code>ListImages</code> results.</p>\n@param filter The filter key and value with which to filter your <code>ListImages</code> results.*/",
        "setterMethodName" : "setFilter",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ListImagesFilter",
          "variableName" : "filter",
          "variableType" : "ListImagesFilter",
          "documentation" : "",
          "simpleType" : "ListImagesFilter",
          "variableSetterType" : "ListImagesFilter"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The filter key and value with which to filter your <code>ListImages</code> results.</p>\n@param filter The filter key and value with which to filter your <code>ListImages</code> results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ListImagesFilter",
          "variableName" : "filter",
          "variableType" : "ListImagesFilter",
          "documentation" : "<p>The filter key and value with which to filter your <code>ListImages</code> results.</p>",
          "simpleType" : "ListImagesFilter",
          "variableSetterType" : "ListImagesFilter"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Filter" : {
          "c2jName" : "filter",
          "c2jShape" : "ListImagesFilter",
          "deprecated" : false,
          "documentation" : "<p>The filter key and value with which to filter your <code>ListImages</code> results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The filter key and value with which to filter your <code>ListImages</code> results.</p>\n@param filter The filter key and value with which to filter your <code>ListImages</code> results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilter",
          "getterDocumentation" : "/**<p>The filter key and value with which to filter your <code>ListImages</code> results.</p>\n@return The filter key and value with which to filter your <code>ListImages</code> results.*/",
          "getterMethodName" : "getFilter",
          "getterModel" : {
            "returnType" : "ListImagesFilter",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "filter",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "filter",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Filter",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The filter key and value with which to filter your <code>ListImages</code> results.</p>\n@param filter The filter key and value with which to filter your <code>ListImages</code> results.*/",
          "setterMethodName" : "setFilter",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ListImagesFilter",
            "variableName" : "filter",
            "variableType" : "ListImagesFilter",
            "documentation" : "",
            "simpleType" : "ListImagesFilter",
            "variableSetterType" : "ListImagesFilter"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The filter key and value with which to filter your <code>ListImages</code> results.</p>\n@param filter The filter key and value with which to filter your <code>ListImages</code> results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ListImagesFilter",
            "variableName" : "filter",
            "variableType" : "ListImagesFilter",
            "documentation" : "<p>The filter key and value with which to filter your <code>ListImages</code> results.</p>",
            "simpleType" : "ListImagesFilter",
            "variableSetterType" : "ListImagesFilter"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@return The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "maxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "maxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>\n@return The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The repository with image IDs to be listed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository with image IDs to be listed.</p>\n@param repositoryName The repository with image IDs to be listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The repository with image IDs to be listed.</p>\n@return The repository with image IDs to be listed.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository with image IDs to be listed.</p>\n@param repositoryName The repository with image IDs to be listed.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository with image IDs to be listed.</p>\n@param repositoryName The repository with image IDs to be listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The repository with image IDs to be listed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "ListImagesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListImagesRequest",
        "variableName" : "listImagesRequest",
        "variableType" : "ListImagesRequest",
        "documentation" : null,
        "simpleType" : "ListImagesRequest",
        "variableSetterType" : "ListImagesRequest"
      },
      "wrapper" : false
    },
    "ListImagesResult" : {
      "c2jName" : "ListImagesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "imageIds",
        "c2jShape" : "ImageIdentifierList",
        "deprecated" : false,
        "documentation" : "<p>The list of image IDs for the requested repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@param imageIds The list of image IDs for the requested repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageIds",
        "getterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@return The list of image IDs for the requested repository.*/",
        "getterMethodName" : "getImageIds",
        "getterModel" : {
          "returnType" : "java.util.List<ImageIdentifier>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageIds",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ImageIdentifier",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ImageIdentifier",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageIdentifier",
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ImageIdentifier",
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ImageIdentifier",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ImageIdentifier",
          "templateImplType" : "java.util.ArrayList<ImageIdentifier>",
          "templateType" : "java.util.List<ImageIdentifier>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ImageIds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@param imageIds The list of image IDs for the requested repository.*/",
        "setterMethodName" : "setImageIds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "documentation" : "",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds The list of image IDs for the requested repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "documentation" : "<p>The list of image IDs for the requested repository.</p>",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@return The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ImageIds" : {
          "c2jName" : "imageIds",
          "c2jShape" : "ImageIdentifierList",
          "deprecated" : false,
          "documentation" : "<p>The list of image IDs for the requested repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@param imageIds The list of image IDs for the requested repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageIds",
          "getterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@return The list of image IDs for the requested repository.*/",
          "getterMethodName" : "getImageIds",
          "getterModel" : {
            "returnType" : "java.util.List<ImageIdentifier>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageIds",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ImageIdentifier",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ImageIdentifier",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageIdentifier",
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ImageIdentifier",
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ImageIdentifier",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ImageIdentifier",
            "templateImplType" : "java.util.ArrayList<ImageIdentifier>",
            "templateType" : "java.util.List<ImageIdentifier>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ImageIds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@param imageIds The list of image IDs for the requested repository.*/",
          "setterMethodName" : "setImageIds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "documentation" : "",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds The list of image IDs for the requested repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "documentation" : "<p>The list of image IDs for the requested repository.</p>",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@return The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListImagesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListImagesResult",
        "variableName" : "listImagesResult",
        "variableType" : "ListImagesResult",
        "documentation" : null,
        "simpleType" : "ListImagesResult",
        "variableSetterType" : "ListImagesResult"
      },
      "wrapper" : false
    },
    "ListTagsForResourceRequest" : {
      "c2jName" : "ListTagsForResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListTagsForResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.ListTagsForResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "resourceArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@return The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "resourceArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "resourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceArn" : {
          "c2jName" : "resourceArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@return The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "resourceArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "resourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "resourceArn" ],
      "shapeName" : "ListTagsForResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTagsForResourceRequest",
        "variableName" : "listTagsForResourceRequest",
        "variableType" : "ListTagsForResourceRequest",
        "documentation" : null,
        "simpleType" : "ListTagsForResourceRequest",
        "variableSetterType" : "ListTagsForResourceRequest"
      },
      "wrapper" : false
    },
    "ListTagsForResourceResult" : {
      "c2jName" : "ListTagsForResourceResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "tags",
        "c2jShape" : "TagList",
        "deprecated" : false,
        "documentation" : "<p>The tags for the resource.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The tags for the resource.</p>\n@param tags The tags for the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>The tags for the resource.</p>\n@return The tags for the resource.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The tags for the resource.</p>\n@param tags The tags for the resource.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The tags for the resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags The tags for the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>The tags for the resource.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Tags" : {
          "c2jName" : "tags",
          "c2jShape" : "TagList",
          "deprecated" : false,
          "documentation" : "<p>The tags for the resource.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The tags for the resource.</p>\n@param tags The tags for the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>The tags for the resource.</p>\n@return The tags for the resource.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The tags for the resource.</p>\n@param tags The tags for the resource.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The tags for the resource.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags The tags for the resource.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>The tags for the resource.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListTagsForResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTagsForResourceResult",
        "variableName" : "listTagsForResourceResult",
        "variableType" : "ListTagsForResourceResult",
        "documentation" : null,
        "simpleType" : "ListTagsForResourceResult",
        "variableSetterType" : "ListTagsForResourceResult"
      },
      "wrapper" : false
    },
    "PutImageRequest" : {
      "c2jName" : "PutImageRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "PutImage",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.PutImage",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository in which to put the image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository in which to put the image.</p>\n@param repositoryName The name of the repository in which to put the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository in which to put the image.</p>\n@return The name of the repository in which to put the image.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository in which to put the image.</p>\n@param repositoryName The name of the repository in which to put the image.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository in which to put the image.</p>\n@param repositoryName The name of the repository in which to put the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository in which to put the image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imageManifest",
        "c2jShape" : "ImageManifest",
        "deprecated" : false,
        "documentation" : "<p>The image manifest corresponding to the image to be uploaded.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The image manifest corresponding to the image to be uploaded.</p>\n@param imageManifest The image manifest corresponding to the image to be uploaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageManifest",
        "getterDocumentation" : "/**<p>The image manifest corresponding to the image to be uploaded.</p>\n@return The image manifest corresponding to the image to be uploaded.*/",
        "getterMethodName" : "getImageManifest",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageManifest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageManifest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ImageManifest",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The image manifest corresponding to the image to be uploaded.</p>\n@param imageManifest The image manifest corresponding to the image to be uploaded.*/",
        "setterMethodName" : "setImageManifest",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "imageManifest",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The image manifest corresponding to the image to be uploaded.</p>\n@param imageManifest The image manifest corresponding to the image to be uploaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "imageManifest",
          "variableType" : "String",
          "documentation" : "<p>The image manifest corresponding to the image to be uploaded.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imageTag",
        "c2jShape" : "ImageTag",
        "deprecated" : false,
        "documentation" : "<p>The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.</p>\n@param imageTag The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageTag",
        "getterDocumentation" : "/**<p>The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.</p>\n@return The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.*/",
        "getterMethodName" : "getImageTag",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageTag",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageTag",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ImageTag",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.</p>\n@param imageTag The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.*/",
        "setterMethodName" : "setImageTag",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "imageTag",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.</p>\n@param imageTag The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "imageTag",
          "variableType" : "String",
          "documentation" : "<p>The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ImageManifest" : {
          "c2jName" : "imageManifest",
          "c2jShape" : "ImageManifest",
          "deprecated" : false,
          "documentation" : "<p>The image manifest corresponding to the image to be uploaded.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The image manifest corresponding to the image to be uploaded.</p>\n@param imageManifest The image manifest corresponding to the image to be uploaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageManifest",
          "getterDocumentation" : "/**<p>The image manifest corresponding to the image to be uploaded.</p>\n@return The image manifest corresponding to the image to be uploaded.*/",
          "getterMethodName" : "getImageManifest",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageManifest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageManifest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ImageManifest",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The image manifest corresponding to the image to be uploaded.</p>\n@param imageManifest The image manifest corresponding to the image to be uploaded.*/",
          "setterMethodName" : "setImageManifest",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "imageManifest",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The image manifest corresponding to the image to be uploaded.</p>\n@param imageManifest The image manifest corresponding to the image to be uploaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "imageManifest",
            "variableType" : "String",
            "documentation" : "<p>The image manifest corresponding to the image to be uploaded.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ImageTag" : {
          "c2jName" : "imageTag",
          "c2jShape" : "ImageTag",
          "deprecated" : false,
          "documentation" : "<p>The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.</p>\n@param imageTag The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageTag",
          "getterDocumentation" : "/**<p>The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.</p>\n@return The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.*/",
          "getterMethodName" : "getImageTag",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageTag",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageTag",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ImageTag",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.</p>\n@param imageTag The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.*/",
          "setterMethodName" : "setImageTag",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "imageTag",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.</p>\n@param imageTag The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "imageTag",
            "variableType" : "String",
            "documentation" : "<p>The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository in which to put the image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository in which to put the image.</p>\n@param repositoryName The name of the repository in which to put the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository in which to put the image.</p>\n@return The name of the repository in which to put the image.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository in which to put the image.</p>\n@param repositoryName The name of the repository in which to put the image.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository in which to put the image.</p>\n@param repositoryName The name of the repository in which to put the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository in which to put the image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "imageManifest" ],
      "shapeName" : "PutImageRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutImageRequest",
        "variableName" : "putImageRequest",
        "variableType" : "PutImageRequest",
        "documentation" : null,
        "simpleType" : "PutImageRequest",
        "variableSetterType" : "PutImageRequest"
      },
      "wrapper" : false
    },
    "PutImageResult" : {
      "c2jName" : "PutImageResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "image",
        "c2jShape" : "Image",
        "deprecated" : false,
        "documentation" : "<p>Details of the image uploaded.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Details of the image uploaded.</p>\n@param image Details of the image uploaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImage",
        "getterDocumentation" : "/**<p>Details of the image uploaded.</p>\n@return Details of the image uploaded.*/",
        "getterMethodName" : "getImage",
        "getterModel" : {
          "returnType" : "Image",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "image",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "image",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Image",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Details of the image uploaded.</p>\n@param image Details of the image uploaded.*/",
        "setterMethodName" : "setImage",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Details of the image uploaded.</p>\n@param image Details of the image uploaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "<p>Details of the image uploaded.</p>",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Image" : {
          "c2jName" : "image",
          "c2jShape" : "Image",
          "deprecated" : false,
          "documentation" : "<p>Details of the image uploaded.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Details of the image uploaded.</p>\n@param image Details of the image uploaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImage",
          "getterDocumentation" : "/**<p>Details of the image uploaded.</p>\n@return Details of the image uploaded.*/",
          "getterMethodName" : "getImage",
          "getterModel" : {
            "returnType" : "Image",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "image",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "image",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Image",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Details of the image uploaded.</p>\n@param image Details of the image uploaded.*/",
          "setterMethodName" : "setImage",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Details of the image uploaded.</p>\n@param image Details of the image uploaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "<p>Details of the image uploaded.</p>",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PutImageResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutImageResult",
        "variableName" : "putImageResult",
        "variableType" : "PutImageResult",
        "documentation" : null,
        "simpleType" : "PutImageResult",
        "variableSetterType" : "PutImageResult"
      },
      "wrapper" : false
    },
    "PutLifecyclePolicyRequest" : {
      "c2jName" : "PutLifecyclePolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "PutLifecyclePolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.PutLifecyclePolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to receive the policy.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@return The name of the repository to receive the policy.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to receive the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lifecyclePolicyText",
        "c2jShape" : "LifecyclePolicyText",
        "deprecated" : false,
        "documentation" : "<p>The JSON repository policy text to apply to the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param lifecyclePolicyText The JSON repository policy text to apply to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLifecyclePolicyText",
        "getterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@return The JSON repository policy text to apply to the repository.*/",
        "getterMethodName" : "getLifecyclePolicyText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lifecyclePolicyText",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lifecyclePolicyText",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LifecyclePolicyText",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param lifecyclePolicyText The JSON repository policy text to apply to the repository.*/",
        "setterMethodName" : "setLifecyclePolicyText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "lifecyclePolicyText",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param lifecyclePolicyText The JSON repository policy text to apply to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "lifecyclePolicyText",
          "variableType" : "String",
          "documentation" : "<p>The JSON repository policy text to apply to the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LifecyclePolicyText" : {
          "c2jName" : "lifecyclePolicyText",
          "c2jShape" : "LifecyclePolicyText",
          "deprecated" : false,
          "documentation" : "<p>The JSON repository policy text to apply to the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param lifecyclePolicyText The JSON repository policy text to apply to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLifecyclePolicyText",
          "getterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@return The JSON repository policy text to apply to the repository.*/",
          "getterMethodName" : "getLifecyclePolicyText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lifecyclePolicyText",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lifecyclePolicyText",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LifecyclePolicyText",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param lifecyclePolicyText The JSON repository policy text to apply to the repository.*/",
          "setterMethodName" : "setLifecyclePolicyText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "lifecyclePolicyText",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param lifecyclePolicyText The JSON repository policy text to apply to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "lifecyclePolicyText",
            "variableType" : "String",
            "documentation" : "<p>The JSON repository policy text to apply to the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do&#x2028; not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to receive the policy.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@return The name of the repository to receive the policy.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to receive the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "lifecyclePolicyText" ],
      "shapeName" : "PutLifecyclePolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutLifecyclePolicyRequest",
        "variableName" : "putLifecyclePolicyRequest",
        "variableType" : "PutLifecyclePolicyRequest",
        "documentation" : null,
        "simpleType" : "PutLifecyclePolicyRequest",
        "variableSetterType" : "PutLifecyclePolicyRequest"
      },
      "wrapper" : false
    },
    "PutLifecyclePolicyResult" : {
      "c2jName" : "PutLifecyclePolicyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The registry ID associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The repository name associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The repository name associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lifecyclePolicyText",
        "c2jShape" : "LifecyclePolicyText",
        "deprecated" : false,
        "documentation" : "<p>The JSON repository policy text.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON repository policy text.</p>\n@param lifecyclePolicyText The JSON repository policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLifecyclePolicyText",
        "getterDocumentation" : "/**<p>The JSON repository policy text.</p>\n@return The JSON repository policy text.*/",
        "getterMethodName" : "getLifecyclePolicyText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lifecyclePolicyText",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lifecyclePolicyText",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LifecyclePolicyText",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The JSON repository policy text.</p>\n@param lifecyclePolicyText The JSON repository policy text.*/",
        "setterMethodName" : "setLifecyclePolicyText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "lifecyclePolicyText",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON repository policy text.</p>\n@param lifecyclePolicyText The JSON repository policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "lifecyclePolicyText",
          "variableType" : "String",
          "documentation" : "<p>The JSON repository policy text.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LifecyclePolicyText" : {
          "c2jName" : "lifecyclePolicyText",
          "c2jShape" : "LifecyclePolicyText",
          "deprecated" : false,
          "documentation" : "<p>The JSON repository policy text.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON repository policy text.</p>\n@param lifecyclePolicyText The JSON repository policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLifecyclePolicyText",
          "getterDocumentation" : "/**<p>The JSON repository policy text.</p>\n@return The JSON repository policy text.*/",
          "getterMethodName" : "getLifecyclePolicyText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lifecyclePolicyText",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lifecyclePolicyText",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LifecyclePolicyText",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The JSON repository policy text.</p>\n@param lifecyclePolicyText The JSON repository policy text.*/",
          "setterMethodName" : "setLifecyclePolicyText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "lifecyclePolicyText",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON repository policy text.</p>\n@param lifecyclePolicyText The JSON repository policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "lifecyclePolicyText",
            "variableType" : "String",
            "documentation" : "<p>The JSON repository policy text.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The registry ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The repository name associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PutLifecyclePolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutLifecyclePolicyResult",
        "variableName" : "putLifecyclePolicyResult",
        "variableType" : "PutLifecyclePolicyResult",
        "documentation" : null,
        "simpleType" : "PutLifecyclePolicyResult",
        "variableSetterType" : "PutLifecyclePolicyResult"
      },
      "wrapper" : false
    },
    "Repository" : {
      "c2jName" : "Repository",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object representing a repository.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositoryArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>\n@param repositoryArn The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>\n@return The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.*/",
        "getterMethodName" : "getRepositoryArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>\n@param repositoryArn The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.*/",
        "setterMethodName" : "setRepositoryArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>\n@param repositoryArn The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryArn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository.</p>\n@return The AWS account ID associated with the registry that contains the repository.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository.</p>\n@return The name of the repository.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryUri",
        "c2jShape" : "Url",
        "deprecated" : false,
        "documentation" : "<p>The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.</p>\n@param repositoryUri The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryUri",
        "getterDocumentation" : "/**<p>The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.</p>\n@return The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.*/",
        "getterMethodName" : "getRepositoryUri",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryUri",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryUri",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryUri",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.</p>\n@param repositoryUri The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.*/",
        "setterMethodName" : "setRepositoryUri",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryUri",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.</p>\n@param repositoryUri The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryUri",
          "variableType" : "String",
          "documentation" : "<p>The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "createdAt",
        "c2jShape" : "CreationTimestamp",
        "deprecated" : false,
        "documentation" : "<p>The date and time, in JavaScript date format, when the repository was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time, in JavaScript date format, when the repository was created.</p>\n@param createdAt The date and time, in JavaScript date format, when the repository was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreatedAt",
        "getterDocumentation" : "/**<p>The date and time, in JavaScript date format, when the repository was created.</p>\n@return The date and time, in JavaScript date format, when the repository was created.*/",
        "getterMethodName" : "getCreatedAt",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "createdAt",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "createdAt",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreatedAt",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date and time, in JavaScript date format, when the repository was created.</p>\n@param createdAt The date and time, in JavaScript date format, when the repository was created.*/",
        "setterMethodName" : "setCreatedAt",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "createdAt",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time, in JavaScript date format, when the repository was created.</p>\n@param createdAt The date and time, in JavaScript date format, when the repository was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "createdAt",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time, in JavaScript date format, when the repository was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CreatedAt" : {
          "c2jName" : "createdAt",
          "c2jShape" : "CreationTimestamp",
          "deprecated" : false,
          "documentation" : "<p>The date and time, in JavaScript date format, when the repository was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time, in JavaScript date format, when the repository was created.</p>\n@param createdAt The date and time, in JavaScript date format, when the repository was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreatedAt",
          "getterDocumentation" : "/**<p>The date and time, in JavaScript date format, when the repository was created.</p>\n@return The date and time, in JavaScript date format, when the repository was created.*/",
          "getterMethodName" : "getCreatedAt",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "createdAt",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "createdAt",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreatedAt",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date and time, in JavaScript date format, when the repository was created.</p>\n@param createdAt The date and time, in JavaScript date format, when the repository was created.*/",
          "setterMethodName" : "setCreatedAt",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "createdAt",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time, in JavaScript date format, when the repository was created.</p>\n@param createdAt The date and time, in JavaScript date format, when the repository was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "createdAt",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time, in JavaScript date format, when the repository was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository.</p>\n@return The AWS account ID associated with the registry that contains the repository.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryArn" : {
          "c2jName" : "repositoryArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>\n@param repositoryArn The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>\n@return The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.*/",
          "getterMethodName" : "getRepositoryArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>\n@param repositoryArn The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.*/",
          "setterMethodName" : "setRepositoryArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>\n@param repositoryArn The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryArn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository.</p>\n@return The name of the repository.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryUri" : {
          "c2jName" : "repositoryUri",
          "c2jShape" : "Url",
          "deprecated" : false,
          "documentation" : "<p>The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.</p>\n@param repositoryUri The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryUri",
          "getterDocumentation" : "/**<p>The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.</p>\n@return The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.*/",
          "getterMethodName" : "getRepositoryUri",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryUri",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryUri",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryUri",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.</p>\n@param repositoryUri The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.*/",
          "setterMethodName" : "setRepositoryUri",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryUri",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.</p>\n@param repositoryUri The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryUri",
            "variableType" : "String",
            "documentation" : "<p>The URI for the repository. You can use this URI for Docker <code>push</code> or <code>pull</code> operations.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Repository",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Repository",
        "variableName" : "repository",
        "variableType" : "Repository",
        "documentation" : null,
        "simpleType" : "Repository",
        "variableSetterType" : "Repository"
      },
      "wrapper" : false
    },
    "RepositoryAlreadyExistsException" : {
      "c2jName" : "RepositoryAlreadyExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified repository already exists in the specified registry.</p>",
      "enums" : null,
      "errorCode" : "RepositoryAlreadyExistsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryAlreadyExistsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "RepositoryAlreadyExistsException",
        "variableName" : "repositoryAlreadyExistsException",
        "variableType" : "RepositoryAlreadyExistsException",
        "documentation" : null,
        "simpleType" : "RepositoryAlreadyExistsException",
        "variableSetterType" : "RepositoryAlreadyExistsException"
      },
      "wrapper" : false
    },
    "RepositoryNotEmptyException" : {
      "c2jName" : "RepositoryNotEmptyException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified repository contains images. To delete a repository that contains images, you must force the deletion with the <code>force</code> parameter.</p>",
      "enums" : null,
      "errorCode" : "RepositoryNotEmptyException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryNotEmptyException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "RepositoryNotEmptyException",
        "variableName" : "repositoryNotEmptyException",
        "variableType" : "RepositoryNotEmptyException",
        "documentation" : null,
        "simpleType" : "RepositoryNotEmptyException",
        "variableSetterType" : "RepositoryNotEmptyException"
      },
      "wrapper" : false
    },
    "RepositoryNotFoundException" : {
      "c2jName" : "RepositoryNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
      "enums" : null,
      "errorCode" : "RepositoryNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "RepositoryNotFoundException",
        "variableName" : "repositoryNotFoundException",
        "variableType" : "RepositoryNotFoundException",
        "documentation" : null,
        "simpleType" : "RepositoryNotFoundException",
        "variableSetterType" : "RepositoryNotFoundException"
      },
      "wrapper" : false
    },
    "RepositoryPolicyNotFoundException" : {
      "c2jName" : "RepositoryPolicyNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified repository and registry combination does not have an associated repository policy.</p>",
      "enums" : null,
      "errorCode" : "RepositoryPolicyNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryPolicyNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "RepositoryPolicyNotFoundException",
        "variableName" : "repositoryPolicyNotFoundException",
        "variableType" : "RepositoryPolicyNotFoundException",
        "documentation" : null,
        "simpleType" : "RepositoryPolicyNotFoundException",
        "variableSetterType" : "RepositoryPolicyNotFoundException"
      },
      "wrapper" : false
    },
    "ServerException" : {
      "c2jName" : "ServerException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
      "enums" : null,
      "errorCode" : "ServerException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ServerException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ServerException",
        "variableName" : "serverException",
        "variableType" : "ServerException",
        "documentation" : null,
        "simpleType" : "ServerException",
        "variableSetterType" : "ServerException"
      },
      "wrapper" : false
    },
    "SetRepositoryPolicyRequest" : {
      "c2jName" : "SetRepositoryPolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "SetRepositoryPolicy",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.SetRepositoryPolicy",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to receive the policy.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@return The name of the repository to receive the policy.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to receive the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyText",
        "c2jShape" : "RepositoryPolicyText",
        "deprecated" : false,
        "documentation" : "<p>The JSON repository policy text to apply to the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param policyText The JSON repository policy text to apply to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyText",
        "getterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@return The JSON repository policy text to apply to the repository.*/",
        "getterMethodName" : "getPolicyText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyText",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyText",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyText",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param policyText The JSON repository policy text to apply to the repository.*/",
        "setterMethodName" : "setPolicyText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "policyText",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param policyText The JSON repository policy text to apply to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "policyText",
          "variableType" : "String",
          "documentation" : "<p>The JSON repository policy text to apply to the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "force",
        "c2jShape" : "ForceFlag",
        "deprecated" : false,
        "documentation" : "<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>\n@param force If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withForce",
        "getterDocumentation" : "/**<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>\n@return If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.*/",
        "getterMethodName" : "getForce",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "force",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "force",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "Force",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>\n@param force If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.*/",
        "setterMethodName" : "setForce",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "force",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>\n@param force If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "force",
          "variableType" : "Boolean",
          "documentation" : "<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Force" : {
          "c2jName" : "force",
          "c2jShape" : "ForceFlag",
          "deprecated" : false,
          "documentation" : "<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>\n@param force If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withForce",
          "getterDocumentation" : "/**<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>\n@return If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.*/",
          "getterMethodName" : "getForce",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "force",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "force",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "Force",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>\n@param force If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.*/",
          "setterMethodName" : "setForce",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "force",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>\n@param force If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "force",
            "variableType" : "Boolean",
            "documentation" : "<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyText" : {
          "c2jName" : "policyText",
          "c2jShape" : "RepositoryPolicyText",
          "deprecated" : false,
          "documentation" : "<p>The JSON repository policy text to apply to the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param policyText The JSON repository policy text to apply to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyText",
          "getterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@return The JSON repository policy text to apply to the repository.*/",
          "getterMethodName" : "getPolicyText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyText",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyText",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyText",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param policyText The JSON repository policy text to apply to the repository.*/",
          "setterMethodName" : "setPolicyText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "policyText",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param policyText The JSON repository policy text to apply to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "policyText",
            "variableType" : "String",
            "documentation" : "<p>The JSON repository policy text to apply to the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to receive the policy.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@return The name of the repository to receive the policy.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to receive the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "policyText" ],
      "shapeName" : "SetRepositoryPolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "SetRepositoryPolicyRequest",
        "variableName" : "setRepositoryPolicyRequest",
        "variableType" : "SetRepositoryPolicyRequest",
        "documentation" : null,
        "simpleType" : "SetRepositoryPolicyRequest",
        "variableSetterType" : "SetRepositoryPolicyRequest"
      },
      "wrapper" : false
    },
    "SetRepositoryPolicyResult" : {
      "c2jName" : "SetRepositoryPolicyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The registry ID associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The repository name associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The repository name associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyText",
        "c2jShape" : "RepositoryPolicyText",
        "deprecated" : false,
        "documentation" : "<p>The JSON repository policy text applied to the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON repository policy text applied to the repository.</p>\n@param policyText The JSON repository policy text applied to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyText",
        "getterDocumentation" : "/**<p>The JSON repository policy text applied to the repository.</p>\n@return The JSON repository policy text applied to the repository.*/",
        "getterMethodName" : "getPolicyText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyText",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyText",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyText",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The JSON repository policy text applied to the repository.</p>\n@param policyText The JSON repository policy text applied to the repository.*/",
        "setterMethodName" : "setPolicyText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "policyText",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON repository policy text applied to the repository.</p>\n@param policyText The JSON repository policy text applied to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "policyText",
          "variableType" : "String",
          "documentation" : "<p>The JSON repository policy text applied to the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PolicyText" : {
          "c2jName" : "policyText",
          "c2jShape" : "RepositoryPolicyText",
          "deprecated" : false,
          "documentation" : "<p>The JSON repository policy text applied to the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON repository policy text applied to the repository.</p>\n@param policyText The JSON repository policy text applied to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyText",
          "getterDocumentation" : "/**<p>The JSON repository policy text applied to the repository.</p>\n@return The JSON repository policy text applied to the repository.*/",
          "getterMethodName" : "getPolicyText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyText",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyText",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyText",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The JSON repository policy text applied to the repository.</p>\n@param policyText The JSON repository policy text applied to the repository.*/",
          "setterMethodName" : "setPolicyText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "policyText",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON repository policy text applied to the repository.</p>\n@param policyText The JSON repository policy text applied to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "policyText",
            "variableType" : "String",
            "documentation" : "<p>The JSON repository policy text applied to the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The registry ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The repository name associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SetRepositoryPolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "SetRepositoryPolicyResult",
        "variableName" : "setRepositoryPolicyResult",
        "variableType" : "SetRepositoryPolicyResult",
        "documentation" : null,
        "simpleType" : "SetRepositoryPolicyResult",
        "variableSetterType" : "SetRepositoryPolicyResult"
      },
      "wrapper" : false
    },
    "StartLifecyclePolicyPreviewRequest" : {
      "c2jName" : "StartLifecyclePolicyPreviewRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "StartLifecyclePolicyPreview",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.StartLifecyclePolicyPreview",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to be evaluated.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to be evaluated.</p>\n@param repositoryName The name of the repository to be evaluated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to be evaluated.</p>\n@return The name of the repository to be evaluated.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository to be evaluated.</p>\n@param repositoryName The name of the repository to be evaluated.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to be evaluated.</p>\n@param repositoryName The name of the repository to be evaluated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to be evaluated.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lifecyclePolicyText",
        "c2jShape" : "LifecyclePolicyText",
        "deprecated" : false,
        "documentation" : "<p>The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.</p>\n@param lifecyclePolicyText The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLifecyclePolicyText",
        "getterDocumentation" : "/**<p>The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.</p>\n@return The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.*/",
        "getterMethodName" : "getLifecyclePolicyText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lifecyclePolicyText",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lifecyclePolicyText",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LifecyclePolicyText",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.</p>\n@param lifecyclePolicyText The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.*/",
        "setterMethodName" : "setLifecyclePolicyText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "lifecyclePolicyText",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.</p>\n@param lifecyclePolicyText The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "lifecyclePolicyText",
          "variableType" : "String",
          "documentation" : "<p>The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LifecyclePolicyText" : {
          "c2jName" : "lifecyclePolicyText",
          "c2jShape" : "LifecyclePolicyText",
          "deprecated" : false,
          "documentation" : "<p>The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.</p>\n@param lifecyclePolicyText The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLifecyclePolicyText",
          "getterDocumentation" : "/**<p>The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.</p>\n@return The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.*/",
          "getterMethodName" : "getLifecyclePolicyText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lifecyclePolicyText",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lifecyclePolicyText",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LifecyclePolicyText",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.</p>\n@param lifecyclePolicyText The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.*/",
          "setterMethodName" : "setLifecyclePolicyText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "lifecyclePolicyText",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.</p>\n@param lifecyclePolicyText The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "lifecyclePolicyText",
            "variableType" : "String",
            "documentation" : "<p>The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to be evaluated.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to be evaluated.</p>\n@param repositoryName The name of the repository to be evaluated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to be evaluated.</p>\n@return The name of the repository to be evaluated.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository to be evaluated.</p>\n@param repositoryName The name of the repository to be evaluated.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to be evaluated.</p>\n@param repositoryName The name of the repository to be evaluated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to be evaluated.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "StartLifecyclePolicyPreviewRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "StartLifecyclePolicyPreviewRequest",
        "variableName" : "startLifecyclePolicyPreviewRequest",
        "variableType" : "StartLifecyclePolicyPreviewRequest",
        "documentation" : null,
        "simpleType" : "StartLifecyclePolicyPreviewRequest",
        "variableSetterType" : "StartLifecyclePolicyPreviewRequest"
      },
      "wrapper" : false
    },
    "StartLifecyclePolicyPreviewResult" : {
      "c2jName" : "StartLifecyclePolicyPreviewResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The registry ID associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The repository name associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The repository name associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lifecyclePolicyText",
        "c2jShape" : "LifecyclePolicyText",
        "deprecated" : false,
        "documentation" : "<p>The JSON repository policy text.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON repository policy text.</p>\n@param lifecyclePolicyText The JSON repository policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLifecyclePolicyText",
        "getterDocumentation" : "/**<p>The JSON repository policy text.</p>\n@return The JSON repository policy text.*/",
        "getterMethodName" : "getLifecyclePolicyText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lifecyclePolicyText",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lifecyclePolicyText",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LifecyclePolicyText",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The JSON repository policy text.</p>\n@param lifecyclePolicyText The JSON repository policy text.*/",
        "setterMethodName" : "setLifecyclePolicyText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "lifecyclePolicyText",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON repository policy text.</p>\n@param lifecyclePolicyText The JSON repository policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "lifecyclePolicyText",
          "variableType" : "String",
          "documentation" : "<p>The JSON repository policy text.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "status",
        "c2jShape" : "LifecyclePolicyPreviewStatus",
        "deprecated" : false,
        "documentation" : "<p>The status of the lifecycle policy preview request.</p>",
        "enumType" : "LifecyclePolicyPreviewStatus",
        "fluentSetterDocumentation" : "/**<p>The status of the lifecycle policy preview request.</p>\n@param status The status of the lifecycle policy preview request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LifecyclePolicyPreviewStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>The status of the lifecycle policy preview request.</p>\n@return The status of the lifecycle policy preview request.\n@see LifecyclePolicyPreviewStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The status of the lifecycle policy preview request.</p>\n@param status The status of the lifecycle policy preview request.\n@see LifecyclePolicyPreviewStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The status of the lifecycle policy preview request.</p>\n@param status The status of the lifecycle policy preview request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LifecyclePolicyPreviewStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>The status of the lifecycle policy preview request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LifecyclePolicyText" : {
          "c2jName" : "lifecyclePolicyText",
          "c2jShape" : "LifecyclePolicyText",
          "deprecated" : false,
          "documentation" : "<p>The JSON repository policy text.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON repository policy text.</p>\n@param lifecyclePolicyText The JSON repository policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLifecyclePolicyText",
          "getterDocumentation" : "/**<p>The JSON repository policy text.</p>\n@return The JSON repository policy text.*/",
          "getterMethodName" : "getLifecyclePolicyText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lifecyclePolicyText",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lifecyclePolicyText",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LifecyclePolicyText",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The JSON repository policy text.</p>\n@param lifecyclePolicyText The JSON repository policy text.*/",
          "setterMethodName" : "setLifecyclePolicyText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "lifecyclePolicyText",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON repository policy text.</p>\n@param lifecyclePolicyText The JSON repository policy text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "lifecyclePolicyText",
            "variableType" : "String",
            "documentation" : "<p>The JSON repository policy text.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The registry ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The repository name associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "status",
          "c2jShape" : "LifecyclePolicyPreviewStatus",
          "deprecated" : false,
          "documentation" : "<p>The status of the lifecycle policy preview request.</p>",
          "enumType" : "LifecyclePolicyPreviewStatus",
          "fluentSetterDocumentation" : "/**<p>The status of the lifecycle policy preview request.</p>\n@param status The status of the lifecycle policy preview request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LifecyclePolicyPreviewStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>The status of the lifecycle policy preview request.</p>\n@return The status of the lifecycle policy preview request.\n@see LifecyclePolicyPreviewStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The status of the lifecycle policy preview request.</p>\n@param status The status of the lifecycle policy preview request.\n@see LifecyclePolicyPreviewStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The status of the lifecycle policy preview request.</p>\n@param status The status of the lifecycle policy preview request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LifecyclePolicyPreviewStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>The status of the lifecycle policy preview request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "StartLifecyclePolicyPreviewResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "StartLifecyclePolicyPreviewResult",
        "variableName" : "startLifecyclePolicyPreviewResult",
        "variableType" : "StartLifecyclePolicyPreviewResult",
        "documentation" : null,
        "simpleType" : "StartLifecyclePolicyPreviewResult",
        "variableSetterType" : "StartLifecyclePolicyPreviewResult"
      },
      "wrapper" : false
    },
    "Tag" : {
      "c2jName" : "Tag",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Key",
        "c2jShape" : "TagKey",
        "deprecated" : false,
        "documentation" : "<p>One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.</p>\n@param key One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withKey",
        "getterDocumentation" : "/**<p>One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.</p>\n@return One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.*/",
        "getterMethodName" : "getKey",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Key",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Key",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Key",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.</p>\n@param key One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.*/",
        "setterMethodName" : "setKey",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "key",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.</p>\n@param key One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "key",
          "variableType" : "String",
          "documentation" : "<p>One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Value",
        "c2jShape" : "TagValue",
        "deprecated" : false,
        "documentation" : "<p>The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).</p>\n@param value The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValue",
        "getterDocumentation" : "/**<p>The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).</p>\n@return The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).*/",
        "getterMethodName" : "getValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Value",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).</p>\n@param value The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).*/",
        "setterMethodName" : "setValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).</p>\n@param value The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "<p>The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Key" : {
          "c2jName" : "Key",
          "c2jShape" : "TagKey",
          "deprecated" : false,
          "documentation" : "<p>One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.</p>\n@param key One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withKey",
          "getterDocumentation" : "/**<p>One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.</p>\n@return One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.*/",
          "getterMethodName" : "getKey",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Key",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Key",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Key",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.</p>\n@param key One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.*/",
          "setterMethodName" : "setKey",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "key",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.</p>\n@param key One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "key",
            "variableType" : "String",
            "documentation" : "<p>One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "TagValue",
          "deprecated" : false,
          "documentation" : "<p>The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).</p>\n@param value The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValue",
          "getterDocumentation" : "/**<p>The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).</p>\n@return The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).*/",
          "getterMethodName" : "getValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Value",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).</p>\n@param value The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).*/",
          "setterMethodName" : "setValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).</p>\n@param value The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "<p>The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Tag",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Tag",
        "variableName" : "tag",
        "variableType" : "Tag",
        "documentation" : null,
        "simpleType" : "Tag",
        "variableSetterType" : "Tag"
      },
      "wrapper" : false
    },
    "TagResourceRequest" : {
      "c2jName" : "TagResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "TagResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.TagResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "resourceArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@return The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "resourceArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "resourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "tags",
        "c2jShape" : "TagList",
        "deprecated" : false,
        "documentation" : "<p>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>\n@param tags The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>\n@return The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>\n@param tags The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceArn" : {
          "c2jName" : "resourceArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@return The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "resourceArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "resourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "tags",
          "c2jShape" : "TagList",
          "deprecated" : false,
          "documentation" : "<p>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>\n@param tags The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>\n@return The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>\n@param tags The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "resourceArn", "tags" ],
      "shapeName" : "TagResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TagResourceRequest",
        "variableName" : "tagResourceRequest",
        "variableType" : "TagResourceRequest",
        "documentation" : null,
        "simpleType" : "TagResourceRequest",
        "variableSetterType" : "TagResourceRequest"
      },
      "wrapper" : false
    },
    "TagResourceResult" : {
      "c2jName" : "TagResourceResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TagResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TagResourceResult",
        "variableName" : "tagResourceResult",
        "variableType" : "TagResourceResult",
        "documentation" : null,
        "simpleType" : "TagResourceResult",
        "variableSetterType" : "TagResourceResult"
      },
      "wrapper" : false
    },
    "TagStatus" : {
      "c2jName" : "TagStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "TAGGED",
        "value" : "TAGGED"
      }, {
        "name" : "UNTAGGED",
        "value" : "UNTAGGED"
      }, {
        "name" : "ANY",
        "value" : "ANY"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TagStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TagStatus",
        "variableName" : "tagStatus",
        "variableType" : "TagStatus",
        "documentation" : null,
        "simpleType" : "TagStatus",
        "variableSetterType" : "TagStatus"
      },
      "wrapper" : false
    },
    "TooManyTagsException" : {
      "c2jName" : "TooManyTagsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The list of tags on the repository is over the limit. The maximum number of tags that can be applied to a repository is 50.</p>",
      "enums" : null,
      "errorCode" : "TooManyTagsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TooManyTagsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TooManyTagsException",
        "variableName" : "tooManyTagsException",
        "variableType" : "TooManyTagsException",
        "documentation" : null,
        "simpleType" : "TooManyTagsException",
        "variableSetterType" : "TooManyTagsException"
      },
      "wrapper" : false
    },
    "UntagResourceRequest" : {
      "c2jName" : "UntagResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UntagResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.UntagResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "resourceArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@return The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "resourceArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "resourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "tagKeys",
        "c2jShape" : "TagKeyList",
        "deprecated" : false,
        "documentation" : "<p>The keys of the tags to be removed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The keys of the tags to be removed.</p>\n@param tagKeys The keys of the tags to be removed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTagKeys",
        "getterDocumentation" : "/**<p>The keys of the tags to be removed.</p>\n@return The keys of the tags to be removed.*/",
        "getterMethodName" : "getTagKeys",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "tagKeys",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tagKeys",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "TagKey",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "TagKeys",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The keys of the tags to be removed.</p>\n@param tagKeys The keys of the tags to be removed.*/",
        "setterMethodName" : "setTagKeys",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "tagKeys",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The keys of the tags to be removed.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTagKeys(java.util.Collection)} or {@link #withTagKeys(java.util.Collection)} if you want to override the existing values.</p>\n@param tagKeys The keys of the tags to be removed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "tagKeys",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The keys of the tags to be removed.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceArn" : {
          "c2jName" : "resourceArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@return The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "resourceArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "resourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.</p>\n@param resourceArn The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TagKeys" : {
          "c2jName" : "tagKeys",
          "c2jShape" : "TagKeyList",
          "deprecated" : false,
          "documentation" : "<p>The keys of the tags to be removed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The keys of the tags to be removed.</p>\n@param tagKeys The keys of the tags to be removed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTagKeys",
          "getterDocumentation" : "/**<p>The keys of the tags to be removed.</p>\n@return The keys of the tags to be removed.*/",
          "getterMethodName" : "getTagKeys",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "tagKeys",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tagKeys",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "TagKey",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "TagKeys",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The keys of the tags to be removed.</p>\n@param tagKeys The keys of the tags to be removed.*/",
          "setterMethodName" : "setTagKeys",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "tagKeys",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The keys of the tags to be removed.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTagKeys(java.util.Collection)} or {@link #withTagKeys(java.util.Collection)} if you want to override the existing values.</p>\n@param tagKeys The keys of the tags to be removed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "tagKeys",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The keys of the tags to be removed.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "resourceArn", "tagKeys" ],
      "shapeName" : "UntagResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UntagResourceRequest",
        "variableName" : "untagResourceRequest",
        "variableType" : "UntagResourceRequest",
        "documentation" : null,
        "simpleType" : "UntagResourceRequest",
        "variableSetterType" : "UntagResourceRequest"
      },
      "wrapper" : false
    },
    "UntagResourceResult" : {
      "c2jName" : "UntagResourceResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UntagResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UntagResourceResult",
        "variableName" : "untagResourceResult",
        "variableType" : "UntagResourceResult",
        "documentation" : null,
        "simpleType" : "UntagResourceResult",
        "variableSetterType" : "UntagResourceResult"
      },
      "wrapper" : false
    },
    "UploadLayerPartRequest" : {
      "c2jName" : "UploadLayerPartRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UploadLayerPart",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AmazonEC2ContainerRegistry_V20150921.UploadLayerPart",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to which you are uploading layer parts.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to which you are uploading layer parts.</p>\n@param repositoryName The name of the repository to which you are uploading layer parts.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to which you are uploading layer parts.</p>\n@return The name of the repository to which you are uploading layer parts.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the repository to which you are uploading layer parts.</p>\n@param repositoryName The name of the repository to which you are uploading layer parts.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to which you are uploading layer parts.</p>\n@param repositoryName The name of the repository to which you are uploading layer parts.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to which you are uploading layer parts.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "uploadId",
        "c2jShape" : "UploadId",
        "deprecated" : false,
        "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUploadId",
        "getterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>\n@return The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.*/",
        "getterMethodName" : "getUploadId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "uploadId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "uploadId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UploadId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.*/",
        "setterMethodName" : "setUploadId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "uploadId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "uploadId",
          "variableType" : "String",
          "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "partFirstByte",
        "c2jShape" : "PartSize",
        "deprecated" : false,
        "documentation" : "<p>The integer value of the first byte of the layer part.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The integer value of the first byte of the layer part.</p>\n@param partFirstByte The integer value of the first byte of the layer part.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPartFirstByte",
        "getterDocumentation" : "/**<p>The integer value of the first byte of the layer part.</p>\n@return The integer value of the first byte of the layer part.*/",
        "getterMethodName" : "getPartFirstByte",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "partFirstByte",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "partFirstByte",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "PartFirstByte",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The integer value of the first byte of the layer part.</p>\n@param partFirstByte The integer value of the first byte of the layer part.*/",
        "setterMethodName" : "setPartFirstByte",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "partFirstByte",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The integer value of the first byte of the layer part.</p>\n@param partFirstByte The integer value of the first byte of the layer part.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "partFirstByte",
          "variableType" : "Long",
          "documentation" : "<p>The integer value of the first byte of the layer part.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "partLastByte",
        "c2jShape" : "PartSize",
        "deprecated" : false,
        "documentation" : "<p>The integer value of the last byte of the layer part.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The integer value of the last byte of the layer part.</p>\n@param partLastByte The integer value of the last byte of the layer part.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPartLastByte",
        "getterDocumentation" : "/**<p>The integer value of the last byte of the layer part.</p>\n@return The integer value of the last byte of the layer part.*/",
        "getterMethodName" : "getPartLastByte",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "partLastByte",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "partLastByte",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "PartLastByte",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The integer value of the last byte of the layer part.</p>\n@param partLastByte The integer value of the last byte of the layer part.*/",
        "setterMethodName" : "setPartLastByte",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "partLastByte",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The integer value of the last byte of the layer part.</p>\n@param partLastByte The integer value of the last byte of the layer part.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "partLastByte",
          "variableType" : "Long",
          "documentation" : "<p>The integer value of the last byte of the layer part.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "layerPartBlob",
        "c2jShape" : "LayerPartBlob",
        "deprecated" : false,
        "documentation" : "<p>The base64-encoded layer part payload.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The base64-encoded layer part payload.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param layerPartBlob The base64-encoded layer part payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLayerPartBlob",
        "getterDocumentation" : "/**<p>The base64-encoded layer part payload.</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The base64-encoded layer part payload.*/",
        "getterMethodName" : "getLayerPartBlob",
        "getterModel" : {
          "returnType" : "java.nio.ByteBuffer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "layerPartBlob",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "layerPartBlob",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.nio.ByteBuffer",
        "marshallingType" : "BYTE_BUFFER",
        "name" : "LayerPartBlob",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The base64-encoded layer part payload.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param layerPartBlob The base64-encoded layer part payload.*/",
        "setterMethodName" : "setLayerPartBlob",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "variableName" : "layerPartBlob",
          "variableType" : "java.nio.ByteBuffer",
          "documentation" : "",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The base64-encoded layer part payload.</p>\n@param layerPartBlob The base64-encoded layer part payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "variableName" : "layerPartBlob",
          "variableType" : "java.nio.ByteBuffer",
          "documentation" : "<p>The base64-encoded layer part payload.</p>",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LayerPartBlob" : {
          "c2jName" : "layerPartBlob",
          "c2jShape" : "LayerPartBlob",
          "deprecated" : false,
          "documentation" : "<p>The base64-encoded layer part payload.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The base64-encoded layer part payload.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param layerPartBlob The base64-encoded layer part payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLayerPartBlob",
          "getterDocumentation" : "/**<p>The base64-encoded layer part payload.</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The base64-encoded layer part payload.*/",
          "getterMethodName" : "getLayerPartBlob",
          "getterModel" : {
            "returnType" : "java.nio.ByteBuffer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "layerPartBlob",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "layerPartBlob",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.nio.ByteBuffer",
          "marshallingType" : "BYTE_BUFFER",
          "name" : "LayerPartBlob",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The base64-encoded layer part payload.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param layerPartBlob The base64-encoded layer part payload.*/",
          "setterMethodName" : "setLayerPartBlob",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "variableName" : "layerPartBlob",
            "variableType" : "java.nio.ByteBuffer",
            "documentation" : "",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The base64-encoded layer part payload.</p>\n@param layerPartBlob The base64-encoded layer part payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "variableName" : "layerPartBlob",
            "variableType" : "java.nio.ByteBuffer",
            "documentation" : "<p>The base64-encoded layer part payload.</p>",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "xmlNameSpaceUri" : null
        },
        "PartFirstByte" : {
          "c2jName" : "partFirstByte",
          "c2jShape" : "PartSize",
          "deprecated" : false,
          "documentation" : "<p>The integer value of the first byte of the layer part.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The integer value of the first byte of the layer part.</p>\n@param partFirstByte The integer value of the first byte of the layer part.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPartFirstByte",
          "getterDocumentation" : "/**<p>The integer value of the first byte of the layer part.</p>\n@return The integer value of the first byte of the layer part.*/",
          "getterMethodName" : "getPartFirstByte",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "partFirstByte",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "partFirstByte",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "PartFirstByte",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The integer value of the first byte of the layer part.</p>\n@param partFirstByte The integer value of the first byte of the layer part.*/",
          "setterMethodName" : "setPartFirstByte",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "partFirstByte",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The integer value of the first byte of the layer part.</p>\n@param partFirstByte The integer value of the first byte of the layer part.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "partFirstByte",
            "variableType" : "Long",
            "documentation" : "<p>The integer value of the first byte of the layer part.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "PartLastByte" : {
          "c2jName" : "partLastByte",
          "c2jShape" : "PartSize",
          "deprecated" : false,
          "documentation" : "<p>The integer value of the last byte of the layer part.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The integer value of the last byte of the layer part.</p>\n@param partLastByte The integer value of the last byte of the layer part.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPartLastByte",
          "getterDocumentation" : "/**<p>The integer value of the last byte of the layer part.</p>\n@return The integer value of the last byte of the layer part.*/",
          "getterMethodName" : "getPartLastByte",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "partLastByte",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "partLastByte",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "PartLastByte",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The integer value of the last byte of the layer part.</p>\n@param partLastByte The integer value of the last byte of the layer part.*/",
          "setterMethodName" : "setPartLastByte",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "partLastByte",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The integer value of the last byte of the layer part.</p>\n@param partLastByte The integer value of the last byte of the layer part.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "partLastByte",
            "variableType" : "Long",
            "documentation" : "<p>The integer value of the last byte of the layer part.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to which you are uploading layer parts.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to which you are uploading layer parts.</p>\n@param repositoryName The name of the repository to which you are uploading layer parts.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to which you are uploading layer parts.</p>\n@return The name of the repository to which you are uploading layer parts.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the repository to which you are uploading layer parts.</p>\n@param repositoryName The name of the repository to which you are uploading layer parts.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to which you are uploading layer parts.</p>\n@param repositoryName The name of the repository to which you are uploading layer parts.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to which you are uploading layer parts.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UploadId" : {
          "c2jName" : "uploadId",
          "c2jShape" : "UploadId",
          "deprecated" : false,
          "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUploadId",
          "getterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>\n@return The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.*/",
          "getterMethodName" : "getUploadId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "uploadId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "uploadId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UploadId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.*/",
          "setterMethodName" : "setUploadId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "uploadId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "uploadId",
            "variableType" : "String",
            "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "uploadId", "partFirstByte", "partLastByte", "layerPartBlob" ],
      "shapeName" : "UploadLayerPartRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UploadLayerPartRequest",
        "variableName" : "uploadLayerPartRequest",
        "variableType" : "UploadLayerPartRequest",
        "documentation" : null,
        "simpleType" : "UploadLayerPartRequest",
        "variableSetterType" : "UploadLayerPartRequest"
      },
      "wrapper" : false
    },
    "UploadLayerPartResult" : {
      "c2jName" : "UploadLayerPartResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "deprecated" : false,
        "documentation" : "<p>The registry ID associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistryId",
        "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
        "getterMethodName" : "getRegistryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistryId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
        "setterMethodName" : "setRegistryId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "registryId",
          "variableType" : "String",
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The repository name associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The repository name associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "uploadId",
        "c2jShape" : "UploadId",
        "deprecated" : false,
        "documentation" : "<p>The upload ID associated with the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The upload ID associated with the request.</p>\n@param uploadId The upload ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUploadId",
        "getterDocumentation" : "/**<p>The upload ID associated with the request.</p>\n@return The upload ID associated with the request.*/",
        "getterMethodName" : "getUploadId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "uploadId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "uploadId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UploadId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The upload ID associated with the request.</p>\n@param uploadId The upload ID associated with the request.*/",
        "setterMethodName" : "setUploadId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "uploadId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The upload ID associated with the request.</p>\n@param uploadId The upload ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "uploadId",
          "variableType" : "String",
          "documentation" : "<p>The upload ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lastByteReceived",
        "c2jShape" : "PartSize",
        "deprecated" : false,
        "documentation" : "<p>The integer value of the last byte received in the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The integer value of the last byte received in the request.</p>\n@param lastByteReceived The integer value of the last byte received in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastByteReceived",
        "getterDocumentation" : "/**<p>The integer value of the last byte received in the request.</p>\n@return The integer value of the last byte received in the request.*/",
        "getterMethodName" : "getLastByteReceived",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lastByteReceived",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lastByteReceived",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "LastByteReceived",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The integer value of the last byte received in the request.</p>\n@param lastByteReceived The integer value of the last byte received in the request.*/",
        "setterMethodName" : "setLastByteReceived",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "lastByteReceived",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The integer value of the last byte received in the request.</p>\n@param lastByteReceived The integer value of the last byte received in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "lastByteReceived",
          "variableType" : "Long",
          "documentation" : "<p>The integer value of the last byte received in the request.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LastByteReceived" : {
          "c2jName" : "lastByteReceived",
          "c2jShape" : "PartSize",
          "deprecated" : false,
          "documentation" : "<p>The integer value of the last byte received in the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The integer value of the last byte received in the request.</p>\n@param lastByteReceived The integer value of the last byte received in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastByteReceived",
          "getterDocumentation" : "/**<p>The integer value of the last byte received in the request.</p>\n@return The integer value of the last byte received in the request.*/",
          "getterMethodName" : "getLastByteReceived",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lastByteReceived",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lastByteReceived",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "LastByteReceived",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The integer value of the last byte received in the request.</p>\n@param lastByteReceived The integer value of the last byte received in the request.*/",
          "setterMethodName" : "setLastByteReceived",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "lastByteReceived",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The integer value of the last byte received in the request.</p>\n@param lastByteReceived The integer value of the last byte received in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "lastByteReceived",
            "variableType" : "Long",
            "documentation" : "<p>The integer value of the last byte received in the request.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "RegistryId" : {
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistryId",
          "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
          "getterMethodName" : "getRegistryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistryId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
          "setterMethodName" : "setRegistryId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "registryId",
            "variableType" : "String",
            "documentation" : "<p>The registry ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The repository name associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UploadId" : {
          "c2jName" : "uploadId",
          "c2jShape" : "UploadId",
          "deprecated" : false,
          "documentation" : "<p>The upload ID associated with the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The upload ID associated with the request.</p>\n@param uploadId The upload ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUploadId",
          "getterDocumentation" : "/**<p>The upload ID associated with the request.</p>\n@return The upload ID associated with the request.*/",
          "getterMethodName" : "getUploadId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "uploadId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "uploadId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UploadId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The upload ID associated with the request.</p>\n@param uploadId The upload ID associated with the request.*/",
          "setterMethodName" : "setUploadId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "uploadId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The upload ID associated with the request.</p>\n@param uploadId The upload ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "uploadId",
            "variableType" : "String",
            "documentation" : "<p>The upload ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UploadLayerPartResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UploadLayerPartResult",
        "variableName" : "uploadLayerPartResult",
        "variableType" : "UploadLayerPartResult",
        "documentation" : null,
        "simpleType" : "UploadLayerPartResult",
        "variableSetterType" : "UploadLayerPartResult"
      },
      "wrapper" : false
    },
    "UploadNotFoundException" : {
      "c2jName" : "UploadNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The upload could not be found, or the specified upload id is not valid for this repository.</p>",
      "enums" : null,
      "errorCode" : "UploadNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UploadNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UploadNotFoundException",
        "variableName" : "uploadNotFoundException",
        "variableType" : "UploadNotFoundException",
        "documentation" : null,
        "simpleType" : "UploadNotFoundException",
        "variableSetterType" : "UploadNotFoundException"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "examples" : {
    "examples" : {
      "BatchDeleteImage" : [ {
        "comments" : {
          "input" : null,
          "output" : null
        },
        "description" : "This example deletes images with the tags precise and trusty in a repository called ubuntu in the default registry for an account.",
        "id" : "batchdeleteimages-example-1470860541707",
        "input" : {
          "repositoryName" : "ubuntu",
          "imageIds" : [ {
            "imageTag" : "precise"
          } ]
        },
        "output" : {
          "imageIds" : [ {
            "imageDigest" : "sha256:examplee6d1e504117a17000003d3753086354a38375961f2e665416ef4b1b2f",
            "imageTag" : "precise"
          } ],
          "failures" : [ ]
        },
        "title" : "To delete multiple images"
      } ],
      "BatchGetImage" : [ {
        "comments" : {
          "input" : null,
          "output" : {
            "imageManifest" : "In this example, the imageManifest in the output JSON has been truncated."
          }
        },
        "description" : "This example obtains information for an image with a specified image digest ID from the repository named ubuntu in the current account.",
        "id" : "batchgetimage-example-1470862771437",
        "input" : {
          "repositoryName" : "ubuntu",
          "imageIds" : [ {
            "imageTag" : "precise"
          } ]
        },
        "output" : {
          "images" : [ {
            "registryId" : "244698725403",
            "repositoryName" : "ubuntu",
            "imageId" : {
              "imageDigest" : "sha256:example76bdff6d83a09ba2a818f0d00000063724a9ac3ba5019c56f74ebf42a",
              "imageTag" : "precise"
            },
            "imageManifest" : "{\n \"schemaVersion\": 1,\n \"name\": \"ubuntu\",\n \"tag\": \"precise\",\n..."
          } ],
          "failures" : [ ]
        },
        "title" : "To obtain multiple images in a single request"
      } ],
      "CreateRepository" : [ {
        "comments" : {
          "input" : null,
          "output" : {
            "imageManifest" : "In this example, the imageManifest in the output JSON has been truncated."
          }
        },
        "description" : "This example creates a repository called nginx-web-app inside the project-a namespace in the default registry for an account.",
        "id" : "createrepository-example-1470863688724",
        "input" : {
          "repositoryName" : "project-a/nginx-web-app"
        },
        "output" : {
          "repository" : {
            "repositoryArn" : "arn:aws:ecr:us-west-2:012345678901:repository/project-a/nginx-web-app",
            "registryId" : "012345678901",
            "repositoryName" : "project-a/nginx-web-app"
          }
        },
        "title" : "To create a new repository"
      } ],
      "DeleteRepository" : [ {
        "comments" : {
          "input" : null,
          "output" : {
            "imageManifest" : "In this example, the imageManifest in the output JSON has been truncated."
          }
        },
        "description" : "This example force deletes a repository named ubuntu in the default registry for an account. The force parameter is required if the repository contains images.",
        "id" : "deleterepository-example-1470863805703",
        "input" : {
          "repositoryName" : "ubuntu",
          "force" : true
        },
        "output" : {
          "repository" : {
            "repositoryArn" : "arn:aws:ecr:us-west-2:012345678901:repository/ubuntu",
            "registryId" : "012345678901",
            "repositoryName" : "ubuntu"
          }
        },
        "title" : "To force delete a repository"
      } ],
      "DeleteRepositoryPolicy" : [ {
        "comments" : {
          "input" : null,
          "output" : null
        },
        "description" : "This example deletes the policy associated with the repository named ubuntu in the current account.",
        "id" : "deleterepositorypolicy-example-1470866943748",
        "input" : {
          "repositoryName" : "ubuntu"
        },
        "output" : {
          "registryId" : "012345678901",
          "repositoryName" : "ubuntu",
          "policyText" : "{ ... }"
        },
        "title" : "To delete the policy associated with a repository"
      } ],
      "DescribeRepositories" : [ {
        "comments" : {
          "input" : null,
          "output" : { }
        },
        "description" : "The following example obtains a list and description of all repositories in the default registry to which the current user has access.",
        "id" : "describe-repositories-1470856017467",
        "input" : { },
        "output" : {
          "repositories" : [ {
            "repositoryArn" : "arn:aws:ecr:us-west-2:012345678910:repository/ubuntu",
            "registryId" : "012345678910",
            "repositoryName" : "ubuntu"
          }, {
            "repositoryArn" : "arn:aws:ecr:us-west-2:012345678910:repository/test",
            "registryId" : "012345678910",
            "repositoryName" : "test"
          } ]
        },
        "title" : "To describe all repositories in the current account"
      } ],
      "GetAuthorizationToken" : [ {
        "comments" : {
          "input" : null,
          "output" : null
        },
        "description" : "This example gets an authorization token for your default registry.",
        "id" : "getauthorizationtoken-example-1470867047084",
        "input" : { },
        "output" : {
          "authorizationData" : [ {
            "authorizationToken" : "QVdTOkN...",
            "expiresAt" : "1470951892432",
            "proxyEndpoint" : "https://012345678901.dkr.ecr.us-west-2.amazonaws.com"
          } ]
        },
        "title" : "To obtain an authorization token"
      } ],
      "GetRepositoryPolicy" : [ {
        "comments" : {
          "input" : null,
          "output" : null
        },
        "description" : "This example obtains the repository policy for the repository named ubuntu.",
        "id" : "getrepositorypolicy-example-1470867669211",
        "input" : {
          "repositoryName" : "ubuntu"
        },
        "output" : {
          "registryId" : "012345678901",
          "repositoryName" : "ubuntu",
          "policyText" : "{\n  \"Version\" : \"2008-10-17\",\n  \"Statement\" : [ {\n    \"Sid\" : \"new statement\",\n    \"Effect\" : \"Allow\",\n    \"Principal\" : {\n     \"AWS\" : \"arn:aws:iam::012345678901:role/CodeDeployDemo\"\n    },\n\"Action\" : [ \"ecr:GetDownloadUrlForLayer\", \"ecr:BatchGetImage\", \"ecr:BatchCheckLayerAvailability\" ]\n } ]\n}"
        },
        "title" : "To get the current policy for a repository"
      } ],
      "ListImages" : [ {
        "comments" : {
          "input" : null,
          "output" : null
        },
        "description" : "This example lists all of the images in the repository named ubuntu in the default registry in the current account. ",
        "id" : "listimages-example-1470868161594",
        "input" : {
          "repositoryName" : "ubuntu"
        },
        "output" : {
          "imageIds" : [ {
            "imageDigest" : "sha256:764f63476bdff6d83a09ba2a818f0d35757063724a9ac3ba5019c56f74ebf42a",
            "imageTag" : "precise"
          } ]
        },
        "title" : "To list all images in a repository"
      } ]
    },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2014-2019 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AmazonECRException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.ecr.model.AmazonECRException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.ecr.model.transform"
}