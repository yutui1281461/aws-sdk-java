{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "contentTypeOverride" : null,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseHandlerFqcn" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "ClientConstructors", "EnumSetterOverload", "ClientMutationMethods" ],
    "emitLegacyEnumSetterFor" : null,
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipClientMethodForOperations" : [ ],
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : true,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false,
    "useUidAsFilePrefix" : true
  },
  "metadata" : {
    "apiVersion" : "2018-11-05",
    "asyncClient" : "AWSTransferAsyncClient",
    "asyncClientBuilderClassName" : "AWSTransferAsyncClientBuilder",
    "asyncInterface" : "AWSTransferAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : null,
    "cucumberModuleInjectorClassName" : "AWSTransferModuleInjector",
    "defaultEndpoint" : "transfer.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "transfer.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : null,
    "endpointPrefix" : "transfer",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.transfer",
    "packagePath" : "com/amazonaws/services/transfer",
    "protocol" : "json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : "AWS Transfer",
    "serviceFullName" : "AWS Transfer for SFTP",
    "serviceId" : "Transfer",
    "serviceName" : "AWS Transfer",
    "signingName" : "transfer",
    "smokeTestsPackageName" : "com.amazonaws.services.transfer.smoketests",
    "syncClient" : "AWSTransferClient",
    "syncClientBuilderClassName" : "AWSTransferClientBuilder",
    "syncInterface" : "AWSTransfer",
    "uid" : "transfer-2018-11-05",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "CreateServer" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateServerResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateServerResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateServerRequest, CreateServerResult>",
      "asyncReturnType" : "CreateServerResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Instantiates an autoscaling virtual server based on Secure File Transfer Protocol (SFTP) in AWS. The call returns the <code>ServerId</code> property assigned by the service to the newly created server. Reference this <code>ServerId</code> property when you make updates to your server, or work with users.</p> <p>The response returns the <code>ServerId</code> value for the newly created server.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateServerRequest",
        "variableName" : "createServerRequest",
        "variableType" : "CreateServerRequest",
        "documentation" : "",
        "simpleType" : "CreateServerRequest",
        "variableSetterType" : "CreateServerRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createServer",
      "operationName" : "CreateServer",
      "returnType" : {
        "returnType" : "CreateServerResult",
        "documentation" : null
      },
      "syncReturnType" : "CreateServerResult"
    },
    "CreateUser" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateUserResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateUserResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateUserRequest, CreateUserResult>",
      "asyncReturnType" : "CreateUserResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Adds a user and associate them with an existing Secure File Transfer Protocol (SFTP) server. Using parameters for <code>CreateUser</code>, you can specify the user name, set the home directory, store the user's public key, and assign the user's AWS Identity and Access Management (IAM) role. You can also optionally add a scope-down policy, and assign metadata with tags that can be used to group and search for users.</p> <p>The response returns the <code>UserName</code> and <code>ServerId</code> values of the new user for that server.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceExistsException",
        "documentation" : "<p>The requested resource does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>This exception is thrown when a resource is not found by the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateUserRequest",
        "variableName" : "createUserRequest",
        "variableType" : "CreateUserRequest",
        "documentation" : "",
        "simpleType" : "CreateUserRequest",
        "variableSetterType" : "CreateUserRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createUser",
      "operationName" : "CreateUser",
      "returnType" : {
        "returnType" : "CreateUserResult",
        "documentation" : null
      },
      "syncReturnType" : "CreateUserResult"
    },
    "DeleteServer" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteServerResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteServerResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteServerRequest, DeleteServerResult>",
      "asyncReturnType" : "DeleteServerResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes the Secure File Transfer Protocol (SFTP) server that you specify. If you used <code>SERVICE_MANAGED</code> as your <code>IdentityProviderType</code>, you need to delete all users associated with this server before deleting the server itself</p> <p>No response returns from this call.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>This exception is thrown when a resource is not found by the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteServerRequest",
        "variableName" : "deleteServerRequest",
        "variableType" : "DeleteServerRequest",
        "documentation" : "",
        "simpleType" : "DeleteServerRequest",
        "variableSetterType" : "DeleteServerRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteServer",
      "operationName" : "DeleteServer",
      "returnType" : {
        "returnType" : "DeleteServerResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteServerResult"
    },
    "DeleteSshPublicKey" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteSshPublicKeyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteSshPublicKeyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteSshPublicKeyRequest, DeleteSshPublicKeyResult>",
      "asyncReturnType" : "DeleteSshPublicKeyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes a user's Secure Shell (SSH) public key.</p> <p>No response is returned from this call.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>This exception is thrown when a resource is not found by the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteSshPublicKeyRequest",
        "variableName" : "deleteSshPublicKeyRequest",
        "variableType" : "DeleteSshPublicKeyRequest",
        "documentation" : "",
        "simpleType" : "DeleteSshPublicKeyRequest",
        "variableSetterType" : "DeleteSshPublicKeyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteSshPublicKey",
      "operationName" : "DeleteSshPublicKey",
      "returnType" : {
        "returnType" : "DeleteSshPublicKeyResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteSshPublicKeyResult"
    },
    "DeleteUser" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteUserResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteUserResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteUserRequest, DeleteUserResult>",
      "asyncReturnType" : "DeleteUserResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes the user belonging to the server you specify.</p> <p>No response returns from this call.</p> <note> <p>When you delete a user from a server, the user's information is lost.</p> </note>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>This exception is thrown when a resource is not found by the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteUserRequest",
        "variableName" : "deleteUserRequest",
        "variableType" : "DeleteUserRequest",
        "documentation" : "",
        "simpleType" : "DeleteUserRequest",
        "variableSetterType" : "DeleteUserRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteUser",
      "operationName" : "DeleteUser",
      "returnType" : {
        "returnType" : "DeleteUserResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteUserResult"
    },
    "DescribeServer" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeServerResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeServerResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeServerRequest, DescribeServerResult>",
      "asyncReturnType" : "DescribeServerResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Describes the server that you specify by passing the <code>ServerId</code> parameter.</p> <p>The response contains a description of the server's properties.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>This exception is thrown when a resource is not found by the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribeServerRequest",
        "variableName" : "describeServerRequest",
        "variableType" : "DescribeServerRequest",
        "documentation" : "",
        "simpleType" : "DescribeServerRequest",
        "variableSetterType" : "DescribeServerRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "describeServer",
      "operationName" : "DescribeServer",
      "returnType" : {
        "returnType" : "DescribeServerResult",
        "documentation" : null
      },
      "syncReturnType" : "DescribeServerResult"
    },
    "DescribeUser" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeUserResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeUserResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeUserRequest, DescribeUserResult>",
      "asyncReturnType" : "DescribeUserResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Describes the user assigned to a specific server, as identified by its <code>ServerId</code> property.</p> <p>The response from this call returns the properties of the user associated with the <code>ServerId</code> value that was specified.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>This exception is thrown when a resource is not found by the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribeUserRequest",
        "variableName" : "describeUserRequest",
        "variableType" : "DescribeUserRequest",
        "documentation" : "",
        "simpleType" : "DescribeUserRequest",
        "variableSetterType" : "DescribeUserRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "describeUser",
      "operationName" : "DescribeUser",
      "returnType" : {
        "returnType" : "DescribeUserResult",
        "documentation" : null
      },
      "syncReturnType" : "DescribeUserResult"
    },
    "ImportSshPublicKey" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ImportSshPublicKeyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ImportSshPublicKeyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ImportSshPublicKeyRequest, ImportSshPublicKeyResult>",
      "asyncReturnType" : "ImportSshPublicKeyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Adds a Secure Shell (SSH) public key to a user account identified by a <code>UserName</code> value assigned to a specific server, identified by <code>ServerId</code>.</p> <p>The response returns the <code>UserName</code> value, the <code>ServerId</code> value, and the name of the <code>SshPublicKeyId</code>.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceExistsException",
        "documentation" : "<p>The requested resource does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>This exception is thrown when a resource is not found by the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImportSshPublicKeyRequest",
        "variableName" : "importSshPublicKeyRequest",
        "variableType" : "ImportSshPublicKeyRequest",
        "documentation" : "",
        "simpleType" : "ImportSshPublicKeyRequest",
        "variableSetterType" : "ImportSshPublicKeyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "importSshPublicKey",
      "operationName" : "ImportSshPublicKey",
      "returnType" : {
        "returnType" : "ImportSshPublicKeyResult",
        "documentation" : "<p>This response identifies the user, server they belong to, and the identifier of the SSH public key associated with that user. A user can have more than one key on each server that they are associate with.</p>"
      },
      "syncReturnType" : "ImportSshPublicKeyResult"
    },
    "ListServers" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListServersResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListServersResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListServersRequest, ListServersResult>",
      "asyncReturnType" : "ListServersResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the Secure File Transfer Protocol (SFTP) servers that are associated with your AWS account.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The <code>NextToken</code> parameter that was passed is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListServersRequest",
        "variableName" : "listServersRequest",
        "variableType" : "ListServersRequest",
        "documentation" : "",
        "simpleType" : "ListServersRequest",
        "variableSetterType" : "ListServersRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listServers",
      "operationName" : "ListServers",
      "returnType" : {
        "returnType" : "ListServersResult",
        "documentation" : null
      },
      "syncReturnType" : "ListServersResult"
    },
    "ListTagsForResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListTagsForResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListTagsForResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListTagsForResourceRequest, ListTagsForResourceResult>",
      "asyncReturnType" : "ListTagsForResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists all of the tags associated with the Amazon Resource Number (ARN) you specify. The resource can be a user, server, or role.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The <code>NextToken</code> parameter that was passed is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTagsForResourceRequest",
        "variableName" : "listTagsForResourceRequest",
        "variableType" : "ListTagsForResourceRequest",
        "documentation" : "",
        "simpleType" : "ListTagsForResourceRequest",
        "variableSetterType" : "ListTagsForResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listTagsForResource",
      "operationName" : "ListTagsForResource",
      "returnType" : {
        "returnType" : "ListTagsForResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "ListTagsForResourceResult"
    },
    "ListUsers" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListUsersResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListUsersResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListUsersRequest, ListUsersResult>",
      "asyncReturnType" : "ListUsersResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the users for the server that you specify by passing the <code>ServerId</code> parameter.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The <code>NextToken</code> parameter that was passed is invalid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>This exception is thrown when a resource is not found by the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListUsersRequest",
        "variableName" : "listUsersRequest",
        "variableType" : "ListUsersRequest",
        "documentation" : "",
        "simpleType" : "ListUsersRequest",
        "variableSetterType" : "ListUsersRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listUsers",
      "operationName" : "ListUsers",
      "returnType" : {
        "returnType" : "ListUsersResult",
        "documentation" : null
      },
      "syncReturnType" : "ListUsersResult"
    },
    "StartServer" : {
      "asyncCallableType" : "java.util.concurrent.Callable<StartServerResult>",
      "asyncFutureType" : "java.util.concurrent.Future<StartServerResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<StartServerRequest, StartServerResult>",
      "asyncReturnType" : "StartServerResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Changes the state of a Secure File Transfer Protocol (SFTP) server from <code>OFFLINE</code> to <code>ONLINE</code>. It has no impact on an SFTP server that is already <code>ONLINE</code>. An <code>ONLINE</code> server can accept and process file transfer jobs.</p> <p>The state of <code>STARTING</code> indicates that the server is in an intermediate state, either not fully able to respond, or not fully online. The values of <code>START_FAILED</code> can indicate an error condition. </p> <p>No response is returned from this call.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>This exception is thrown when a resource is not found by the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "StartServerRequest",
        "variableName" : "startServerRequest",
        "variableType" : "StartServerRequest",
        "documentation" : "",
        "simpleType" : "StartServerRequest",
        "variableSetterType" : "StartServerRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "startServer",
      "operationName" : "StartServer",
      "returnType" : {
        "returnType" : "StartServerResult",
        "documentation" : null
      },
      "syncReturnType" : "StartServerResult"
    },
    "StopServer" : {
      "asyncCallableType" : "java.util.concurrent.Callable<StopServerResult>",
      "asyncFutureType" : "java.util.concurrent.Future<StopServerResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<StopServerRequest, StopServerResult>",
      "asyncReturnType" : "StopServerResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Changes the state of an SFTP server from <code>ONLINE</code> to <code>OFFLINE</code>. An <code>OFFLINE</code> server cannot accept and process file transfer jobs. Information tied to your server such as server and user properties are not affected by stopping your server. Stopping a server will not reduce or impact your Secure File Transfer Protocol (SFTP) endpoint billing.</p> <p>The states of <code>STOPPING</code> indicates that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>STOP_FAILED</code> can indicate an error condition.</p> <p>No response is returned from this call.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>This exception is thrown when a resource is not found by the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "StopServerRequest",
        "variableName" : "stopServerRequest",
        "variableType" : "StopServerRequest",
        "documentation" : "",
        "simpleType" : "StopServerRequest",
        "variableSetterType" : "StopServerRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "stopServer",
      "operationName" : "StopServer",
      "returnType" : {
        "returnType" : "StopServerResult",
        "documentation" : null
      },
      "syncReturnType" : "StopServerResult"
    },
    "TagResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<TagResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<TagResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<TagResourceRequest, TagResourceResult>",
      "asyncReturnType" : "TagResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Attaches a key-value pair to a resource, as identified by its Amazon Resource Name (ARN). Resources are users, servers, roles, and other entities.</p> <p>There is no response returned from this call.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TagResourceRequest",
        "variableName" : "tagResourceRequest",
        "variableType" : "TagResourceRequest",
        "documentation" : "",
        "simpleType" : "TagResourceRequest",
        "variableSetterType" : "TagResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "tagResource",
      "operationName" : "TagResource",
      "returnType" : {
        "returnType" : "TagResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "TagResourceResult"
    },
    "TestIdentityProvider" : {
      "asyncCallableType" : "java.util.concurrent.Callable<TestIdentityProviderResult>",
      "asyncFutureType" : "java.util.concurrent.Future<TestIdentityProviderResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<TestIdentityProviderRequest, TestIdentityProviderResult>",
      "asyncReturnType" : "TestIdentityProviderResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>If the <code>IdentityProviderType</code> of the server is <code>API_Gateway</code>, tests whether your API Gateway is set up successfully. We highly recommend that you call this method to test your authentication method as soon as you create your server. By doing so, you can troubleshoot issues with the API Gateway integration to ensure that your users can successfully use the service.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>This exception is thrown when a resource is not found by the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TestIdentityProviderRequest",
        "variableName" : "testIdentityProviderRequest",
        "variableType" : "TestIdentityProviderRequest",
        "documentation" : "",
        "simpleType" : "TestIdentityProviderRequest",
        "variableSetterType" : "TestIdentityProviderRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "testIdentityProvider",
      "operationName" : "TestIdentityProvider",
      "returnType" : {
        "returnType" : "TestIdentityProviderResult",
        "documentation" : null
      },
      "syncReturnType" : "TestIdentityProviderResult"
    },
    "UntagResource" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UntagResourceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UntagResourceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UntagResourceRequest, UntagResourceResult>",
      "asyncReturnType" : "UntagResourceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Detaches a key-value pair from a resource, as identified by its Amazon Resource Name (ARN). Resources are users, servers, roles, and other entities.</p> <p>No response is returned from this call.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UntagResourceRequest",
        "variableName" : "untagResourceRequest",
        "variableType" : "UntagResourceRequest",
        "documentation" : "",
        "simpleType" : "UntagResourceRequest",
        "variableSetterType" : "UntagResourceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "untagResource",
      "operationName" : "UntagResource",
      "returnType" : {
        "returnType" : "UntagResourceResult",
        "documentation" : null
      },
      "syncReturnType" : "UntagResourceResult"
    },
    "UpdateServer" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateServerResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateServerResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateServerRequest, UpdateServerResult>",
      "asyncReturnType" : "UpdateServerResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Updates the server properties after that server has been created.</p> <p>The <code>UpdateServer</code> call returns the <code>ServerId</code> of the Secure File Transfer Protocol (SFTP) server you updated.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>This exception is thrown when a resource is not found by the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateServerRequest",
        "variableName" : "updateServerRequest",
        "variableType" : "UpdateServerRequest",
        "documentation" : "",
        "simpleType" : "UpdateServerRequest",
        "variableSetterType" : "UpdateServerRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateServer",
      "operationName" : "UpdateServer",
      "returnType" : {
        "returnType" : "UpdateServerResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateServerResult"
    },
    "UpdateUser" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateUserResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateUserResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateUserRequest, UpdateUserResult>",
      "asyncReturnType" : "UpdateUserResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Assigns new properties to a user. Parameters you pass modify any or all of the following: the home directory, role, and policy for the <code>UserName</code> and <code>ServerId</code> you specify.</p> <p>The response returns the <code>ServerId</code> and the <code>UserName</code> for the updated user.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>This exception is thrown when a resource is not found by the AWS Transfer for SFTP service.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateUserRequest",
        "variableName" : "updateUserRequest",
        "variableType" : "UpdateUserRequest",
        "documentation" : "",
        "simpleType" : "UpdateUserRequest",
        "variableSetterType" : "UpdateUserRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateUser",
      "operationName" : "UpdateUser",
      "returnType" : {
        "returnType" : "UpdateUserResult",
        "documentation" : "<p> <code>UpdateUserResponse</code> returns the user name and server identifier for the request to update a user's properties.</p>"
      },
      "syncReturnType" : "UpdateUserResult"
    }
  },
  "shapes" : {
    "CreateServerRequest" : {
      "c2jName" : "CreateServerRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateServer",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.CreateServer",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "IdentityProviderDetails",
        "c2jShape" : "IdentityProviderDetails",
        "deprecated" : false,
        "documentation" : "<p> An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.</p>\n@param identityProviderDetails An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIdentityProviderDetails",
        "getterDocumentation" : "/**<p> An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.</p>\n@return An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.*/",
        "getterMethodName" : "getIdentityProviderDetails",
        "getterModel" : {
          "returnType" : "IdentityProviderDetails",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IdentityProviderDetails",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IdentityProviderDetails",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "IdentityProviderDetails",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.</p>\n@param identityProviderDetails An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.*/",
        "setterMethodName" : "setIdentityProviderDetails",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "IdentityProviderDetails",
          "variableName" : "identityProviderDetails",
          "variableType" : "IdentityProviderDetails",
          "documentation" : "",
          "simpleType" : "IdentityProviderDetails",
          "variableSetterType" : "IdentityProviderDetails"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.</p>\n@param identityProviderDetails An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "IdentityProviderDetails",
          "variableName" : "identityProviderDetails",
          "variableType" : "IdentityProviderDetails",
          "documentation" : "<p> An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.</p>",
          "simpleType" : "IdentityProviderDetails",
          "variableSetterType" : "IdentityProviderDetails"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "IdentityProviderType",
        "c2jShape" : "IdentityProviderType",
        "deprecated" : false,
        "documentation" : "<p>The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.</p>",
        "enumType" : "IdentityProviderType",
        "fluentSetterDocumentation" : "/**<p>The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.</p>\n@param identityProviderType The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IdentityProviderType*/",
        "fluentSetterMethodName" : "withIdentityProviderType",
        "getterDocumentation" : "/**<p>The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.</p>\n@return The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.\n@see IdentityProviderType*/",
        "getterMethodName" : "getIdentityProviderType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IdentityProviderType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IdentityProviderType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "IdentityProviderType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.</p>\n@param identityProviderType The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.\n@see IdentityProviderType*/",
        "setterMethodName" : "setIdentityProviderType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "identityProviderType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.</p>\n@param identityProviderType The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IdentityProviderType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "identityProviderType",
          "variableType" : "String",
          "documentation" : "<p>The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LoggingRole",
        "c2jShape" : "Role",
        "deprecated" : false,
        "documentation" : "<p>A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.</p>\n@param loggingRole A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLoggingRole",
        "getterDocumentation" : "/**<p>A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.</p>\n@return A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.*/",
        "getterMethodName" : "getLoggingRole",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LoggingRole",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LoggingRole",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LoggingRole",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.</p>\n@param loggingRole A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.*/",
        "setterMethodName" : "setLoggingRole",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "loggingRole",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.</p>\n@param loggingRole A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "loggingRole",
          "variableType" : "String",
          "documentation" : "<p>A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Tags",
        "c2jShape" : "Tags",
        "deprecated" : false,
        "documentation" : "<p>Key-value pairs that can be used to group and search for servers.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Key-value pairs that can be used to group and search for servers.</p>\n@param tags Key-value pairs that can be used to group and search for servers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>Key-value pairs that can be used to group and search for servers.</p>\n@return Key-value pairs that can be used to group and search for servers.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Key-value pairs that can be used to group and search for servers.</p>\n@param tags Key-value pairs that can be used to group and search for servers.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Key-value pairs that can be used to group and search for servers.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags Key-value pairs that can be used to group and search for servers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>Key-value pairs that can be used to group and search for servers.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "IdentityProviderDetails" : {
          "c2jName" : "IdentityProviderDetails",
          "c2jShape" : "IdentityProviderDetails",
          "deprecated" : false,
          "documentation" : "<p> An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.</p>\n@param identityProviderDetails An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIdentityProviderDetails",
          "getterDocumentation" : "/**<p> An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.</p>\n@return An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.*/",
          "getterMethodName" : "getIdentityProviderDetails",
          "getterModel" : {
            "returnType" : "IdentityProviderDetails",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IdentityProviderDetails",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IdentityProviderDetails",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "IdentityProviderDetails",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.</p>\n@param identityProviderDetails An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.*/",
          "setterMethodName" : "setIdentityProviderDetails",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "IdentityProviderDetails",
            "variableName" : "identityProviderDetails",
            "variableType" : "IdentityProviderDetails",
            "documentation" : "",
            "simpleType" : "IdentityProviderDetails",
            "variableSetterType" : "IdentityProviderDetails"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.</p>\n@param identityProviderDetails An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "IdentityProviderDetails",
            "variableName" : "identityProviderDetails",
            "variableType" : "IdentityProviderDetails",
            "documentation" : "<p> An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.</p>",
            "simpleType" : "IdentityProviderDetails",
            "variableSetterType" : "IdentityProviderDetails"
          },
          "xmlNameSpaceUri" : null
        },
        "IdentityProviderType" : {
          "c2jName" : "IdentityProviderType",
          "c2jShape" : "IdentityProviderType",
          "deprecated" : false,
          "documentation" : "<p>The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.</p>",
          "enumType" : "IdentityProviderType",
          "fluentSetterDocumentation" : "/**<p>The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.</p>\n@param identityProviderType The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IdentityProviderType*/",
          "fluentSetterMethodName" : "withIdentityProviderType",
          "getterDocumentation" : "/**<p>The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.</p>\n@return The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.\n@see IdentityProviderType*/",
          "getterMethodName" : "getIdentityProviderType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IdentityProviderType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IdentityProviderType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "IdentityProviderType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.</p>\n@param identityProviderType The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.\n@see IdentityProviderType*/",
          "setterMethodName" : "setIdentityProviderType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "identityProviderType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.</p>\n@param identityProviderType The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IdentityProviderType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "identityProviderType",
            "variableType" : "String",
            "documentation" : "<p>The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LoggingRole" : {
          "c2jName" : "LoggingRole",
          "c2jShape" : "Role",
          "deprecated" : false,
          "documentation" : "<p>A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.</p>\n@param loggingRole A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLoggingRole",
          "getterDocumentation" : "/**<p>A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.</p>\n@return A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.*/",
          "getterMethodName" : "getLoggingRole",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LoggingRole",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LoggingRole",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LoggingRole",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.</p>\n@param loggingRole A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.*/",
          "setterMethodName" : "setLoggingRole",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "loggingRole",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.</p>\n@param loggingRole A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "loggingRole",
            "variableType" : "String",
            "documentation" : "<p>A value that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "Tags",
          "deprecated" : false,
          "documentation" : "<p>Key-value pairs that can be used to group and search for servers.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Key-value pairs that can be used to group and search for servers.</p>\n@param tags Key-value pairs that can be used to group and search for servers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>Key-value pairs that can be used to group and search for servers.</p>\n@return Key-value pairs that can be used to group and search for servers.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Key-value pairs that can be used to group and search for servers.</p>\n@param tags Key-value pairs that can be used to group and search for servers.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Key-value pairs that can be used to group and search for servers.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags Key-value pairs that can be used to group and search for servers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>Key-value pairs that can be used to group and search for servers.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateServerRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateServerRequest",
        "variableName" : "createServerRequest",
        "variableType" : "CreateServerRequest",
        "documentation" : null,
        "simpleType" : "CreateServerRequest",
        "variableSetterType" : "CreateServerRequest"
      },
      "wrapper" : false
    },
    "CreateServerResult" : {
      "c2jName" : "CreateServerResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>The service-assigned ID of the SFTP server that is created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The service-assigned ID of the SFTP server that is created.</p>\n@param serverId The service-assigned ID of the SFTP server that is created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>The service-assigned ID of the SFTP server that is created.</p>\n@return The service-assigned ID of the SFTP server that is created.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The service-assigned ID of the SFTP server that is created.</p>\n@param serverId The service-assigned ID of the SFTP server that is created.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The service-assigned ID of the SFTP server that is created.</p>\n@param serverId The service-assigned ID of the SFTP server that is created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>The service-assigned ID of the SFTP server that is created.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>The service-assigned ID of the SFTP server that is created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The service-assigned ID of the SFTP server that is created.</p>\n@param serverId The service-assigned ID of the SFTP server that is created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>The service-assigned ID of the SFTP server that is created.</p>\n@return The service-assigned ID of the SFTP server that is created.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The service-assigned ID of the SFTP server that is created.</p>\n@param serverId The service-assigned ID of the SFTP server that is created.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The service-assigned ID of the SFTP server that is created.</p>\n@param serverId The service-assigned ID of the SFTP server that is created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>The service-assigned ID of the SFTP server that is created.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId" ],
      "shapeName" : "CreateServerResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateServerResult",
        "variableName" : "createServerResult",
        "variableType" : "CreateServerResult",
        "documentation" : null,
        "simpleType" : "CreateServerResult",
        "variableSetterType" : "CreateServerResult"
      },
      "wrapper" : false
    },
    "CreateUserRequest" : {
      "c2jName" : "CreateUserRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateUser",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.CreateUser",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "HomeDirectory",
        "c2jShape" : "HomeDirectory",
        "deprecated" : false,
        "documentation" : "<p>The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.</p>\n@param homeDirectory The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withHomeDirectory",
        "getterDocumentation" : "/**<p>The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.</p>\n@return The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.*/",
        "getterMethodName" : "getHomeDirectory",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "HomeDirectory",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "HomeDirectory",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "HomeDirectory",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.</p>\n@param homeDirectory The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.*/",
        "setterMethodName" : "setHomeDirectory",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "homeDirectory",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.</p>\n@param homeDirectory The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "homeDirectory",
          "variableType" : "String",
          "documentation" : "<p>The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Policy",
        "c2jShape" : "Policy",
        "deprecated" : false,
        "documentation" : "<p>A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\n@param policy A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicy",
        "getterDocumentation" : "/**<p>A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\n@return A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.*/",
        "getterMethodName" : "getPolicy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Policy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Policy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Policy",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\n@param policy A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.*/",
        "setterMethodName" : "setPolicy",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "policy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\n@param policy A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "policy",
          "variableType" : "String",
          "documentation" : "<p>A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Role",
        "c2jShape" : "Role",
        "deprecated" : false,
        "documentation" : "<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRole",
        "getterDocumentation" : "/**<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@return The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.*/",
        "getterMethodName" : "getRole",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Role",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Role",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Role",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.*/",
        "setterMethodName" : "setRole",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "role",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "role",
          "variableType" : "String",
          "documentation" : "<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.</p>\n@return A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SshPublicKeyBody",
        "c2jShape" : "SshPublicKeyBody",
        "deprecated" : false,
        "documentation" : "<p>The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.</p>\n@param sshPublicKeyBody The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSshPublicKeyBody",
        "getterDocumentation" : "/**<p>The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.</p>\n@return The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.*/",
        "getterMethodName" : "getSshPublicKeyBody",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SshPublicKeyBody",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SshPublicKeyBody",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SshPublicKeyBody",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.</p>\n@param sshPublicKeyBody The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.*/",
        "setterMethodName" : "setSshPublicKeyBody",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sshPublicKeyBody",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.</p>\n@param sshPublicKeyBody The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sshPublicKeyBody",
          "variableType" : "String",
          "documentation" : "<p>The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Tags",
        "c2jShape" : "Tags",
        "deprecated" : false,
        "documentation" : "<p>Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.</p>\n@param tags Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.</p>\n@return Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.</p>\n@param tags Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UserName",
        "c2jShape" : "UserName",
        "deprecated" : false,
        "documentation" : "<p>A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.</p>\n@param userName A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUserName",
        "getterDocumentation" : "/**<p>A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.</p>\n@return A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.*/",
        "getterMethodName" : "getUserName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UserName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UserName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UserName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.</p>\n@param userName A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.*/",
        "setterMethodName" : "setUserName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.</p>\n@param userName A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "<p>A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "HomeDirectory" : {
          "c2jName" : "HomeDirectory",
          "c2jShape" : "HomeDirectory",
          "deprecated" : false,
          "documentation" : "<p>The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.</p>\n@param homeDirectory The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withHomeDirectory",
          "getterDocumentation" : "/**<p>The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.</p>\n@return The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.*/",
          "getterMethodName" : "getHomeDirectory",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "HomeDirectory",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "HomeDirectory",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "HomeDirectory",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.</p>\n@param homeDirectory The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.*/",
          "setterMethodName" : "setHomeDirectory",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "homeDirectory",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.</p>\n@param homeDirectory The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "homeDirectory",
            "variableType" : "String",
            "documentation" : "<p>The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Policy" : {
          "c2jName" : "Policy",
          "c2jShape" : "Policy",
          "deprecated" : false,
          "documentation" : "<p>A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\n@param policy A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicy",
          "getterDocumentation" : "/**<p>A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\n@return A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.*/",
          "getterMethodName" : "getPolicy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Policy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Policy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Policy",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\n@param policy A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.*/",
          "setterMethodName" : "setPolicy",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "policy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\n@param policy A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "policy",
            "variableType" : "String",
            "documentation" : "<p>A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Role" : {
          "c2jName" : "Role",
          "c2jShape" : "Role",
          "deprecated" : false,
          "documentation" : "<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRole",
          "getterDocumentation" : "/**<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@return The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.*/",
          "getterMethodName" : "getRole",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Role",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Role",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Role",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.*/",
          "setterMethodName" : "setRole",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "role",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "role",
            "variableType" : "String",
            "documentation" : "<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.</p>\n@return A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SshPublicKeyBody" : {
          "c2jName" : "SshPublicKeyBody",
          "c2jShape" : "SshPublicKeyBody",
          "deprecated" : false,
          "documentation" : "<p>The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.</p>\n@param sshPublicKeyBody The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSshPublicKeyBody",
          "getterDocumentation" : "/**<p>The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.</p>\n@return The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.*/",
          "getterMethodName" : "getSshPublicKeyBody",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SshPublicKeyBody",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SshPublicKeyBody",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SshPublicKeyBody",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.</p>\n@param sshPublicKeyBody The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.*/",
          "setterMethodName" : "setSshPublicKeyBody",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sshPublicKeyBody",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.</p>\n@param sshPublicKeyBody The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sshPublicKeyBody",
            "variableType" : "String",
            "documentation" : "<p>The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "Tags",
          "deprecated" : false,
          "documentation" : "<p>Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.</p>\n@param tags Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.</p>\n@return Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.</p>\n@param tags Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        },
        "UserName" : {
          "c2jName" : "UserName",
          "c2jShape" : "UserName",
          "deprecated" : false,
          "documentation" : "<p>A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.</p>\n@param userName A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUserName",
          "getterDocumentation" : "/**<p>A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.</p>\n@return A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.*/",
          "getterMethodName" : "getUserName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UserName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UserName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UserName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.</p>\n@param userName A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.*/",
          "setterMethodName" : "setUserName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.</p>\n@param userName A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "<p>A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Role", "ServerId", "UserName" ],
      "shapeName" : "CreateUserRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateUserRequest",
        "variableName" : "createUserRequest",
        "variableType" : "CreateUserRequest",
        "documentation" : null,
        "simpleType" : "CreateUserRequest",
        "variableSetterType" : "CreateUserRequest"
      },
      "wrapper" : false
    },
    "CreateUserResult" : {
      "c2jName" : "CreateUserResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the SFTP server that the user is attached to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the SFTP server that the user is attached to.</p>\n@param serverId The ID of the SFTP server that the user is attached to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>The ID of the SFTP server that the user is attached to.</p>\n@return The ID of the SFTP server that the user is attached to.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the SFTP server that the user is attached to.</p>\n@param serverId The ID of the SFTP server that the user is attached to.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the SFTP server that the user is attached to.</p>\n@param serverId The ID of the SFTP server that the user is attached to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the SFTP server that the user is attached to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UserName",
        "c2jShape" : "UserName",
        "deprecated" : false,
        "documentation" : "<p>A unique string that identifies a user account associated with an SFTP server.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique string that identifies a user account associated with an SFTP server.</p>\n@param userName A unique string that identifies a user account associated with an SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUserName",
        "getterDocumentation" : "/**<p>A unique string that identifies a user account associated with an SFTP server.</p>\n@return A unique string that identifies a user account associated with an SFTP server.*/",
        "getterMethodName" : "getUserName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UserName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UserName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UserName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique string that identifies a user account associated with an SFTP server.</p>\n@param userName A unique string that identifies a user account associated with an SFTP server.*/",
        "setterMethodName" : "setUserName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique string that identifies a user account associated with an SFTP server.</p>\n@param userName A unique string that identifies a user account associated with an SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "<p>A unique string that identifies a user account associated with an SFTP server.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the SFTP server that the user is attached to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the SFTP server that the user is attached to.</p>\n@param serverId The ID of the SFTP server that the user is attached to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>The ID of the SFTP server that the user is attached to.</p>\n@return The ID of the SFTP server that the user is attached to.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the SFTP server that the user is attached to.</p>\n@param serverId The ID of the SFTP server that the user is attached to.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the SFTP server that the user is attached to.</p>\n@param serverId The ID of the SFTP server that the user is attached to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the SFTP server that the user is attached to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UserName" : {
          "c2jName" : "UserName",
          "c2jShape" : "UserName",
          "deprecated" : false,
          "documentation" : "<p>A unique string that identifies a user account associated with an SFTP server.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique string that identifies a user account associated with an SFTP server.</p>\n@param userName A unique string that identifies a user account associated with an SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUserName",
          "getterDocumentation" : "/**<p>A unique string that identifies a user account associated with an SFTP server.</p>\n@return A unique string that identifies a user account associated with an SFTP server.*/",
          "getterMethodName" : "getUserName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UserName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UserName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UserName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique string that identifies a user account associated with an SFTP server.</p>\n@param userName A unique string that identifies a user account associated with an SFTP server.*/",
          "setterMethodName" : "setUserName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique string that identifies a user account associated with an SFTP server.</p>\n@param userName A unique string that identifies a user account associated with an SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "<p>A unique string that identifies a user account associated with an SFTP server.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId", "UserName" ],
      "shapeName" : "CreateUserResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateUserResult",
        "variableName" : "createUserResult",
        "variableType" : "CreateUserResult",
        "documentation" : null,
        "simpleType" : "CreateUserResult",
        "variableSetterType" : "CreateUserResult"
      },
      "wrapper" : false
    },
    "DeleteServerRequest" : {
      "c2jName" : "DeleteServerRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteServer",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.DeleteServer",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A unique system-assigned identifier for an SFTP server instance.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique system-assigned identifier for an SFTP server instance.</p>\n@param serverId A unique system-assigned identifier for an SFTP server instance.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A unique system-assigned identifier for an SFTP server instance.</p>\n@return A unique system-assigned identifier for an SFTP server instance.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique system-assigned identifier for an SFTP server instance.</p>\n@param serverId A unique system-assigned identifier for an SFTP server instance.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique system-assigned identifier for an SFTP server instance.</p>\n@param serverId A unique system-assigned identifier for an SFTP server instance.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A unique system-assigned identifier for an SFTP server instance.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A unique system-assigned identifier for an SFTP server instance.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique system-assigned identifier for an SFTP server instance.</p>\n@param serverId A unique system-assigned identifier for an SFTP server instance.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A unique system-assigned identifier for an SFTP server instance.</p>\n@return A unique system-assigned identifier for an SFTP server instance.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique system-assigned identifier for an SFTP server instance.</p>\n@param serverId A unique system-assigned identifier for an SFTP server instance.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique system-assigned identifier for an SFTP server instance.</p>\n@param serverId A unique system-assigned identifier for an SFTP server instance.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A unique system-assigned identifier for an SFTP server instance.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId" ],
      "shapeName" : "DeleteServerRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteServerRequest",
        "variableName" : "deleteServerRequest",
        "variableType" : "DeleteServerRequest",
        "documentation" : null,
        "simpleType" : "DeleteServerRequest",
        "variableSetterType" : "DeleteServerRequest"
      },
      "wrapper" : false
    },
    "DeleteServerResult" : {
      "c2jName" : "DeleteServerResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteServerResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteServerResult",
        "variableName" : "deleteServerResult",
        "variableType" : "DeleteServerResult",
        "documentation" : null,
        "simpleType" : "DeleteServerResult",
        "variableSetterType" : "DeleteServerResult"
      },
      "wrapper" : false
    },
    "DeleteSshPublicKeyRequest" : {
      "c2jName" : "DeleteSshPublicKeyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteSshPublicKey",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.DeleteSshPublicKey",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.</p>\n@param serverId A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.</p>\n@return A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.</p>\n@param serverId A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.</p>\n@param serverId A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SshPublicKeyId",
        "c2jShape" : "SshPublicKeyId",
        "deprecated" : false,
        "documentation" : "<p>A unique identifier used to reference your user’s specific SSH key.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique identifier used to reference your user’s specific SSH key.</p>\n@param sshPublicKeyId A unique identifier used to reference your user’s specific SSH key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSshPublicKeyId",
        "getterDocumentation" : "/**<p>A unique identifier used to reference your user’s specific SSH key.</p>\n@return A unique identifier used to reference your user’s specific SSH key.*/",
        "getterMethodName" : "getSshPublicKeyId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SshPublicKeyId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SshPublicKeyId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SshPublicKeyId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique identifier used to reference your user’s specific SSH key.</p>\n@param sshPublicKeyId A unique identifier used to reference your user’s specific SSH key.*/",
        "setterMethodName" : "setSshPublicKeyId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sshPublicKeyId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique identifier used to reference your user’s specific SSH key.</p>\n@param sshPublicKeyId A unique identifier used to reference your user’s specific SSH key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sshPublicKeyId",
          "variableType" : "String",
          "documentation" : "<p>A unique identifier used to reference your user’s specific SSH key.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UserName",
        "c2jShape" : "UserName",
        "deprecated" : false,
        "documentation" : "<p>A unique string that identifies a user whose public key is being deleted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique string that identifies a user whose public key is being deleted.</p>\n@param userName A unique string that identifies a user whose public key is being deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUserName",
        "getterDocumentation" : "/**<p>A unique string that identifies a user whose public key is being deleted.</p>\n@return A unique string that identifies a user whose public key is being deleted.*/",
        "getterMethodName" : "getUserName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UserName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UserName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UserName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique string that identifies a user whose public key is being deleted.</p>\n@param userName A unique string that identifies a user whose public key is being deleted.*/",
        "setterMethodName" : "setUserName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique string that identifies a user whose public key is being deleted.</p>\n@param userName A unique string that identifies a user whose public key is being deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "<p>A unique string that identifies a user whose public key is being deleted.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.</p>\n@param serverId A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.</p>\n@return A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.</p>\n@param serverId A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.</p>\n@param serverId A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SshPublicKeyId" : {
          "c2jName" : "SshPublicKeyId",
          "c2jShape" : "SshPublicKeyId",
          "deprecated" : false,
          "documentation" : "<p>A unique identifier used to reference your user’s specific SSH key.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique identifier used to reference your user’s specific SSH key.</p>\n@param sshPublicKeyId A unique identifier used to reference your user’s specific SSH key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSshPublicKeyId",
          "getterDocumentation" : "/**<p>A unique identifier used to reference your user’s specific SSH key.</p>\n@return A unique identifier used to reference your user’s specific SSH key.*/",
          "getterMethodName" : "getSshPublicKeyId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SshPublicKeyId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SshPublicKeyId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SshPublicKeyId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique identifier used to reference your user’s specific SSH key.</p>\n@param sshPublicKeyId A unique identifier used to reference your user’s specific SSH key.*/",
          "setterMethodName" : "setSshPublicKeyId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sshPublicKeyId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique identifier used to reference your user’s specific SSH key.</p>\n@param sshPublicKeyId A unique identifier used to reference your user’s specific SSH key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sshPublicKeyId",
            "variableType" : "String",
            "documentation" : "<p>A unique identifier used to reference your user’s specific SSH key.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UserName" : {
          "c2jName" : "UserName",
          "c2jShape" : "UserName",
          "deprecated" : false,
          "documentation" : "<p>A unique string that identifies a user whose public key is being deleted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique string that identifies a user whose public key is being deleted.</p>\n@param userName A unique string that identifies a user whose public key is being deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUserName",
          "getterDocumentation" : "/**<p>A unique string that identifies a user whose public key is being deleted.</p>\n@return A unique string that identifies a user whose public key is being deleted.*/",
          "getterMethodName" : "getUserName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UserName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UserName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UserName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique string that identifies a user whose public key is being deleted.</p>\n@param userName A unique string that identifies a user whose public key is being deleted.*/",
          "setterMethodName" : "setUserName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique string that identifies a user whose public key is being deleted.</p>\n@param userName A unique string that identifies a user whose public key is being deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "<p>A unique string that identifies a user whose public key is being deleted.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId", "SshPublicKeyId", "UserName" ],
      "shapeName" : "DeleteSshPublicKeyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteSshPublicKeyRequest",
        "variableName" : "deleteSshPublicKeyRequest",
        "variableType" : "DeleteSshPublicKeyRequest",
        "documentation" : null,
        "simpleType" : "DeleteSshPublicKeyRequest",
        "variableSetterType" : "DeleteSshPublicKeyRequest"
      },
      "wrapper" : false
    },
    "DeleteSshPublicKeyResult" : {
      "c2jName" : "DeleteSshPublicKeyResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteSshPublicKeyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteSshPublicKeyResult",
        "variableName" : "deleteSshPublicKeyResult",
        "variableType" : "DeleteSshPublicKeyResult",
        "documentation" : null,
        "simpleType" : "DeleteSshPublicKeyResult",
        "variableSetterType" : "DeleteSshPublicKeyResult"
      },
      "wrapper" : false
    },
    "DeleteUserRequest" : {
      "c2jName" : "DeleteUserRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteUser",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.DeleteUser",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.</p>\n@return A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UserName",
        "c2jShape" : "UserName",
        "deprecated" : false,
        "documentation" : "<p>A unique string that identifies a user that is being deleted from the server.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique string that identifies a user that is being deleted from the server.</p>\n@param userName A unique string that identifies a user that is being deleted from the server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUserName",
        "getterDocumentation" : "/**<p>A unique string that identifies a user that is being deleted from the server.</p>\n@return A unique string that identifies a user that is being deleted from the server.*/",
        "getterMethodName" : "getUserName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UserName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UserName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UserName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique string that identifies a user that is being deleted from the server.</p>\n@param userName A unique string that identifies a user that is being deleted from the server.*/",
        "setterMethodName" : "setUserName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique string that identifies a user that is being deleted from the server.</p>\n@param userName A unique string that identifies a user that is being deleted from the server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "<p>A unique string that identifies a user that is being deleted from the server.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.</p>\n@return A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UserName" : {
          "c2jName" : "UserName",
          "c2jShape" : "UserName",
          "deprecated" : false,
          "documentation" : "<p>A unique string that identifies a user that is being deleted from the server.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique string that identifies a user that is being deleted from the server.</p>\n@param userName A unique string that identifies a user that is being deleted from the server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUserName",
          "getterDocumentation" : "/**<p>A unique string that identifies a user that is being deleted from the server.</p>\n@return A unique string that identifies a user that is being deleted from the server.*/",
          "getterMethodName" : "getUserName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UserName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UserName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UserName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique string that identifies a user that is being deleted from the server.</p>\n@param userName A unique string that identifies a user that is being deleted from the server.*/",
          "setterMethodName" : "setUserName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique string that identifies a user that is being deleted from the server.</p>\n@param userName A unique string that identifies a user that is being deleted from the server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "<p>A unique string that identifies a user that is being deleted from the server.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId", "UserName" ],
      "shapeName" : "DeleteUserRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteUserRequest",
        "variableName" : "deleteUserRequest",
        "variableType" : "DeleteUserRequest",
        "documentation" : null,
        "simpleType" : "DeleteUserRequest",
        "variableSetterType" : "DeleteUserRequest"
      },
      "wrapper" : false
    },
    "DeleteUserResult" : {
      "c2jName" : "DeleteUserResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteUserResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteUserResult",
        "variableName" : "deleteUserResult",
        "variableType" : "DeleteUserResult",
        "documentation" : null,
        "simpleType" : "DeleteUserResult",
        "variableSetterType" : "DeleteUserResult"
      },
      "wrapper" : false
    },
    "DescribeServerRequest" : {
      "c2jName" : "DescribeServerRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DescribeServer",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.DescribeServer",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system-assigned unique identifier for an SFTP server.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@return A system-assigned unique identifier for an SFTP server.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@return A system-assigned unique identifier for an SFTP server.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system-assigned unique identifier for an SFTP server.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId" ],
      "shapeName" : "DescribeServerRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribeServerRequest",
        "variableName" : "describeServerRequest",
        "variableType" : "DescribeServerRequest",
        "documentation" : null,
        "simpleType" : "DescribeServerRequest",
        "variableSetterType" : "DescribeServerRequest"
      },
      "wrapper" : false
    },
    "DescribeServerResult" : {
      "c2jName" : "DescribeServerResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Server",
        "c2jShape" : "DescribedServer",
        "deprecated" : false,
        "documentation" : "<p>An array containing the properties of the server with the <code>ServerID</code> you specified.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array containing the properties of the server with the <code>ServerID</code> you specified.</p>\n@param server An array containing the properties of the server with the <code>ServerID</code> you specified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServer",
        "getterDocumentation" : "/**<p>An array containing the properties of the server with the <code>ServerID</code> you specified.</p>\n@return An array containing the properties of the server with the <code>ServerID</code> you specified.*/",
        "getterMethodName" : "getServer",
        "getterModel" : {
          "returnType" : "DescribedServer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Server",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Server",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Server",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An array containing the properties of the server with the <code>ServerID</code> you specified.</p>\n@param server An array containing the properties of the server with the <code>ServerID</code> you specified.*/",
        "setterMethodName" : "setServer",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "DescribedServer",
          "variableName" : "server",
          "variableType" : "DescribedServer",
          "documentation" : "",
          "simpleType" : "DescribedServer",
          "variableSetterType" : "DescribedServer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array containing the properties of the server with the <code>ServerID</code> you specified.</p>\n@param server An array containing the properties of the server with the <code>ServerID</code> you specified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "DescribedServer",
          "variableName" : "server",
          "variableType" : "DescribedServer",
          "documentation" : "<p>An array containing the properties of the server with the <code>ServerID</code> you specified.</p>",
          "simpleType" : "DescribedServer",
          "variableSetterType" : "DescribedServer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Server" : {
          "c2jName" : "Server",
          "c2jShape" : "DescribedServer",
          "deprecated" : false,
          "documentation" : "<p>An array containing the properties of the server with the <code>ServerID</code> you specified.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array containing the properties of the server with the <code>ServerID</code> you specified.</p>\n@param server An array containing the properties of the server with the <code>ServerID</code> you specified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServer",
          "getterDocumentation" : "/**<p>An array containing the properties of the server with the <code>ServerID</code> you specified.</p>\n@return An array containing the properties of the server with the <code>ServerID</code> you specified.*/",
          "getterMethodName" : "getServer",
          "getterModel" : {
            "returnType" : "DescribedServer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Server",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Server",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Server",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An array containing the properties of the server with the <code>ServerID</code> you specified.</p>\n@param server An array containing the properties of the server with the <code>ServerID</code> you specified.*/",
          "setterMethodName" : "setServer",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "DescribedServer",
            "variableName" : "server",
            "variableType" : "DescribedServer",
            "documentation" : "",
            "simpleType" : "DescribedServer",
            "variableSetterType" : "DescribedServer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array containing the properties of the server with the <code>ServerID</code> you specified.</p>\n@param server An array containing the properties of the server with the <code>ServerID</code> you specified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "DescribedServer",
            "variableName" : "server",
            "variableType" : "DescribedServer",
            "documentation" : "<p>An array containing the properties of the server with the <code>ServerID</code> you specified.</p>",
            "simpleType" : "DescribedServer",
            "variableSetterType" : "DescribedServer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Server" ],
      "shapeName" : "DescribeServerResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribeServerResult",
        "variableName" : "describeServerResult",
        "variableType" : "DescribeServerResult",
        "documentation" : null,
        "simpleType" : "DescribeServerResult",
        "variableSetterType" : "DescribeServerResult"
      },
      "wrapper" : false
    },
    "DescribeUserRequest" : {
      "c2jName" : "DescribeUserRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DescribeUser",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.DescribeUser",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that has this user assigned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>\n@return A system-assigned unique identifier for an SFTP server that has this user assigned.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that has this user assigned.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that has this user assigned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UserName",
        "c2jShape" : "UserName",
        "deprecated" : false,
        "documentation" : "<p>The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.</p>\n@param userName The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUserName",
        "getterDocumentation" : "/**<p>The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.</p>\n@return The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.*/",
        "getterMethodName" : "getUserName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UserName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UserName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UserName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.</p>\n@param userName The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.*/",
        "setterMethodName" : "setUserName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.</p>\n@param userName The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "<p>The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that has this user assigned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>\n@return A system-assigned unique identifier for an SFTP server that has this user assigned.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that has this user assigned.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that has this user assigned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UserName" : {
          "c2jName" : "UserName",
          "c2jShape" : "UserName",
          "deprecated" : false,
          "documentation" : "<p>The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.</p>\n@param userName The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUserName",
          "getterDocumentation" : "/**<p>The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.</p>\n@return The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.*/",
          "getterMethodName" : "getUserName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UserName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UserName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UserName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.</p>\n@param userName The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.*/",
          "setterMethodName" : "setUserName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.</p>\n@param userName The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "<p>The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId", "UserName" ],
      "shapeName" : "DescribeUserRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribeUserRequest",
        "variableName" : "describeUserRequest",
        "variableType" : "DescribeUserRequest",
        "documentation" : null,
        "simpleType" : "DescribeUserRequest",
        "variableSetterType" : "DescribeUserRequest"
      },
      "wrapper" : false
    },
    "DescribeUserResult" : {
      "c2jName" : "DescribeUserResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that has this user assigned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>\n@return A system-assigned unique identifier for an SFTP server that has this user assigned.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that has this user assigned.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that has this user assigned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "User",
        "c2jShape" : "DescribedUser",
        "deprecated" : false,
        "documentation" : "<p>An array containing the properties of the user account for the <code>ServerID</code> value that you specified.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array containing the properties of the user account for the <code>ServerID</code> value that you specified.</p>\n@param user An array containing the properties of the user account for the <code>ServerID</code> value that you specified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUser",
        "getterDocumentation" : "/**<p>An array containing the properties of the user account for the <code>ServerID</code> value that you specified.</p>\n@return An array containing the properties of the user account for the <code>ServerID</code> value that you specified.*/",
        "getterMethodName" : "getUser",
        "getterModel" : {
          "returnType" : "DescribedUser",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "User",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "User",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "User",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An array containing the properties of the user account for the <code>ServerID</code> value that you specified.</p>\n@param user An array containing the properties of the user account for the <code>ServerID</code> value that you specified.*/",
        "setterMethodName" : "setUser",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "DescribedUser",
          "variableName" : "user",
          "variableType" : "DescribedUser",
          "documentation" : "",
          "simpleType" : "DescribedUser",
          "variableSetterType" : "DescribedUser"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array containing the properties of the user account for the <code>ServerID</code> value that you specified.</p>\n@param user An array containing the properties of the user account for the <code>ServerID</code> value that you specified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "DescribedUser",
          "variableName" : "user",
          "variableType" : "DescribedUser",
          "documentation" : "<p>An array containing the properties of the user account for the <code>ServerID</code> value that you specified.</p>",
          "simpleType" : "DescribedUser",
          "variableSetterType" : "DescribedUser"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that has this user assigned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>\n@return A system-assigned unique identifier for an SFTP server that has this user assigned.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that has this user assigned.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that has this user assigned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "User" : {
          "c2jName" : "User",
          "c2jShape" : "DescribedUser",
          "deprecated" : false,
          "documentation" : "<p>An array containing the properties of the user account for the <code>ServerID</code> value that you specified.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array containing the properties of the user account for the <code>ServerID</code> value that you specified.</p>\n@param user An array containing the properties of the user account for the <code>ServerID</code> value that you specified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUser",
          "getterDocumentation" : "/**<p>An array containing the properties of the user account for the <code>ServerID</code> value that you specified.</p>\n@return An array containing the properties of the user account for the <code>ServerID</code> value that you specified.*/",
          "getterMethodName" : "getUser",
          "getterModel" : {
            "returnType" : "DescribedUser",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "User",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "User",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "User",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An array containing the properties of the user account for the <code>ServerID</code> value that you specified.</p>\n@param user An array containing the properties of the user account for the <code>ServerID</code> value that you specified.*/",
          "setterMethodName" : "setUser",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "DescribedUser",
            "variableName" : "user",
            "variableType" : "DescribedUser",
            "documentation" : "",
            "simpleType" : "DescribedUser",
            "variableSetterType" : "DescribedUser"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array containing the properties of the user account for the <code>ServerID</code> value that you specified.</p>\n@param user An array containing the properties of the user account for the <code>ServerID</code> value that you specified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "DescribedUser",
            "variableName" : "user",
            "variableType" : "DescribedUser",
            "documentation" : "<p>An array containing the properties of the user account for the <code>ServerID</code> value that you specified.</p>",
            "simpleType" : "DescribedUser",
            "variableSetterType" : "DescribedUser"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId", "User" ],
      "shapeName" : "DescribeUserResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribeUserResult",
        "variableName" : "describeUserResult",
        "variableType" : "DescribeUserResult",
        "documentation" : null,
        "simpleType" : "DescribeUserResult",
        "variableSetterType" : "DescribeUserResult"
      },
      "wrapper" : false
    },
    "DescribedServer" : {
      "c2jName" : "DescribedServer",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describe the properties of the server that was specified. Information returned includes: the server Amazon Resource Name (ARN), the authentication configuration and type, the logging role, server Id and state, and assigned tags or metadata. </p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>Specifies the unique Amazon Resource Name (ARN) for the server to be described.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies the unique Amazon Resource Name (ARN) for the server to be described.</p>\n@param arn Specifies the unique Amazon Resource Name (ARN) for the server to be described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>Specifies the unique Amazon Resource Name (ARN) for the server to be described.</p>\n@return Specifies the unique Amazon Resource Name (ARN) for the server to be described.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Specifies the unique Amazon Resource Name (ARN) for the server to be described.</p>\n@param arn Specifies the unique Amazon Resource Name (ARN) for the server to be described.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies the unique Amazon Resource Name (ARN) for the server to be described.</p>\n@param arn Specifies the unique Amazon Resource Name (ARN) for the server to be described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>Specifies the unique Amazon Resource Name (ARN) for the server to be described.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "IdentityProviderDetails",
        "c2jShape" : "IdentityProviderDetails",
        "deprecated" : false,
        "documentation" : "<p>Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.</p>\n@param identityProviderDetails Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIdentityProviderDetails",
        "getterDocumentation" : "/**<p>Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.</p>\n@return Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.*/",
        "getterMethodName" : "getIdentityProviderDetails",
        "getterModel" : {
          "returnType" : "IdentityProviderDetails",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IdentityProviderDetails",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IdentityProviderDetails",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "IdentityProviderDetails",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.</p>\n@param identityProviderDetails Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.*/",
        "setterMethodName" : "setIdentityProviderDetails",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "IdentityProviderDetails",
          "variableName" : "identityProviderDetails",
          "variableType" : "IdentityProviderDetails",
          "documentation" : "",
          "simpleType" : "IdentityProviderDetails",
          "variableSetterType" : "IdentityProviderDetails"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.</p>\n@param identityProviderDetails Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "IdentityProviderDetails",
          "variableName" : "identityProviderDetails",
          "variableType" : "IdentityProviderDetails",
          "documentation" : "<p>Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.</p>",
          "simpleType" : "IdentityProviderDetails",
          "variableSetterType" : "IdentityProviderDetails"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "IdentityProviderType",
        "c2jShape" : "IdentityProviderType",
        "deprecated" : false,
        "documentation" : "<p>This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.</p>",
        "enumType" : "IdentityProviderType",
        "fluentSetterDocumentation" : "/**<p>This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.</p>\n@param identityProviderType This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IdentityProviderType*/",
        "fluentSetterMethodName" : "withIdentityProviderType",
        "getterDocumentation" : "/**<p>This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.</p>\n@return This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.\n@see IdentityProviderType*/",
        "getterMethodName" : "getIdentityProviderType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IdentityProviderType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IdentityProviderType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "IdentityProviderType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.</p>\n@param identityProviderType This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.\n@see IdentityProviderType*/",
        "setterMethodName" : "setIdentityProviderType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "identityProviderType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.</p>\n@param identityProviderType This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IdentityProviderType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "identityProviderType",
          "variableType" : "String",
          "documentation" : "<p>This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LoggingRole",
        "c2jShape" : "Role",
        "deprecated" : false,
        "documentation" : "<p>This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.</p>\n@param loggingRole This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLoggingRole",
        "getterDocumentation" : "/**<p>This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.</p>\n@return This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.*/",
        "getterMethodName" : "getLoggingRole",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LoggingRole",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LoggingRole",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LoggingRole",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.</p>\n@param loggingRole This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.*/",
        "setterMethodName" : "setLoggingRole",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "loggingRole",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.</p>\n@param loggingRole This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "loggingRole",
          "variableType" : "String",
          "documentation" : "<p>This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>This property is a unique system assigned identifier for the SFTP server that you instantiate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This property is a unique system assigned identifier for the SFTP server that you instantiate.</p>\n@param serverId This property is a unique system assigned identifier for the SFTP server that you instantiate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>This property is a unique system assigned identifier for the SFTP server that you instantiate.</p>\n@return This property is a unique system assigned identifier for the SFTP server that you instantiate.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This property is a unique system assigned identifier for the SFTP server that you instantiate.</p>\n@param serverId This property is a unique system assigned identifier for the SFTP server that you instantiate.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This property is a unique system assigned identifier for the SFTP server that you instantiate.</p>\n@param serverId This property is a unique system assigned identifier for the SFTP server that you instantiate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>This property is a unique system assigned identifier for the SFTP server that you instantiate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "State",
        "c2jShape" : "State",
        "deprecated" : false,
        "documentation" : "<p>The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>",
        "enumType" : "State",
        "fluentSetterDocumentation" : "/**<p>The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>\n@param state The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.\n@return Returns a reference to this object so that method calls can be chained together.\n@see State*/",
        "fluentSetterMethodName" : "withState",
        "getterDocumentation" : "/**<p>The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>\n@return The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.\n@see State*/",
        "getterMethodName" : "getState",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "State",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "State",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "State",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>\n@param state The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.\n@see State*/",
        "setterMethodName" : "setState",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "state",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>\n@param state The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.\n@return Returns a reference to this object so that method calls can be chained together.\n@see State*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "state",
          "variableType" : "String",
          "documentation" : "<p>The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Tags",
        "c2jShape" : "Tags",
        "deprecated" : false,
        "documentation" : "<p>This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.</p>\n@param tags This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.</p>\n@return This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.</p>\n@param tags This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UserCount",
        "c2jShape" : "UserCount",
        "deprecated" : false,
        "documentation" : "<p>The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>\n@param userCount The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUserCount",
        "getterDocumentation" : "/**<p>The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>\n@return The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.*/",
        "getterMethodName" : "getUserCount",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UserCount",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UserCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "UserCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>\n@param userCount The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.*/",
        "setterMethodName" : "setUserCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "userCount",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>\n@param userCount The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "userCount",
          "variableType" : "Integer",
          "documentation" : "<p>The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>Specifies the unique Amazon Resource Name (ARN) for the server to be described.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies the unique Amazon Resource Name (ARN) for the server to be described.</p>\n@param arn Specifies the unique Amazon Resource Name (ARN) for the server to be described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>Specifies the unique Amazon Resource Name (ARN) for the server to be described.</p>\n@return Specifies the unique Amazon Resource Name (ARN) for the server to be described.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Specifies the unique Amazon Resource Name (ARN) for the server to be described.</p>\n@param arn Specifies the unique Amazon Resource Name (ARN) for the server to be described.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies the unique Amazon Resource Name (ARN) for the server to be described.</p>\n@param arn Specifies the unique Amazon Resource Name (ARN) for the server to be described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>Specifies the unique Amazon Resource Name (ARN) for the server to be described.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "IdentityProviderDetails" : {
          "c2jName" : "IdentityProviderDetails",
          "c2jShape" : "IdentityProviderDetails",
          "deprecated" : false,
          "documentation" : "<p>Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.</p>\n@param identityProviderDetails Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIdentityProviderDetails",
          "getterDocumentation" : "/**<p>Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.</p>\n@return Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.*/",
          "getterMethodName" : "getIdentityProviderDetails",
          "getterModel" : {
            "returnType" : "IdentityProviderDetails",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IdentityProviderDetails",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IdentityProviderDetails",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "IdentityProviderDetails",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.</p>\n@param identityProviderDetails Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.*/",
          "setterMethodName" : "setIdentityProviderDetails",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "IdentityProviderDetails",
            "variableName" : "identityProviderDetails",
            "variableType" : "IdentityProviderDetails",
            "documentation" : "",
            "simpleType" : "IdentityProviderDetails",
            "variableSetterType" : "IdentityProviderDetails"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.</p>\n@param identityProviderDetails Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "IdentityProviderDetails",
            "variableName" : "identityProviderDetails",
            "variableType" : "IdentityProviderDetails",
            "documentation" : "<p>Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.</p>",
            "simpleType" : "IdentityProviderDetails",
            "variableSetterType" : "IdentityProviderDetails"
          },
          "xmlNameSpaceUri" : null
        },
        "IdentityProviderType" : {
          "c2jName" : "IdentityProviderType",
          "c2jShape" : "IdentityProviderType",
          "deprecated" : false,
          "documentation" : "<p>This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.</p>",
          "enumType" : "IdentityProviderType",
          "fluentSetterDocumentation" : "/**<p>This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.</p>\n@param identityProviderType This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IdentityProviderType*/",
          "fluentSetterMethodName" : "withIdentityProviderType",
          "getterDocumentation" : "/**<p>This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.</p>\n@return This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.\n@see IdentityProviderType*/",
          "getterMethodName" : "getIdentityProviderType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IdentityProviderType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IdentityProviderType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "IdentityProviderType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.</p>\n@param identityProviderType This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.\n@see IdentityProviderType*/",
          "setterMethodName" : "setIdentityProviderType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "identityProviderType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.</p>\n@param identityProviderType This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IdentityProviderType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "identityProviderType",
            "variableType" : "String",
            "documentation" : "<p>This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LoggingRole" : {
          "c2jName" : "LoggingRole",
          "c2jShape" : "Role",
          "deprecated" : false,
          "documentation" : "<p>This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.</p>\n@param loggingRole This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLoggingRole",
          "getterDocumentation" : "/**<p>This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.</p>\n@return This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.*/",
          "getterMethodName" : "getLoggingRole",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LoggingRole",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LoggingRole",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LoggingRole",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.</p>\n@param loggingRole This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.*/",
          "setterMethodName" : "setLoggingRole",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "loggingRole",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.</p>\n@param loggingRole This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "loggingRole",
            "variableType" : "String",
            "documentation" : "<p>This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>This property is a unique system assigned identifier for the SFTP server that you instantiate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This property is a unique system assigned identifier for the SFTP server that you instantiate.</p>\n@param serverId This property is a unique system assigned identifier for the SFTP server that you instantiate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>This property is a unique system assigned identifier for the SFTP server that you instantiate.</p>\n@return This property is a unique system assigned identifier for the SFTP server that you instantiate.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This property is a unique system assigned identifier for the SFTP server that you instantiate.</p>\n@param serverId This property is a unique system assigned identifier for the SFTP server that you instantiate.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This property is a unique system assigned identifier for the SFTP server that you instantiate.</p>\n@param serverId This property is a unique system assigned identifier for the SFTP server that you instantiate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>This property is a unique system assigned identifier for the SFTP server that you instantiate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "State" : {
          "c2jName" : "State",
          "c2jShape" : "State",
          "deprecated" : false,
          "documentation" : "<p>The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>",
          "enumType" : "State",
          "fluentSetterDocumentation" : "/**<p>The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>\n@param state The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.\n@return Returns a reference to this object so that method calls can be chained together.\n@see State*/",
          "fluentSetterMethodName" : "withState",
          "getterDocumentation" : "/**<p>The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>\n@return The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.\n@see State*/",
          "getterMethodName" : "getState",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "State",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "State",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "State",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>\n@param state The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.\n@see State*/",
          "setterMethodName" : "setState",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "state",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>\n@param state The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.\n@return Returns a reference to this object so that method calls can be chained together.\n@see State*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "state",
            "variableType" : "String",
            "documentation" : "<p>The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "Tags",
          "deprecated" : false,
          "documentation" : "<p>This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.</p>\n@param tags This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.</p>\n@return This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.</p>\n@param tags This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        },
        "UserCount" : {
          "c2jName" : "UserCount",
          "c2jShape" : "UserCount",
          "deprecated" : false,
          "documentation" : "<p>The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>\n@param userCount The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUserCount",
          "getterDocumentation" : "/**<p>The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>\n@return The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.*/",
          "getterMethodName" : "getUserCount",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UserCount",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UserCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "UserCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>\n@param userCount The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.*/",
          "setterMethodName" : "setUserCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "userCount",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>\n@param userCount The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "userCount",
            "variableType" : "Integer",
            "documentation" : "<p>The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Arn" ],
      "shapeName" : "DescribedServer",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribedServer",
        "variableName" : "describedServer",
        "variableType" : "DescribedServer",
        "documentation" : null,
        "simpleType" : "DescribedServer",
        "variableSetterType" : "DescribedServer"
      },
      "wrapper" : false
    },
    "DescribedUser" : {
      "c2jName" : "DescribedUser",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns properties of the user that you wish to describe.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.</p>\n@param arn This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.</p>\n@return This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.</p>\n@param arn This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.</p>\n@param arn This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "HomeDirectory",
        "c2jShape" : "HomeDirectory",
        "deprecated" : false,
        "documentation" : "<p>This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.</p>\n@param homeDirectory This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withHomeDirectory",
        "getterDocumentation" : "/**<p>This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.</p>\n@return This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.*/",
        "getterMethodName" : "getHomeDirectory",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "HomeDirectory",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "HomeDirectory",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "HomeDirectory",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.</p>\n@param homeDirectory This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.*/",
        "setterMethodName" : "setHomeDirectory",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "homeDirectory",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.</p>\n@param homeDirectory This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "homeDirectory",
          "variableType" : "String",
          "documentation" : "<p>This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Policy",
        "c2jShape" : "Policy",
        "deprecated" : false,
        "documentation" : "<p>Specifies the name of the policy in use for the described user.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies the name of the policy in use for the described user.</p>\n@param policy Specifies the name of the policy in use for the described user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicy",
        "getterDocumentation" : "/**<p>Specifies the name of the policy in use for the described user.</p>\n@return Specifies the name of the policy in use for the described user.*/",
        "getterMethodName" : "getPolicy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Policy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Policy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Policy",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Specifies the name of the policy in use for the described user.</p>\n@param policy Specifies the name of the policy in use for the described user.*/",
        "setterMethodName" : "setPolicy",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "policy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies the name of the policy in use for the described user.</p>\n@param policy Specifies the name of the policy in use for the described user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "policy",
          "variableType" : "String",
          "documentation" : "<p>Specifies the name of the policy in use for the described user.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Role",
        "c2jShape" : "Role",
        "deprecated" : false,
        "documentation" : "<p>This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRole",
        "getterDocumentation" : "/**<p>This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@return This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.*/",
        "getterMethodName" : "getRole",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Role",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Role",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Role",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.*/",
        "setterMethodName" : "setRole",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "role",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "role",
          "variableType" : "String",
          "documentation" : "<p>This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SshPublicKeys",
        "c2jShape" : "SshPublicKeys",
        "deprecated" : false,
        "documentation" : "<p>This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.</p>\n@param sshPublicKeys This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSshPublicKeys",
        "getterDocumentation" : "/**<p>This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.</p>\n@return This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.*/",
        "getterMethodName" : "getSshPublicKeys",
        "getterModel" : {
          "returnType" : "java.util.List<SshPublicKey>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SshPublicKeys",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SshPublicKeys",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "SshPublicKey",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "SshPublicKey",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "SshPublicKey",
              "variableName" : "member",
              "variableType" : "SshPublicKey",
              "documentation" : "",
              "simpleType" : "SshPublicKey",
              "variableSetterType" : "SshPublicKey"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "SshPublicKey",
              "variableName" : "member",
              "variableType" : "SshPublicKey",
              "documentation" : "",
              "simpleType" : "SshPublicKey",
              "variableSetterType" : "SshPublicKey"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "SshPublicKey",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "SshPublicKey",
          "templateImplType" : "java.util.ArrayList<SshPublicKey>",
          "templateType" : "java.util.List<SshPublicKey>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "SshPublicKeys",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.</p>\n@param sshPublicKeys This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.*/",
        "setterMethodName" : "setSshPublicKeys",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<SshPublicKey>",
          "variableName" : "sshPublicKeys",
          "variableType" : "java.util.List<SshPublicKey>",
          "documentation" : "",
          "simpleType" : "List<SshPublicKey>",
          "variableSetterType" : "java.util.Collection<SshPublicKey>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSshPublicKeys(java.util.Collection)} or {@link #withSshPublicKeys(java.util.Collection)} if you want to override the existing values.</p>\n@param sshPublicKeys This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<SshPublicKey>",
          "variableName" : "sshPublicKeys",
          "variableType" : "java.util.List<SshPublicKey>",
          "documentation" : "<p>This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.</p>",
          "simpleType" : "List<SshPublicKey>",
          "variableSetterType" : "java.util.Collection<SshPublicKey>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Tags",
        "c2jShape" : "Tags",
        "deprecated" : false,
        "documentation" : "<p>This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.</p>\n@param tags This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.</p>\n@return This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.</p>\n@param tags This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UserName",
        "c2jShape" : "UserName",
        "deprecated" : false,
        "documentation" : "<p>This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.</p>\n@param userName This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUserName",
        "getterDocumentation" : "/**<p>This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.</p>\n@return This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.*/",
        "getterMethodName" : "getUserName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UserName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UserName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UserName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.</p>\n@param userName This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.*/",
        "setterMethodName" : "setUserName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.</p>\n@param userName This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "<p>This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.</p>\n@param arn This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.</p>\n@return This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.</p>\n@param arn This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.</p>\n@param arn This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "HomeDirectory" : {
          "c2jName" : "HomeDirectory",
          "c2jShape" : "HomeDirectory",
          "deprecated" : false,
          "documentation" : "<p>This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.</p>\n@param homeDirectory This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withHomeDirectory",
          "getterDocumentation" : "/**<p>This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.</p>\n@return This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.*/",
          "getterMethodName" : "getHomeDirectory",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "HomeDirectory",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "HomeDirectory",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "HomeDirectory",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.</p>\n@param homeDirectory This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.*/",
          "setterMethodName" : "setHomeDirectory",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "homeDirectory",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.</p>\n@param homeDirectory This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "homeDirectory",
            "variableType" : "String",
            "documentation" : "<p>This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Policy" : {
          "c2jName" : "Policy",
          "c2jShape" : "Policy",
          "deprecated" : false,
          "documentation" : "<p>Specifies the name of the policy in use for the described user.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies the name of the policy in use for the described user.</p>\n@param policy Specifies the name of the policy in use for the described user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicy",
          "getterDocumentation" : "/**<p>Specifies the name of the policy in use for the described user.</p>\n@return Specifies the name of the policy in use for the described user.*/",
          "getterMethodName" : "getPolicy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Policy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Policy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Policy",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Specifies the name of the policy in use for the described user.</p>\n@param policy Specifies the name of the policy in use for the described user.*/",
          "setterMethodName" : "setPolicy",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "policy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies the name of the policy in use for the described user.</p>\n@param policy Specifies the name of the policy in use for the described user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "policy",
            "variableType" : "String",
            "documentation" : "<p>Specifies the name of the policy in use for the described user.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Role" : {
          "c2jName" : "Role",
          "c2jShape" : "Role",
          "deprecated" : false,
          "documentation" : "<p>This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRole",
          "getterDocumentation" : "/**<p>This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@return This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.*/",
          "getterMethodName" : "getRole",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Role",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Role",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Role",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.*/",
          "setterMethodName" : "setRole",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "role",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "role",
            "variableType" : "String",
            "documentation" : "<p>This property specifies the IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user’s transfer requests.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SshPublicKeys" : {
          "c2jName" : "SshPublicKeys",
          "c2jShape" : "SshPublicKeys",
          "deprecated" : false,
          "documentation" : "<p>This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.</p>\n@param sshPublicKeys This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSshPublicKeys",
          "getterDocumentation" : "/**<p>This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.</p>\n@return This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.*/",
          "getterMethodName" : "getSshPublicKeys",
          "getterModel" : {
            "returnType" : "java.util.List<SshPublicKey>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SshPublicKeys",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SshPublicKeys",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "SshPublicKey",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "SshPublicKey",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "SshPublicKey",
                "variableName" : "member",
                "variableType" : "SshPublicKey",
                "documentation" : "",
                "simpleType" : "SshPublicKey",
                "variableSetterType" : "SshPublicKey"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "SshPublicKey",
                "variableName" : "member",
                "variableType" : "SshPublicKey",
                "documentation" : "",
                "simpleType" : "SshPublicKey",
                "variableSetterType" : "SshPublicKey"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "SshPublicKey",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "SshPublicKey",
            "templateImplType" : "java.util.ArrayList<SshPublicKey>",
            "templateType" : "java.util.List<SshPublicKey>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "SshPublicKeys",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.</p>\n@param sshPublicKeys This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.*/",
          "setterMethodName" : "setSshPublicKeys",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<SshPublicKey>",
            "variableName" : "sshPublicKeys",
            "variableType" : "java.util.List<SshPublicKey>",
            "documentation" : "",
            "simpleType" : "List<SshPublicKey>",
            "variableSetterType" : "java.util.Collection<SshPublicKey>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSshPublicKeys(java.util.Collection)} or {@link #withSshPublicKeys(java.util.Collection)} if you want to override the existing values.</p>\n@param sshPublicKeys This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<SshPublicKey>",
            "variableName" : "sshPublicKeys",
            "variableType" : "java.util.List<SshPublicKey>",
            "documentation" : "<p>This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.</p>",
            "simpleType" : "List<SshPublicKey>",
            "variableSetterType" : "java.util.Collection<SshPublicKey>"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "Tags",
          "deprecated" : false,
          "documentation" : "<p>This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.</p>\n@param tags This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.</p>\n@return This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.</p>\n@param tags This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        },
        "UserName" : {
          "c2jName" : "UserName",
          "c2jShape" : "UserName",
          "deprecated" : false,
          "documentation" : "<p>This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.</p>\n@param userName This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUserName",
          "getterDocumentation" : "/**<p>This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.</p>\n@return This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.*/",
          "getterMethodName" : "getUserName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UserName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UserName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UserName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.</p>\n@param userName This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.*/",
          "setterMethodName" : "setUserName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.</p>\n@param userName This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "<p>This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Arn" ],
      "shapeName" : "DescribedUser",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribedUser",
        "variableName" : "describedUser",
        "variableType" : "DescribedUser",
        "documentation" : null,
        "simpleType" : "DescribedUser",
        "variableSetterType" : "DescribedUser"
      },
      "wrapper" : false
    },
    "IdentityProviderDetails" : {
      "c2jName" : "IdentityProviderDetails",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information related to the type of user authentication that is in use for a server's users. A server can only have one method of authentication.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Url",
        "c2jShape" : "Url",
        "deprecated" : false,
        "documentation" : "<p>The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.</p>\n@param url The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUrl",
        "getterDocumentation" : "/**<p>The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.</p>\n@return The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.*/",
        "getterMethodName" : "getUrl",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Url",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Url",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Url",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.</p>\n@param url The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.*/",
        "setterMethodName" : "setUrl",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "url",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.</p>\n@param url The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "url",
          "variableType" : "String",
          "documentation" : "<p>The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "InvocationRole",
        "c2jShape" : "Role",
        "deprecated" : false,
        "documentation" : "<p>The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.</p>\n@param invocationRole The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withInvocationRole",
        "getterDocumentation" : "/**<p>The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.</p>\n@return The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.*/",
        "getterMethodName" : "getInvocationRole",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "InvocationRole",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "InvocationRole",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "InvocationRole",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.</p>\n@param invocationRole The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.*/",
        "setterMethodName" : "setInvocationRole",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "invocationRole",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.</p>\n@param invocationRole The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "invocationRole",
          "variableType" : "String",
          "documentation" : "<p>The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "InvocationRole" : {
          "c2jName" : "InvocationRole",
          "c2jShape" : "Role",
          "deprecated" : false,
          "documentation" : "<p>The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.</p>\n@param invocationRole The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withInvocationRole",
          "getterDocumentation" : "/**<p>The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.</p>\n@return The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.*/",
          "getterMethodName" : "getInvocationRole",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "InvocationRole",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "InvocationRole",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "InvocationRole",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.</p>\n@param invocationRole The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.*/",
          "setterMethodName" : "setInvocationRole",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "invocationRole",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.</p>\n@param invocationRole The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "invocationRole",
            "variableType" : "String",
            "documentation" : "<p>The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Url" : {
          "c2jName" : "Url",
          "c2jShape" : "Url",
          "deprecated" : false,
          "documentation" : "<p>The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.</p>\n@param url The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUrl",
          "getterDocumentation" : "/**<p>The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.</p>\n@return The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.*/",
          "getterMethodName" : "getUrl",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Url",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Url",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Url",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.</p>\n@param url The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.*/",
          "setterMethodName" : "setUrl",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "url",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.</p>\n@param url The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "url",
            "variableType" : "String",
            "documentation" : "<p>The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "IdentityProviderDetails",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "IdentityProviderDetails",
        "variableName" : "identityProviderDetails",
        "variableType" : "IdentityProviderDetails",
        "documentation" : null,
        "simpleType" : "IdentityProviderDetails",
        "variableSetterType" : "IdentityProviderDetails"
      },
      "wrapper" : false
    },
    "IdentityProviderType" : {
      "c2jName" : "IdentityProviderType",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information related to the type of user authentication that is in use for a server's users. For <code>SERVICE_MANAGED</code> authentication, the Secure Shell (SSH) public keys are stored with a user on an SFTP server instance. For <code>API_GATEWAY</code> authentication, your custom authentication method is implemented by using an API call. A server can only have one method of authentication.</p>",
      "enums" : [ {
        "name" : "SERVICE_MANAGED",
        "value" : "SERVICE_MANAGED"
      }, {
        "name" : "API_GATEWAY",
        "value" : "API_GATEWAY"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "IdentityProviderType",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "IdentityProviderType",
        "variableName" : "identityProviderType",
        "variableType" : "IdentityProviderType",
        "documentation" : null,
        "simpleType" : "IdentityProviderType",
        "variableSetterType" : "IdentityProviderType"
      },
      "wrapper" : false
    },
    "ImportSshPublicKeyRequest" : {
      "c2jName" : "ImportSshPublicKeyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ImportSshPublicKey",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.ImportSshPublicKey",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system-assigned unique identifier for an SFTP server.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@return A system-assigned unique identifier for an SFTP server.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SshPublicKeyBody",
        "c2jShape" : "SshPublicKeyBody",
        "deprecated" : false,
        "documentation" : "<p>The public key portion of an SSH key pair.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The public key portion of an SSH key pair.</p>\n@param sshPublicKeyBody The public key portion of an SSH key pair.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSshPublicKeyBody",
        "getterDocumentation" : "/**<p>The public key portion of an SSH key pair.</p>\n@return The public key portion of an SSH key pair.*/",
        "getterMethodName" : "getSshPublicKeyBody",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SshPublicKeyBody",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SshPublicKeyBody",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SshPublicKeyBody",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The public key portion of an SSH key pair.</p>\n@param sshPublicKeyBody The public key portion of an SSH key pair.*/",
        "setterMethodName" : "setSshPublicKeyBody",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sshPublicKeyBody",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The public key portion of an SSH key pair.</p>\n@param sshPublicKeyBody The public key portion of an SSH key pair.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sshPublicKeyBody",
          "variableType" : "String",
          "documentation" : "<p>The public key portion of an SSH key pair.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UserName",
        "c2jShape" : "UserName",
        "deprecated" : false,
        "documentation" : "<p>The name of the user account that is assigned to one or more servers.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the user account that is assigned to one or more servers.</p>\n@param userName The name of the user account that is assigned to one or more servers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUserName",
        "getterDocumentation" : "/**<p>The name of the user account that is assigned to one or more servers.</p>\n@return The name of the user account that is assigned to one or more servers.*/",
        "getterMethodName" : "getUserName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UserName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UserName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UserName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the user account that is assigned to one or more servers.</p>\n@param userName The name of the user account that is assigned to one or more servers.*/",
        "setterMethodName" : "setUserName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the user account that is assigned to one or more servers.</p>\n@param userName The name of the user account that is assigned to one or more servers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "<p>The name of the user account that is assigned to one or more servers.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@return A system-assigned unique identifier for an SFTP server.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system-assigned unique identifier for an SFTP server.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SshPublicKeyBody" : {
          "c2jName" : "SshPublicKeyBody",
          "c2jShape" : "SshPublicKeyBody",
          "deprecated" : false,
          "documentation" : "<p>The public key portion of an SSH key pair.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The public key portion of an SSH key pair.</p>\n@param sshPublicKeyBody The public key portion of an SSH key pair.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSshPublicKeyBody",
          "getterDocumentation" : "/**<p>The public key portion of an SSH key pair.</p>\n@return The public key portion of an SSH key pair.*/",
          "getterMethodName" : "getSshPublicKeyBody",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SshPublicKeyBody",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SshPublicKeyBody",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SshPublicKeyBody",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The public key portion of an SSH key pair.</p>\n@param sshPublicKeyBody The public key portion of an SSH key pair.*/",
          "setterMethodName" : "setSshPublicKeyBody",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sshPublicKeyBody",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The public key portion of an SSH key pair.</p>\n@param sshPublicKeyBody The public key portion of an SSH key pair.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sshPublicKeyBody",
            "variableType" : "String",
            "documentation" : "<p>The public key portion of an SSH key pair.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UserName" : {
          "c2jName" : "UserName",
          "c2jShape" : "UserName",
          "deprecated" : false,
          "documentation" : "<p>The name of the user account that is assigned to one or more servers.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the user account that is assigned to one or more servers.</p>\n@param userName The name of the user account that is assigned to one or more servers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUserName",
          "getterDocumentation" : "/**<p>The name of the user account that is assigned to one or more servers.</p>\n@return The name of the user account that is assigned to one or more servers.*/",
          "getterMethodName" : "getUserName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UserName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UserName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UserName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the user account that is assigned to one or more servers.</p>\n@param userName The name of the user account that is assigned to one or more servers.*/",
          "setterMethodName" : "setUserName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the user account that is assigned to one or more servers.</p>\n@param userName The name of the user account that is assigned to one or more servers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "<p>The name of the user account that is assigned to one or more servers.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId", "SshPublicKeyBody", "UserName" ],
      "shapeName" : "ImportSshPublicKeyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImportSshPublicKeyRequest",
        "variableName" : "importSshPublicKeyRequest",
        "variableType" : "ImportSshPublicKeyRequest",
        "documentation" : null,
        "simpleType" : "ImportSshPublicKeyRequest",
        "variableSetterType" : "ImportSshPublicKeyRequest"
      },
      "wrapper" : false
    },
    "ImportSshPublicKeyResult" : {
      "c2jName" : "ImportSshPublicKeyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>This response identifies the user, server they belong to, and the identifier of the SSH public key associated with that user. A user can have more than one key on each server that they are associate with.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system-assigned unique identifier for an SFTP server.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@return A system-assigned unique identifier for an SFTP server.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SshPublicKeyId",
        "c2jShape" : "SshPublicKeyId",
        "deprecated" : false,
        "documentation" : "<p>This identifier is the name given to a public key by the system that was imported.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This identifier is the name given to a public key by the system that was imported.</p>\n@param sshPublicKeyId This identifier is the name given to a public key by the system that was imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSshPublicKeyId",
        "getterDocumentation" : "/**<p>This identifier is the name given to a public key by the system that was imported.</p>\n@return This identifier is the name given to a public key by the system that was imported.*/",
        "getterMethodName" : "getSshPublicKeyId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SshPublicKeyId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SshPublicKeyId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SshPublicKeyId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This identifier is the name given to a public key by the system that was imported.</p>\n@param sshPublicKeyId This identifier is the name given to a public key by the system that was imported.*/",
        "setterMethodName" : "setSshPublicKeyId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sshPublicKeyId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This identifier is the name given to a public key by the system that was imported.</p>\n@param sshPublicKeyId This identifier is the name given to a public key by the system that was imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sshPublicKeyId",
          "variableType" : "String",
          "documentation" : "<p>This identifier is the name given to a public key by the system that was imported.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UserName",
        "c2jShape" : "UserName",
        "deprecated" : false,
        "documentation" : "<p>A user name assigned to the <code>ServerID</code> value that you specified.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A user name assigned to the <code>ServerID</code> value that you specified.</p>\n@param userName A user name assigned to the <code>ServerID</code> value that you specified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUserName",
        "getterDocumentation" : "/**<p>A user name assigned to the <code>ServerID</code> value that you specified.</p>\n@return A user name assigned to the <code>ServerID</code> value that you specified.*/",
        "getterMethodName" : "getUserName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UserName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UserName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UserName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A user name assigned to the <code>ServerID</code> value that you specified.</p>\n@param userName A user name assigned to the <code>ServerID</code> value that you specified.*/",
        "setterMethodName" : "setUserName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A user name assigned to the <code>ServerID</code> value that you specified.</p>\n@param userName A user name assigned to the <code>ServerID</code> value that you specified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "<p>A user name assigned to the <code>ServerID</code> value that you specified.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@return A system-assigned unique identifier for an SFTP server.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server.</p>\n@param serverId A system-assigned unique identifier for an SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system-assigned unique identifier for an SFTP server.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SshPublicKeyId" : {
          "c2jName" : "SshPublicKeyId",
          "c2jShape" : "SshPublicKeyId",
          "deprecated" : false,
          "documentation" : "<p>This identifier is the name given to a public key by the system that was imported.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This identifier is the name given to a public key by the system that was imported.</p>\n@param sshPublicKeyId This identifier is the name given to a public key by the system that was imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSshPublicKeyId",
          "getterDocumentation" : "/**<p>This identifier is the name given to a public key by the system that was imported.</p>\n@return This identifier is the name given to a public key by the system that was imported.*/",
          "getterMethodName" : "getSshPublicKeyId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SshPublicKeyId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SshPublicKeyId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SshPublicKeyId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This identifier is the name given to a public key by the system that was imported.</p>\n@param sshPublicKeyId This identifier is the name given to a public key by the system that was imported.*/",
          "setterMethodName" : "setSshPublicKeyId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sshPublicKeyId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This identifier is the name given to a public key by the system that was imported.</p>\n@param sshPublicKeyId This identifier is the name given to a public key by the system that was imported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sshPublicKeyId",
            "variableType" : "String",
            "documentation" : "<p>This identifier is the name given to a public key by the system that was imported.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UserName" : {
          "c2jName" : "UserName",
          "c2jShape" : "UserName",
          "deprecated" : false,
          "documentation" : "<p>A user name assigned to the <code>ServerID</code> value that you specified.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A user name assigned to the <code>ServerID</code> value that you specified.</p>\n@param userName A user name assigned to the <code>ServerID</code> value that you specified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUserName",
          "getterDocumentation" : "/**<p>A user name assigned to the <code>ServerID</code> value that you specified.</p>\n@return A user name assigned to the <code>ServerID</code> value that you specified.*/",
          "getterMethodName" : "getUserName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UserName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UserName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UserName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A user name assigned to the <code>ServerID</code> value that you specified.</p>\n@param userName A user name assigned to the <code>ServerID</code> value that you specified.*/",
          "setterMethodName" : "setUserName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A user name assigned to the <code>ServerID</code> value that you specified.</p>\n@param userName A user name assigned to the <code>ServerID</code> value that you specified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "<p>A user name assigned to the <code>ServerID</code> value that you specified.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId", "SshPublicKeyId", "UserName" ],
      "shapeName" : "ImportSshPublicKeyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImportSshPublicKeyResult",
        "variableName" : "importSshPublicKeyResult",
        "variableType" : "ImportSshPublicKeyResult",
        "documentation" : null,
        "simpleType" : "ImportSshPublicKeyResult",
        "variableSetterType" : "ImportSshPublicKeyResult"
      },
      "wrapper" : false
    },
    "InternalServiceErrorException" : {
      "c2jName" : "InternalServiceError",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
      "enums" : null,
      "errorCode" : "InternalServiceError",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Message" ],
      "shapeName" : "InternalServiceErrorException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InternalServiceErrorException",
        "variableName" : "internalServiceErrorException",
        "variableType" : "InternalServiceErrorException",
        "documentation" : null,
        "simpleType" : "InternalServiceErrorException",
        "variableSetterType" : "InternalServiceErrorException"
      },
      "wrapper" : false
    },
    "InvalidNextTokenException" : {
      "c2jName" : "InvalidNextTokenException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The <code>NextToken</code> parameter that was passed is invalid.</p>",
      "enums" : null,
      "errorCode" : "InvalidNextTokenException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Message" ],
      "shapeName" : "InvalidNextTokenException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidNextTokenException",
        "variableName" : "invalidNextTokenException",
        "variableType" : "InvalidNextTokenException",
        "documentation" : null,
        "simpleType" : "InvalidNextTokenException",
        "variableSetterType" : "InvalidNextTokenException"
      },
      "wrapper" : false
    },
    "InvalidRequestException" : {
      "c2jName" : "InvalidRequestException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>This exception is thrown when the client submits a malformed request.</p>",
      "enums" : null,
      "errorCode" : "InvalidRequestException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Message" ],
      "shapeName" : "InvalidRequestException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidRequestException",
        "variableName" : "invalidRequestException",
        "variableType" : "InvalidRequestException",
        "documentation" : null,
        "simpleType" : "InvalidRequestException",
        "variableSetterType" : "InvalidRequestException"
      },
      "wrapper" : false
    },
    "ListServersRequest" : {
      "c2jName" : "ListServersRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListServers",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.ListServers",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>Specifies the number of servers to return as a response to the <code>ListServers</code> query.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies the number of servers to return as a response to the <code>ListServers</code> query.</p>\n@param maxResults Specifies the number of servers to return as a response to the <code>ListServers</code> query.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>Specifies the number of servers to return as a response to the <code>ListServers</code> query.</p>\n@return Specifies the number of servers to return as a response to the <code>ListServers</code> query.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Specifies the number of servers to return as a response to the <code>ListServers</code> query.</p>\n@param maxResults Specifies the number of servers to return as a response to the <code>ListServers</code> query.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies the number of servers to return as a response to the <code>ListServers</code> query.</p>\n@param maxResults Specifies the number of servers to return as a response to the <code>ListServers</code> query.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>Specifies the number of servers to return as a response to the <code>ListServers</code> query.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.</p>\n@param nextToken When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.</p>\n@return When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.</p>\n@param nextToken When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.</p>\n@param nextToken When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>Specifies the number of servers to return as a response to the <code>ListServers</code> query.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies the number of servers to return as a response to the <code>ListServers</code> query.</p>\n@param maxResults Specifies the number of servers to return as a response to the <code>ListServers</code> query.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>Specifies the number of servers to return as a response to the <code>ListServers</code> query.</p>\n@return Specifies the number of servers to return as a response to the <code>ListServers</code> query.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Specifies the number of servers to return as a response to the <code>ListServers</code> query.</p>\n@param maxResults Specifies the number of servers to return as a response to the <code>ListServers</code> query.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies the number of servers to return as a response to the <code>ListServers</code> query.</p>\n@param maxResults Specifies the number of servers to return as a response to the <code>ListServers</code> query.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>Specifies the number of servers to return as a response to the <code>ListServers</code> query.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.</p>\n@param nextToken When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.</p>\n@return When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.</p>\n@param nextToken When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.</p>\n@param nextToken When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListServersRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListServersRequest",
        "variableName" : "listServersRequest",
        "variableType" : "ListServersRequest",
        "documentation" : null,
        "simpleType" : "ListServersRequest",
        "variableSetterType" : "ListServersRequest"
      },
      "wrapper" : false
    },
    "ListServersResult" : {
      "c2jName" : "ListServersResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.</p>\n@param nextToken When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.</p>\n@return When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.</p>\n@param nextToken When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.</p>\n@param nextToken When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Servers",
        "c2jShape" : "ListedServers",
        "deprecated" : false,
        "documentation" : "<p>An array of servers that were listed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of servers that were listed.</p>\n@param servers An array of servers that were listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServers",
        "getterDocumentation" : "/**<p>An array of servers that were listed.</p>\n@return An array of servers that were listed.*/",
        "getterMethodName" : "getServers",
        "getterModel" : {
          "returnType" : "java.util.List<ListedServer>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Servers",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Servers",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ListedServer",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ListedServer",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ListedServer",
              "variableName" : "member",
              "variableType" : "ListedServer",
              "documentation" : "",
              "simpleType" : "ListedServer",
              "variableSetterType" : "ListedServer"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ListedServer",
              "variableName" : "member",
              "variableType" : "ListedServer",
              "documentation" : "",
              "simpleType" : "ListedServer",
              "variableSetterType" : "ListedServer"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ListedServer",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ListedServer",
          "templateImplType" : "java.util.ArrayList<ListedServer>",
          "templateType" : "java.util.List<ListedServer>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Servers",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An array of servers that were listed.</p>\n@param servers An array of servers that were listed.*/",
        "setterMethodName" : "setServers",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ListedServer>",
          "variableName" : "servers",
          "variableType" : "java.util.List<ListedServer>",
          "documentation" : "",
          "simpleType" : "List<ListedServer>",
          "variableSetterType" : "java.util.Collection<ListedServer>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of servers that were listed.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setServers(java.util.Collection)} or {@link #withServers(java.util.Collection)} if you want to override the existing values.</p>\n@param servers An array of servers that were listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ListedServer>",
          "variableName" : "servers",
          "variableType" : "java.util.List<ListedServer>",
          "documentation" : "<p>An array of servers that were listed.</p>",
          "simpleType" : "List<ListedServer>",
          "variableSetterType" : "java.util.Collection<ListedServer>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.</p>\n@param nextToken When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.</p>\n@return When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.</p>\n@param nextToken When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.</p>\n@param nextToken When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Servers" : {
          "c2jName" : "Servers",
          "c2jShape" : "ListedServers",
          "deprecated" : false,
          "documentation" : "<p>An array of servers that were listed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of servers that were listed.</p>\n@param servers An array of servers that were listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServers",
          "getterDocumentation" : "/**<p>An array of servers that were listed.</p>\n@return An array of servers that were listed.*/",
          "getterMethodName" : "getServers",
          "getterModel" : {
            "returnType" : "java.util.List<ListedServer>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Servers",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Servers",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ListedServer",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ListedServer",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ListedServer",
                "variableName" : "member",
                "variableType" : "ListedServer",
                "documentation" : "",
                "simpleType" : "ListedServer",
                "variableSetterType" : "ListedServer"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ListedServer",
                "variableName" : "member",
                "variableType" : "ListedServer",
                "documentation" : "",
                "simpleType" : "ListedServer",
                "variableSetterType" : "ListedServer"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ListedServer",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ListedServer",
            "templateImplType" : "java.util.ArrayList<ListedServer>",
            "templateType" : "java.util.List<ListedServer>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Servers",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An array of servers that were listed.</p>\n@param servers An array of servers that were listed.*/",
          "setterMethodName" : "setServers",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ListedServer>",
            "variableName" : "servers",
            "variableType" : "java.util.List<ListedServer>",
            "documentation" : "",
            "simpleType" : "List<ListedServer>",
            "variableSetterType" : "java.util.Collection<ListedServer>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of servers that were listed.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setServers(java.util.Collection)} or {@link #withServers(java.util.Collection)} if you want to override the existing values.</p>\n@param servers An array of servers that were listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ListedServer>",
            "variableName" : "servers",
            "variableType" : "java.util.List<ListedServer>",
            "documentation" : "<p>An array of servers that were listed.</p>",
            "simpleType" : "List<ListedServer>",
            "variableSetterType" : "java.util.Collection<ListedServer>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Servers" ],
      "shapeName" : "ListServersResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListServersResult",
        "variableName" : "listServersResult",
        "variableType" : "ListServersResult",
        "documentation" : null,
        "simpleType" : "ListServersResult",
        "variableSetterType" : "ListServersResult"
      },
      "wrapper" : false
    },
    "ListTagsForResourceRequest" : {
      "c2jName" : "ListTagsForResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListTagsForResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.ListTagsForResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.</p>\n@param arn Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.</p>\n@return Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.</p>\n@param arn Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.</p>\n@param arn Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param maxResults \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**\n@return */",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**\n@param maxResults */",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**\n@param maxResults \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param nextToken \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**\n@return */",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**\n@param nextToken */",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**\n@param nextToken \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.</p>\n@param arn Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.</p>\n@return Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.</p>\n@param arn Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.</p>\n@param arn Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param maxResults \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**\n@return */",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**\n@param maxResults */",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**\n@param maxResults \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param nextToken \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**\n@return */",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**\n@param nextToken */",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**\n@param nextToken \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Arn" ],
      "shapeName" : "ListTagsForResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTagsForResourceRequest",
        "variableName" : "listTagsForResourceRequest",
        "variableType" : "ListTagsForResourceRequest",
        "documentation" : null,
        "simpleType" : "ListTagsForResourceRequest",
        "variableSetterType" : "ListTagsForResourceRequest"
      },
      "wrapper" : false
    },
    "ListTagsForResourceResult" : {
      "c2jName" : "ListTagsForResourceResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>This value is the ARN you specified to list the tags of.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This value is the ARN you specified to list the tags of.</p>\n@param arn This value is the ARN you specified to list the tags of.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>This value is the ARN you specified to list the tags of.</p>\n@return This value is the ARN you specified to list the tags of.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This value is the ARN you specified to list the tags of.</p>\n@param arn This value is the ARN you specified to list the tags of.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This value is the ARN you specified to list the tags of.</p>\n@param arn This value is the ARN you specified to list the tags of.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>This value is the ARN you specified to list the tags of.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param nextToken \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**\n@return */",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**\n@param nextToken */",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**\n@param nextToken \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Tags",
        "c2jShape" : "Tags",
        "deprecated" : false,
        "documentation" : "<p>Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.</p>\n@param tags Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.</p>\n@return Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.</p>\n@param tags Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>This value is the ARN you specified to list the tags of.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This value is the ARN you specified to list the tags of.</p>\n@param arn This value is the ARN you specified to list the tags of.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>This value is the ARN you specified to list the tags of.</p>\n@return This value is the ARN you specified to list the tags of.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This value is the ARN you specified to list the tags of.</p>\n@param arn This value is the ARN you specified to list the tags of.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This value is the ARN you specified to list the tags of.</p>\n@param arn This value is the ARN you specified to list the tags of.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>This value is the ARN you specified to list the tags of.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param nextToken \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**\n@return */",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**\n@param nextToken */",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**\n@param nextToken \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "Tags",
          "deprecated" : false,
          "documentation" : "<p>Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.</p>\n@param tags Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.</p>\n@return Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.</p>\n@param tags Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListTagsForResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTagsForResourceResult",
        "variableName" : "listTagsForResourceResult",
        "variableType" : "ListTagsForResourceResult",
        "documentation" : null,
        "simpleType" : "ListTagsForResourceResult",
        "variableSetterType" : "ListTagsForResourceResult"
      },
      "wrapper" : false
    },
    "ListUsersRequest" : {
      "c2jName" : "ListUsersRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListUsers",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.ListUsers",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "MaxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>Specifies the number of users to return as a response to the <code>ListUsers</code> request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies the number of users to return as a response to the <code>ListUsers</code> request.</p>\n@param maxResults Specifies the number of users to return as a response to the <code>ListUsers</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>Specifies the number of users to return as a response to the <code>ListUsers</code> request.</p>\n@return Specifies the number of users to return as a response to the <code>ListUsers</code> request.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Specifies the number of users to return as a response to the <code>ListUsers</code> request.</p>\n@param maxResults Specifies the number of users to return as a response to the <code>ListUsers</code> request.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies the number of users to return as a response to the <code>ListUsers</code> request.</p>\n@param maxResults Specifies the number of users to return as a response to the <code>ListUsers</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>Specifies the number of users to return as a response to the <code>ListUsers</code> request.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>\n@param nextToken When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>\n@return When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>\n@param nextToken When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>\n@param nextToken When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.</p>\n@param serverId A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.</p>\n@return A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.</p>\n@param serverId A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.</p>\n@param serverId A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>Specifies the number of users to return as a response to the <code>ListUsers</code> request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies the number of users to return as a response to the <code>ListUsers</code> request.</p>\n@param maxResults Specifies the number of users to return as a response to the <code>ListUsers</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>Specifies the number of users to return as a response to the <code>ListUsers</code> request.</p>\n@return Specifies the number of users to return as a response to the <code>ListUsers</code> request.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Specifies the number of users to return as a response to the <code>ListUsers</code> request.</p>\n@param maxResults Specifies the number of users to return as a response to the <code>ListUsers</code> request.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies the number of users to return as a response to the <code>ListUsers</code> request.</p>\n@param maxResults Specifies the number of users to return as a response to the <code>ListUsers</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>Specifies the number of users to return as a response to the <code>ListUsers</code> request.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>\n@param nextToken When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>\n@return When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>\n@param nextToken When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>\n@param nextToken When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>When you can get additional results from the <code>ListUsers</code>ListUsers call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.</p>\n@param serverId A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.</p>\n@return A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.</p>\n@param serverId A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.</p>\n@param serverId A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId" ],
      "shapeName" : "ListUsersRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListUsersRequest",
        "variableName" : "listUsersRequest",
        "variableType" : "ListUsersRequest",
        "documentation" : null,
        "simpleType" : "ListUsersRequest",
        "variableSetterType" : "ListUsersRequest"
      },
      "wrapper" : false
    },
    "ListUsersResult" : {
      "c2jName" : "ListUsersResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>\n@param nextToken When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>\n@return When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>\n@param nextToken When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>\n@param nextToken When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system-assigned unique identifier for an SFTP server that the users are assigned to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that the users are assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that the users are assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that the users are assigned to.</p>\n@return A system-assigned unique identifier for an SFTP server that the users are assigned to.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that the users are assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that the users are assigned to.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that the users are assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that the users are assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server that the users are assigned to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Users",
        "c2jShape" : "ListedUsers",
        "deprecated" : false,
        "documentation" : "<p>Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.</p>\n@param users Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUsers",
        "getterDocumentation" : "/**<p>Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.</p>\n@return Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.*/",
        "getterMethodName" : "getUsers",
        "getterModel" : {
          "returnType" : "java.util.List<ListedUser>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Users",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Users",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ListedUser",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ListedUser",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ListedUser",
              "variableName" : "member",
              "variableType" : "ListedUser",
              "documentation" : "",
              "simpleType" : "ListedUser",
              "variableSetterType" : "ListedUser"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ListedUser",
              "variableName" : "member",
              "variableType" : "ListedUser",
              "documentation" : "",
              "simpleType" : "ListedUser",
              "variableSetterType" : "ListedUser"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ListedUser",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ListedUser",
          "templateImplType" : "java.util.ArrayList<ListedUser>",
          "templateType" : "java.util.List<ListedUser>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Users",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.</p>\n@param users Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.*/",
        "setterMethodName" : "setUsers",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ListedUser>",
          "variableName" : "users",
          "variableType" : "java.util.List<ListedUser>",
          "documentation" : "",
          "simpleType" : "List<ListedUser>",
          "variableSetterType" : "java.util.Collection<ListedUser>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setUsers(java.util.Collection)} or {@link #withUsers(java.util.Collection)} if you want to override the existing values.</p>\n@param users Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ListedUser>",
          "variableName" : "users",
          "variableType" : "java.util.List<ListedUser>",
          "documentation" : "<p>Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.</p>",
          "simpleType" : "List<ListedUser>",
          "variableSetterType" : "java.util.Collection<ListedUser>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>\n@param nextToken When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>\n@return When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>\n@param nextToken When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>\n@param nextToken When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server that the users are assigned to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that the users are assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that the users are assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that the users are assigned to.</p>\n@return A system-assigned unique identifier for an SFTP server that the users are assigned to.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that the users are assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that the users are assigned to.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that the users are assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that the users are assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system-assigned unique identifier for an SFTP server that the users are assigned to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Users" : {
          "c2jName" : "Users",
          "c2jShape" : "ListedUsers",
          "deprecated" : false,
          "documentation" : "<p>Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.</p>\n@param users Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUsers",
          "getterDocumentation" : "/**<p>Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.</p>\n@return Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.*/",
          "getterMethodName" : "getUsers",
          "getterModel" : {
            "returnType" : "java.util.List<ListedUser>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Users",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Users",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ListedUser",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ListedUser",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ListedUser",
                "variableName" : "member",
                "variableType" : "ListedUser",
                "documentation" : "",
                "simpleType" : "ListedUser",
                "variableSetterType" : "ListedUser"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ListedUser",
                "variableName" : "member",
                "variableType" : "ListedUser",
                "documentation" : "",
                "simpleType" : "ListedUser",
                "variableSetterType" : "ListedUser"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ListedUser",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ListedUser",
            "templateImplType" : "java.util.ArrayList<ListedUser>",
            "templateType" : "java.util.List<ListedUser>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Users",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.</p>\n@param users Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.*/",
          "setterMethodName" : "setUsers",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ListedUser>",
            "variableName" : "users",
            "variableType" : "java.util.List<ListedUser>",
            "documentation" : "",
            "simpleType" : "List<ListedUser>",
            "variableSetterType" : "java.util.Collection<ListedUser>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setUsers(java.util.Collection)} or {@link #withUsers(java.util.Collection)} if you want to override the existing values.</p>\n@param users Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ListedUser>",
            "variableName" : "users",
            "variableType" : "java.util.List<ListedUser>",
            "documentation" : "<p>Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.</p>",
            "simpleType" : "List<ListedUser>",
            "variableSetterType" : "java.util.Collection<ListedUser>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId", "Users" ],
      "shapeName" : "ListUsersResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListUsersResult",
        "variableName" : "listUsersResult",
        "variableType" : "ListUsersResult",
        "documentation" : null,
        "simpleType" : "ListUsersResult",
        "variableSetterType" : "ListUsersResult"
      },
      "wrapper" : false
    },
    "ListedServer" : {
      "c2jName" : "ListedServer",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns properties of the server that was specified.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The unique Amazon Resource Name (ARN) for the server to be listed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The unique Amazon Resource Name (ARN) for the server to be listed.</p>\n@param arn The unique Amazon Resource Name (ARN) for the server to be listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>The unique Amazon Resource Name (ARN) for the server to be listed.</p>\n@return The unique Amazon Resource Name (ARN) for the server to be listed.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The unique Amazon Resource Name (ARN) for the server to be listed.</p>\n@param arn The unique Amazon Resource Name (ARN) for the server to be listed.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The unique Amazon Resource Name (ARN) for the server to be listed.</p>\n@param arn The unique Amazon Resource Name (ARN) for the server to be listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>The unique Amazon Resource Name (ARN) for the server to be listed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "IdentityProviderType",
        "c2jShape" : "IdentityProviderType",
        "deprecated" : false,
        "documentation" : "<p>The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.</p>",
        "enumType" : "IdentityProviderType",
        "fluentSetterDocumentation" : "/**<p>The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.</p>\n@param identityProviderType The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IdentityProviderType*/",
        "fluentSetterMethodName" : "withIdentityProviderType",
        "getterDocumentation" : "/**<p>The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.</p>\n@return The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.\n@see IdentityProviderType*/",
        "getterMethodName" : "getIdentityProviderType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IdentityProviderType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IdentityProviderType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "IdentityProviderType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.</p>\n@param identityProviderType The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.\n@see IdentityProviderType*/",
        "setterMethodName" : "setIdentityProviderType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "identityProviderType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.</p>\n@param identityProviderType The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IdentityProviderType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "identityProviderType",
          "variableType" : "String",
          "documentation" : "<p>The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LoggingRole",
        "c2jShape" : "Role",
        "deprecated" : false,
        "documentation" : "<p>The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.</p>\n@param loggingRole The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLoggingRole",
        "getterDocumentation" : "/**<p>The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.</p>\n@return The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.*/",
        "getterMethodName" : "getLoggingRole",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LoggingRole",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LoggingRole",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LoggingRole",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.</p>\n@param loggingRole The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.*/",
        "setterMethodName" : "setLoggingRole",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "loggingRole",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.</p>\n@param loggingRole The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "loggingRole",
          "variableType" : "String",
          "documentation" : "<p>The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>This value is the unique system assigned identifier for the SFTP servers that were listed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This value is the unique system assigned identifier for the SFTP servers that were listed.</p>\n@param serverId This value is the unique system assigned identifier for the SFTP servers that were listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>This value is the unique system assigned identifier for the SFTP servers that were listed.</p>\n@return This value is the unique system assigned identifier for the SFTP servers that were listed.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This value is the unique system assigned identifier for the SFTP servers that were listed.</p>\n@param serverId This value is the unique system assigned identifier for the SFTP servers that were listed.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This value is the unique system assigned identifier for the SFTP servers that were listed.</p>\n@param serverId This value is the unique system assigned identifier for the SFTP servers that were listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>This value is the unique system assigned identifier for the SFTP servers that were listed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "State",
        "c2jShape" : "State",
        "deprecated" : false,
        "documentation" : "<p>This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>",
        "enumType" : "State",
        "fluentSetterDocumentation" : "/**<p>This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>\n@param state This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.\n@return Returns a reference to this object so that method calls can be chained together.\n@see State*/",
        "fluentSetterMethodName" : "withState",
        "getterDocumentation" : "/**<p>This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>\n@return This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.\n@see State*/",
        "getterMethodName" : "getState",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "State",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "State",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "State",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>\n@param state This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.\n@see State*/",
        "setterMethodName" : "setState",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "state",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>\n@param state This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.\n@return Returns a reference to this object so that method calls can be chained together.\n@see State*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "state",
          "variableType" : "String",
          "documentation" : "<p>This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UserCount",
        "c2jShape" : "UserCount",
        "deprecated" : false,
        "documentation" : "<p>This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>\n@param userCount This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUserCount",
        "getterDocumentation" : "/**<p>This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>\n@return This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.*/",
        "getterMethodName" : "getUserCount",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UserCount",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UserCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "UserCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>\n@param userCount This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.*/",
        "setterMethodName" : "setUserCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "userCount",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>\n@param userCount This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "userCount",
          "variableType" : "Integer",
          "documentation" : "<p>This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The unique Amazon Resource Name (ARN) for the server to be listed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The unique Amazon Resource Name (ARN) for the server to be listed.</p>\n@param arn The unique Amazon Resource Name (ARN) for the server to be listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>The unique Amazon Resource Name (ARN) for the server to be listed.</p>\n@return The unique Amazon Resource Name (ARN) for the server to be listed.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The unique Amazon Resource Name (ARN) for the server to be listed.</p>\n@param arn The unique Amazon Resource Name (ARN) for the server to be listed.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The unique Amazon Resource Name (ARN) for the server to be listed.</p>\n@param arn The unique Amazon Resource Name (ARN) for the server to be listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>The unique Amazon Resource Name (ARN) for the server to be listed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "IdentityProviderType" : {
          "c2jName" : "IdentityProviderType",
          "c2jShape" : "IdentityProviderType",
          "deprecated" : false,
          "documentation" : "<p>The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.</p>",
          "enumType" : "IdentityProviderType",
          "fluentSetterDocumentation" : "/**<p>The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.</p>\n@param identityProviderType The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IdentityProviderType*/",
          "fluentSetterMethodName" : "withIdentityProviderType",
          "getterDocumentation" : "/**<p>The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.</p>\n@return The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.\n@see IdentityProviderType*/",
          "getterMethodName" : "getIdentityProviderType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IdentityProviderType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IdentityProviderType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "IdentityProviderType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.</p>\n@param identityProviderType The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.\n@see IdentityProviderType*/",
          "setterMethodName" : "setIdentityProviderType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "identityProviderType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.</p>\n@param identityProviderType The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IdentityProviderType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "identityProviderType",
            "variableType" : "String",
            "documentation" : "<p>The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LoggingRole" : {
          "c2jName" : "LoggingRole",
          "c2jShape" : "Role",
          "deprecated" : false,
          "documentation" : "<p>The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.</p>\n@param loggingRole The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLoggingRole",
          "getterDocumentation" : "/**<p>The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.</p>\n@return The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.*/",
          "getterMethodName" : "getLoggingRole",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LoggingRole",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LoggingRole",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LoggingRole",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.</p>\n@param loggingRole The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.*/",
          "setterMethodName" : "setLoggingRole",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "loggingRole",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.</p>\n@param loggingRole The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "loggingRole",
            "variableType" : "String",
            "documentation" : "<p>The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>This value is the unique system assigned identifier for the SFTP servers that were listed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This value is the unique system assigned identifier for the SFTP servers that were listed.</p>\n@param serverId This value is the unique system assigned identifier for the SFTP servers that were listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>This value is the unique system assigned identifier for the SFTP servers that were listed.</p>\n@return This value is the unique system assigned identifier for the SFTP servers that were listed.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This value is the unique system assigned identifier for the SFTP servers that were listed.</p>\n@param serverId This value is the unique system assigned identifier for the SFTP servers that were listed.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This value is the unique system assigned identifier for the SFTP servers that were listed.</p>\n@param serverId This value is the unique system assigned identifier for the SFTP servers that were listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>This value is the unique system assigned identifier for the SFTP servers that were listed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "State" : {
          "c2jName" : "State",
          "c2jShape" : "State",
          "deprecated" : false,
          "documentation" : "<p>This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>",
          "enumType" : "State",
          "fluentSetterDocumentation" : "/**<p>This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>\n@param state This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.\n@return Returns a reference to this object so that method calls can be chained together.\n@see State*/",
          "fluentSetterMethodName" : "withState",
          "getterDocumentation" : "/**<p>This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>\n@return This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.\n@see State*/",
          "getterMethodName" : "getState",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "State",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "State",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "State",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>\n@param state This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.\n@see State*/",
          "setterMethodName" : "setState",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "state",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>\n@param state This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.\n@return Returns a reference to this object so that method calls can be chained together.\n@see State*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "state",
            "variableType" : "String",
            "documentation" : "<p>This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UserCount" : {
          "c2jName" : "UserCount",
          "c2jShape" : "UserCount",
          "deprecated" : false,
          "documentation" : "<p>This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>\n@param userCount This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUserCount",
          "getterDocumentation" : "/**<p>This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>\n@return This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.*/",
          "getterMethodName" : "getUserCount",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UserCount",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UserCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "UserCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>\n@param userCount This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.*/",
          "setterMethodName" : "setUserCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "userCount",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>\n@param userCount This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "userCount",
            "variableType" : "Integer",
            "documentation" : "<p>This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Arn" ],
      "shapeName" : "ListedServer",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListedServer",
        "variableName" : "listedServer",
        "variableType" : "ListedServer",
        "documentation" : null,
        "simpleType" : "ListedServer",
        "variableSetterType" : "ListedServer"
      },
      "wrapper" : false
    },
    "ListedUser" : {
      "c2jName" : "ListedUser",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns properties of the user that you specify.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.</p>\n@param arn This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.</p>\n@return This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.</p>\n@param arn This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.</p>\n@param arn This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "HomeDirectory",
        "c2jShape" : "HomeDirectory",
        "deprecated" : false,
        "documentation" : "<p>This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.</p>\n@param homeDirectory This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withHomeDirectory",
        "getterDocumentation" : "/**<p>This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.</p>\n@return This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.*/",
        "getterMethodName" : "getHomeDirectory",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "HomeDirectory",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "HomeDirectory",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "HomeDirectory",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.</p>\n@param homeDirectory This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.*/",
        "setterMethodName" : "setHomeDirectory",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "homeDirectory",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.</p>\n@param homeDirectory This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "homeDirectory",
          "variableType" : "String",
          "documentation" : "<p>This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Role",
        "c2jShape" : "Role",
        "deprecated" : false,
        "documentation" : "<p>The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.</p>\n@param role The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRole",
        "getterDocumentation" : "/**<p>The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.</p>\n@return The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.*/",
        "getterMethodName" : "getRole",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Role",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Role",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Role",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.</p>\n@param role The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.*/",
        "setterMethodName" : "setRole",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "role",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.</p>\n@param role The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "role",
          "variableType" : "String",
          "documentation" : "<p>The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SshPublicKeyCount",
        "c2jShape" : "SshPublicKeyCount",
        "deprecated" : false,
        "documentation" : "<p>This value is the number of SSH public keys stored for the user you specified.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This value is the number of SSH public keys stored for the user you specified.</p>\n@param sshPublicKeyCount This value is the number of SSH public keys stored for the user you specified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSshPublicKeyCount",
        "getterDocumentation" : "/**<p>This value is the number of SSH public keys stored for the user you specified.</p>\n@return This value is the number of SSH public keys stored for the user you specified.*/",
        "getterMethodName" : "getSshPublicKeyCount",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SshPublicKeyCount",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SshPublicKeyCount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "SshPublicKeyCount",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This value is the number of SSH public keys stored for the user you specified.</p>\n@param sshPublicKeyCount This value is the number of SSH public keys stored for the user you specified.*/",
        "setterMethodName" : "setSshPublicKeyCount",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "sshPublicKeyCount",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This value is the number of SSH public keys stored for the user you specified.</p>\n@param sshPublicKeyCount This value is the number of SSH public keys stored for the user you specified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "sshPublicKeyCount",
          "variableType" : "Integer",
          "documentation" : "<p>This value is the number of SSH public keys stored for the user you specified.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UserName",
        "c2jShape" : "UserName",
        "deprecated" : false,
        "documentation" : "<p>The name of the user whose ARN was specified. User names are used for authentication purposes.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the user whose ARN was specified. User names are used for authentication purposes.</p>\n@param userName The name of the user whose ARN was specified. User names are used for authentication purposes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUserName",
        "getterDocumentation" : "/**<p>The name of the user whose ARN was specified. User names are used for authentication purposes.</p>\n@return The name of the user whose ARN was specified. User names are used for authentication purposes.*/",
        "getterMethodName" : "getUserName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UserName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UserName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UserName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the user whose ARN was specified. User names are used for authentication purposes.</p>\n@param userName The name of the user whose ARN was specified. User names are used for authentication purposes.*/",
        "setterMethodName" : "setUserName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the user whose ARN was specified. User names are used for authentication purposes.</p>\n@param userName The name of the user whose ARN was specified. User names are used for authentication purposes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "<p>The name of the user whose ARN was specified. User names are used for authentication purposes.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.</p>\n@param arn This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.</p>\n@return This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.</p>\n@param arn This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.</p>\n@param arn This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "HomeDirectory" : {
          "c2jName" : "HomeDirectory",
          "c2jShape" : "HomeDirectory",
          "deprecated" : false,
          "documentation" : "<p>This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.</p>\n@param homeDirectory This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withHomeDirectory",
          "getterDocumentation" : "/**<p>This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.</p>\n@return This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.*/",
          "getterMethodName" : "getHomeDirectory",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "HomeDirectory",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "HomeDirectory",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "HomeDirectory",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.</p>\n@param homeDirectory This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.*/",
          "setterMethodName" : "setHomeDirectory",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "homeDirectory",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.</p>\n@param homeDirectory This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "homeDirectory",
            "variableType" : "String",
            "documentation" : "<p>This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Role" : {
          "c2jName" : "Role",
          "c2jShape" : "Role",
          "deprecated" : false,
          "documentation" : "<p>The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.</p>\n@param role The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRole",
          "getterDocumentation" : "/**<p>The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.</p>\n@return The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.*/",
          "getterMethodName" : "getRole",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Role",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Role",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Role",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.</p>\n@param role The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.*/",
          "setterMethodName" : "setRole",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "role",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.</p>\n@param role The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "role",
            "variableType" : "String",
            "documentation" : "<p>The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SshPublicKeyCount" : {
          "c2jName" : "SshPublicKeyCount",
          "c2jShape" : "SshPublicKeyCount",
          "deprecated" : false,
          "documentation" : "<p>This value is the number of SSH public keys stored for the user you specified.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This value is the number of SSH public keys stored for the user you specified.</p>\n@param sshPublicKeyCount This value is the number of SSH public keys stored for the user you specified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSshPublicKeyCount",
          "getterDocumentation" : "/**<p>This value is the number of SSH public keys stored for the user you specified.</p>\n@return This value is the number of SSH public keys stored for the user you specified.*/",
          "getterMethodName" : "getSshPublicKeyCount",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SshPublicKeyCount",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SshPublicKeyCount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "SshPublicKeyCount",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This value is the number of SSH public keys stored for the user you specified.</p>\n@param sshPublicKeyCount This value is the number of SSH public keys stored for the user you specified.*/",
          "setterMethodName" : "setSshPublicKeyCount",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "sshPublicKeyCount",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This value is the number of SSH public keys stored for the user you specified.</p>\n@param sshPublicKeyCount This value is the number of SSH public keys stored for the user you specified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "sshPublicKeyCount",
            "variableType" : "Integer",
            "documentation" : "<p>This value is the number of SSH public keys stored for the user you specified.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "UserName" : {
          "c2jName" : "UserName",
          "c2jShape" : "UserName",
          "deprecated" : false,
          "documentation" : "<p>The name of the user whose ARN was specified. User names are used for authentication purposes.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the user whose ARN was specified. User names are used for authentication purposes.</p>\n@param userName The name of the user whose ARN was specified. User names are used for authentication purposes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUserName",
          "getterDocumentation" : "/**<p>The name of the user whose ARN was specified. User names are used for authentication purposes.</p>\n@return The name of the user whose ARN was specified. User names are used for authentication purposes.*/",
          "getterMethodName" : "getUserName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UserName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UserName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UserName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the user whose ARN was specified. User names are used for authentication purposes.</p>\n@param userName The name of the user whose ARN was specified. User names are used for authentication purposes.*/",
          "setterMethodName" : "setUserName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the user whose ARN was specified. User names are used for authentication purposes.</p>\n@param userName The name of the user whose ARN was specified. User names are used for authentication purposes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "<p>The name of the user whose ARN was specified. User names are used for authentication purposes.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Arn" ],
      "shapeName" : "ListedUser",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListedUser",
        "variableName" : "listedUser",
        "variableType" : "ListedUser",
        "documentation" : null,
        "simpleType" : "ListedUser",
        "variableSetterType" : "ListedUser"
      },
      "wrapper" : false
    },
    "ResourceExistsException" : {
      "c2jName" : "ResourceExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The requested resource does not exist.</p>",
      "enums" : null,
      "errorCode" : "ResourceExistsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Resource",
        "c2jShape" : "Resource",
        "deprecated" : false,
        "documentation" : "",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param resource \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResource",
        "getterDocumentation" : "/**\n@return */",
        "getterMethodName" : "getResource",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Resource",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Resource",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Resource",
        "sensitive" : false,
        "setterDocumentation" : "/**\n@param resource */",
        "setterMethodName" : "setResource",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resource",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**\n@param resource \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resource",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResourceType",
        "c2jShape" : "ResourceType",
        "deprecated" : false,
        "documentation" : "",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param resourceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**\n@return */",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**\n@param resourceType */",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**\n@param resourceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Resource" : {
          "c2jName" : "Resource",
          "c2jShape" : "Resource",
          "deprecated" : false,
          "documentation" : "",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param resource \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResource",
          "getterDocumentation" : "/**\n@return */",
          "getterMethodName" : "getResource",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Resource",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Resource",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Resource",
          "sensitive" : false,
          "setterDocumentation" : "/**\n@param resource */",
          "setterMethodName" : "setResource",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resource",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**\n@param resource \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resource",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "ResourceType",
          "deprecated" : false,
          "documentation" : "",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param resourceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**\n@return */",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**\n@param resourceType */",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**\n@param resourceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Message", "Resource", "ResourceType" ],
      "shapeName" : "ResourceExistsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResourceExistsException",
        "variableName" : "resourceExistsException",
        "variableType" : "ResourceExistsException",
        "documentation" : null,
        "simpleType" : "ResourceExistsException",
        "variableSetterType" : "ResourceExistsException"
      },
      "wrapper" : false
    },
    "ResourceNotFoundException" : {
      "c2jName" : "ResourceNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>This exception is thrown when a resource is not found by the AWS Transfer for SFTP service.</p>",
      "enums" : null,
      "errorCode" : "ResourceNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Resource",
        "c2jShape" : "Resource",
        "deprecated" : false,
        "documentation" : "",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param resource \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResource",
        "getterDocumentation" : "/**\n@return */",
        "getterMethodName" : "getResource",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Resource",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Resource",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Resource",
        "sensitive" : false,
        "setterDocumentation" : "/**\n@param resource */",
        "setterMethodName" : "setResource",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resource",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**\n@param resource \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resource",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ResourceType",
        "c2jShape" : "ResourceType",
        "deprecated" : false,
        "documentation" : "",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param resourceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceType",
        "getterDocumentation" : "/**\n@return */",
        "getterMethodName" : "getResourceType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ResourceType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResourceType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceType",
        "sensitive" : false,
        "setterDocumentation" : "/**\n@param resourceType */",
        "setterMethodName" : "setResourceType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**\n@param resourceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "resourceType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Resource" : {
          "c2jName" : "Resource",
          "c2jShape" : "Resource",
          "deprecated" : false,
          "documentation" : "",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param resource \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResource",
          "getterDocumentation" : "/**\n@return */",
          "getterMethodName" : "getResource",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Resource",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Resource",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Resource",
          "sensitive" : false,
          "setterDocumentation" : "/**\n@param resource */",
          "setterMethodName" : "setResource",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resource",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**\n@param resource \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resource",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceType" : {
          "c2jName" : "ResourceType",
          "c2jShape" : "ResourceType",
          "deprecated" : false,
          "documentation" : "",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param resourceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceType",
          "getterDocumentation" : "/**\n@return */",
          "getterMethodName" : "getResourceType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ResourceType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResourceType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceType",
          "sensitive" : false,
          "setterDocumentation" : "/**\n@param resourceType */",
          "setterMethodName" : "setResourceType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**\n@param resourceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "resourceType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Message", "Resource", "ResourceType" ],
      "shapeName" : "ResourceNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResourceNotFoundException",
        "variableName" : "resourceNotFoundException",
        "variableType" : "ResourceNotFoundException",
        "documentation" : null,
        "simpleType" : "ResourceNotFoundException",
        "variableSetterType" : "ResourceNotFoundException"
      },
      "wrapper" : false
    },
    "ServiceUnavailableException" : {
      "c2jName" : "ServiceUnavailableException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
      "enums" : null,
      "errorCode" : "ServiceUnavailableException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ServiceUnavailableException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ServiceUnavailableException",
        "variableName" : "serviceUnavailableException",
        "variableType" : "ServiceUnavailableException",
        "documentation" : null,
        "simpleType" : "ServiceUnavailableException",
        "variableSetterType" : "ServiceUnavailableException"
      },
      "wrapper" : false
    },
    "SshPublicKey" : {
      "c2jName" : "SshPublicKey",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides information about the public Secure Shell (SSH) key that is associated with a user account for a specific server (as identified by <code>ServerId</code>). The information returned includes the date the key was imported, the public key contents, and the public key ID. A user can store more than one SSH public key associated with their user name on a specific SFTP server.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "DateImported",
        "c2jShape" : "DateImported",
        "deprecated" : false,
        "documentation" : "<p>The date that the public key was added to the user account.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date that the public key was added to the user account.</p>\n@param dateImported The date that the public key was added to the user account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDateImported",
        "getterDocumentation" : "/**<p>The date that the public key was added to the user account.</p>\n@return The date that the public key was added to the user account.*/",
        "getterMethodName" : "getDateImported",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "DateImported",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "DateImported",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "DateImported",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The date that the public key was added to the user account.</p>\n@param dateImported The date that the public key was added to the user account.*/",
        "setterMethodName" : "setDateImported",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "dateImported",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date that the public key was added to the user account.</p>\n@param dateImported The date that the public key was added to the user account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "dateImported",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date that the public key was added to the user account.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SshPublicKeyBody",
        "c2jShape" : "SshPublicKeyBody",
        "deprecated" : false,
        "documentation" : "<p>The content of the SSH public key as specified by the <code>PublicKeyId</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The content of the SSH public key as specified by the <code>PublicKeyId</code>.</p>\n@param sshPublicKeyBody The content of the SSH public key as specified by the <code>PublicKeyId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSshPublicKeyBody",
        "getterDocumentation" : "/**<p>The content of the SSH public key as specified by the <code>PublicKeyId</code>.</p>\n@return The content of the SSH public key as specified by the <code>PublicKeyId</code>.*/",
        "getterMethodName" : "getSshPublicKeyBody",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SshPublicKeyBody",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SshPublicKeyBody",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SshPublicKeyBody",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The content of the SSH public key as specified by the <code>PublicKeyId</code>.</p>\n@param sshPublicKeyBody The content of the SSH public key as specified by the <code>PublicKeyId</code>.*/",
        "setterMethodName" : "setSshPublicKeyBody",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sshPublicKeyBody",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The content of the SSH public key as specified by the <code>PublicKeyId</code>.</p>\n@param sshPublicKeyBody The content of the SSH public key as specified by the <code>PublicKeyId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sshPublicKeyBody",
          "variableType" : "String",
          "documentation" : "<p>The content of the SSH public key as specified by the <code>PublicKeyId</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SshPublicKeyId",
        "c2jShape" : "SshPublicKeyId",
        "deprecated" : false,
        "documentation" : "<p>The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.</p>\n@param sshPublicKeyId The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSshPublicKeyId",
        "getterDocumentation" : "/**<p>The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.</p>\n@return The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.*/",
        "getterMethodName" : "getSshPublicKeyId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SshPublicKeyId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SshPublicKeyId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SshPublicKeyId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.</p>\n@param sshPublicKeyId The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.*/",
        "setterMethodName" : "setSshPublicKeyId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sshPublicKeyId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.</p>\n@param sshPublicKeyId The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sshPublicKeyId",
          "variableType" : "String",
          "documentation" : "<p>The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DateImported" : {
          "c2jName" : "DateImported",
          "c2jShape" : "DateImported",
          "deprecated" : false,
          "documentation" : "<p>The date that the public key was added to the user account.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date that the public key was added to the user account.</p>\n@param dateImported The date that the public key was added to the user account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDateImported",
          "getterDocumentation" : "/**<p>The date that the public key was added to the user account.</p>\n@return The date that the public key was added to the user account.*/",
          "getterMethodName" : "getDateImported",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "DateImported",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "DateImported",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "DateImported",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The date that the public key was added to the user account.</p>\n@param dateImported The date that the public key was added to the user account.*/",
          "setterMethodName" : "setDateImported",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "dateImported",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date that the public key was added to the user account.</p>\n@param dateImported The date that the public key was added to the user account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "dateImported",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date that the public key was added to the user account.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "SshPublicKeyBody" : {
          "c2jName" : "SshPublicKeyBody",
          "c2jShape" : "SshPublicKeyBody",
          "deprecated" : false,
          "documentation" : "<p>The content of the SSH public key as specified by the <code>PublicKeyId</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The content of the SSH public key as specified by the <code>PublicKeyId</code>.</p>\n@param sshPublicKeyBody The content of the SSH public key as specified by the <code>PublicKeyId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSshPublicKeyBody",
          "getterDocumentation" : "/**<p>The content of the SSH public key as specified by the <code>PublicKeyId</code>.</p>\n@return The content of the SSH public key as specified by the <code>PublicKeyId</code>.*/",
          "getterMethodName" : "getSshPublicKeyBody",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SshPublicKeyBody",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SshPublicKeyBody",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SshPublicKeyBody",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The content of the SSH public key as specified by the <code>PublicKeyId</code>.</p>\n@param sshPublicKeyBody The content of the SSH public key as specified by the <code>PublicKeyId</code>.*/",
          "setterMethodName" : "setSshPublicKeyBody",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sshPublicKeyBody",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The content of the SSH public key as specified by the <code>PublicKeyId</code>.</p>\n@param sshPublicKeyBody The content of the SSH public key as specified by the <code>PublicKeyId</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sshPublicKeyBody",
            "variableType" : "String",
            "documentation" : "<p>The content of the SSH public key as specified by the <code>PublicKeyId</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SshPublicKeyId" : {
          "c2jName" : "SshPublicKeyId",
          "c2jShape" : "SshPublicKeyId",
          "deprecated" : false,
          "documentation" : "<p>The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.</p>\n@param sshPublicKeyId The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSshPublicKeyId",
          "getterDocumentation" : "/**<p>The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.</p>\n@return The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.*/",
          "getterMethodName" : "getSshPublicKeyId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SshPublicKeyId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SshPublicKeyId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SshPublicKeyId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.</p>\n@param sshPublicKeyId The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.*/",
          "setterMethodName" : "setSshPublicKeyId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sshPublicKeyId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.</p>\n@param sshPublicKeyId The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sshPublicKeyId",
            "variableType" : "String",
            "documentation" : "<p>The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "DateImported", "SshPublicKeyBody", "SshPublicKeyId" ],
      "shapeName" : "SshPublicKey",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "SshPublicKey",
        "variableName" : "sshPublicKey",
        "variableType" : "SshPublicKey",
        "documentation" : null,
        "simpleType" : "SshPublicKey",
        "variableSetterType" : "SshPublicKey"
      },
      "wrapper" : false
    },
    "StartServerRequest" : {
      "c2jName" : "StartServerRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "StartServer",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.StartServer",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system-assigned unique identifier for an SFTP server that you start.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that you start.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that you start.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that you start.</p>\n@return A system-assigned unique identifier for an SFTP server that you start.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that you start.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that you start.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that you start.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that you start.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server that you start.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server that you start.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that you start.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that you start.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that you start.</p>\n@return A system-assigned unique identifier for an SFTP server that you start.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that you start.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that you start.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that you start.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that you start.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system-assigned unique identifier for an SFTP server that you start.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId" ],
      "shapeName" : "StartServerRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "StartServerRequest",
        "variableName" : "startServerRequest",
        "variableType" : "StartServerRequest",
        "documentation" : null,
        "simpleType" : "StartServerRequest",
        "variableSetterType" : "StartServerRequest"
      },
      "wrapper" : false
    },
    "StartServerResult" : {
      "c2jName" : "StartServerResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "StartServerResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "StartServerResult",
        "variableName" : "startServerResult",
        "variableType" : "StartServerResult",
        "documentation" : null,
        "simpleType" : "StartServerResult",
        "variableSetterType" : "StartServerResult"
      },
      "wrapper" : false
    },
    "State" : {
      "c2jName" : "State",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes the condition of the SFTP server with respect to its ability to perform file operations. There are six possible states: <code>OFFLINE</code>, <code>ONLINE</code>, <code>STARTING</code>, <code>STOPPING</code>, <code>START_FAILED</code>, and <code>STOP_FAILED</code>.</p> <p> <code>OFFLINE</code> indicates that the SFTP server exists, but that it is not available for file operations. <code>ONLINE</code> indicates that the SFTP server is available to perform file operations. <code>STARTING</code> indicates that the SFTP server's was instantiated, but the server is not yet available to perform file operations. Under normal conditions, it can take a couple of minutes for an SFTP server to be completely operational. Both <code>START_FAILED</code> and <code>STOP_FAILED</code> are error conditions.</p>",
      "enums" : [ {
        "name" : "OFFLINE",
        "value" : "OFFLINE"
      }, {
        "name" : "ONLINE",
        "value" : "ONLINE"
      }, {
        "name" : "STARTING",
        "value" : "STARTING"
      }, {
        "name" : "STOPPING",
        "value" : "STOPPING"
      }, {
        "name" : "START_FAILED",
        "value" : "START_FAILED"
      }, {
        "name" : "STOP_FAILED",
        "value" : "STOP_FAILED"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "State",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "State",
        "variableName" : "state",
        "variableType" : "State",
        "documentation" : null,
        "simpleType" : "State",
        "variableSetterType" : "State"
      },
      "wrapper" : false
    },
    "StopServerRequest" : {
      "c2jName" : "StopServerRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "StopServer",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.StopServer",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system-assigned unique identifier for an SFTP server that you stopped.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that you stopped.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that you stopped.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that you stopped.</p>\n@return A system-assigned unique identifier for an SFTP server that you stopped.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that you stopped.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that you stopped.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that you stopped.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that you stopped.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server that you stopped.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server that you stopped.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that you stopped.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that you stopped.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that you stopped.</p>\n@return A system-assigned unique identifier for an SFTP server that you stopped.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that you stopped.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that you stopped.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that you stopped.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that you stopped.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system-assigned unique identifier for an SFTP server that you stopped.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId" ],
      "shapeName" : "StopServerRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "StopServerRequest",
        "variableName" : "stopServerRequest",
        "variableType" : "StopServerRequest",
        "documentation" : null,
        "simpleType" : "StopServerRequest",
        "variableSetterType" : "StopServerRequest"
      },
      "wrapper" : false
    },
    "StopServerResult" : {
      "c2jName" : "StopServerResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "StopServerResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "StopServerResult",
        "variableName" : "stopServerResult",
        "variableType" : "StopServerResult",
        "documentation" : null,
        "simpleType" : "StopServerResult",
        "variableSetterType" : "StopServerResult"
      },
      "wrapper" : false
    },
    "Tag" : {
      "c2jName" : "Tag",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Creates a key-value pair for a specific resource. Tags are metadata that you can use to search for and group a resource for various purposes. You can apply tags to servers, users, and roles. A tag key can take more than one value. For example, to group servers for accounting purposes, you might create a tag called <code>Group</code> and assign the values <code>Research</code> and <code>Accounting</code> to that group.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Key",
        "c2jShape" : "TagKey",
        "deprecated" : false,
        "documentation" : "<p>The name assigned to the tag that you create.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name assigned to the tag that you create.</p>\n@param key The name assigned to the tag that you create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withKey",
        "getterDocumentation" : "/**<p>The name assigned to the tag that you create.</p>\n@return The name assigned to the tag that you create.*/",
        "getterMethodName" : "getKey",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Key",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Key",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Key",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name assigned to the tag that you create.</p>\n@param key The name assigned to the tag that you create.*/",
        "setterMethodName" : "setKey",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "key",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name assigned to the tag that you create.</p>\n@param key The name assigned to the tag that you create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "key",
          "variableType" : "String",
          "documentation" : "<p>The name assigned to the tag that you create.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Value",
        "c2jShape" : "TagValue",
        "deprecated" : false,
        "documentation" : "<p>This property contains one or more values that you assigned to the key name you create.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This property contains one or more values that you assigned to the key name you create.</p>\n@param value This property contains one or more values that you assigned to the key name you create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValue",
        "getterDocumentation" : "/**<p>This property contains one or more values that you assigned to the key name you create.</p>\n@return This property contains one or more values that you assigned to the key name you create.*/",
        "getterMethodName" : "getValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Value",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This property contains one or more values that you assigned to the key name you create.</p>\n@param value This property contains one or more values that you assigned to the key name you create.*/",
        "setterMethodName" : "setValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This property contains one or more values that you assigned to the key name you create.</p>\n@param value This property contains one or more values that you assigned to the key name you create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "<p>This property contains one or more values that you assigned to the key name you create.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Key" : {
          "c2jName" : "Key",
          "c2jShape" : "TagKey",
          "deprecated" : false,
          "documentation" : "<p>The name assigned to the tag that you create.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name assigned to the tag that you create.</p>\n@param key The name assigned to the tag that you create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withKey",
          "getterDocumentation" : "/**<p>The name assigned to the tag that you create.</p>\n@return The name assigned to the tag that you create.*/",
          "getterMethodName" : "getKey",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Key",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Key",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Key",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name assigned to the tag that you create.</p>\n@param key The name assigned to the tag that you create.*/",
          "setterMethodName" : "setKey",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "key",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name assigned to the tag that you create.</p>\n@param key The name assigned to the tag that you create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "key",
            "variableType" : "String",
            "documentation" : "<p>The name assigned to the tag that you create.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "TagValue",
          "deprecated" : false,
          "documentation" : "<p>This property contains one or more values that you assigned to the key name you create.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This property contains one or more values that you assigned to the key name you create.</p>\n@param value This property contains one or more values that you assigned to the key name you create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValue",
          "getterDocumentation" : "/**<p>This property contains one or more values that you assigned to the key name you create.</p>\n@return This property contains one or more values that you assigned to the key name you create.*/",
          "getterMethodName" : "getValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Value",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This property contains one or more values that you assigned to the key name you create.</p>\n@param value This property contains one or more values that you assigned to the key name you create.*/",
          "setterMethodName" : "setValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This property contains one or more values that you assigned to the key name you create.</p>\n@param value This property contains one or more values that you assigned to the key name you create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "<p>This property contains one or more values that you assigned to the key name you create.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Key", "Value" ],
      "shapeName" : "Tag",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Tag",
        "variableName" : "tag",
        "variableType" : "Tag",
        "documentation" : null,
        "simpleType" : "Tag",
        "variableSetterType" : "Tag"
      },
      "wrapper" : false
    },
    "TagResourceRequest" : {
      "c2jName" : "TagResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "TagResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.TagResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.</p>\n@param arn An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.</p>\n@return An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.</p>\n@param arn An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.</p>\n@param arn An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Tags",
        "c2jShape" : "Tags",
        "deprecated" : false,
        "documentation" : "<p>Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.</p>\n@param tags Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTags",
        "getterDocumentation" : "/**<p>Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.</p>\n@return Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.*/",
        "getterMethodName" : "getTags",
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Tags",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Tags",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Tag",
              "variableName" : "member",
              "variableType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Tag",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Tag",
          "templateImplType" : "java.util.ArrayList<Tag>",
          "templateType" : "java.util.List<Tag>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tags",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.</p>\n@param tags Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.*/",
        "setterMethodName" : "setTags",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Tag>",
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "documentation" : "<p>Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.</p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.</p>\n@param arn An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.</p>\n@return An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.</p>\n@param arn An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.</p>\n@param arn An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tags" : {
          "c2jName" : "Tags",
          "c2jShape" : "Tags",
          "deprecated" : false,
          "documentation" : "<p>Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.</p>\n@param tags Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTags",
          "getterDocumentation" : "/**<p>Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.</p>\n@return Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.*/",
          "getterMethodName" : "getTags",
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Tags",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Tags",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Tag",
                "variableName" : "member",
                "variableType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Tag",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Tag",
            "templateImplType" : "java.util.ArrayList<Tag>",
            "templateType" : "java.util.List<Tag>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tags",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.</p>\n@param tags Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.*/",
          "setterMethodName" : "setTags",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Tag>",
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "documentation" : "<p>Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.</p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Arn", "Tags" ],
      "shapeName" : "TagResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TagResourceRequest",
        "variableName" : "tagResourceRequest",
        "variableType" : "TagResourceRequest",
        "documentation" : null,
        "simpleType" : "TagResourceRequest",
        "variableSetterType" : "TagResourceRequest"
      },
      "wrapper" : false
    },
    "TagResourceResult" : {
      "c2jName" : "TagResourceResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TagResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TagResourceResult",
        "variableName" : "tagResourceResult",
        "variableType" : "TagResourceResult",
        "documentation" : null,
        "simpleType" : "TagResourceResult",
        "variableSetterType" : "TagResourceResult"
      },
      "wrapper" : false
    },
    "TestIdentityProviderRequest" : {
      "c2jName" : "TestIdentityProviderRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "TestIdentityProvider",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.TestIdentityProvider",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.</p>\n@param serverId A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.</p>\n@return A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.</p>\n@param serverId A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.</p>\n@param serverId A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UserName",
        "c2jShape" : "UserName",
        "deprecated" : false,
        "documentation" : "<p>This request parameter is name of the user account to be tested.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This request parameter is name of the user account to be tested.</p>\n@param userName This request parameter is name of the user account to be tested.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUserName",
        "getterDocumentation" : "/**<p>This request parameter is name of the user account to be tested.</p>\n@return This request parameter is name of the user account to be tested.*/",
        "getterMethodName" : "getUserName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UserName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UserName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UserName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This request parameter is name of the user account to be tested.</p>\n@param userName This request parameter is name of the user account to be tested.*/",
        "setterMethodName" : "setUserName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This request parameter is name of the user account to be tested.</p>\n@param userName This request parameter is name of the user account to be tested.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "<p>This request parameter is name of the user account to be tested.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UserPassword",
        "c2jShape" : "UserPassword",
        "deprecated" : false,
        "documentation" : "<p>The password of the user account to be tested.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The password of the user account to be tested.</p>\n@param userPassword The password of the user account to be tested.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUserPassword",
        "getterDocumentation" : "/**<p>The password of the user account to be tested.</p>\n@return The password of the user account to be tested.*/",
        "getterMethodName" : "getUserPassword",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UserPassword",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UserPassword",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UserPassword",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The password of the user account to be tested.</p>\n@param userPassword The password of the user account to be tested.*/",
        "setterMethodName" : "setUserPassword",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userPassword",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The password of the user account to be tested.</p>\n@param userPassword The password of the user account to be tested.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userPassword",
          "variableType" : "String",
          "documentation" : "<p>The password of the user account to be tested.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.</p>\n@param serverId A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.</p>\n@return A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.</p>\n@param serverId A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.</p>\n@param serverId A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UserName" : {
          "c2jName" : "UserName",
          "c2jShape" : "UserName",
          "deprecated" : false,
          "documentation" : "<p>This request parameter is name of the user account to be tested.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This request parameter is name of the user account to be tested.</p>\n@param userName This request parameter is name of the user account to be tested.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUserName",
          "getterDocumentation" : "/**<p>This request parameter is name of the user account to be tested.</p>\n@return This request parameter is name of the user account to be tested.*/",
          "getterMethodName" : "getUserName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UserName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UserName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UserName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This request parameter is name of the user account to be tested.</p>\n@param userName This request parameter is name of the user account to be tested.*/",
          "setterMethodName" : "setUserName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This request parameter is name of the user account to be tested.</p>\n@param userName This request parameter is name of the user account to be tested.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "<p>This request parameter is name of the user account to be tested.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UserPassword" : {
          "c2jName" : "UserPassword",
          "c2jShape" : "UserPassword",
          "deprecated" : false,
          "documentation" : "<p>The password of the user account to be tested.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The password of the user account to be tested.</p>\n@param userPassword The password of the user account to be tested.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUserPassword",
          "getterDocumentation" : "/**<p>The password of the user account to be tested.</p>\n@return The password of the user account to be tested.*/",
          "getterMethodName" : "getUserPassword",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UserPassword",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UserPassword",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UserPassword",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The password of the user account to be tested.</p>\n@param userPassword The password of the user account to be tested.*/",
          "setterMethodName" : "setUserPassword",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userPassword",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The password of the user account to be tested.</p>\n@param userPassword The password of the user account to be tested.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userPassword",
            "variableType" : "String",
            "documentation" : "<p>The password of the user account to be tested.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId", "UserName" ],
      "shapeName" : "TestIdentityProviderRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TestIdentityProviderRequest",
        "variableName" : "testIdentityProviderRequest",
        "variableType" : "TestIdentityProviderRequest",
        "documentation" : null,
        "simpleType" : "TestIdentityProviderRequest",
        "variableSetterType" : "TestIdentityProviderRequest"
      },
      "wrapper" : false
    },
    "TestIdentityProviderResult" : {
      "c2jName" : "TestIdentityProviderResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Message",
        "c2jShape" : "Message",
        "deprecated" : false,
        "documentation" : "<p>The result of the authorization test as a message. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The result of the authorization test as a message. </p>\n@param message The result of the authorization test as a message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMessage",
        "getterDocumentation" : "/**<p>The result of the authorization test as a message. </p>\n@return The result of the authorization test as a message.*/",
        "getterMethodName" : "getMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Message",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Message",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Message",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The result of the authorization test as a message. </p>\n@param message The result of the authorization test as a message.*/",
        "setterMethodName" : "setMessage",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "message",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The result of the authorization test as a message. </p>\n@param message The result of the authorization test as a message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "message",
          "variableType" : "String",
          "documentation" : "<p>The result of the authorization test as a message. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "StatusCode",
        "c2jShape" : "StatusCode",
        "deprecated" : false,
        "documentation" : "<p>The HTTP status code that is the response from your API Gateway.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The HTTP status code that is the response from your API Gateway.</p>\n@param statusCode The HTTP status code that is the response from your API Gateway.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStatusCode",
        "getterDocumentation" : "/**<p>The HTTP status code that is the response from your API Gateway.</p>\n@return The HTTP status code that is the response from your API Gateway.*/",
        "getterMethodName" : "getStatusCode",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "StatusCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "StatusCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "StatusCode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The HTTP status code that is the response from your API Gateway.</p>\n@param statusCode The HTTP status code that is the response from your API Gateway.*/",
        "setterMethodName" : "setStatusCode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "statusCode",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The HTTP status code that is the response from your API Gateway.</p>\n@param statusCode The HTTP status code that is the response from your API Gateway.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "statusCode",
          "variableType" : "Integer",
          "documentation" : "<p>The HTTP status code that is the response from your API Gateway.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Url",
        "c2jShape" : "Url",
        "deprecated" : false,
        "documentation" : "<p>The endpoint of the service used to authenticate a user.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The endpoint of the service used to authenticate a user.</p>\n@param url The endpoint of the service used to authenticate a user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUrl",
        "getterDocumentation" : "/**<p>The endpoint of the service used to authenticate a user.</p>\n@return The endpoint of the service used to authenticate a user.*/",
        "getterMethodName" : "getUrl",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Url",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Url",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Url",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The endpoint of the service used to authenticate a user.</p>\n@param url The endpoint of the service used to authenticate a user.*/",
        "setterMethodName" : "setUrl",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "url",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The endpoint of the service used to authenticate a user.</p>\n@param url The endpoint of the service used to authenticate a user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "url",
          "variableType" : "String",
          "documentation" : "<p>The endpoint of the service used to authenticate a user.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Message" : {
          "c2jName" : "Message",
          "c2jShape" : "Message",
          "deprecated" : false,
          "documentation" : "<p>The result of the authorization test as a message. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The result of the authorization test as a message. </p>\n@param message The result of the authorization test as a message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMessage",
          "getterDocumentation" : "/**<p>The result of the authorization test as a message. </p>\n@return The result of the authorization test as a message.*/",
          "getterMethodName" : "getMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Message",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Message",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Message",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The result of the authorization test as a message. </p>\n@param message The result of the authorization test as a message.*/",
          "setterMethodName" : "setMessage",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "message",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The result of the authorization test as a message. </p>\n@param message The result of the authorization test as a message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "message",
            "variableType" : "String",
            "documentation" : "<p>The result of the authorization test as a message. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StatusCode" : {
          "c2jName" : "StatusCode",
          "c2jShape" : "StatusCode",
          "deprecated" : false,
          "documentation" : "<p>The HTTP status code that is the response from your API Gateway.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The HTTP status code that is the response from your API Gateway.</p>\n@param statusCode The HTTP status code that is the response from your API Gateway.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStatusCode",
          "getterDocumentation" : "/**<p>The HTTP status code that is the response from your API Gateway.</p>\n@return The HTTP status code that is the response from your API Gateway.*/",
          "getterMethodName" : "getStatusCode",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "StatusCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "StatusCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "StatusCode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The HTTP status code that is the response from your API Gateway.</p>\n@param statusCode The HTTP status code that is the response from your API Gateway.*/",
          "setterMethodName" : "setStatusCode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "statusCode",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The HTTP status code that is the response from your API Gateway.</p>\n@param statusCode The HTTP status code that is the response from your API Gateway.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "statusCode",
            "variableType" : "Integer",
            "documentation" : "<p>The HTTP status code that is the response from your API Gateway.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "Url" : {
          "c2jName" : "Url",
          "c2jShape" : "Url",
          "deprecated" : false,
          "documentation" : "<p>The endpoint of the service used to authenticate a user.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The endpoint of the service used to authenticate a user.</p>\n@param url The endpoint of the service used to authenticate a user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUrl",
          "getterDocumentation" : "/**<p>The endpoint of the service used to authenticate a user.</p>\n@return The endpoint of the service used to authenticate a user.*/",
          "getterMethodName" : "getUrl",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Url",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Url",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Url",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The endpoint of the service used to authenticate a user.</p>\n@param url The endpoint of the service used to authenticate a user.*/",
          "setterMethodName" : "setUrl",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "url",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The endpoint of the service used to authenticate a user.</p>\n@param url The endpoint of the service used to authenticate a user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "url",
            "variableType" : "String",
            "documentation" : "<p>The endpoint of the service used to authenticate a user.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "StatusCode", "Url" ],
      "shapeName" : "TestIdentityProviderResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TestIdentityProviderResult",
        "variableName" : "testIdentityProviderResult",
        "variableType" : "TestIdentityProviderResult",
        "documentation" : null,
        "simpleType" : "TestIdentityProviderResult",
        "variableSetterType" : "TestIdentityProviderResult"
      },
      "wrapper" : false
    },
    "UntagResourceRequest" : {
      "c2jName" : "UntagResourceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UntagResource",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.UntagResource",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.</p>\n@param arn This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.</p>\n@return This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.</p>\n@param arn This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.</p>\n@param arn This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TagKeys",
        "c2jShape" : "TagKeys",
        "deprecated" : false,
        "documentation" : "<p>TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.</p>\n@param tagKeys TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTagKeys",
        "getterDocumentation" : "/**<p>TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.</p>\n@return TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.*/",
        "getterMethodName" : "getTagKeys",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TagKeys",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TagKeys",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "TagKey",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "TagKeys",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.</p>\n@param tagKeys TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.*/",
        "setterMethodName" : "setTagKeys",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "tagKeys",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTagKeys(java.util.Collection)} or {@link #withTagKeys(java.util.Collection)} if you want to override the existing values.</p>\n@param tagKeys TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "tagKeys",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.</p>\n@param arn This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.</p>\n@return This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.</p>\n@param arn This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.</p>\n@param arn This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TagKeys" : {
          "c2jName" : "TagKeys",
          "c2jShape" : "TagKeys",
          "deprecated" : false,
          "documentation" : "<p>TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.</p>\n@param tagKeys TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTagKeys",
          "getterDocumentation" : "/**<p>TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.</p>\n@return TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.*/",
          "getterMethodName" : "getTagKeys",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TagKeys",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TagKeys",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "TagKey",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "TagKeys",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.</p>\n@param tagKeys TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.*/",
          "setterMethodName" : "setTagKeys",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "tagKeys",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTagKeys(java.util.Collection)} or {@link #withTagKeys(java.util.Collection)} if you want to override the existing values.</p>\n@param tagKeys TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "tagKeys",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Arn", "TagKeys" ],
      "shapeName" : "UntagResourceRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UntagResourceRequest",
        "variableName" : "untagResourceRequest",
        "variableType" : "UntagResourceRequest",
        "documentation" : null,
        "simpleType" : "UntagResourceRequest",
        "variableSetterType" : "UntagResourceRequest"
      },
      "wrapper" : false
    },
    "UntagResourceResult" : {
      "c2jName" : "UntagResourceResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UntagResourceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UntagResourceResult",
        "variableName" : "untagResourceResult",
        "variableType" : "UntagResourceResult",
        "documentation" : null,
        "simpleType" : "UntagResourceResult",
        "variableSetterType" : "UntagResourceResult"
      },
      "wrapper" : false
    },
    "UpdateServerRequest" : {
      "c2jName" : "UpdateServerRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateServer",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.UpdateServer",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "IdentityProviderDetails",
        "c2jShape" : "IdentityProviderDetails",
        "deprecated" : false,
        "documentation" : "<p>This response parameter is an array containing all of the information required to call a customer's authentication API method.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>This response parameter is an array containing all of the information required to call a customer's authentication API method.</p>\n@param identityProviderDetails This response parameter is an array containing all of the information required to call a customer's authentication API method.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIdentityProviderDetails",
        "getterDocumentation" : "/**<p>This response parameter is an array containing all of the information required to call a customer's authentication API method.</p>\n@return This response parameter is an array containing all of the information required to call a customer's authentication API method.*/",
        "getterMethodName" : "getIdentityProviderDetails",
        "getterModel" : {
          "returnType" : "IdentityProviderDetails",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "IdentityProviderDetails",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "IdentityProviderDetails",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "IdentityProviderDetails",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>This response parameter is an array containing all of the information required to call a customer's authentication API method.</p>\n@param identityProviderDetails This response parameter is an array containing all of the information required to call a customer's authentication API method.*/",
        "setterMethodName" : "setIdentityProviderDetails",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "IdentityProviderDetails",
          "variableName" : "identityProviderDetails",
          "variableType" : "IdentityProviderDetails",
          "documentation" : "",
          "simpleType" : "IdentityProviderDetails",
          "variableSetterType" : "IdentityProviderDetails"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>This response parameter is an array containing all of the information required to call a customer's authentication API method.</p>\n@param identityProviderDetails This response parameter is an array containing all of the information required to call a customer's authentication API method.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "IdentityProviderDetails",
          "variableName" : "identityProviderDetails",
          "variableType" : "IdentityProviderDetails",
          "documentation" : "<p>This response parameter is an array containing all of the information required to call a customer's authentication API method.</p>",
          "simpleType" : "IdentityProviderDetails",
          "variableSetterType" : "IdentityProviderDetails"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "LoggingRole",
        "c2jShape" : "NullableRole",
        "deprecated" : false,
        "documentation" : "<p>Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.</p>\n@param loggingRole Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLoggingRole",
        "getterDocumentation" : "/**<p>Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.</p>\n@return Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.*/",
        "getterMethodName" : "getLoggingRole",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "LoggingRole",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "LoggingRole",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LoggingRole",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.</p>\n@param loggingRole Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.*/",
        "setterMethodName" : "setLoggingRole",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "loggingRole",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.</p>\n@param loggingRole Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "loggingRole",
          "variableType" : "String",
          "documentation" : "<p>Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@return A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "IdentityProviderDetails" : {
          "c2jName" : "IdentityProviderDetails",
          "c2jShape" : "IdentityProviderDetails",
          "deprecated" : false,
          "documentation" : "<p>This response parameter is an array containing all of the information required to call a customer's authentication API method.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>This response parameter is an array containing all of the information required to call a customer's authentication API method.</p>\n@param identityProviderDetails This response parameter is an array containing all of the information required to call a customer's authentication API method.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIdentityProviderDetails",
          "getterDocumentation" : "/**<p>This response parameter is an array containing all of the information required to call a customer's authentication API method.</p>\n@return This response parameter is an array containing all of the information required to call a customer's authentication API method.*/",
          "getterMethodName" : "getIdentityProviderDetails",
          "getterModel" : {
            "returnType" : "IdentityProviderDetails",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "IdentityProviderDetails",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "IdentityProviderDetails",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "IdentityProviderDetails",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>This response parameter is an array containing all of the information required to call a customer's authentication API method.</p>\n@param identityProviderDetails This response parameter is an array containing all of the information required to call a customer's authentication API method.*/",
          "setterMethodName" : "setIdentityProviderDetails",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "IdentityProviderDetails",
            "variableName" : "identityProviderDetails",
            "variableType" : "IdentityProviderDetails",
            "documentation" : "",
            "simpleType" : "IdentityProviderDetails",
            "variableSetterType" : "IdentityProviderDetails"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>This response parameter is an array containing all of the information required to call a customer's authentication API method.</p>\n@param identityProviderDetails This response parameter is an array containing all of the information required to call a customer's authentication API method.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "IdentityProviderDetails",
            "variableName" : "identityProviderDetails",
            "variableType" : "IdentityProviderDetails",
            "documentation" : "<p>This response parameter is an array containing all of the information required to call a customer's authentication API method.</p>",
            "simpleType" : "IdentityProviderDetails",
            "variableSetterType" : "IdentityProviderDetails"
          },
          "xmlNameSpaceUri" : null
        },
        "LoggingRole" : {
          "c2jName" : "LoggingRole",
          "c2jShape" : "NullableRole",
          "deprecated" : false,
          "documentation" : "<p>Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.</p>\n@param loggingRole Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLoggingRole",
          "getterDocumentation" : "/**<p>Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.</p>\n@return Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.*/",
          "getterMethodName" : "getLoggingRole",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "LoggingRole",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "LoggingRole",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LoggingRole",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.</p>\n@param loggingRole Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.*/",
          "setterMethodName" : "setLoggingRole",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "loggingRole",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.</p>\n@param loggingRole Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "loggingRole",
            "variableType" : "String",
            "documentation" : "<p>Changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@return A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId" ],
      "shapeName" : "UpdateServerRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateServerRequest",
        "variableName" : "updateServerRequest",
        "variableType" : "UpdateServerRequest",
        "documentation" : null,
        "simpleType" : "UpdateServerRequest",
        "variableSetterType" : "UpdateServerRequest"
      },
      "wrapper" : false
    },
    "UpdateServerResult" : {
      "c2jName" : "UpdateServerResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system-assigned unique identifier for an SFTP server that the user account is assigned to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that the user account is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that the user account is assigned to.</p>\n@return A system-assigned unique identifier for an SFTP server that the user account is assigned to.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that the user account is assigned to.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that the user account is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server that the user account is assigned to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server that the user account is assigned to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that the user account is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that the user account is assigned to.</p>\n@return A system-assigned unique identifier for an SFTP server that the user account is assigned to.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that the user account is assigned to.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server that the user account is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system-assigned unique identifier for an SFTP server that the user account is assigned to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId" ],
      "shapeName" : "UpdateServerResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateServerResult",
        "variableName" : "updateServerResult",
        "variableType" : "UpdateServerResult",
        "documentation" : null,
        "simpleType" : "UpdateServerResult",
        "variableSetterType" : "UpdateServerResult"
      },
      "wrapper" : false
    },
    "UpdateUserRequest" : {
      "c2jName" : "UpdateUserRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateUser",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "TransferService.UpdateUser",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "HomeDirectory",
        "c2jShape" : "HomeDirectory",
        "deprecated" : false,
        "documentation" : "<p>The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.</p>\n@param homeDirectory The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withHomeDirectory",
        "getterDocumentation" : "/**<p>The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.</p>\n@return The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.*/",
        "getterMethodName" : "getHomeDirectory",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "HomeDirectory",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "HomeDirectory",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "HomeDirectory",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.</p>\n@param homeDirectory The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.*/",
        "setterMethodName" : "setHomeDirectory",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "homeDirectory",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.</p>\n@param homeDirectory The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "homeDirectory",
          "variableType" : "String",
          "documentation" : "<p>The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Policy",
        "c2jShape" : "Policy",
        "deprecated" : false,
        "documentation" : "<p>Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\n@param policy Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicy",
        "getterDocumentation" : "/**<p>Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\n@return Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.*/",
        "getterMethodName" : "getPolicy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Policy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Policy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Policy",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\n@param policy Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.*/",
        "setterMethodName" : "setPolicy",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "policy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\n@param policy Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "policy",
          "variableType" : "String",
          "documentation" : "<p>Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Role",
        "c2jShape" : "Role",
        "deprecated" : false,
        "documentation" : "<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRole",
        "getterDocumentation" : "/**<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@return The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.*/",
        "getterMethodName" : "getRole",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Role",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Role",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Role",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.*/",
        "setterMethodName" : "setRole",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "role",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "role",
          "variableType" : "String",
          "documentation" : "<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@return A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UserName",
        "c2jShape" : "UserName",
        "deprecated" : false,
        "documentation" : "<p>A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.</p>\n@param userName A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUserName",
        "getterDocumentation" : "/**<p>A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.</p>\n@return A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.*/",
        "getterMethodName" : "getUserName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UserName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UserName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UserName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.</p>\n@param userName A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.*/",
        "setterMethodName" : "setUserName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.</p>\n@param userName A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "<p>A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "HomeDirectory" : {
          "c2jName" : "HomeDirectory",
          "c2jShape" : "HomeDirectory",
          "deprecated" : false,
          "documentation" : "<p>The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.</p>\n@param homeDirectory The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withHomeDirectory",
          "getterDocumentation" : "/**<p>The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.</p>\n@return The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.*/",
          "getterMethodName" : "getHomeDirectory",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "HomeDirectory",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "HomeDirectory",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "HomeDirectory",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.</p>\n@param homeDirectory The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.*/",
          "setterMethodName" : "setHomeDirectory",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "homeDirectory",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.</p>\n@param homeDirectory The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "homeDirectory",
            "variableType" : "String",
            "documentation" : "<p>The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Policy" : {
          "c2jName" : "Policy",
          "c2jShape" : "Policy",
          "deprecated" : false,
          "documentation" : "<p>Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\n@param policy Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicy",
          "getterDocumentation" : "/**<p>Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\n@return Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.*/",
          "getterMethodName" : "getPolicy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Policy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Policy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Policy",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\n@param policy Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.*/",
          "setterMethodName" : "setPolicy",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "policy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\n@param policy Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "policy",
            "variableType" : "String",
            "documentation" : "<p>Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Role" : {
          "c2jName" : "Role",
          "c2jShape" : "Role",
          "deprecated" : false,
          "documentation" : "<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRole",
          "getterDocumentation" : "/**<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@return The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.*/",
          "getterMethodName" : "getRole",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Role",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Role",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Role",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.*/",
          "setterMethodName" : "setRole",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "role",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.</p>\n@param role The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "role",
            "variableType" : "String",
            "documentation" : "<p>The IAM role that controls your user’s access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user’s transfer requests.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@return A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UserName" : {
          "c2jName" : "UserName",
          "c2jShape" : "UserName",
          "deprecated" : false,
          "documentation" : "<p>A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.</p>\n@param userName A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUserName",
          "getterDocumentation" : "/**<p>A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.</p>\n@return A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.*/",
          "getterMethodName" : "getUserName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UserName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UserName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UserName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.</p>\n@param userName A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.*/",
          "setterMethodName" : "setUserName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.</p>\n@param userName A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "<p>A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId", "UserName" ],
      "shapeName" : "UpdateUserRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateUserRequest",
        "variableName" : "updateUserRequest",
        "variableType" : "UpdateUserRequest",
        "documentation" : null,
        "simpleType" : "UpdateUserRequest",
        "variableSetterType" : "UpdateUserRequest"
      },
      "wrapper" : false
    },
    "UpdateUserResult" : {
      "c2jName" : "UpdateUserResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> <code>UpdateUserResponse</code> returns the user name and server identifier for the request to update a user's properties.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ServerId",
        "c2jShape" : "ServerId",
        "deprecated" : false,
        "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withServerId",
        "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@return A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.*/",
        "getterMethodName" : "getServerId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ServerId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ServerId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ServerId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.*/",
        "setterMethodName" : "setServerId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "serverId",
          "variableType" : "String",
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UserName",
        "c2jShape" : "UserName",
        "deprecated" : false,
        "documentation" : "<p>The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.</p>\n@param userName The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUserName",
        "getterDocumentation" : "/**<p>The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.</p>\n@return The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.*/",
        "getterMethodName" : "getUserName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UserName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UserName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UserName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.</p>\n@param userName The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.*/",
        "setterMethodName" : "setUserName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.</p>\n@param userName The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userName",
          "variableType" : "String",
          "documentation" : "<p>The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ServerId" : {
          "c2jName" : "ServerId",
          "c2jShape" : "ServerId",
          "deprecated" : false,
          "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withServerId",
          "getterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@return A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.*/",
          "getterMethodName" : "getServerId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ServerId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ServerId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ServerId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.*/",
          "setterMethodName" : "setServerId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>\n@param serverId A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "serverId",
            "variableType" : "String",
            "documentation" : "<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UserName" : {
          "c2jName" : "UserName",
          "c2jShape" : "UserName",
          "deprecated" : false,
          "documentation" : "<p>The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.</p>\n@param userName The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUserName",
          "getterDocumentation" : "/**<p>The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.</p>\n@return The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.*/",
          "getterMethodName" : "getUserName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UserName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UserName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UserName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.</p>\n@param userName The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.*/",
          "setterMethodName" : "setUserName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.</p>\n@param userName The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userName",
            "variableType" : "String",
            "documentation" : "<p>The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ServerId", "UserName" ],
      "shapeName" : "UpdateUserResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateUserResult",
        "variableName" : "updateUserResult",
        "variableType" : "UpdateUserResult",
        "documentation" : null,
        "simpleType" : "UpdateUserResult",
        "variableSetterType" : "UpdateUserResult"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "examples" : {
    "examples" : { },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2014-2019 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AWSTransferException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.transfer.model.AWSTransferException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.transfer.model.transform"
}